{
  "accessanalyzer": {
    "apply-archive-rule": [
      {
        "action": "access-analyzer:ApplyArchiveRule",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Analyzer": "${analyzerArn}"
        }
      }
    ],
    "cancel-policy-generation": [
      {
        "action": "access-analyzer:CancelPolicyGeneration",
        "resource_mappings": {}
      }
    ],
    "create-access-preview": [
      {
        "action": "access-analyzer:CreateAccessPreview",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Analyzer": "${analyzerArn}"
        }
      }
    ],
    "create-analyzer": [
      {
        "action": "access-analyzer:CreateAnalyzer",
        "resource_mappings": {
          "AnalyzerName": {
            "template": "${analyzerName}"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "create-archive-rule": [
      {
        "action": "access-analyzer:CreateArchiveRule",
        "resource_mappings": {
          "AnalyzerName": {
            "template": "${analyzerName}"
          },
          "RuleName": {
            "template": "${ruleName}"
          }
        }
      }
    ],
    "delete-analyzer": [
      {
        "action": "access-analyzer:DeleteAnalyzer",
        "resource_mappings": {
          "AnalyzerName": {
            "template": "${analyzerName}"
          }
        }
      }
    ],
    "delete-archive-rule": [
      {
        "action": "access-analyzer:DeleteArchiveRule",
        "resource_mappings": {
          "AnalyzerName": {
            "template": "${analyzerName}"
          },
          "RuleName": {
            "template": "${ruleName}"
          }
        }
      }
    ],
    "get-access-preview": [
      {
        "action": "access-analyzer:GetAccessPreview",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Analyzer": "${analyzerArn}"
        }
      }
    ],
    "get-analyzed-resource": [
      {
        "action": "access-analyzer:GetAnalyzedResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Analyzer": "${analyzerArn}"
        }
      }
    ],
    "get-analyzer": [
      {
        "action": "access-analyzer:GetAnalyzer",
        "resource_mappings": {
          "AnalyzerName": {
            "template": "${analyzerName}"
          }
        }
      }
    ],
    "get-archive-rule": [
      {
        "action": "access-analyzer:GetArchiveRule",
        "resource_mappings": {
          "AnalyzerName": {
            "template": "${analyzerName}"
          },
          "RuleName": {
            "template": "${ruleName}"
          }
        }
      }
    ],
    "get-finding": [
      {
        "action": "access-analyzer:GetFinding",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Analyzer": "${analyzerArn}"
        }
      }
    ],
    "get-generated-policy": [
      {
        "action": "access-analyzer:GetGeneratedPolicy",
        "resource_mappings": {}
      }
    ],
    "list-access-preview-findings": [
      {
        "action": "access-analyzer:ListAccessPreviewFindings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Analyzer": "${analyzerArn}"
        }
      }
    ],
    "list-access-previews": [
      {
        "action": "access-analyzer:ListAccessPreviews",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Analyzer": "${analyzerArn}"
        }
      }
    ],
    "list-analyzed-resources": [
      {
        "action": "access-analyzer:ListAnalyzedResources",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Analyzer": "${analyzerArn}"
        }
      }
    ],
    "list-analyzers": [
      {
        "action": "access-analyzer:ListAnalyzers",
        "resource_mappings": {}
      }
    ],
    "list-archive-rules": [
      {
        "action": "access-analyzer:ListArchiveRules",
        "resource_mappings": {
          "AnalyzerName": {
            "template": "${analyzerName}"
          }
        }
      }
    ],
    "list-findings": [
      {
        "action": "access-analyzer:ListFindings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Analyzer": "${analyzerArn}"
        }
      }
    ],
    "list-policy-generations": [
      {
        "action": "access-analyzer:ListPolicyGenerations",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "access-analyzer:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Analyzer": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "start-policy-generation": [
      {
        "action": "access-analyzer:StartPolicyGeneration",
        "resource_mappings": {}
      }
    ],
    "start-resource-scan": [
      {
        "action": "access-analyzer:StartResourceScan",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Analyzer": "${analyzerArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "access-analyzer:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Analyzer": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "access-analyzer:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Analyzer": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-archive-rule": [
      {
        "action": "access-analyzer:UpdateArchiveRule",
        "resource_mappings": {
          "AnalyzerName": {
            "template": "${analyzerName}"
          },
          "RuleName": {
            "template": "${ruleName}"
          }
        }
      }
    ],
    "update-findings": [
      {
        "action": "access-analyzer:UpdateFindings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Analyzer": "${analyzerArn}"
        }
      }
    ],
    "validate-policy": [
      {
        "action": "access-analyzer:ValidatePolicy",
        "resource_mappings": {}
      }
    ]
  },
  "account": {
    "delete-alternate-contact": [
      {
        "action": "account:DeleteAlternateContact",
        "resource_mappings": {
          "ManagementAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "MemberAccountId": {
            "template": "${AccountId}"
          }
        }
      }
    ],
    "disable-region": [
      {
        "action": "account:DisableRegion",
        "resource_mappings": {
          "ManagementAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "MemberAccountId": {
            "template": "${AccountId}"
          }
        },
        "resourcearn_mappings": {
          "account": "arn:${Partition}:account::${AccountId}:account"
        }
      }
    ],
    "enable-region": [
      {
        "action": "account:EnableRegion",
        "resource_mappings": {
          "ManagementAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "MemberAccountId": {
            "template": "${AccountId}"
          }
        },
        "resourcearn_mappings": {
          "account": "arn:${Partition}:account::${AccountId}:account"
        }
      }
    ],
    "get-alternate-contact": [
      {
        "action": "account:GetAlternateContact",
        "resource_mappings": {
          "ManagementAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "MemberAccountId": {
            "template": "${AccountId}"
          }
        }
      }
    ],
    "get-contact-information": [
      {
        "action": "account:GetContactInformation",
        "resource_mappings": {
          "ManagementAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "MemberAccountId": {
            "template": "${AccountId}"
          }
        }
      }
    ],
    "get-region-opt-status": [
      {
        "action": "account:GetRegionOptStatus",
        "resource_mappings": {
          "ManagementAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "MemberAccountId": {
            "template": "${AccountId}"
          }
        },
        "resourcearn_mappings": {
          "account": "arn:${Partition}:account::${AccountId}:account"
        }
      }
    ],
    "list-regions": [
      {
        "action": "account:ListRegions",
        "resource_mappings": {
          "ManagementAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "MemberAccountId": {
            "template": "${AccountId}"
          }
        },
        "resourcearn_mappings": {
          "account": "arn:${Partition}:account::${AccountId}:account"
        }
      }
    ],
    "put-alternate-contact": [
      {
        "action": "account:PutAlternateContact",
        "resource_mappings": {
          "ManagementAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "MemberAccountId": {
            "template": "${AccountId}"
          }
        }
      }
    ],
    "put-contact-information": [
      {
        "action": "account:PutContactInformation",
        "resource_mappings": {
          "ManagementAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "MemberAccountId": {
            "template": "${AccountId}"
          }
        }
      }
    ]
  },
  "acm": {
    "add-tags-to-certificate": [
      {
        "action": "acm:AddTagsToCertificate",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate": "${CertificateArn}"
        }
      }
    ],
    "delete-certificate": [
      {
        "action": "acm:DeleteCertificate",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate": "${CertificateArn}"
        }
      }
    ],
    "describe-certificate": [
      {
        "action": "acm:DescribeCertificate",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate": "${CertificateArn}"
        }
      }
    ],
    "export-certificate": [
      {
        "action": "acm:ExportCertificate",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate": "${CertificateArn}"
        }
      }
    ],
    "get-account-configuration": [
      {
        "action": "acm:GetAccountConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-certificate": [
      {
        "action": "acm:GetCertificate",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate": "${CertificateArn}"
        }
      }
    ],
    "import-certificate": [
      {
        "action": "acm:ImportCertificate",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate": "${CertificateArn}"
        }
      }
    ],
    "list-certificates": [
      {
        "action": "acm:ListCertificates",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-certificate": [
      {
        "action": "acm:ListTagsForCertificate",
        "resource_mappings": {}
      }
    ],
    "put-account-configuration": [
      {
        "action": "acm:PutAccountConfiguration",
        "resource_mappings": {}
      }
    ],
    "remove-tags-from-certificate": [
      {
        "action": "acm:RemoveTagsFromCertificate",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate": "${CertificateArn}"
        }
      }
    ],
    "renew-certificate": [
      {
        "action": "acm:RenewCertificate",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate": "${CertificateArn}"
        }
      }
    ],
    "request-certificate": [
      {
        "action": "acm:RequestCertificate",
        "resource_mappings": {}
      }
    ],
    "resend-validation-email": [
      {
        "action": "acm:ResendValidationEmail",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate": "${CertificateArn}"
        }
      }
    ],
    "update-certificate-options": [
      {
        "action": "acm:UpdateCertificateOptions",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate": "${CertificateArn}"
        }
      }
    ],
    "wait": [
      {
        "action": "acm:DescribeCertificate",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate": "${CertificateArn}"
        }
      }
    ]
  },
  "acm-pca": {
    "create-certificate-authority": [
      {
        "action": "acm-pca:CreateCertificateAuthority",
        "resource_mappings": {}
      }
    ],
    "create-certificate-authority-audit-report": [
      {
        "action": "acm-pca:CreateCertificateAuthorityAuditReport",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate-authority": "${CertificateAuthorityArn}"
        }
      }
    ],
    "create-permission": [
      {
        "action": "acm-pca:CreatePermission",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate-authority": "${CertificateAuthorityArn}"
        }
      }
    ],
    "delete-certificate-authority": [
      {
        "action": "acm-pca:DeleteCertificateAuthority",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate-authority": "${CertificateAuthorityArn}"
        }
      }
    ],
    "delete-permission": [
      {
        "action": "acm-pca:DeletePermission",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate-authority": "${CertificateAuthorityArn}"
        }
      }
    ],
    "delete-policy": [
      {
        "action": "acm-pca:DeletePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate-authority": "${ResourceArn}"
        }
      }
    ],
    "describe-certificate-authority": [
      {
        "action": "acm-pca:DescribeCertificateAuthority",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate-authority": "${CertificateAuthorityArn}"
        }
      }
    ],
    "describe-certificate-authority-audit-report": [
      {
        "action": "acm-pca:DescribeCertificateAuthorityAuditReport",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate-authority": "${CertificateAuthorityArn}"
        }
      }
    ],
    "get-certificate": [
      {
        "action": "acm-pca:GetCertificate",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate-authority": "${CertificateAuthorityArn}"
        }
      }
    ],
    "get-certificate-authority-certificate": [
      {
        "action": "acm-pca:GetCertificateAuthorityCertificate",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate-authority": "${CertificateAuthorityArn}"
        }
      }
    ],
    "get-certificate-authority-csr": [
      {
        "action": "acm-pca:GetCertificateAuthorityCsr",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate-authority": "${CertificateAuthorityArn}"
        }
      }
    ],
    "get-policy": [
      {
        "action": "acm-pca:GetPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate-authority": "${ResourceArn}"
        }
      }
    ],
    "import-certificate-authority-certificate": [
      {
        "action": "acm-pca:ImportCertificateAuthorityCertificate",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate-authority": "${CertificateAuthorityArn}"
        }
      }
    ],
    "issue-certificate": [
      {
        "action": "acm-pca:IssueCertificate",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate-authority": "${CertificateAuthorityArn}"
        }
      }
    ],
    "list-certificate-authorities": [
      {
        "action": "acm-pca:ListCertificateAuthorities",
        "resource_mappings": {}
      }
    ],
    "list-permissions": [
      {
        "action": "acm-pca:ListPermissions",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate-authority": "${CertificateAuthorityArn}"
        }
      }
    ],
    "list-tags": [
      {
        "action": "acm-pca:ListTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate-authority": "${CertificateAuthorityArn}"
        }
      }
    ],
    "put-policy": [
      {
        "action": "acm-pca:PutPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate-authority": "${ResourceArn}"
        }
      }
    ],
    "restore-certificate-authority": [
      {
        "action": "acm-pca:RestoreCertificateAuthority",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate-authority": "${CertificateAuthorityArn}"
        }
      }
    ],
    "revoke-certificate": [
      {
        "action": "acm-pca:RevokeCertificate",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate-authority": "${CertificateAuthorityArn}"
        }
      }
    ],
    "tag-certificate-authority": [
      {
        "action": "acm-pca:TagCertificateAuthority",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate-authority": "${CertificateAuthorityArn}"
        }
      }
    ],
    "untag-certificate-authority": [
      {
        "action": "acm-pca:UntagCertificateAuthority",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate-authority": "${CertificateAuthorityArn}"
        }
      }
    ],
    "update-certificate-authority": [
      {
        "action": "acm-pca:UpdateCertificateAuthority",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate-authority": "${CertificateAuthorityArn}"
        }
      }
    ],
    "wait": [
      {
        "action": "acm-pca:DescribeCertificateAuthorityAuditReport",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate-authority": "${CertificateAuthorityArn}"
        }
      }
    ]
  },
  "alexaforbusiness": {
    "approve-skill": [
      {
        "action": "a4b:ApproveSkill",
        "resource_mappings": {}
      }
    ],
    "associate-contact-with-address-book": [
      {
        "action": "a4b:AssociateContactWithAddressBook",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "addressbook": "${AddressBookArn}",
          "contact": "${ContactArn}"
        }
      }
    ],
    "associate-device-with-network-profile": [
      {
        "action": "a4b:AssociateDeviceWithNetworkProfile",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "device": "${DeviceArn}",
          "networkprofile": "${NetworkProfileArn}"
        }
      }
    ],
    "associate-device-with-room": [
      {
        "action": "a4b:AssociateDeviceWithRoom",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "device": "${DeviceArn}",
          "room": "${RoomArn}"
        }
      }
    ],
    "associate-skill-group-with-room": [
      {
        "action": "a4b:AssociateSkillGroupWithRoom",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "room": "${RoomArn}",
          "skillgroup": "${SkillGroupArn}"
        }
      }
    ],
    "associate-skill-with-skill-group": [
      {
        "action": "a4b:AssociateSkillWithSkillGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "skillgroup": "${SkillGroupArn}"
        }
      }
    ],
    "associate-skill-with-users": [
      {
        "action": "a4b:AssociateSkillWithUsers",
        "resource_mappings": {}
      }
    ],
    "create-address-book": [
      {
        "action": "a4b:CreateAddressBook",
        "resource_mappings": {}
      }
    ],
    "create-business-report-schedule": [
      {
        "action": "a4b:CreateBusinessReportSchedule",
        "resource_mappings": {}
      }
    ],
    "create-conference-provider": [
      {
        "action": "a4b:CreateConferenceProvider",
        "resource_mappings": {}
      }
    ],
    "create-contact": [
      {
        "action": "a4b:CreateContact",
        "resource_mappings": {}
      }
    ],
    "create-gateway-group": [
      {
        "action": "a4b:CreateGatewayGroup",
        "resource_mappings": {}
      }
    ],
    "create-network-profile": [
      {
        "action": "a4b:CreateNetworkProfile",
        "resource_mappings": {}
      }
    ],
    "create-profile": [
      {
        "action": "a4b:CreateProfile",
        "resource_mappings": {}
      }
    ],
    "create-room": [
      {
        "action": "a4b:CreateRoom",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "profile": "${ProfileArn}"
        }
      }
    ],
    "create-skill-group": [
      {
        "action": "a4b:CreateSkillGroup",
        "resource_mappings": {}
      }
    ],
    "create-user": [
      {
        "action": "a4b:CreateUser",
        "resource_mappings": {
          "Resource_id": {
            "template": "${UserId}"
          }
        }
      }
    ],
    "delete-address-book": [
      {
        "action": "a4b:DeleteAddressBook",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "addressbook": "${AddressBookArn}"
        }
      }
    ],
    "delete-business-report-schedule": [
      {
        "action": "a4b:DeleteBusinessReportSchedule",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "schedule": "${ScheduleArn}"
        }
      }
    ],
    "delete-conference-provider": [
      {
        "action": "a4b:DeleteConferenceProvider",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "conferenceprovider": "${ConferenceProviderArn}"
        }
      }
    ],
    "delete-contact": [
      {
        "action": "a4b:DeleteContact",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "contact": "${ContactArn}"
        }
      }
    ],
    "delete-device": [
      {
        "action": "a4b:DeleteDevice",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "device": "${DeviceArn}"
        }
      }
    ],
    "delete-device-usage-data": [
      {
        "action": "a4b:DeleteDeviceUsageData",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "device": "${DeviceArn}"
        }
      }
    ],
    "delete-gateway-group": [
      {
        "action": "a4b:DeleteGatewayGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gatewaygroup": "${GatewayGroupArn}"
        }
      }
    ],
    "delete-network-profile": [
      {
        "action": "a4b:DeleteNetworkProfile",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "networkprofile": "${NetworkProfileArn}"
        }
      }
    ],
    "delete-profile": [
      {
        "action": "a4b:DeleteProfile",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "profile": "${ProfileArn}"
        }
      }
    ],
    "delete-room": [
      {
        "action": "a4b:DeleteRoom",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "room": "${RoomArn}"
        }
      }
    ],
    "delete-room-skill-parameter": [
      {
        "action": "a4b:DeleteRoomSkillParameter",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "room": "${RoomArn}"
        }
      }
    ],
    "delete-skill-authorization": [
      {
        "action": "a4b:DeleteSkillAuthorization",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "room": "${RoomArn}"
        }
      }
    ],
    "delete-skill-group": [
      {
        "action": "a4b:DeleteSkillGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "skillgroup": "${SkillGroupArn}"
        }
      }
    ],
    "delete-user": [
      {
        "action": "a4b:DeleteUser",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "user": "${UserArn}"
        }
      }
    ],
    "disassociate-contact-from-address-book": [
      {
        "action": "a4b:DisassociateContactFromAddressBook",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "addressbook": "${AddressBookArn}",
          "contact": "${ContactArn}"
        }
      }
    ],
    "disassociate-device-from-room": [
      {
        "action": "a4b:DisassociateDeviceFromRoom",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "device": "${DeviceArn}"
        }
      }
    ],
    "disassociate-skill-from-skill-group": [
      {
        "action": "a4b:DisassociateSkillFromSkillGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "skillgroup": "${SkillGroupArn}"
        }
      }
    ],
    "disassociate-skill-from-users": [
      {
        "action": "a4b:DisassociateSkillFromUsers",
        "resource_mappings": {
          "Resource_id": {
            "template": "*"
          }
        }
      }
    ],
    "disassociate-skill-group-from-room": [
      {
        "action": "a4b:DisassociateSkillGroupFromRoom",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "room": "${RoomArn}",
          "skillgroup": "${SkillGroupArn}"
        }
      }
    ],
    "forget-smart-home-appliances": [
      {
        "action": "a4b:ForgetSmartHomeAppliances",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "room": "${RoomArn}"
        }
      }
    ],
    "get-address-book": [
      {
        "action": "a4b:GetAddressBook",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "addressbook": "${AddressBookArn}"
        }
      }
    ],
    "get-conference-preference": [
      {
        "action": "a4b:GetConferencePreference",
        "resource_mappings": {}
      }
    ],
    "get-conference-provider": [
      {
        "action": "a4b:GetConferenceProvider",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "conferenceprovider": "${ConferenceProviderArn}"
        }
      }
    ],
    "get-contact": [
      {
        "action": "a4b:GetContact",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "contact": "${ContactArn}"
        }
      }
    ],
    "get-device": [
      {
        "action": "a4b:GetDevice",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "device": "${DeviceArn}"
        }
      }
    ],
    "get-gateway": [
      {
        "action": "a4b:GetGateway",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayArn}"
        }
      }
    ],
    "get-gateway-group": [
      {
        "action": "a4b:GetGatewayGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gatewaygroup": "${GatewayGroupArn}"
        }
      }
    ],
    "get-invitation-configuration": [
      {
        "action": "a4b:GetInvitationConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-network-profile": [
      {
        "action": "a4b:GetNetworkProfile",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "networkprofile": "${NetworkProfileArn}"
        }
      }
    ],
    "get-profile": [
      {
        "action": "a4b:GetProfile",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "profile": "${ProfileArn}"
        }
      }
    ],
    "get-room": [
      {
        "action": "a4b:GetRoom",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "room": "${RoomArn}"
        }
      }
    ],
    "get-room-skill-parameter": [
      {
        "action": "a4b:GetRoomSkillParameter",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "room": "${RoomArn}"
        }
      }
    ],
    "get-skill-group": [
      {
        "action": "a4b:GetSkillGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "skillgroup": "${SkillGroupArn}"
        }
      }
    ],
    "list-business-report-schedules": [
      {
        "action": "a4b:ListBusinessReportSchedules",
        "resource_mappings": {}
      }
    ],
    "list-conference-providers": [
      {
        "action": "a4b:ListConferenceProviders",
        "resource_mappings": {}
      }
    ],
    "list-device-events": [
      {
        "action": "a4b:ListDeviceEvents",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "device": "${DeviceArn}"
        }
      }
    ],
    "list-gateway-groups": [
      {
        "action": "a4b:ListGatewayGroups",
        "resource_mappings": {}
      }
    ],
    "list-gateways": [
      {
        "action": "a4b:ListGateways",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gatewaygroup": "${GatewayGroupArn}"
        }
      }
    ],
    "list-skills": [
      {
        "action": "a4b:ListSkills",
        "resource_mappings": {}
      }
    ],
    "list-skills-store-categories": [
      {
        "action": "a4b:ListSkillsStoreCategories",
        "resource_mappings": {}
      }
    ],
    "list-skills-store-skills-by-category": [
      {
        "action": "a4b:ListSkillsStoreSkillsByCategory",
        "resource_mappings": {}
      }
    ],
    "list-smart-home-appliances": [
      {
        "action": "a4b:ListSmartHomeAppliances",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "room": "${RoomArn}"
        }
      }
    ],
    "list-tags": [
      {
        "action": "a4b:ListTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "device": "%%iftemplatematch%${Arn}%%",
          "room": "%%iftemplatematch%${Arn}%%",
          "user": "%%iftemplatematch%${Arn}%%"
        }
      }
    ],
    "put-conference-preference": [
      {
        "action": "a4b:PutConferencePreference",
        "resource_mappings": {}
      }
    ],
    "put-invitation-configuration": [
      {
        "action": "a4b:PutInvitationConfiguration",
        "resource_mappings": {}
      }
    ],
    "put-room-skill-parameter": [
      {
        "action": "a4b:PutRoomSkillParameter",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "room": "${RoomArn}"
        }
      }
    ],
    "put-skill-authorization": [
      {
        "action": "a4b:PutSkillAuthorization",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "room": "${RoomArn}"
        }
      }
    ],
    "register-avs-device": [
      {
        "action": "a4b:RegisterAVSDevice",
        "resource_mappings": {}
      }
    ],
    "reject-skill": [
      {
        "action": "a4b:RejectSkill",
        "resource_mappings": {}
      }
    ],
    "resolve-room": [
      {
        "action": "a4b:ResolveRoom",
        "resource_mappings": {}
      }
    ],
    "revoke-invitation": [
      {
        "action": "a4b:RevokeInvitation",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "user": "${UserArn}"
        }
      }
    ],
    "search-address-books": [
      {
        "action": "a4b:SearchAddressBooks",
        "resource_mappings": {}
      }
    ],
    "search-contacts": [
      {
        "action": "a4b:SearchContacts",
        "resource_mappings": {}
      }
    ],
    "search-devices": [
      {
        "action": "a4b:SearchDevices",
        "resource_mappings": {}
      }
    ],
    "search-network-profiles": [
      {
        "action": "a4b:SearchNetworkProfiles",
        "resource_mappings": {}
      }
    ],
    "search-profiles": [
      {
        "action": "a4b:SearchProfiles",
        "resource_mappings": {}
      }
    ],
    "search-rooms": [
      {
        "action": "a4b:SearchRooms",
        "resource_mappings": {}
      }
    ],
    "search-skill-groups": [
      {
        "action": "a4b:SearchSkillGroups",
        "resource_mappings": {}
      }
    ],
    "search-users": [
      {
        "action": "a4b:SearchUsers",
        "resource_mappings": {}
      }
    ],
    "send-announcement": [
      {
        "action": "a4b:SendAnnouncement",
        "resource_mappings": {}
      }
    ],
    "send-invitation": [
      {
        "action": "a4b:SendInvitation",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "user": "${UserArn}"
        }
      }
    ],
    "start-device-sync": [
      {
        "action": "a4b:StartDeviceSync",
        "resource_mappings": {}
      }
    ],
    "start-smart-home-appliance-discovery": [
      {
        "action": "a4b:StartSmartHomeApplianceDiscovery",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "room": "${RoomArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "a4b:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "device": "%%iftemplatematch%${Arn}%%",
          "room": "%%iftemplatematch%${Arn}%%",
          "user": "%%iftemplatematch%${Arn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "a4b:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "device": "%%iftemplatematch%${Arn}%%",
          "room": "%%iftemplatematch%${Arn}%%",
          "user": "%%iftemplatematch%${Arn}%%"
        }
      }
    ],
    "update-address-book": [
      {
        "action": "a4b:UpdateAddressBook",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "addressbook": "${AddressBookArn}"
        }
      }
    ],
    "update-business-report-schedule": [
      {
        "action": "a4b:UpdateBusinessReportSchedule",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "schedule": "${ScheduleArn}"
        }
      }
    ],
    "update-conference-provider": [
      {
        "action": "a4b:UpdateConferenceProvider",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "conferenceprovider": "${ConferenceProviderArn}"
        }
      }
    ],
    "update-contact": [
      {
        "action": "a4b:UpdateContact",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "contact": "${ContactArn}"
        }
      }
    ],
    "update-device": [
      {
        "action": "a4b:UpdateDevice",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "device": "${DeviceArn}"
        }
      }
    ],
    "update-gateway": [
      {
        "action": "a4b:UpdateGateway",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayArn}"
        }
      }
    ],
    "update-gateway-group": [
      {
        "action": "a4b:UpdateGatewayGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gatewaygroup": "${GatewayGroupArn}"
        }
      }
    ],
    "update-network-profile": [
      {
        "action": "a4b:UpdateNetworkProfile",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "networkprofile": "${NetworkProfileArn}"
        }
      }
    ],
    "update-profile": [
      {
        "action": "a4b:UpdateProfile",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "profile": "${ProfileArn}"
        }
      }
    ],
    "update-room": [
      {
        "action": "a4b:UpdateRoom",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "room": "${RoomArn}"
        }
      }
    ],
    "update-skill-group": [
      {
        "action": "a4b:UpdateSkillGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "skillgroup": "${SkillGroupArn}"
        }
      }
    ]
  },
  "amp": {
    "create-alert-manager-definition": [
      {
        "action": "aps:CreateAlertManagerDefinition",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "create-logging-configuration": [
      {
        "action": "aps:CreateLoggingConfiguration",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "create-rule-groups-namespace": [
      {
        "action": "aps:CreateRuleGroupsNamespace",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          },
          "Namespace": {
            "template": "${name}"
          }
        }
      }
    ],
    "create-workspace": [
      {
        "action": "aps:CreateWorkspace",
        "resource_mappings": {}
      }
    ],
    "delete-alert-manager-definition": [
      {
        "action": "aps:DeleteAlertManagerDefinition",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "delete-logging-configuration": [
      {
        "action": "aps:DeleteLoggingConfiguration",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "delete-rule-groups-namespace": [
      {
        "action": "aps:DeleteRuleGroupsNamespace",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          },
          "Namespace": {
            "template": "${name}"
          }
        }
      }
    ],
    "delete-workspace": [
      {
        "action": "aps:DeleteWorkspace",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "describe-alert-manager-definition": [
      {
        "action": "aps:DescribeAlertManagerDefinition",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "describe-logging-configuration": [
      {
        "action": "aps:DescribeLoggingConfiguration",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "describe-rule-groups-namespace": [
      {
        "action": "aps:DescribeRuleGroupsNamespace",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          },
          "Namespace": {
            "template": "${name}"
          }
        }
      }
    ],
    "describe-workspace": [
      {
        "action": "aps:DescribeWorkspace",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "list-rule-groups-namespaces": [
      {
        "action": "aps:ListRuleGroupsNamespaces",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "aps:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "workspace": "${resourceArn}"
        }
      }
    ],
    "list-workspaces": [
      {
        "action": "aps:ListWorkspaces",
        "resource_mappings": {}
      }
    ],
    "put-alert-manager-definition": [
      {
        "action": "aps:PutAlertManagerDefinition",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "put-rule-groups-namespace": [
      {
        "action": "aps:PutRuleGroupsNamespace",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          },
          "Namespace": {
            "template": "${name}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "aps:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "workspace": "${resourceArn}"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "aps:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "workspace": "${resourceArn}"
        }
      }
    ],
    "update-logging-configuration": [
      {
        "action": "aps:UpdateLoggingConfiguration",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "update-workspace-alias": [
      {
        "action": "aps:UpdateWorkspaceAlias",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "aps:DescribeWorkspace",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ]
  },
  "amplify": {
    "create-app": [
      {
        "action": "amplify:CreateApp",
        "resource_mappings": {
          "AppId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${iamServiceRoleArn}"
        }
      }
    ],
    "create-backend-environment": [
      {
        "action": "amplify:CreateBackendEnvironment",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          }
        }
      }
    ],
    "create-branch": [
      {
        "action": "amplify:CreateBranch",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          }
        }
      }
    ],
    "create-deployment": [
      {
        "action": "amplify:CreateDeployment",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          },
          "BranchName": {
            "template": "${branchName}"
          }
        }
      }
    ],
    "create-domain-association": [
      {
        "action": "amplify:CreateDomainAssociation",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${autoSubDomainIAMRole}"
        }
      }
    ],
    "create-webhook": [
      {
        "action": "amplify:CreateWebHook",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          },
          "BranchName": {
            "template": "${branchName}"
          }
        }
      }
    ],
    "delete-app": [
      {
        "action": "amplify:DeleteApp",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          }
        }
      }
    ],
    "delete-backend-environment": [
      {
        "action": "amplify:DeleteBackendEnvironment",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          }
        }
      }
    ],
    "delete-branch": [
      {
        "action": "amplify:DeleteBranch",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          },
          "BranchName": {
            "template": "${branchName}"
          }
        }
      }
    ],
    "delete-domain-association": [
      {
        "action": "amplify:DeleteDomainAssociation",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          },
          "DomainName": {
            "template": "${domainName}"
          }
        }
      }
    ],
    "delete-job": [
      {
        "action": "amplify:DeleteJob",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          },
          "BranchName": {
            "template": "${branchName}"
          },
          "JobId": {
            "template": "${jobId}"
          }
        }
      }
    ],
    "delete-webhook": [
      {
        "action": "amplify:DeleteWebHook",
        "resource_mappings": {
          "AppId": {
            "template": "*"
          }
        }
      }
    ],
    "generate-access-logs": [
      {
        "action": "amplify:GenerateAccessLogs",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          }
        }
      }
    ],
    "get-app": [
      {
        "action": "amplify:GetApp",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          }
        }
      }
    ],
    "get-artifact-url": [
      {
        "action": "amplify:GetArtifactUrl",
        "resource_mappings": {
          "AppId": {
            "template": "*"
          }
        }
      }
    ],
    "get-backend-environment": [
      {
        "action": "amplify:GetBackendEnvironment",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          }
        }
      }
    ],
    "get-branch": [
      {
        "action": "amplify:GetBranch",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          },
          "BranchName": {
            "template": "${branchName}"
          }
        }
      }
    ],
    "get-domain-association": [
      {
        "action": "amplify:GetDomainAssociation",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          },
          "DomainName": {
            "template": "${domainName}"
          }
        }
      }
    ],
    "get-job": [
      {
        "action": "amplify:GetJob",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          },
          "BranchName": {
            "template": "${branchName}"
          },
          "JobId": {
            "template": "${jobId}"
          }
        }
      }
    ],
    "get-webhook": [
      {
        "action": "amplify:GetWebHook",
        "resource_mappings": {
          "AppId": {
            "template": "*"
          }
        }
      }
    ],
    "list-apps": [
      {
        "action": "amplify:ListApps",
        "resource_mappings": {}
      }
    ],
    "list-artifacts": [
      {
        "action": "amplify:ListArtifacts",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          }
        }
      }
    ],
    "list-backend-environments": [
      {
        "action": "amplify:ListBackendEnvironments",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          }
        }
      }
    ],
    "list-branches": [
      {
        "action": "amplify:ListBranches",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          }
        }
      }
    ],
    "list-domain-associations": [
      {
        "action": "amplify:ListDomainAssociations",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          }
        }
      }
    ],
    "list-jobs": [
      {
        "action": "amplify:ListJobs",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          },
          "BranchName": {
            "template": "${branchName}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "amplify:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "apps": "%%iftemplatematch%${resourceArn}%%",
          "branches": "%%iftemplatematch%${resourceArn}%%",
          "jobs": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "list-webhooks": [
      {
        "action": "amplify:ListWebHooks",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          }
        }
      }
    ],
    "start-deployment": [
      {
        "action": "amplify:StartDeployment",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          },
          "BranchName": {
            "template": "${branchName}"
          }
        }
      }
    ],
    "start-job": [
      {
        "action": "amplify:StartJob",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          },
          "BranchName": {
            "template": "${branchName}"
          },
          "JobId": {
            "template": "${jobId}"
          }
        }
      }
    ],
    "stop-job": [
      {
        "action": "amplify:StopJob",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          },
          "BranchName": {
            "template": "${branchName}"
          },
          "JobId": {
            "template": "${jobId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "amplify:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "apps": "%%iftemplatematch%${resourceArn}%%",
          "branches": "%%iftemplatematch%${resourceArn}%%",
          "jobs": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "amplify:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "apps": "%%iftemplatematch%${resourceArn}%%",
          "branches": "%%iftemplatematch%${resourceArn}%%",
          "jobs": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-app": [
      {
        "action": "amplify:UpdateApp",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${iamServiceRoleArn}"
        }
      }
    ],
    "update-branch": [
      {
        "action": "amplify:UpdateBranch",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          },
          "BranchName": {
            "template": "${branchName}"
          }
        }
      }
    ],
    "update-domain-association": [
      {
        "action": "amplify:UpdateDomainAssociation",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          },
          "DomainName": {
            "template": "${domainName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${autoSubDomainIAMRole}"
        }
      }
    ],
    "update-webhook": [
      {
        "action": "amplify:UpdateWebHook",
        "resource_mappings": {
          "AppId": {
            "template": "*"
          }
        }
      }
    ]
  },
  "amplifybackend": {
    "clone-backend": [
      {
        "action": "amplifybackend:CloneBackend",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "create-backend": [
      {
        "action": "amplifybackend:CreateBackend",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "create-backend-api": [
      {
        "action": "amplifybackend:CreateBackendAPI",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "create-backend-auth": [
      {
        "action": "amplifybackend:CreateBackendAuth",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "create-backend-config": [
      {
        "action": "amplifybackend:CreateBackendConfig",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "create-backend-storage": [
      {
        "action": "amplifybackend:CreateBackendStorage",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "create-token": [
      {
        "action": "amplifybackend:CreateToken",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "delete-backend": [
      {
        "action": "amplifybackend:DeleteBackend",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "delete-backend-api": [
      {
        "action": "amplifybackend:DeleteBackendAPI",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "delete-backend-auth": [
      {
        "action": "amplifybackend:DeleteBackendAuth",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "delete-backend-storage": [
      {
        "action": "amplifybackend:DeleteBackendStorage",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "delete-token": [
      {
        "action": "amplifybackend:DeleteToken",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "generate-backend-api-models": [
      {
        "action": "amplifybackend:GenerateBackendAPIModels",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "get-backend": [
      {
        "action": "amplifybackend:GetBackend",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "get-backend-api": [
      {
        "action": "amplifybackend:GetBackendAPI",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "get-backend-api-models": [
      {
        "action": "amplifybackend:GetBackendAPIModels",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "get-backend-auth": [
      {
        "action": "amplifybackend:GetBackendAuth",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "get-backend-job": [
      {
        "action": "amplifybackend:GetBackendJob",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "get-backend-storage": [
      {
        "action": "amplifybackend:GetBackendStorage",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "get-token": [
      {
        "action": "amplifybackend:GetToken",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "import-backend-auth": [
      {
        "action": "amplifybackend:ImportBackendAuth",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "import-backend-storage": [
      {
        "action": "amplifybackend:ImportBackendStorage",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "list-backend-jobs": [
      {
        "action": "amplifybackend:ListBackendJobs",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "list-s3-buckets": [
      {
        "action": "amplifybackend:ListS3Buckets",
        "resource_mappings": {}
      }
    ],
    "remove-all-backends": [
      {
        "action": "amplifybackend:RemoveAllBackends",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "remove-backend-config": [
      {
        "action": "amplifybackend:RemoveBackendConfig",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "update-backend-api": [
      {
        "action": "amplifybackend:UpdateBackendAPI",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "update-backend-auth": [
      {
        "action": "amplifybackend:UpdateBackendAuth",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "update-backend-config": [
      {
        "action": "amplifybackend:UpdateBackendConfig",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "update-backend-job": [
      {
        "action": "amplifybackend:UpdateBackendJob",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ],
    "update-backend-storage": [
      {
        "action": "amplifybackend:UpdateBackendStorage",
        "resource_mappings": {
          "AppId": {
            "template": "${AppId}"
          }
        }
      }
    ]
  },
  "amplifyuibuilder": {
    "create-component": [
      {
        "action": "amplifyuibuilder:CreateComponent",
        "resource_mappings": {}
      },
      {
        "action": "amplify:GetApp",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          }
        }
      }
    ],
    "create-form": [
      {
        "action": "amplifyuibuilder:CreateForm",
        "resource_mappings": {}
      },
      {
        "action": "amplify:GetApp",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          }
        }
      }
    ],
    "create-theme": [
      {
        "action": "amplifyuibuilder:CreateTheme",
        "resource_mappings": {}
      },
      {
        "action": "amplify:GetApp",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          }
        }
      }
    ],
    "delete-component": [
      {
        "action": "amplifyuibuilder:DeleteComponent",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          },
          "EnvironmentName": {
            "template": "${environmentName}"
          },
          "Id": {
            "template": "${id}"
          }
        }
      }
    ],
    "delete-form": [
      {
        "action": "amplifyuibuilder:DeleteForm",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          },
          "EnvironmentName": {
            "template": "${environmentName}"
          },
          "Id": {
            "template": "${id}"
          }
        }
      },
      {
        "action": "amplify:GetApp",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          }
        }
      }
    ],
    "delete-theme": [
      {
        "action": "amplifyuibuilder:DeleteTheme",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          },
          "EnvironmentName": {
            "template": "${environmentName}"
          },
          "Id": {
            "template": "${id}"
          }
        }
      }
    ],
    "exchange-code-for-token": [
      {
        "action": "amplifyuibuilder:ExchangeCodeForToken",
        "resource_mappings": {}
      }
    ],
    "export-components": [
      {
        "action": "amplifyuibuilder:ExportComponents",
        "resource_mappings": {}
      }
    ],
    "export-forms": [
      {
        "action": "amplifyuibuilder:ExportForms",
        "resource_mappings": {}
      }
    ],
    "export-themes": [
      {
        "action": "amplifyuibuilder:ExportThemes",
        "resource_mappings": {}
      }
    ],
    "get-codegen-job": [
      {
        "action": "amplifyuibuilder:GetCodegenJob",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          },
          "EnvironmentName": {
            "template": "${environmentName}"
          },
          "Id": {
            "template": "${id}"
          }
        }
      },
      {
        "action": "amplify:GetApp",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          }
        }
      }
    ],
    "get-component": [
      {
        "action": "amplifyuibuilder:GetComponent",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          },
          "EnvironmentName": {
            "template": "${environmentName}"
          },
          "Id": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-form": [
      {
        "action": "amplifyuibuilder:GetForm",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          },
          "EnvironmentName": {
            "template": "${environmentName}"
          },
          "Id": {
            "template": "${id}"
          }
        }
      },
      {
        "action": "amplify:GetApp",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          }
        }
      }
    ],
    "get-metadata": [
      {
        "action": "amplifyuibuilder:GetMetadata",
        "resource_mappings": {}
      }
    ],
    "get-theme": [
      {
        "action": "amplifyuibuilder:GetTheme",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          },
          "EnvironmentName": {
            "template": "${environmentName}"
          },
          "Id": {
            "template": "${id}"
          }
        }
      }
    ],
    "list-codegen-jobs": [
      {
        "action": "amplifyuibuilder:ListCodegenJobs",
        "resource_mappings": {}
      },
      {
        "action": "amplify:GetApp",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          }
        }
      }
    ],
    "list-components": [
      {
        "action": "amplifyuibuilder:ListComponents",
        "resource_mappings": {}
      }
    ],
    "list-forms": [
      {
        "action": "amplifyuibuilder:ListForms",
        "resource_mappings": {}
      },
      {
        "action": "amplify:GetApp",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          }
        }
      }
    ],
    "list-themes": [
      {
        "action": "amplifyuibuilder:ListThemes",
        "resource_mappings": {}
      }
    ],
    "put-metadata-flag": [
      {
        "action": "amplifyuibuilder:PutMetadataFlag",
        "resource_mappings": {}
      }
    ],
    "refresh-token": [
      {
        "action": "amplifyuibuilder:RefreshToken",
        "resource_mappings": {}
      }
    ],
    "start-codegen-job": [
      {
        "action": "amplifyuibuilder:StartCodegenJob",
        "resource_mappings": {}
      },
      {
        "action": "amplify:GetApp",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          }
        }
      }
    ],
    "update-component": [
      {
        "action": "amplifyuibuilder:UpdateComponent",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          },
          "EnvironmentName": {
            "template": "${environmentName}"
          },
          "Id": {
            "template": "${id}"
          }
        }
      },
      {
        "action": "amplify:GetApp",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          }
        }
      }
    ],
    "update-form": [
      {
        "action": "amplifyuibuilder:UpdateForm",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          },
          "EnvironmentName": {
            "template": "${environmentName}"
          },
          "Id": {
            "template": "${id}"
          }
        }
      },
      {
        "action": "amplify:GetApp",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          }
        }
      }
    ],
    "update-theme": [
      {
        "action": "amplifyuibuilder:UpdateTheme",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          },
          "EnvironmentName": {
            "template": "${environmentName}"
          },
          "Id": {
            "template": "${id}"
          }
        }
      },
      {
        "action": "amplify:GetApp",
        "resource_mappings": {
          "AppId": {
            "template": "${appId}"
          }
        }
      }
    ]
  },
  "apigateway": {
    "create-api-key": [
      {
        "action": "apigateway:POST",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apikeys"
        }
      }
    ],
    "create-authorizer": [
      {
        "action": "apigateway:POST",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/authorizers"
        }
      }
    ],
    "create-base-path-mapping": [
      {
        "action": "apigateway:POST",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/domainnames/${domainName}/basepathmappings"
        }
      }
    ],
    "create-deployment": [
      {
        "action": "apigateway:POST",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/deployments"
        }
      }
    ],
    "create-documentation-part": [
      {
        "action": "apigateway:POST",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/documentation/parts"
        }
      }
    ],
    "create-documentation-version": [
      {
        "action": "apigateway:POST",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/documentation/versions"
        }
      }
    ],
    "create-domain-name": [
      {
        "action": "apigateway:POST",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/domainnames"
        }
      }
    ],
    "create-model": [
      {
        "action": "apigateway:POST",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/models"
        }
      }
    ],
    "create-request-validator": [
      {
        "action": "apigateway:POST",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/requestvalidators"
        }
      }
    ],
    "create-resource": [
      {
        "action": "apigateway:POST",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/resources/${parentId}"
        }
      }
    ],
    "create-rest-api": [
      {
        "action": "apigateway:POST",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis"
        }
      }
    ],
    "create-stage": [
      {
        "action": "apigateway:POST",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/stages"
        }
      }
    ],
    "create-usage-plan": [
      {
        "action": "apigateway:POST",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/usageplans"
        }
      }
    ],
    "create-usage-plan-key": [
      {
        "action": "apigateway:POST",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/usageplans/${usagePlanId}/keys"
        }
      }
    ],
    "create-vpc-link": [
      {
        "action": "apigateway:POST",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/vpclinks"
        }
      }
    ],
    "delete-api-key": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apikeys/${apiKey}"
        }
      }
    ],
    "delete-authorizer": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/authorizers/${authorizerId}"
        }
      }
    ],
    "delete-base-path-mapping": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/domainnames/${domainName}/basepathmappings/${basePath}"
        }
      }
    ],
    "delete-client-certificate": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/clientcertificates/${clientCertificateId}"
        }
      }
    ],
    "delete-deployment": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/deployments/${deploymentId}"
        }
      }
    ],
    "delete-documentation-part": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/documentation/parts/${documentationPartId}"
        }
      }
    ],
    "delete-documentation-version": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/documentation/versions/${documentationVersion}"
        }
      }
    ],
    "delete-domain-name": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/domainnames/${domainName}"
        }
      }
    ],
    "delete-gateway-response": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/gatewayresponses/${responseType}"
        }
      }
    ],
    "delete-integration": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}/integration"
        }
      }
    ],
    "delete-integration-response": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}/integration/responses/${statusCode}"
        }
      }
    ],
    "delete-method": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}"
        }
      }
    ],
    "delete-method-response": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}/responses/${statusCode}"
        }
      }
    ],
    "delete-model": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/models/${modelName}"
        }
      }
    ],
    "delete-request-validator": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/requestvalidators/${requestValidatorId}"
        }
      }
    ],
    "delete-resource": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/resources/${resourceId}"
        }
      }
    ],
    "delete-rest-api": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}"
        }
      }
    ],
    "delete-stage": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/stages/${stageName}"
        }
      }
    ],
    "delete-usage-plan": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/usageplans/${usagePlanId}"
        }
      }
    ],
    "delete-usage-plan-key": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/usageplans/${usagePlanId}/keys/${keyId}"
        }
      }
    ],
    "delete-vpc-link": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/vpclinks/${vpcLinkId}"
        }
      }
    ],
    "flush-stage-authorizers-cache": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/stages/${stageName}/cache/authorizers"
        }
      }
    ],
    "flush-stage-cache": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/stages/${stageName}/cache/data"
        }
      }
    ],
    "generate-client-certificate": [
      {
        "action": "apigateway:POST",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/clientcertificates"
        }
      }
    ],
    "get-account": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/account"
        }
      }
    ],
    "get-api-key": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apikeys/${apiKey}"
        }
      }
    ],
    "get-api-keys": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apikeys"
        }
      }
    ],
    "get-authorizer": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/authorizers/${authorizerId}"
        }
      }
    ],
    "get-authorizers": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/authorizers"
        }
      }
    ],
    "get-base-path-mapping": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/domainnames/${domainName}/basepathmappings/${basePath}"
        }
      }
    ],
    "get-base-path-mappings": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/domainnames/${domainName}/basepathmappings"
        }
      }
    ],
    "get-client-certificate": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/clientcertificates/${clientCertificateId}"
        }
      }
    ],
    "get-client-certificates": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/clientcertificates"
        }
      }
    ],
    "get-deployment": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/deployments/${deploymentId}"
        }
      }
    ],
    "get-deployments": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/deployments"
        }
      }
    ],
    "get-documentation-part": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/documentation/parts/${documentationPartId}"
        }
      }
    ],
    "get-documentation-parts": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/documentation/parts"
        }
      }
    ],
    "get-documentation-version": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/documentation/versions/${documentationVersion}"
        }
      }
    ],
    "get-documentation-versions": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/documentation/versions"
        }
      }
    ],
    "get-domain-name": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/domainnames/${domainName}"
        }
      }
    ],
    "get-domain-names": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/domainnames"
        }
      }
    ],
    "get-export": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/stages/${stageName}/exports/${exportType}"
        }
      }
    ],
    "get-gateway-response": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/gatewayresponses/${responseType}"
        }
      }
    ],
    "get-gateway-responses": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/gatewayresponses"
        }
      }
    ],
    "get-integration": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}/integration"
        }
      }
    ],
    "get-integration-response": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}/integration/responses/${statusCode}"
        }
      }
    ],
    "get-method": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}"
        }
      }
    ],
    "get-method-response": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}/responses/${statusCode}"
        }
      }
    ],
    "get-model": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/models/${modelName}"
        }
      }
    ],
    "get-model-template": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/models/${modelName}/default_template"
        }
      }
    ],
    "get-models": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/models"
        }
      }
    ],
    "get-request-validator": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/requestvalidators/${requestValidatorId}"
        }
      }
    ],
    "get-request-validators": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/requestvalidators"
        }
      }
    ],
    "get-resource": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/resources/${resourceId}"
        }
      }
    ],
    "get-resources": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/resources"
        }
      }
    ],
    "get-rest-api": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}"
        }
      }
    ],
    "get-rest-apis": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis"
        }
      }
    ],
    "get-sdk": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/stages/${stageName}/sdks/${sdkType}"
        }
      }
    ],
    "get-sdk-type": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/sdktypes/${id}"
        }
      }
    ],
    "get-sdk-types": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/sdktypes"
        }
      }
    ],
    "get-stage": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/stages/${stageName}"
        }
      }
    ],
    "get-stages": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/stages"
        }
      }
    ],
    "get-tags": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/tags/${resourceArn}"
        }
      }
    ],
    "get-usage": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/usageplans/${usagePlanId}/usage"
        }
      }
    ],
    "get-usage-plan": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/usageplans/${usagePlanId}"
        }
      }
    ],
    "get-usage-plan-key": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/usageplans/${usagePlanId}/keys/${keyId}"
        }
      }
    ],
    "get-usage-plan-keys": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/usageplans/${usagePlanId}/keys"
        }
      }
    ],
    "get-usage-plans": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/usageplans"
        }
      }
    ],
    "get-vpc-link": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/vpclinks/${vpcLinkId}"
        }
      }
    ],
    "get-vpc-links": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/vpclinks"
        }
      }
    ],
    "import-api-keys": [
      {
        "action": "apigateway:POST",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apikeys"
        }
      }
    ],
    "import-documentation-parts": [
      {
        "action": "apigateway:PUT",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/documentation/parts"
        }
      }
    ],
    "import-rest-api": [
      {
        "action": "apigateway:POST",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis"
        }
      }
    ],
    "put-gateway-response": [
      {
        "action": "apigateway:PUT",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/gatewayresponses/${responseType}"
        }
      }
    ],
    "put-integration": [
      {
        "action": "apigateway:PUT",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}/integration"
        }
      }
    ],
    "put-integration-response": [
      {
        "action": "apigateway:PUT",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}/integration/responses/${statusCode}"
        }
      }
    ],
    "put-method": [
      {
        "action": "apigateway:PUT",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}"
        }
      }
    ],
    "put-method-response": [
      {
        "action": "apigateway:PUT",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}/responses/${statusCode}"
        }
      }
    ],
    "put-rest-api": [
      {
        "action": "apigateway:PUT",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}"
        }
      }
    ],
    "tag-resource": [
      {
        "note": "NotFound",
        "action": "API Gateway:TagResource",
        "resource_mappings": {}
      }
    ],
    "test-invoke-authorizer": [
      {
        "action": "apigateway:POST",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/authorizers/${authorizerId}"
        }
      }
    ],
    "test-invoke-method": [
      {
        "action": "apigateway:POST",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/tags/${resourceArn}"
        }
      }
    ],
    "update-account": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/account"
        }
      }
    ],
    "update-api-key": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apikeys/${apiKey}"
        }
      }
    ],
    "update-authorizer": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/authorizers/${authorizerId}"
        }
      }
    ],
    "update-base-path-mapping": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/domainnames/${domainName}/basepathmappings/${basePath}"
        }
      }
    ],
    "update-client-certificate": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/clientcertificates/${clientCertificateId}"
        }
      }
    ],
    "update-deployment": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/deployments/${deploymentId}"
        }
      }
    ],
    "update-documentation-part": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/documentation/parts/${documentationPartId}"
        }
      }
    ],
    "update-documentation-version": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/documentation/versions/${documentationVersion}"
        }
      }
    ],
    "update-domain-name": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/domainnames/${domainName}"
        }
      }
    ],
    "update-gateway-response": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/gatewayresponses/${responseType}"
        }
      }
    ],
    "update-integration": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}/integration"
        }
      }
    ],
    "update-integration-response": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}/integration/responses/${statusCode}"
        }
      }
    ],
    "update-method": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}"
        }
      }
    ],
    "update-method-response": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/resources/${resourceId}/methods/${httpMethod}/responses/${statusCode}"
        }
      }
    ],
    "update-model": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/models/${modelName}"
        }
      }
    ],
    "update-request-validator": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/requestvalidators/${requestValidatorId}"
        }
      }
    ],
    "update-resource": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/resources/${resourceId}"
        }
      }
    ],
    "update-rest-api": [
      {
        "action": "apigateway:PATCH",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}"
        }
      }
    ],
    "update-stage": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/restapis/${restApiId}/stages/${stageName}"
        }
      }
    ],
    "update-usage": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/usageplans/${usagePlanId}/keys/${keyId}/usage"
        }
      }
    ],
    "update-usage-plan": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/usageplans/${usagePlanId}"
        }
      }
    ],
    "update-vpc-link": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/vpclinks/${vpcLinkId}"
        }
      }
    ]
  },
  "apigatewaymanagementapi": {
    "delete-connection": [
      {
        "action": "execute-api:ManageConnections",
        "resource_mappings": {
          "ApiId": {
            "template": "*"
          },
          "Stage": {
            "template": "*"
          },
          "Method": {
            "template": "POST"
          },
          "ApiSpecificResourcePath": {
            "template": "@connections"
          }
        }
      }
    ],
    "get-connection": [
      {
        "action": "execute-api:ManageConnections",
        "resource_mappings": {
          "ApiId": {
            "template": "*"
          },
          "Stage": {
            "template": "*"
          },
          "Method": {
            "template": "POST"
          },
          "ApiSpecificResourcePath": {
            "template": "@connections"
          }
        }
      }
    ],
    "post-to-connection": [
      {
        "action": "execute-api:ManageConnections",
        "resource_mappings": {
          "ApiId": {
            "template": "*"
          },
          "Stage": {
            "template": "*"
          },
          "Method": {
            "template": "POST"
          },
          "ApiSpecificResourcePath": {
            "template": "@connections"
          }
        }
      }
    ]
  },
  "apigatewayv2": {
    "create-api": [
      {
        "action": "apigateway:POST",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis"
        }
      }
    ],
    "create-api-mapping": [
      {
        "action": "apigateway:POST",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/domainnames/${DomainName}/apimappings"
        }
      }
    ],
    "create-authorizer": [
      {
        "action": "apigateway:POST",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/authorizers"
        }
      }
    ],
    "create-deployment": [
      {
        "action": "apigateway:POST",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/deployments"
        }
      }
    ],
    "create-domain-name": [
      {
        "action": "apigateway:POST",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/domainnames"
        }
      }
    ],
    "create-integration": [
      {
        "action": "apigateway:POST",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/integrations"
        }
      }
    ],
    "create-integration-response": [
      {
        "action": "apigateway:POST",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/integrations/${IntegrationId}/integrationresponses"
        }
      }
    ],
    "create-model": [
      {
        "action": "apigateway:POST",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/models"
        }
      }
    ],
    "create-route": [
      {
        "action": "apigateway:POST",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/routes"
        }
      }
    ],
    "create-route-response": [
      {
        "action": "apigateway:POST",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/routes/${RouteId}/routeresponses"
        }
      }
    ],
    "create-stage": [
      {
        "action": "apigateway:POST",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/stages"
        }
      }
    ],
    "create-vpc-link": [
      {
        "action": "apigateway:POST",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/vpclinks"
        }
      }
    ],
    "delete-access-log-settings": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/stages/${StageName}/accesslogsettings"
        }
      }
    ],
    "delete-api": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}"
        }
      }
    ],
    "delete-api-mapping": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/domainnames/${DomainName}/apimappings/${ApiMappingId}"
        }
      }
    ],
    "delete-authorizer": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/authorizers/${AuthorizerId}"
        }
      }
    ],
    "delete-cors-configuration": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/cors"
        }
      }
    ],
    "delete-deployment": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/deployments/${DeploymentId}"
        }
      }
    ],
    "delete-domain-name": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/domainnames/${DomainName}"
        }
      }
    ],
    "delete-integration": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/integrations/${IntegrationId}"
        }
      }
    ],
    "delete-integration-response": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/integrations/${IntegrationId}/integrationresponses/${IntegrationResponseId}"
        }
      }
    ],
    "delete-model": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/models/${ModelId}"
        }
      }
    ],
    "delete-route": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/routes/${RouteId}"
        }
      }
    ],
    "delete-route-request-parameter": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/routes/${RouteId}/requestparameters/${RequestParameterKey}"
        }
      }
    ],
    "delete-route-response": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/routes/${RouteId}/routeresponses/${RouteResponseId}"
        }
      }
    ],
    "delete-route-settings": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/stages/${StageName}/routesettings/${RouteKey}"
        }
      }
    ],
    "delete-stage": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/stages/${StageName}"
        }
      }
    ],
    "delete-vpc-link": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/vpclinks/${VpcLinkId}"
        }
      }
    ],
    "export-api": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/exports/${Specification}"
        }
      }
    ],
    "reset-authorizers-cache": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/stages/${StageName}/cache/authorizers"
        }
      }
    ],
    "get-api": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}"
        }
      }
    ],
    "get-api-mapping": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/domainnames/${DomainName}/apimappings/${ApiMappingId}"
        }
      }
    ],
    "get-api-mappings": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/domainnames/${DomainName}/apimappings"
        }
      }
    ],
    "get-apis": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis"
        }
      }
    ],
    "get-authorizer": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/authorizers/${AuthorizerId}"
        }
      }
    ],
    "get-authorizers": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/authorizers"
        }
      }
    ],
    "get-deployment": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/deployments/${DeploymentId}"
        }
      }
    ],
    "get-deployments": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/deployments"
        }
      }
    ],
    "get-domain-name": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/domainnames/${DomainName}"
        }
      }
    ],
    "get-domain-names": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/domainnames"
        }
      }
    ],
    "get-integration": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/integrations/${IntegrationId}"
        }
      }
    ],
    "get-integration-response": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/integrations/${IntegrationId}/integrationresponses/${IntegrationResponseId}"
        }
      }
    ],
    "get-integration-responses": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/integrations/${IntegrationId}/integrationresponses"
        }
      }
    ],
    "get-integrations": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/integrations"
        }
      }
    ],
    "get-model": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/models/${ModelId}"
        }
      }
    ],
    "get-model-template": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/models/${ModelId}/template"
        }
      }
    ],
    "get-models": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/models"
        }
      }
    ],
    "get-route": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/routes/${RouteId}"
        }
      }
    ],
    "get-route-response": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/routes/${RouteId}/routeresponses/${RouteResponseId}"
        }
      }
    ],
    "get-route-responses": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/routes/${RouteId}/routeresponses"
        }
      }
    ],
    "get-routes": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/routes"
        }
      }
    ],
    "get-stage": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/stages/${StageName}"
        }
      }
    ],
    "get-stages": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/stages"
        }
      }
    ],
    "get-tags": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/tags/${ResourceArn}"
        }
      }
    ],
    "get-vpc-link": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/vpclinks/${VpcLinkId}"
        }
      }
    ],
    "get-vpc-links": [
      {
        "action": "apigateway:GET",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/vpclinks"
        }
      }
    ],
    "import-api": [
      {
        "action": "apigateway:PUT",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis"
        }
      }
    ],
    "reimport-api": [
      {
        "action": "apigateway:PUT",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "apigateway:POST",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/tags/${ResourceArn}"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "apigateway:DELETE",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/tags/${ResourceArn}"
        }
      }
    ],
    "update-api": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}"
        }
      }
    ],
    "update-api-mapping": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/domainnames/${DomainName}/apimappings/${ApiMappingId}"
        }
      }
    ],
    "update-authorizer": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/authorizers/${AuthorizerId}"
        }
      }
    ],
    "update-deployment": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/deployments/${DeploymentId}"
        }
      }
    ],
    "update-domain-name": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/domainnames/${DomainName}"
        }
      }
    ],
    "update-integration": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/integrations/${IntegrationId}"
        }
      }
    ],
    "update-integration-response": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/integrations/${IntegrationId}/integrationresponses/${IntegrationResponseId}"
        }
      }
    ],
    "update-model": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/models/${ModelId}"
        }
      }
    ],
    "update-route": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/routes/${RouteId}"
        }
      }
    ],
    "update-route-response": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/routes/${RouteId}/routeresponses/${RouteResponseId}"
        }
      }
    ],
    "update-stage": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/stages/${StageName}"
        }
      }
    ],
    "update-vpc-link": [
      {
        "action": "apigateway:PATCH",
        "arn_override": {
          "template": "arn:${Partition}:apigateway:${Region}::/vpclinks/${VpcLinkId}"
        }
      }
    ]
  },
  "appconfig": {
    "create-application": [
      {
        "action": "appconfig:CreateApplication",
        "resource_mappings": {
          "ApplicationId": {
            "template": "*"
          }
        }
      }
    ],
    "create-configuration-profile": [
      {
        "action": "appconfig:CreateConfigurationProfile",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${ApplicationId}"
          },
          "ConfigurationProfileId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RetrievalRoleArn}"
        }
      }
    ],
    "create-deployment-strategy": [
      {
        "action": "appconfig:CreateDeploymentStrategy",
        "resource_mappings": {
          "DeploymentStrategyId": {
            "template": "*"
          }
        }
      }
    ],
    "create-environment": [
      {
        "action": "appconfig:CreateEnvironment",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${ApplicationId}"
          },
          "EnvironmentId": {
            "template": "*"
          }
        }
      }
    ],
    "create-extension": [
      {
        "action": "appconfig:CreateExtension",
        "resource_mappings": {}
      }
    ],
    "create-extension-association": [
      {
        "action": "appconfig:CreateExtensionAssociation",
        "resource_mappings": {}
      }
    ],
    "create-hosted-configuration-version": [
      {
        "action": "appconfig:CreateHostedConfigurationVersion",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${ApplicationId}"
          },
          "ConfigurationProfileId": {
            "template": "${ConfigurationProfileId}"
          },
          "VersionNumber": {
            "template": "*"
          }
        }
      }
    ],
    "delete-application": [
      {
        "action": "appconfig:DeleteApplication",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "delete-configuration-profile": [
      {
        "action": "appconfig:DeleteConfigurationProfile",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${ApplicationId}"
          },
          "ConfigurationProfileId": {
            "template": "${ConfigurationProfileId}"
          }
        }
      }
    ],
    "delete-deployment-strategy": [
      {
        "action": "appconfig:DeleteDeploymentStrategy",
        "resource_mappings": {
          "DeploymentStrategyId": {
            "template": "${DeploymentStrategyId}"
          }
        }
      }
    ],
    "delete-environment": [
      {
        "action": "appconfig:DeleteEnvironment",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${ApplicationId}"
          },
          "EnvironmentId": {
            "template": "${EnvironmentId}"
          }
        }
      }
    ],
    "delete-extension": [
      {
        "action": "appconfig:DeleteExtension",
        "resource_mappings": {
          "ExtensionId": {
            "template": "${ExtensionIdentifier}"
          },
          "ExtensionVersionNumber": {
            "template": "${VersionNumber}"
          }
        }
      }
    ],
    "delete-extension-association": [
      {
        "action": "appconfig:DeleteExtensionAssociation",
        "resource_mappings": {
          "ExtensionAssociationId": {
            "template": "${ExtensionAssociationId}"
          }
        }
      }
    ],
    "delete-hosted-configuration-version": [
      {
        "action": "appconfig:DeleteHostedConfigurationVersion",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${ApplicationId}"
          },
          "ConfigurationProfileId": {
            "template": "${ConfigurationProfileId}"
          },
          "VersionNumber": {
            "template": "${VersionNumber}"
          }
        }
      }
    ],
    "get-application": [
      {
        "action": "appconfig:GetApplication",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "get-configuration": [
      {
        "action": "appconfig:GetConfiguration",
        "resource_mappings": {
          "ApplicationId": {
            "template": "*"
          },
          "ConfigurationProfileId": {
            "template": "*"
          },
          "EnvironmentId": {
            "template": "*"
          }
        }
      }
    ],
    "get-configuration-profile": [
      {
        "action": "appconfig:GetConfigurationProfile",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${ApplicationId}"
          },
          "ConfigurationProfileId": {
            "template": "${ConfigurationProfileId}"
          }
        }
      }
    ],
    "get-deployment": [
      {
        "action": "appconfig:GetDeployment",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${ApplicationId}"
          },
          "EnvironmentId": {
            "template": "${EnvironmentId}"
          },
          "DeploymentNumber": {
            "template": "${DeploymentNumber}"
          }
        }
      }
    ],
    "get-deployment-strategy": [
      {
        "action": "appconfig:GetDeploymentStrategy",
        "resource_mappings": {
          "DeploymentStrategyId": {
            "template": "${DeploymentStrategyId}"
          }
        }
      }
    ],
    "get-environment": [
      {
        "action": "appconfig:GetEnvironment",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${ApplicationId}"
          },
          "EnvironmentId": {
            "template": "${EnvironmentId}"
          }
        }
      }
    ],
    "get-extension": [
      {
        "action": "appconfig:GetExtension",
        "resource_mappings": {
          "ExtensionId": {
            "template": "${ExtensionIdentifier}"
          },
          "ExtensionVersionNumber": {
            "template": "${VersionNumber}"
          }
        }
      }
    ],
    "get-extension-association": [
      {
        "action": "appconfig:GetExtensionAssociation",
        "resource_mappings": {
          "ExtensionAssociationId": {
            "template": "${ExtensionAssociationId}"
          }
        }
      }
    ],
    "get-hosted-configuration-version": [
      {
        "action": "appconfig:GetHostedConfigurationVersion",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${ApplicationId}"
          },
          "ConfigurationProfileId": {
            "template": "${ConfigurationProfileId}"
          },
          "VersionNumber": {
            "template": "${VersionNumber}"
          }
        }
      }
    ],
    "list-applications": [
      {
        "action": "appconfig:ListApplications",
        "resource_mappings": {}
      }
    ],
    "list-configuration-profiles": [
      {
        "action": "appconfig:ListConfigurationProfiles",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "list-deployment-strategies": [
      {
        "action": "appconfig:ListDeploymentStrategies",
        "resource_mappings": {}
      }
    ],
    "list-deployments": [
      {
        "action": "appconfig:ListDeployments",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${ApplicationId}"
          },
          "EnvironmentId": {
            "template": "${EnvironmentId}"
          }
        }
      }
    ],
    "list-environments": [
      {
        "action": "appconfig:ListEnvironments",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "list-extension-associations": [
      {
        "action": "appconfig:ListExtensionAssociations",
        "resource_mappings": {}
      }
    ],
    "list-extensions": [
      {
        "action": "appconfig:ListExtensions",
        "resource_mappings": {}
      }
    ],
    "list-hosted-configuration-versions": [
      {
        "action": "appconfig:ListHostedConfigurationVersions",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${ApplicationId}"
          },
          "ConfigurationProfileId": {
            "template": "${ConfigurationProfileId}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "appconfig:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "%%iftemplatematch%${ResourceArn}%%",
          "configurationprofile": "%%iftemplatematch%${ResourceArn}%%",
          "deployment": "%%iftemplatematch%${ResourceArn}%%",
          "deploymentstrategy": "%%iftemplatematch%${ResourceArn}%%",
          "environment": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "start-deployment": [
      {
        "action": "appconfig:StartDeployment",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${ApplicationId}"
          },
          "ConfigurationProfileId": {
            "template": "${ConfigurationProfileId}"
          },
          "EnvironmentId": {
            "template": "${EnvironmentId}"
          },
          "DeploymentNumber": {
            "template": "*"
          },
          "DeploymentStrategyId": {
            "template": "${DeploymentStrategyId}"
          }
        }
      }
    ],
    "stop-deployment": [
      {
        "action": "appconfig:StopDeployment",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${ApplicationId}"
          },
          "EnvironmentId": {
            "template": "${EnvironmentId}"
          },
          "DeploymentNumber": {
            "template": "${DeploymentNumber}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "appconfig:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "%%iftemplatematch%${ResourceArn}%%",
          "configurationprofile": "%%iftemplatematch%${ResourceArn}%%",
          "deployment": "%%iftemplatematch%${ResourceArn}%%",
          "deploymentstrategy": "%%iftemplatematch%${ResourceArn}%%",
          "environment": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "appconfig:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "%%iftemplatematch%${ResourceArn}%%",
          "configurationprofile": "%%iftemplatematch%${ResourceArn}%%",
          "deployment": "%%iftemplatematch%${ResourceArn}%%",
          "deploymentstrategy": "%%iftemplatematch%${ResourceArn}%%",
          "environment": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-application": [
      {
        "action": "appconfig:UpdateApplication",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "update-configuration-profile": [
      {
        "action": "appconfig:UpdateConfigurationProfile",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${ApplicationId}"
          },
          "ConfigurationProfileId": {
            "template": "${ConfigurationProfileId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RetrievalRoleArn}"
        }
      }
    ],
    "update-deployment-strategy": [
      {
        "action": "appconfig:UpdateDeploymentStrategy",
        "resource_mappings": {
          "DeploymentStrategyId": {
            "template": "${DeploymentStrategyId}"
          }
        }
      }
    ],
    "update-environment": [
      {
        "action": "appconfig:UpdateEnvironment",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${ApplicationId}"
          },
          "EnvironmentId": {
            "template": "${EnvironmentId}"
          }
        }
      }
    ],
    "update-extension": [
      {
        "action": "appconfig:UpdateExtension",
        "resource_mappings": {
          "ExtensionId": {
            "template": "${ExtensionIdentifier}"
          },
          "ExtensionVersionNumber": {
            "template": "${VersionNumber}"
          }
        }
      }
    ],
    "update-extension-association": [
      {
        "action": "appconfig:UpdateExtensionAssociation",
        "resource_mappings": {
          "ExtensionAssociationId": {
            "template": "${ExtensionAssociationId}"
          }
        }
      }
    ],
    "validate-configuration": [
      {
        "action": "appconfig:ValidateConfiguration",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${ApplicationId}"
          },
          "ConfigurationProfileId": {
            "template": "${ConfigurationProfileId}"
          }
        }
      }
    ]
  },
  "appconfigdata": {
    "get-latest-configuration": [
      {
        "action": "appconfig:GetLatestConfiguration",
        "resource_mappings": {
          "ApplicationId": {
            "template": "*"
          },
          "EnvironmentId": {
            "template": "*"
          },
          "ConfigurationProfileId": {
            "template": "*"
          }
        }
      }
    ],
    "start-configuration-session": [
      {
        "action": "appconfig:StartConfigurationSession",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${ApplicationIdentifier}"
          },
          "EnvironmentId": {
            "template": "${EnvironmentIdentifier}"
          },
          "ConfigurationProfileId": {
            "template": "${ConfigurationProfileIdentifier}"
          }
        }
      }
    ]
  },
  "appfabric": {
    "batch-get-user-access-tasks": [
      {
        "action": "appfabric:BatchGetUserAccessTasks",
        "resource_mappings": {
          "AppBundleIdentifier": {
            "template": "${appBundleIdentifier}"
          }
        }
      }
    ],
    "connect-app-authorization": [
      {
        "action": "appfabric:ConnectAppAuthorization",
        "resource_mappings": {
          "AppbundleId": {
            "template": "${appBundleIdentifier}"
          },
          "AppAuthorizationIdentifier": {
            "template": "${appAuthorizationIdentifier}"
          }
        }
      }
    ],
    "create-app-authorization": [
      {
        "action": "appfabric:CreateAppAuthorization",
        "resource_mappings": {
          "AppBundleIdentifier": {
            "template": "${appBundleIdentifier}"
          }
        }
      }
    ],
    "create-app-bundle": [
      {
        "action": "appfabric:CreateAppBundle",
        "resource_mappings": {
          "AppBundleIdentifier": {
            "template": "*"
          }
        }
      }
    ],
    "create-ingestion": [
      {
        "action": "appfabric:CreateIngestion",
        "resource_mappings": {
          "AppBundleIdentifier": {
            "template": "${appBundleIdentifier}"
          }
        }
      }
    ],
    "create-ingestion-destination": [
      {
        "action": "appfabric:CreateIngestionDestination",
        "resource_mappings": {
          "AppBundleIdentifier": {
            "template": "${appBundleIdentifier}"
          },
          "AppbundleId": {
            "template": "${appBundleIdentifier}"
          },
          "IngestionIdentifier": {
            "template": "${ingestionIdentifier}"
          }
        }
      }
    ],
    "delete-app-authorization": [
      {
        "action": "appfabric:DeleteAppAuthorization",
        "resource_mappings": {
          "AppbundleId": {
            "template": "${appBundleIdentifier}"
          },
          "AppAuthorizationIdentifier": {
            "template": "${appAuthorizationIdentifier}"
          }
        }
      }
    ],
    "delete-app-bundle": [
      {
        "action": "appfabric:DeleteAppBundle",
        "resource_mappings": {
          "AppBundleIdentifier": {
            "template": "${appBundleIdentifier}"
          }
        }
      }
    ],
    "delete-ingestion": [
      {
        "action": "appfabric:DeleteIngestion",
        "resource_mappings": {
          "AppbundleId": {
            "template": "${appBundleIdentifier}"
          },
          "IngestionIdentifier": {
            "template": "${ingestionIdentifier}"
          }
        }
      }
    ],
    "delete-ingestion-destination": [
      {
        "action": "appfabric:DeleteIngestionDestination",
        "resource_mappings": {
          "AppbundleId": {
            "template": "${appBundleIdentifier}"
          },
          "IngestionIdentifier": {
            "template": "${ingestionIdentifier}"
          },
          "IngestionDestinationIdentifier": {
            "template": "${ingestionDestinationIdentifier}"
          }
        }
      }
    ],
    "get-app-authorization": [
      {
        "action": "appfabric:GetAppAuthorization",
        "resource_mappings": {
          "AppbundleId": {
            "template": "${appBundleIdentifier}"
          },
          "AppAuthorizationIdentifier": {
            "template": "${appAuthorizationIdentifier}"
          },
          "AppBundleIdentifier": {
            "template": "${appBundleIdentifier}"
          }
        }
      }
    ],
    "get-app-bundle": [
      {
        "action": "appfabric:GetAppBundle",
        "resource_mappings": {
          "AppBundleIdentifier": {
            "template": "${appBundleIdentifier}"
          }
        }
      }
    ],
    "get-ingestion": [
      {
        "action": "appfabric:GetIngestion",
        "resource_mappings": {
          "AppBundleIdentifier": {
            "template": "${appBundleIdentifier}"
          },
          "AppbundleId": {
            "template": "${appBundleIdentifier}"
          },
          "IngestionIdentifier": {
            "template": "${ingestionIdentifier}"
          }
        }
      }
    ],
    "get-ingestion-destination": [
      {
        "action": "appfabric:GetIngestionDestination",
        "resource_mappings": {
          "AppBundleIdentifier": {
            "template": "${appBundleIdentifier}"
          },
          "AppbundleId": {
            "template": "${appBundleIdentifier}"
          },
          "IngestionIdentifier": {
            "template": "${ingestionIdentifier}"
          },
          "IngestionDestinationIdentifier": {
            "template": "${ingestionDestinationIdentifier}"
          }
        }
      }
    ],
    "list-app-authorizations": [
      {
        "action": "appfabric:ListAppAuthorizations",
        "resource_mappings": {
          "AppBundleIdentifier": {
            "template": "${appBundleIdentifier}"
          }
        }
      }
    ],
    "list-app-bundles": [
      {
        "action": "appfabric:ListAppBundles",
        "resource_mappings": {}
      }
    ],
    "list-ingestion-destinations": [
      {
        "action": "appfabric:ListIngestionDestinations",
        "resource_mappings": {
          "AppBundleIdentifier": {
            "template": "${appBundleIdentifier}"
          },
          "AppbundleId": {
            "template": "${appBundleIdentifier}"
          },
          "IngestionIdentifier": {
            "template": "${ingestionIdentifier}"
          }
        }
      }
    ],
    "list-ingestions": [
      {
        "action": "appfabric:ListIngestions",
        "resource_mappings": {
          "AppBundleIdentifier": {
            "template": "${appBundleIdentifier}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "appfabric:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "appauthorization": "%%iftemplatematch%${resourceArn}%%",
          "appbundle": "%%iftemplatematch%${resourceArn}%%",
          "ingestion": "%%iftemplatematch%${resourceArn}%%",
          "ingestiondestination": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "start-ingestion": [
      {
        "action": "appfabric:StartIngestion",
        "resource_mappings": {
          "AppbundleId": {
            "template": "${appBundleIdentifier}"
          },
          "IngestionIdentifier": {
            "template": "${ingestionIdentifier}"
          }
        }
      }
    ],
    "start-user-access-tasks": [
      {
        "action": "appfabric:StartUserAccessTasks",
        "resource_mappings": {
          "AppBundleIdentifier": {
            "template": "${appBundleIdentifier}"
          }
        }
      }
    ],
    "stop-ingestion": [
      {
        "action": "appfabric:StopIngestion",
        "resource_mappings": {
          "AppbundleId": {
            "template": "${appBundleIdentifier}"
          },
          "IngestionIdentifier": {
            "template": "${ingestionIdentifier}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "appfabric:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "appauthorization": "%%iftemplatematch%${resourceArn}%%",
          "appbundle": "%%iftemplatematch%${resourceArn}%%",
          "ingestion": "%%iftemplatematch%${resourceArn}%%",
          "ingestiondestination": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "appfabric:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "appauthorization": "%%iftemplatematch%${resourceArn}%%",
          "appbundle": "%%iftemplatematch%${resourceArn}%%",
          "ingestion": "%%iftemplatematch%${resourceArn}%%",
          "ingestiondestination": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-app-authorization": [
      {
        "action": "appfabric:UpdateAppAuthorization",
        "resource_mappings": {
          "AppbundleId": {
            "template": "${appBundleIdentifier}"
          },
          "AppAuthorizationIdentifier": {
            "template": "${appAuthorizationIdentifier}"
          },
          "AppBundleIdentifier": {
            "template": "${appBundleIdentifier}"
          }
        }
      }
    ],
    "update-ingestion-destination": [
      {
        "action": "appfabric:UpdateIngestionDestination",
        "resource_mappings": {
          "AppBundleIdentifier": {
            "template": "${appBundleIdentifier}"
          },
          "AppbundleId": {
            "template": "${appBundleIdentifier}"
          },
          "IngestionIdentifier": {
            "template": "${ingestionIdentifier}"
          },
          "IngestionDestinationIdentifier": {
            "template": "${ingestionDestinationIdentifier}"
          }
        }
      }
    ]
  },
  "appflow": {
    "cancel-flow-executions": [
      {
        "action": "appflow:CancelFlowExecutions",
        "resource_mappings": {
          "FlowName": {
            "template": "${flowName}"
          }
        }
      }
    ],
    "create-connector-profile": [
      {
        "action": "appflow:CreateConnectorProfile",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${connectorProfileConfig.connectorProfileProperties.Redshift.roleArn}"
        }
      }
    ],
    "create-flow": [
      {
        "action": "appflow:CreateFlow",
        "resource_mappings": {}
      }
    ],
    "delete-connector-profile": [
      {
        "action": "appflow:DeleteConnectorProfile",
        "resource_mappings": {
          "profileName": {
            "template": "${connectorProfileName}"
          }
        }
      }
    ],
    "delete-flow": [
      {
        "action": "appflow:DeleteFlow",
        "resource_mappings": {
          "flowName": {
            "template": "${flowName}"
          }
        }
      }
    ],
    "describe-connector": [
      {
        "action": "appflow:DescribeConnector",
        "resource_mappings": {
          "ConnectorLabel": {
            "template": "${connectorLabel}"
          }
        }
      }
    ],
    "describe-connector-entity": [
      {
        "action": "appflow:DescribeConnectorEntity",
        "resource_mappings": {
          "profileName": {
            "template": "${connectorProfileName}"
          }
        }
      }
    ],
    "describe-connector-profiles": [
      {
        "action": "appflow:DescribeConnectorProfiles",
        "resource_mappings": {}
      }
    ],
    "describe-connectors": [
      {
        "action": "appflow:DescribeConnectors",
        "resource_mappings": {}
      }
    ],
    "describe-flow": [
      {
        "action": "appflow:DescribeFlow",
        "resource_mappings": {}
      }
    ],
    "describe-flow-execution-records": [
      {
        "action": "appflow:DescribeFlowExecutionRecords",
        "resource_mappings": {
          "flowName": {
            "template": "${flowName}"
          }
        }
      }
    ],
    "list-connector-entities": [
      {
        "action": "appflow:ListConnectorEntities",
        "resource_mappings": {
          "profileName": {
            "template": "${connectorProfileName}"
          }
        }
      }
    ],
    "list-connectors": [
      {
        "action": "appflow:ListConnectors",
        "resource_mappings": {
          "ConnectorLabel": {
            "template": "*"
          }
        }
      }
    ],
    "list-flows": [
      {
        "action": "appflow:ListFlows",
        "resource_mappings": {
          "flowName": {
            "template": "*"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "appflow:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "flow": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "register-connector": [
      {
        "action": "appflow:RegisterConnector",
        "resource_mappings": {}
      }
    ],
    "reset-connector-metadata-cache": [
      {
        "action": "appflow:ResetConnectorMetadataCache",
        "resource_mappings": {
          "ProfileName": {
            "template": "${connectorProfileName}"
          }
        }
      }
    ],
    "start-flow": [
      {
        "action": "appflow:StartFlow",
        "resource_mappings": {
          "flowName": {
            "template": "${flowName}"
          }
        }
      }
    ],
    "stop-flow": [
      {
        "action": "appflow:StopFlow",
        "resource_mappings": {
          "flowName": {
            "template": "${flowName}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "appflow:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "flow": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "unregister-connector": [
      {
        "action": "appflow:UnRegisterConnector",
        "resource_mappings": {
          "ConnectorLabel": {
            "template": "${connectorLabel}"
          }
        }
      }
    ],
    "untag-resource": [
      {
        "action": "appflow:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "flow": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-connector-profile": [
      {
        "action": "appflow:UpdateConnectorProfile",
        "resource_mappings": {
          "flowName": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${connectorProfileConfig.connectorProfileProperties.Redshift.roleArn}"
        }
      }
    ],
    "update-connector-registration": [
      {
        "action": "appflow:UpdateConnectorRegistration",
        "resource_mappings": {
          "ConnectorLabel": {
            "template": "${connectorLabel}"
          }
        }
      }
    ],
    "update-flow": [
      {
        "action": "appflow:UpdateFlow",
        "resource_mappings": {
          "flowName": {
            "template": "${flowName}"
          }
        }
      }
    ]
  },
  "appintegrations": {
    "create-application": [
      {
        "note": "NotFound",
        "action": "AppIntegrations:CreateApplication",
        "resource_mappings": {}
      }
    ],
    "create-data-integration": [
      {
        "action": "app-integrations:CreateDataIntegration",
        "resource_mappings": {
          "DataIntegrationId": {
            "template": "*"
          }
        }
      }
    ],
    "create-event-integration": [
      {
        "action": "app-integrations:CreateEventIntegration",
        "resource_mappings": {
          "EventIntegrationName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-data-integration": [
      {
        "action": "app-integrations:DeleteDataIntegration",
        "resource_mappings": {
          "DataIntegrationId": {
            "template": "${DataIntegrationIdentifier}"
          }
        }
      }
    ],
    "delete-event-integration": [
      {
        "action": "app-integrations:DeleteEventIntegration",
        "resource_mappings": {
          "EventIntegrationName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-application": [
      {
        "note": "NotFound",
        "action": "AppIntegrations:GetApplication",
        "resource_mappings": {}
      }
    ],
    "get-data-integration": [
      {
        "action": "app-integrations:GetDataIntegration",
        "resource_mappings": {
          "DataIntegrationId": {
            "template": "${Identifier}"
          }
        }
      }
    ],
    "get-event-integration": [
      {
        "action": "app-integrations:GetEventIntegration",
        "resource_mappings": {
          "EventIntegrationName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "list-applications": [
      {
        "note": "NotFound",
        "action": "AppIntegrations:ListApplications",
        "resource_mappings": {}
      }
    ],
    "list-data-integration-associations": [
      {
        "action": "app-integrations:ListDataIntegrationAssociations",
        "resource_mappings": {}
      }
    ],
    "list-data-integrations": [
      {
        "action": "app-integrations:ListDataIntegrations",
        "resource_mappings": {}
      }
    ],
    "list-event-integration-associations": [
      {
        "action": "app-integrations:ListEventIntegrationAssociations",
        "resource_mappings": {}
      }
    ],
    "list-event-integrations": [
      {
        "action": "app-integrations:ListEventIntegrations",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "app-integrations:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "event-integration": "%%iftemplatematch%${resourceArn}%%",
          "event-integration-association": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "app-integrations:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "event-integration": "%%iftemplatematch%${resourceArn}%%",
          "event-integration-association": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "app-integrations:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "event-integration": "%%iftemplatematch%${resourceArn}%%",
          "event-integration-association": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-application": [
      {
        "note": "NotFound",
        "action": "AppIntegrations:UpdateApplication",
        "resource_mappings": {}
      }
    ],
    "update-data-integration": [
      {
        "action": "app-integrations:UpdateDataIntegration",
        "resource_mappings": {
          "DataIntegrationId": {
            "template": "${Identifier}"
          }
        }
      }
    ],
    "update-event-integration": [
      {
        "action": "app-integrations:UpdateEventIntegration",
        "resource_mappings": {
          "EventIntegrationName": {
            "template": "${Name}"
          }
        }
      }
    ]
  },
  "application-autoscaling": {
    "delete-scaling-policy": [
      {
        "action": "application-autoscaling:DeleteScalingPolicy",
        "resource_mappings": {}
      }
    ],
    "delete-scheduled-action": [
      {
        "action": "application-autoscaling:DeleteScheduledAction",
        "resource_mappings": {}
      }
    ],
    "deregister-scalable-target": [
      {
        "action": "application-autoscaling:DeregisterScalableTarget",
        "resource_mappings": {}
      }
    ],
    "describe-scalable-targets": [
      {
        "action": "application-autoscaling:DescribeScalableTargets",
        "resource_mappings": {}
      }
    ],
    "describe-scaling-activities": [
      {
        "action": "application-autoscaling:DescribeScalingActivities",
        "resource_mappings": {}
      }
    ],
    "describe-scaling-policies": [
      {
        "action": "application-autoscaling:DescribeScalingPolicies",
        "resource_mappings": {}
      }
    ],
    "describe-scheduled-actions": [
      {
        "action": "application-autoscaling:DescribeScheduledActions",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "application-autoscaling:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ScalableTarget": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "put-scaling-policy": [
      {
        "action": "application-autoscaling:PutScalingPolicy",
        "resource_mappings": {}
      }
    ],
    "put-scheduled-action": [
      {
        "action": "application-autoscaling:PutScheduledAction",
        "resource_mappings": {}
      }
    ],
    "register-scalable-target": [
      {
        "action": "application-autoscaling:RegisterScalableTarget",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleARN}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "application-autoscaling:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ScalableTarget": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "application-autoscaling:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ScalableTarget": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ]
  },
  "application-insights": {
    "add-workload": [
      {
        "action": "applicationinsights:AddWorkload",
        "resource_mappings": {}
      }
    ],
    "create-application": [
      {
        "action": "applicationinsights:CreateApplication",
        "resource_mappings": {}
      }
    ],
    "create-component": [
      {
        "action": "applicationinsights:CreateComponent",
        "resource_mappings": {}
      }
    ],
    "create-log-pattern": [
      {
        "action": "applicationinsights:CreateLogPattern",
        "resource_mappings": {}
      }
    ],
    "delete-application": [
      {
        "action": "applicationinsights:DeleteApplication",
        "resource_mappings": {}
      }
    ],
    "delete-component": [
      {
        "action": "applicationinsights:DeleteComponent",
        "resource_mappings": {}
      }
    ],
    "delete-log-pattern": [
      {
        "action": "applicationinsights:DeleteLogPattern",
        "resource_mappings": {}
      }
    ],
    "describe-application": [
      {
        "action": "applicationinsights:DescribeApplication",
        "resource_mappings": {}
      }
    ],
    "describe-component": [
      {
        "action": "applicationinsights:DescribeComponent",
        "resource_mappings": {}
      }
    ],
    "describe-component-configuration": [
      {
        "action": "applicationinsights:DescribeComponentConfiguration",
        "resource_mappings": {}
      }
    ],
    "describe-component-configuration-recommendation": [
      {
        "action": "applicationinsights:DescribeComponentConfigurationRecommendation",
        "resource_mappings": {}
      }
    ],
    "describe-log-pattern": [
      {
        "action": "applicationinsights:DescribeLogPattern",
        "resource_mappings": {}
      }
    ],
    "describe-observation": [
      {
        "action": "applicationinsights:DescribeObservation",
        "resource_mappings": {}
      }
    ],
    "describe-problem": [
      {
        "action": "applicationinsights:DescribeProblem",
        "resource_mappings": {}
      }
    ],
    "describe-problem-observations": [
      {
        "action": "applicationinsights:DescribeProblemObservations",
        "resource_mappings": {}
      }
    ],
    "describe-workload": [
      {
        "action": "applicationinsights:DescribeWorkload",
        "resource_mappings": {}
      }
    ],
    "list-applications": [
      {
        "action": "applicationinsights:ListApplications",
        "resource_mappings": {}
      }
    ],
    "list-components": [
      {
        "action": "applicationinsights:ListComponents",
        "resource_mappings": {}
      }
    ],
    "list-configuration-history": [
      {
        "action": "applicationinsights:ListConfigurationHistory",
        "resource_mappings": {}
      }
    ],
    "list-log-pattern-sets": [
      {
        "action": "applicationinsights:ListLogPatternSets",
        "resource_mappings": {}
      }
    ],
    "list-log-patterns": [
      {
        "action": "applicationinsights:ListLogPatterns",
        "resource_mappings": {}
      }
    ],
    "list-problems": [
      {
        "action": "applicationinsights:ListProblems",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "applicationinsights:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "list-workloads": [
      {
        "action": "applicationinsights:ListWorkloads",
        "resource_mappings": {}
      }
    ],
    "remove-workload": [
      {
        "action": "applicationinsights:RemoveWorkload",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "applicationinsights:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "applicationinsights:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-application": [
      {
        "action": "applicationinsights:UpdateApplication",
        "resource_mappings": {}
      }
    ],
    "update-component": [
      {
        "action": "applicationinsights:UpdateComponent",
        "resource_mappings": {}
      }
    ],
    "update-component-configuration": [
      {
        "action": "applicationinsights:UpdateComponentConfiguration",
        "resource_mappings": {}
      }
    ],
    "update-log-pattern": [
      {
        "action": "applicationinsights:UpdateLogPattern",
        "resource_mappings": {}
      }
    ],
    "update-problem": [
      {
        "action": "applicationinsights:UpdateProblem",
        "resource_mappings": {}
      }
    ],
    "update-workload": [
      {
        "action": "applicationinsights:UpdateWorkload",
        "resource_mappings": {}
      }
    ]
  },
  "applicationcostprofiler": {
    "delete-report-definition": [
      {
        "action": "application-cost-profiler:DeleteReportDefinition",
        "resource_mappings": {}
      }
    ],
    "get-report-definition": [
      {
        "action": "application-cost-profiler:GetReportDefinition",
        "resource_mappings": {}
      }
    ],
    "import-application-usage": [
      {
        "action": "application-cost-profiler:ImportApplicationUsage",
        "resource_mappings": {}
      }
    ],
    "list-report-definitions": [
      {
        "action": "application-cost-profiler:ListReportDefinitions",
        "resource_mappings": {}
      }
    ],
    "put-report-definition": [
      {
        "action": "application-cost-profiler:PutReportDefinition",
        "resource_mappings": {}
      }
    ],
    "update-report-definition": [
      {
        "action": "application-cost-profiler:UpdateReportDefinition",
        "resource_mappings": {}
      }
    ]
  },
  "appmesh": {
    "create-gateway-route": [
      {
        "action": "appmesh:CreateGatewayRoute",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          },
          "VirtualGatewayName": {
            "template": "${virtualGatewayName}"
          },
          "GatewayRouteName": {
            "template": "${gatewayRouteName}"
          },
          "VirtualServiceName": {
            "template": "%%many%${spec.grpcRoute.action.target.virtualService.virtualServiceName}%${spec.http2Route.action.target.virtualService.virtualServiceName}%${spec.httpRoute.action.target.virtualService.virtualServiceName}%%"
          }
        }
      }
    ],
    "create-mesh": [
      {
        "action": "appmesh:CreateMesh",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          }
        }
      }
    ],
    "create-route": [
      {
        "action": "appmesh:CreateRoute",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          },
          "VirtualRouterName": {
            "template": "${virtualRouterName}"
          },
          "RouteName": {
            "template": "${routeName}"
          },
          "VirtualNodeName": {
            "template": "%%many%${spec.grpcRoute.action.weightedTargets[].virtualNode}%${spec.http2Route.action.weightedTargets[].virtualNode}%${spec.httpRoute.action.weightedTargets[].virtualNode}%${spec.tcpRoute.action.weightedTargets[].virtualNode}%%"
          }
        }
      }
    ],
    "create-virtual-gateway": [
      {
        "action": "appmesh:CreateVirtualGateway",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          },
          "VirtualGatewayName": {
            "template": "${virtualGatewayName}"
          }
        }
      }
    ],
    "create-virtual-node": [
      {
        "action": "appmesh:CreateVirtualNode",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          },
          "VirtualNodeName": {
            "template": "${virtualNodeName}"
          },
          "VirtualServiceName": {
            "template": "${spec.backends[].virtualService.virtualServiceName}"
          }
        }
      }
    ],
    "create-virtual-router": [
      {
        "action": "appmesh:CreateVirtualRouter",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          },
          "VirtualRouterName": {
            "template": "${virtualRouterName}"
          }
        }
      }
    ],
    "create-virtual-service": [
      {
        "action": "appmesh:CreateVirtualService",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          },
          "VirtualServiceName": {
            "template": "${virtualServiceName}"
          },
          "VirtualNodeName": {
            "template": "${spec.provider.virtualNode.virtualNodeName}"
          },
          "VirtualRouterName": {
            "template": "${spec.provider.virtualRouter.virtualRouterName}"
          }
        }
      }
    ],
    "delete-gateway-route": [
      {
        "action": "appmesh:DeleteGatewayRoute",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          },
          "VirtualGatewayName": {
            "template": "${virtualGatewayName}"
          },
          "GatewayRouteName": {
            "template": "${gatewayRouteName}"
          }
        }
      }
    ],
    "delete-mesh": [
      {
        "action": "appmesh:DeleteMesh",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          }
        }
      }
    ],
    "delete-route": [
      {
        "action": "appmesh:DeleteRoute",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          },
          "VirtualRouterName": {
            "template": "${virtualRouterName}"
          },
          "RouteName": {
            "template": "${routeName}"
          }
        }
      }
    ],
    "delete-virtual-gateway": [
      {
        "action": "appmesh:DeleteVirtualGateway",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          },
          "VirtualGatewayName": {
            "template": "${virtualGatewayName}"
          }
        }
      }
    ],
    "delete-virtual-node": [
      {
        "action": "appmesh:DeleteVirtualNode",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          },
          "VirtualNodeName": {
            "template": "${virtualNodeName}"
          }
        }
      }
    ],
    "delete-virtual-router": [
      {
        "action": "appmesh:DeleteVirtualRouter",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          },
          "VirtualRouterName": {
            "template": "${virtualRouterName}"
          }
        }
      }
    ],
    "delete-virtual-service": [
      {
        "action": "appmesh:DeleteVirtualService",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          },
          "VirtualServiceName": {
            "template": "${virtualServiceName}"
          }
        }
      }
    ],
    "describe-gateway-route": [
      {
        "action": "appmesh:DescribeGatewayRoute",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          },
          "VirtualGatewayName": {
            "template": "${virtualGatewayName}"
          },
          "GatewayRouteName": {
            "template": "${gatewayRouteName}"
          }
        }
      }
    ],
    "describe-mesh": [
      {
        "action": "appmesh:DescribeMesh",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          }
        }
      }
    ],
    "describe-route": [
      {
        "action": "appmesh:DescribeRoute",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          },
          "VirtualRouterName": {
            "template": "${virtualRouterName}"
          },
          "RouteName": {
            "template": "${routeName}"
          }
        }
      }
    ],
    "describe-virtual-gateway": [
      {
        "action": "appmesh:DescribeVirtualGateway",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          },
          "VirtualGatewayName": {
            "template": "${virtualGatewayName}"
          }
        }
      }
    ],
    "describe-virtual-node": [
      {
        "action": "appmesh:DescribeVirtualNode",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          },
          "VirtualNodeName": {
            "template": "${virtualNodeName}"
          }
        }
      }
    ],
    "describe-virtual-router": [
      {
        "action": "appmesh:DescribeVirtualRouter",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          },
          "VirtualRouterName": {
            "template": "${virtualRouterName}"
          }
        }
      }
    ],
    "describe-virtual-service": [
      {
        "action": "appmesh:DescribeVirtualService",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          },
          "VirtualServiceName": {
            "template": "${virtualServiceName}"
          }
        }
      }
    ],
    "list-gateway-routes": [
      {
        "action": "appmesh:ListGatewayRoutes",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          },
          "VirtualGatewayName": {
            "template": "${virtualGatewayName}"
          }
        }
      }
    ],
    "list-meshes": [
      {
        "action": "appmesh:ListMeshes",
        "resource_mappings": {}
      }
    ],
    "list-routes": [
      {
        "action": "appmesh:ListRoutes",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          },
          "VirtualRouterName": {
            "template": "${virtualRouterName}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "appmesh:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gatewayRoute": "%%iftemplatematch%${resourceArn}%%",
          "mesh": "%%iftemplatematch%${resourceArn}%%",
          "route": "%%iftemplatematch%${resourceArn}%%",
          "virtualGateway": "%%iftemplatematch%${resourceArn}%%",
          "virtualNode": "%%iftemplatematch%${resourceArn}%%",
          "virtualRouter": "%%iftemplatematch%${resourceArn}%%",
          "virtualService": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "list-virtual-gateways": [
      {
        "action": "appmesh:ListVirtualGateways",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          }
        }
      }
    ],
    "list-virtual-nodes": [
      {
        "action": "appmesh:ListVirtualNodes",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          }
        }
      }
    ],
    "list-virtual-routers": [
      {
        "action": "appmesh:ListVirtualRouters",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          }
        }
      }
    ],
    "list-virtual-services": [
      {
        "action": "appmesh:ListVirtualServices",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "appmesh:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gatewayRoute": "%%iftemplatematch%${resourceArn}%%",
          "mesh": "%%iftemplatematch%${resourceArn}%%",
          "route": "%%iftemplatematch%${resourceArn}%%",
          "virtualGateway": "%%iftemplatematch%${resourceArn}%%",
          "virtualNode": "%%iftemplatematch%${resourceArn}%%",
          "virtualRouter": "%%iftemplatematch%${resourceArn}%%",
          "virtualService": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "appmesh:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gatewayRoute": "%%iftemplatematch%${resourceArn}%%",
          "mesh": "%%iftemplatematch%${resourceArn}%%",
          "route": "%%iftemplatematch%${resourceArn}%%",
          "virtualGateway": "%%iftemplatematch%${resourceArn}%%",
          "virtualNode": "%%iftemplatematch%${resourceArn}%%",
          "virtualRouter": "%%iftemplatematch%${resourceArn}%%",
          "virtualService": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-gateway-route": [
      {
        "action": "appmesh:UpdateGatewayRoute",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          },
          "VirtualGatewayName": {
            "template": "${virtualGatewayName}"
          },
          "GatewayRouteName": {
            "template": "${gatewayRouteName}"
          },
          "VirtualServiceName": {
            "template": "%%many%${spec.grpcRoute.action.target.virtualService.virtualServiceName}%${spec.http2Route.action.target.virtualService.virtualServiceName}%${spec.httpRoute.action.target.virtualService.virtualServiceName}%%"
          }
        }
      }
    ],
    "update-mesh": [
      {
        "action": "appmesh:UpdateMesh",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          }
        }
      }
    ],
    "update-route": [
      {
        "action": "appmesh:UpdateRoute",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          },
          "VirtualRouterName": {
            "template": "${virtualRouterName}"
          },
          "RouteName": {
            "template": "${routeName}"
          },
          "VirtualNodeName": {
            "template": "%%many%${spec.grpcRoute.action.weightedTargets[].virtualNode}%${spec.http2Route.action.weightedTargets[].virtualNode}%${spec.httpRoute.action.weightedTargets[].virtualNode}%${spec.tcpRoute.action.weightedTargets[].virtualNode}%%"
          }
        }
      }
    ],
    "update-virtual-gateway": [
      {
        "action": "appmesh:UpdateVirtualGateway",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          },
          "VirtualGatewayName": {
            "template": "${virtualGatewayName}"
          }
        }
      }
    ],
    "update-virtual-node": [
      {
        "action": "appmesh:UpdateVirtualNode",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          },
          "VirtualNodeName": {
            "template": "${virtualNodeName}"
          }
        }
      }
    ],
    "update-virtual-router": [
      {
        "action": "appmesh:UpdateVirtualRouter",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          },
          "VirtualRouterName": {
            "template": "${virtualRouterName}"
          }
        }
      }
    ],
    "update-virtual-service": [
      {
        "action": "appmesh:UpdateVirtualService",
        "resource_mappings": {
          "MeshName": {
            "template": "${meshName}"
          },
          "VirtualNodeName": {
            "template": "${spec.provider.virtualNode.virtualNodeName}"
          },
          "VirtualRouterName": {
            "template": "${spec.provider.virtualRouter.virtualRouterName}"
          }
        }
      }
    ]
  },
  "apprunner": {
    "associate-custom-domain": [
      {
        "action": "apprunner:AssociateCustomDomain",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "service": "${ServiceArn}"
        }
      }
    ],
    "create-auto-scaling-configuration": [
      {
        "action": "apprunner:CreateAutoScalingConfiguration",
        "resource_mappings": {
          "AutoscalingConfigurationName": {
            "template": "${AutoScalingConfigurationName}"
          },
          "AutoscalingConfigurationVersion": {
            "template": "*"
          },
          "AutoscalingConfigurationId": {
            "template": "*"
          }
        }
      }
    ],
    "create-connection": [
      {
        "action": "apprunner:CreateConnection",
        "resource_mappings": {
          "ConnectionName": {
            "template": "${ConnectionName}"
          },
          "ConnectionId": {
            "template": "*"
          }
        }
      }
    ],
    "create-observability-configuration": [
      {
        "action": "apprunner:CreateObservabilityConfiguration",
        "resource_mappings": {
          "ObservabilityConfigurationName": {
            "template": "${ObservabilityConfigurationName}"
          },
          "ObservabilityConfigurationVersion": {
            "template": "*"
          },
          "ObservabilityConfigurationId": {
            "template": "*"
          }
        }
      }
    ],
    "create-service": [
      {
        "action": "apprunner:CreateService",
        "resource_mappings": {
          "ServiceName": {
            "template": "${ServiceName}"
          },
          "ServiceId": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "autoscalingconfiguration": "${AutoScalingConfigurationArn}",
          "connection": "${SourceConfiguration.AuthenticationConfiguration.ConnectionArn}"
        }
      }
    ],
    "create-vpc-connector": [
      {
        "action": "apprunner:CreateVpcConnector",
        "resource_mappings": {
          "VpcConnectorName": {
            "template": "${VpcConnectorName}"
          },
          "VpcConnectorVersion": {
            "template": "*"
          },
          "VpcConnectorId": {
            "template": "*"
          }
        }
      }
    ],
    "create-vpc-ingress-connection": [
      {
        "action": "apprunner:CreateVpcIngressConnection",
        "resource_mappings": {
          "VpcIngressConnectionName": {
            "template": "${VpcIngressConnectionName}"
          },
          "VpcIngressConnectionId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-auto-scaling-configuration": [
      {
        "action": "apprunner:DeleteAutoScalingConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "autoscalingconfiguration": "${AutoScalingConfigurationArn}"
        }
      }
    ],
    "delete-connection": [
      {
        "action": "apprunner:DeleteConnection",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "connection": "${ConnectionArn}"
        }
      }
    ],
    "delete-observability-configuration": [
      {
        "action": "apprunner:DeleteObservabilityConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "observabilityconfiguration": "${ObservabilityConfigurationArn}"
        }
      }
    ],
    "delete-service": [
      {
        "action": "apprunner:DeleteService",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "service": "${ServiceArn}"
        }
      }
    ],
    "delete-vpc-connector": [
      {
        "action": "apprunner:DeleteVpcConnector",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "vpcconnector": "${VpcConnectorArn}"
        }
      }
    ],
    "delete-vpc-ingress-connection": [
      {
        "action": "apprunner:DeleteVpcIngressConnection",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "vpcingressconnection": "${VpcIngressConnectionArn}"
        }
      }
    ],
    "describe-auto-scaling-configuration": [
      {
        "action": "apprunner:DescribeAutoScalingConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "autoscalingconfiguration": "${AutoScalingConfigurationArn}"
        }
      }
    ],
    "describe-custom-domains": [
      {
        "action": "apprunner:DescribeCustomDomains",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "service": "${ServiceArn}"
        }
      }
    ],
    "describe-observability-configuration": [
      {
        "action": "apprunner:DescribeObservabilityConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "observabilityconfiguration": "${ObservabilityConfigurationArn}"
        }
      }
    ],
    "describe-service": [
      {
        "action": "apprunner:DescribeService",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "service": "${ServiceArn}"
        }
      }
    ],
    "describe-vpc-connector": [
      {
        "action": "apprunner:DescribeVpcConnector",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "vpcconnector": "${VpcConnectorArn}"
        }
      }
    ],
    "describe-vpc-ingress-connection": [
      {
        "action": "apprunner:DescribeVpcIngressConnection",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "vpcingressconnection": "${VpcIngressConnectionArn}"
        }
      }
    ],
    "disassociate-custom-domain": [
      {
        "action": "apprunner:DisassociateCustomDomain",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "service": "${ServiceArn}"
        }
      }
    ],
    "list-auto-scaling-configurations": [
      {
        "action": "apprunner:ListAutoScalingConfigurations",
        "resource_mappings": {}
      }
    ],
    "list-connections": [
      {
        "action": "apprunner:ListConnections",
        "resource_mappings": {}
      }
    ],
    "list-observability-configurations": [
      {
        "action": "apprunner:ListObservabilityConfigurations",
        "resource_mappings": {}
      }
    ],
    "list-operations": [
      {
        "action": "apprunner:ListOperations",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "service": "${ServiceArn}"
        }
      }
    ],
    "list-services": [
      {
        "action": "apprunner:ListServices",
        "resource_mappings": {}
      }
    ],
    "list-services-for-auto-scaling-configuration": [
      {
        "note": "NotFound",
        "action": "AppRunner:ListServicesForAutoScalingConfiguration",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "apprunner:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "autoscalingconfiguration": "%%iftemplatematch%${ResourceArn}%%",
          "connection": "%%iftemplatematch%${ResourceArn}%%",
          "service": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "list-vpc-connectors": [
      {
        "action": "apprunner:ListVpcConnectors",
        "resource_mappings": {}
      }
    ],
    "list-vpc-ingress-connections": [
      {
        "action": "apprunner:ListVpcIngressConnections",
        "resource_mappings": {}
      }
    ],
    "pause-service": [
      {
        "action": "apprunner:PauseService",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "service": "${ServiceArn}"
        }
      }
    ],
    "resume-service": [
      {
        "action": "apprunner:ResumeService",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "service": "${ServiceArn}"
        }
      }
    ],
    "start-deployment": [
      {
        "action": "apprunner:StartDeployment",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "service": "${ServiceArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "apprunner:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "autoscalingconfiguration": "%%iftemplatematch%${ResourceArn}%%",
          "connection": "%%iftemplatematch%${ResourceArn}%%",
          "service": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "apprunner:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "autoscalingconfiguration": "%%iftemplatematch%${ResourceArn}%%",
          "connection": "%%iftemplatematch%${ResourceArn}%%",
          "service": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-default-auto-scaling-configuration": [
      {
        "note": "NotFound",
        "action": "AppRunner:UpdateDefaultAutoScalingConfiguration",
        "resource_mappings": {}
      }
    ],
    "update-service": [
      {
        "action": "apprunner:UpdateService",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "service": "${ServiceArn}",
          "autoscalingconfiguration": "${AutoScalingConfigurationArn}",
          "connection": "${SourceConfiguration.AuthenticationConfiguration.ConnectionArn}"
        }
      }
    ],
    "update-vpc-ingress-connection": [
      {
        "action": "apprunner:UpdateVpcIngressConnection",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "vpcingressconnection": "${VpcIngressConnectionArn}"
        }
      }
    ]
  },
  "appstream": {
    "associate-app-block-builder-app-block": [
      {
        "action": "appstream:AssociateAppBlockBuilderAppBlock",
        "resource_mappings": {
          "AppBlockBuilderName": {
            "template": "${AppBlockBuilderName}"
          }
        },
        "resourcearn_mappings": {
          "app-block": "${AppBlockArn}"
        }
      }
    ],
    "associate-application-fleet": [
      {
        "action": "appstream:AssociateApplicationFleet",
        "resource_mappings": {
          "FleetName": {
            "template": "${FleetName}"
          }
        },
        "resourcearn_mappings": {
          "application": "${ApplicationArn}"
        }
      }
    ],
    "associate-application-to-entitlement": [
      {
        "action": "appstream:AssociateApplicationToEntitlement",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          }
        }
      }
    ],
    "associate-fleet": [
      {
        "action": "appstream:AssociateFleet",
        "resource_mappings": {
          "FleetName": {
            "template": "${FleetName}"
          },
          "StackName": {
            "template": "${StackName}"
          }
        }
      }
    ],
    "batch-associate-user-stack": [
      {
        "action": "appstream:BatchAssociateUserStack",
        "resource_mappings": {
          "StackName": {
            "template": "${UserStackAssociations[].StackName}"
          }
        }
      }
    ],
    "batch-disassociate-user-stack": [
      {
        "action": "appstream:BatchDisassociateUserStack",
        "resource_mappings": {
          "StackName": {
            "template": "${UserStackAssociations[].StackName}"
          }
        }
      }
    ],
    "copy-image": [
      {
        "action": "appstream:CopyImage",
        "resource_mappings": {
          "ImageName": {
            "template": "%%many%${SourceImageName}%${DestinationImageName}%%"
          }
        }
      }
    ],
    "create-app-block": [
      {
        "action": "appstream:CreateAppBlock",
        "resource_mappings": {
          "AppBlockName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "create-app-block-builder": [
      {
        "action": "appstream:CreateAppBlockBuilder",
        "resource_mappings": {
          "AppBlockBuilderName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "create-app-block-builder-streaming-url": [
      {
        "action": "appstream:CreateAppBlockBuilderStreamingURL",
        "resource_mappings": {
          "AppBlockBuilderName": {
            "template": "${AppBlockBuilderName}"
          }
        }
      }
    ],
    "create-application": [
      {
        "action": "appstream:CreateApplication",
        "resource_mappings": {
          "AppBlockName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "create-directory-config": [
      {
        "action": "appstream:CreateDirectoryConfig",
        "resource_mappings": {}
      }
    ],
    "create-entitlement": [
      {
        "action": "appstream:CreateEntitlement",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          }
        }
      }
    ],
    "create-fleet": [
      {
        "action": "appstream:CreateFleet",
        "resource_mappings": {
          "FleetName": {
            "template": "${Name}"
          },
          "ImageName": {
            "template": "${ImageName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${IamRoleArn}"
        }
      }
    ],
    "create-image-builder": [
      {
        "action": "appstream:CreateImageBuilder",
        "resource_mappings": {
          "ImageName": {
            "template": "${ImageName}"
          },
          "ImageBuilderName": {
            "template": "${Name}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${IamRoleArn}"
        }
      }
    ],
    "create-image-builder-streaming-url": [
      {
        "action": "appstream:CreateImageBuilderStreamingURL",
        "resource_mappings": {
          "ImageBuilderName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "create-stack": [
      {
        "action": "appstream:CreateStack",
        "resource_mappings": {
          "StackName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "create-streaming-url": [
      {
        "action": "appstream:CreateStreamingURL",
        "resource_mappings": {
          "FleetName": {
            "template": "${FleetName}"
          },
          "StackName": {
            "template": "${StackName}"
          }
        }
      }
    ],
    "create-updated-image": [
      {
        "action": "appstream:CreateUpdatedImage",
        "resource_mappings": {
          "ImageName": {
            "template": "%%many%${existingImageName}%${newImageName}%%"
          }
        }
      }
    ],
    "create-usage-report-subscription": [
      {
        "action": "appstream:CreateUsageReportSubscription",
        "resource_mappings": {}
      }
    ],
    "create-user": [
      {
        "action": "appstream:CreateUser",
        "resource_mappings": {}
      }
    ],
    "delete-app-block": [
      {
        "action": "appstream:DeleteAppBlock",
        "resource_mappings": {
          "AppBlockName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-app-block-builder": [
      {
        "action": "appstream:DeleteAppBlockBuilder",
        "resource_mappings": {
          "AppBlockBuilderName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-application": [
      {
        "action": "appstream:DeleteApplication",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-directory-config": [
      {
        "action": "appstream:DeleteDirectoryConfig",
        "resource_mappings": {}
      }
    ],
    "delete-entitlement": [
      {
        "action": "appstream:DeleteEntitlement",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          }
        }
      }
    ],
    "delete-fleet": [
      {
        "action": "appstream:DeleteFleet",
        "resource_mappings": {
          "FleetName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-image": [
      {
        "action": "appstream:DeleteImage",
        "resource_mappings": {
          "ImageName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-image-builder": [
      {
        "action": "appstream:DeleteImageBuilder",
        "resource_mappings": {
          "ImageBuilderName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-image-permissions": [
      {
        "action": "appstream:DeleteImagePermissions",
        "resource_mappings": {
          "ImageName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-stack": [
      {
        "action": "appstream:DeleteStack",
        "resource_mappings": {
          "StackName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-usage-report-subscription": [
      {
        "action": "appstream:DeleteUsageReportSubscription",
        "resource_mappings": {}
      }
    ],
    "delete-user": [
      {
        "action": "appstream:DeleteUser",
        "resource_mappings": {}
      }
    ],
    "describe-app-block-builder-app-block-associations": [
      {
        "action": "appstream:DescribeAppBlockBuilderAppBlockAssociations",
        "resource_mappings": {
          "AppBlockBuilderName": {
            "template": "${AppBlockBuilderName}"
          }
        },
        "resourcearn_mappings": {
          "app-block": "${AppBlockArn}"
        }
      }
    ],
    "describe-app-block-builders": [
      {
        "action": "appstream:DescribeAppBlockBuilders",
        "resource_mappings": {
          "AppBlockBuilderName": {
            "template": "${Names[]}"
          }
        }
      }
    ],
    "describe-app-blocks": [
      {
        "action": "appstream:DescribeAppBlocks",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-block": "${Arns[]}"
        }
      }
    ],
    "describe-application-fleet-associations": [
      {
        "action": "appstream:DescribeApplicationFleetAssociations",
        "resource_mappings": {
          "FleetName": {
            "template": "${FleetName}"
          }
        },
        "resourcearn_mappings": {
          "application": "${ApplicationArn}"
        }
      }
    ],
    "describe-applications": [
      {
        "action": "appstream:DescribeApplications",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${Arns[]}"
        }
      }
    ],
    "describe-directory-configs": [
      {
        "action": "appstream:DescribeDirectoryConfigs",
        "resource_mappings": {}
      }
    ],
    "describe-entitlements": [
      {
        "action": "appstream:DescribeEntitlements",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          }
        }
      }
    ],
    "describe-fleets": [
      {
        "action": "appstream:DescribeFleets",
        "resource_mappings": {
          "FleetName": {
            "template": "${Names[]}"
          }
        }
      }
    ],
    "describe-image-builders": [
      {
        "action": "appstream:DescribeImageBuilders",
        "resource_mappings": {
          "ImageBuilderName": {
            "template": "${Names[]}"
          }
        }
      }
    ],
    "describe-image-permissions": [
      {
        "action": "appstream:DescribeImagePermissions",
        "resource_mappings": {
          "ImageName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "describe-images": [
      {
        "action": "appstream:DescribeImages",
        "resource_mappings": {
          "ImageName": {
            "template": "${Names[]}"
          }
        }
      }
    ],
    "describe-sessions": [
      {
        "action": "appstream:DescribeSessions",
        "resource_mappings": {
          "FleetName": {
            "template": "${FleetName}"
          },
          "StackName": {
            "template": "${StackName}"
          }
        }
      }
    ],
    "describe-stacks": [
      {
        "action": "appstream:DescribeStacks",
        "resource_mappings": {
          "StackName": {
            "template": "${Names[]}"
          }
        }
      }
    ],
    "describe-usage-report-subscriptions": [
      {
        "action": "appstream:DescribeUsageReportSubscriptions",
        "resource_mappings": {}
      }
    ],
    "describe-user-stack-associations": [
      {
        "action": "appstream:DescribeUserStackAssociations",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          }
        }
      }
    ],
    "describe-users": [
      {
        "action": "appstream:DescribeUsers",
        "resource_mappings": {}
      }
    ],
    "disable-user": [
      {
        "action": "appstream:DisableUser",
        "resource_mappings": {}
      }
    ],
    "disassociate-app-block-builder-app-block": [
      {
        "action": "appstream:DisassociateAppBlockBuilderAppBlock",
        "resource_mappings": {
          "AppBlockBuilderName": {
            "template": "${AppBlockBuilderName}"
          }
        },
        "resourcearn_mappings": {
          "app-block": "${AppBlockArn}"
        }
      }
    ],
    "disassociate-application-fleet": [
      {
        "action": "appstream:DisassociateApplicationFleet",
        "resource_mappings": {
          "FleetName": {
            "template": "${FleetName}"
          }
        },
        "resourcearn_mappings": {
          "application": "${ApplicationArn}"
        }
      }
    ],
    "disassociate-application-from-entitlement": [
      {
        "action": "appstream:DisassociateApplicationFromEntitlement",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          }
        }
      }
    ],
    "disassociate-fleet": [
      {
        "action": "appstream:DisassociateFleet",
        "resource_mappings": {
          "FleetName": {
            "template": "${FleetName}"
          },
          "StackName": {
            "template": "${StackName}"
          }
        }
      }
    ],
    "enable-user": [
      {
        "action": "appstream:EnableUser",
        "resource_mappings": {}
      }
    ],
    "expire-session": [
      {
        "action": "appstream:ExpireSession",
        "resource_mappings": {}
      }
    ],
    "list-associated-fleets": [
      {
        "action": "appstream:ListAssociatedFleets",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          }
        }
      }
    ],
    "list-associated-stacks": [
      {
        "action": "appstream:ListAssociatedStacks",
        "resource_mappings": {
          "FleetName": {
            "template": "${FleetName}"
          }
        }
      }
    ],
    "list-entitled-applications": [
      {
        "action": "appstream:ListEntitledApplications",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "appstream:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "start-app-block-builder": [
      {
        "action": "appstream:StartAppBlockBuilder",
        "resource_mappings": {
          "AppBlockBuilderName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "start-fleet": [
      {
        "action": "appstream:StartFleet",
        "resource_mappings": {
          "FleetName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "start-image-builder": [
      {
        "action": "appstream:StartImageBuilder",
        "resource_mappings": {
          "ImageBuilderName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "stop-app-block-builder": [
      {
        "action": "appstream:StopAppBlockBuilder",
        "resource_mappings": {
          "AppBlockBuilderName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "stop-fleet": [
      {
        "action": "appstream:StopFleet",
        "resource_mappings": {
          "FleetName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "stop-image-builder": [
      {
        "action": "appstream:StopImageBuilder",
        "resource_mappings": {
          "ImageBuilderName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "appstream:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "%%iftemplatematch%${ResourceArn}%%",
          "image": "%%iftemplatematch%${ResourceArn}%%",
          "image-builder": "%%iftemplatematch%${ResourceArn}%%",
          "stack": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "appstream:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "%%iftemplatematch%${ResourceArn}%%",
          "image": "%%iftemplatematch%${ResourceArn}%%",
          "image-builder": "%%iftemplatematch%${ResourceArn}%%",
          "stack": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-app-block-builder": [
      {
        "action": "appstream:UpdateAppBlockBuilder",
        "resource_mappings": {
          "AppBlockBuilderName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "update-application": [
      {
        "action": "appstream:UpdateApplication",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${Name}"
          }
        },
        "resourcearn_mappings": {
          "app-block": "${AppBlockArn}"
        }
      }
    ],
    "update-directory-config": [
      {
        "action": "appstream:UpdateDirectoryConfig",
        "resource_mappings": {}
      }
    ],
    "update-entitlement": [
      {
        "action": "appstream:UpdateEntitlement",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          }
        }
      }
    ],
    "update-fleet": [
      {
        "action": "appstream:UpdateFleet",
        "resource_mappings": {
          "FleetName": {
            "template": "${Name}"
          },
          "ImageName": {
            "template": "${ImageName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${IamRoleArn}"
        }
      }
    ],
    "update-image-permissions": [
      {
        "action": "appstream:UpdateImagePermissions",
        "resource_mappings": {
          "ImageName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "update-stack": [
      {
        "action": "appstream:UpdateStack",
        "resource_mappings": {
          "StackName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "appstream:DescribeFleets",
        "resource_mappings": {
          "FleetName": {
            "template": "${Names[]}"
          }
        }
      }
    ]
  },
  "appsync": {
    "associate-api": [
      {
        "action": "appsync:AssociateApi",
        "resource_mappings": {
          "DomainName": {
            "template": "${domainName}"
          }
        }
      }
    ],
    "associate-merged-graphql-api": [
      {
        "note": "NotFound",
        "action": "AppSync:AssociateMergedGraphqlApi",
        "resource_mappings": {}
      }
    ],
    "associate-source-graphql-api": [
      {
        "note": "NotFound",
        "action": "AppSync:AssociateSourceGraphqlApi",
        "resource_mappings": {}
      }
    ],
    "create-api-cache": [
      {
        "action": "appsync:CreateApiCache",
        "resource_mappings": {}
      }
    ],
    "create-api-key": [
      {
        "action": "appsync:CreateApiKey",
        "resource_mappings": {}
      }
    ],
    "create-data-source": [
      {
        "action": "appsync:CreateDataSource",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${serviceRoleArn}%${httpConfig.authorizationConfig.awsIamConfig.signingRegion}%${httpConfig.authorizationConfig.awsIamConfig.signingServiceName}%%"
        }
      }
    ],
    "create-domain-name": [
      {
        "action": "appsync:CreateDomainName",
        "resource_mappings": {}
      }
    ],
    "create-function": [
      {
        "action": "appsync:CreateFunction",
        "resource_mappings": {}
      }
    ],
    "create-graphql-api": [
      {
        "action": "appsync:CreateGraphqlApi",
        "resource_mappings": {}
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "*"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${logConfig.cloudWatchLogsRoleArn}"
        }
      }
    ],
    "create-resolver": [
      {
        "action": "appsync:CreateResolver",
        "resource_mappings": {}
      }
    ],
    "create-type": [
      {
        "action": "appsync:CreateType",
        "resource_mappings": {}
      }
    ],
    "delete-api-cache": [
      {
        "action": "appsync:DeleteApiCache",
        "resource_mappings": {}
      }
    ],
    "delete-api-key": [
      {
        "action": "appsync:DeleteApiKey",
        "resource_mappings": {}
      }
    ],
    "delete-data-source": [
      {
        "action": "appsync:DeleteDataSource",
        "resource_mappings": {}
      }
    ],
    "delete-domain-name": [
      {
        "action": "appsync:DeleteDomainName",
        "resource_mappings": {
          "DomainName": {
            "template": "${domainName}"
          }
        }
      }
    ],
    "delete-function": [
      {
        "action": "appsync:DeleteFunction",
        "resource_mappings": {}
      }
    ],
    "delete-graphql-api": [
      {
        "action": "appsync:DeleteGraphqlApi",
        "resource_mappings": {
          "GraphQLAPIId": {
            "template": "${apiId}"
          }
        }
      }
    ],
    "delete-resolver": [
      {
        "action": "appsync:DeleteResolver",
        "resource_mappings": {}
      }
    ],
    "delete-type": [
      {
        "action": "appsync:DeleteType",
        "resource_mappings": {}
      }
    ],
    "disassociate-api": [
      {
        "action": "appsync:DisassociateApi",
        "resource_mappings": {
          "DomainName": {
            "template": "${domainName}"
          }
        }
      }
    ],
    "disassociate-merged-graphql-api": [
      {
        "action": "appsync:DisassociateMergedGraphqlApi",
        "resource_mappings": {
          "SourceGraphQLAPIId": {
            "template": "${sourceApiIdentifier}"
          },
          "Associationid": {
            "template": "${associationId}"
          }
        }
      }
    ],
    "disassociate-source-graphql-api": [
      {
        "action": "appsync:DisassociateSourceGraphqlApi",
        "resource_mappings": {
          "MergedGraphQLAPIId": {
            "template": "${mergedApiIdentifier}"
          },
          "Associationid": {
            "template": "${associationId}"
          }
        }
      }
    ],
    "evaluate-code": [
      {
        "action": "appsync:EvaluateCode",
        "resource_mappings": {}
      }
    ],
    "evaluate-mapping-template": [
      {
        "action": "appsync:EvaluateMappingTemplate",
        "resource_mappings": {}
      }
    ],
    "flush-api-cache": [
      {
        "action": "appsync:FlushApiCache",
        "resource_mappings": {}
      }
    ],
    "get-api-association": [
      {
        "action": "appsync:GetApiAssociation",
        "resource_mappings": {
          "DomainName": {
            "template": "${domainName}"
          }
        }
      }
    ],
    "get-api-cache": [
      {
        "action": "appsync:GetApiCache",
        "resource_mappings": {}
      }
    ],
    "get-data-source": [
      {
        "action": "appsync:GetDataSource",
        "resource_mappings": {}
      }
    ],
    "get-domain-name": [
      {
        "action": "appsync:GetDomainName",
        "resource_mappings": {
          "DomainName": {
            "template": "${domainName}"
          }
        }
      }
    ],
    "get-function": [
      {
        "action": "appsync:GetFunction",
        "resource_mappings": {}
      }
    ],
    "get-graphql-api": [
      {
        "action": "appsync:GetGraphqlApi",
        "resource_mappings": {
          "GraphQLAPIId": {
            "template": "${apiId}"
          }
        }
      }
    ],
    "get-introspection-schema": [
      {
        "action": "appsync:GetIntrospectionSchema",
        "resource_mappings": {}
      }
    ],
    "get-resolver": [
      {
        "action": "appsync:GetResolver",
        "resource_mappings": {}
      }
    ],
    "get-schema-creation-status": [
      {
        "action": "appsync:GetSchemaCreationStatus",
        "resource_mappings": {}
      }
    ],
    "get-source-api-association": [
      {
        "action": "appsync:GetSourceApiAssociation",
        "resource_mappings": {
          "MergedGraphQLAPIId": {
            "template": "${mergedApiIdentifier}"
          },
          "Associationid": {
            "template": "${associationId}"
          }
        }
      }
    ],
    "get-type": [
      {
        "action": "appsync:GetType",
        "resource_mappings": {}
      }
    ],
    "list-api-keys": [
      {
        "action": "appsync:ListApiKeys",
        "resource_mappings": {}
      }
    ],
    "list-data-sources": [
      {
        "action": "appsync:ListDataSources",
        "resource_mappings": {}
      }
    ],
    "list-domain-names": [
      {
        "action": "appsync:ListDomainNames",
        "resource_mappings": {}
      }
    ],
    "list-functions": [
      {
        "action": "appsync:ListFunctions",
        "resource_mappings": {}
      }
    ],
    "list-graphql-apis": [
      {
        "action": "appsync:ListGraphqlApis",
        "resource_mappings": {}
      }
    ],
    "list-resolvers": [
      {
        "action": "appsync:ListResolvers",
        "resource_mappings": {}
      }
    ],
    "list-resolvers-by-function": [
      {
        "action": "appsync:ListResolversByFunction",
        "resource_mappings": {}
      }
    ],
    "list-source-api-associations": [
      {
        "action": "appsync:ListSourceApiAssociations",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "appsync:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "graphqlapi": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "list-types": [
      {
        "action": "appsync:ListTypes",
        "resource_mappings": {}
      }
    ],
    "list-types-by-association": [
      {
        "action": "appsync:ListTypesByAssociation",
        "resource_mappings": {}
      }
    ],
    "start-schema-creation": [
      {
        "action": "appsync:StartSchemaCreation",
        "resource_mappings": {}
      }
    ],
    "start-schema-merge": [
      {
        "action": "appsync:StartSchemaMerge",
        "resource_mappings": {
          "MergedGraphQLAPIId": {
            "template": "${mergedApiIdentifier}"
          },
          "Associationid": {
            "template": "${associationId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "appsync:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "graphqlapi": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "appsync:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "graphqlapi": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-api-cache": [
      {
        "action": "appsync:UpdateApiCache",
        "resource_mappings": {}
      }
    ],
    "update-api-key": [
      {
        "action": "appsync:UpdateApiKey",
        "resource_mappings": {}
      }
    ],
    "update-data-source": [
      {
        "action": "appsync:UpdateDataSource",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${serviceRoleArn}%${httpConfig.authorizationConfig.awsIamConfig.signingRegion}%${httpConfig.authorizationConfig.awsIamConfig.signingServiceName}%%"
        }
      }
    ],
    "update-domain-name": [
      {
        "action": "appsync:UpdateDomainName",
        "resource_mappings": {
          "DomainName": {
            "template": "${domainName}"
          }
        }
      }
    ],
    "update-function": [
      {
        "action": "appsync:UpdateFunction",
        "resource_mappings": {}
      }
    ],
    "update-graphql-api": [
      {
        "action": "appsync:UpdateGraphqlApi",
        "resource_mappings": {
          "GraphQLAPIId": {
            "template": "${apiId}"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${logConfig.cloudWatchLogsRoleArn}"
        }
      }
    ],
    "update-resolver": [
      {
        "action": "appsync:UpdateResolver",
        "resource_mappings": {}
      }
    ],
    "update-source-api-association": [
      {
        "action": "appsync:UpdateSourceApiAssociation",
        "resource_mappings": {
          "MergedGraphQLAPIId": {
            "template": "${mergedApiIdentifier}"
          },
          "Associationid": {
            "template": "${associationId}"
          }
        }
      }
    ],
    "update-type": [
      {
        "action": "appsync:UpdateType",
        "resource_mappings": {}
      }
    ]
  },
  "arc-zonal-shift": {
    "cancel-zonal-shift": [
      {
        "action": "arc-zonal-shift:CancelZonalShift",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "*"
          },
          "LoadBalancerId": {
            "template": "*"
          }
        }
      }
    ],
    "get-managed-resource": [
      {
        "action": "arc-zonal-shift:GetManagedResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ALB": "%%iftemplatematch%${resourceIdentifier}%%",
          "NLB": "%%iftemplatematch%${resourceIdentifier}%%"
        }
      }
    ],
    "list-managed-resources": [
      {
        "action": "arc-zonal-shift:ListManagedResources",
        "resource_mappings": {}
      }
    ],
    "list-zonal-shifts": [
      {
        "action": "arc-zonal-shift:ListZonalShifts",
        "resource_mappings": {}
      }
    ],
    "start-zonal-shift": [
      {
        "action": "arc-zonal-shift:StartZonalShift",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ALB": "%%iftemplatematch%${resourceIdentifier}%%",
          "NLB": "%%iftemplatematch%${resourceIdentifier}%%"
        }
      }
    ],
    "update-zonal-shift": [
      {
        "action": "arc-zonal-shift:UpdateZonalShift",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "*"
          },
          "LoadBalancerId": {
            "template": "*"
          }
        }
      }
    ]
  },
  "athena": {
    "batch-get-named-query": [
      {
        "action": "athena:BatchGetNamedQuery",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "batch-get-prepared-statement": [
      {
        "action": "athena:BatchGetPreparedStatement",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "${WorkGroup}"
          }
        }
      }
    ],
    "batch-get-query-execution": [
      {
        "action": "athena:BatchGetQueryExecution",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "cancel-capacity-reservation": [
      {
        "action": "athena:CancelCapacityReservation",
        "resource_mappings": {
          "CapacityReservationName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "create-capacity-reservation": [
      {
        "action": "athena:CreateCapacityReservation",
        "resource_mappings": {
          "CapacityReservationName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "create-data-catalog": [
      {
        "action": "athena:CreateDataCatalog",
        "resource_mappings": {
          "DataCatalogName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "create-named-query": [
      {
        "action": "athena:CreateNamedQuery",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "create-notebook": [
      {
        "action": "athena:CreateNotebook",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "${WorkGroup}"
          }
        }
      }
    ],
    "create-prepared-statement": [
      {
        "action": "athena:CreatePreparedStatement",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "${WorkGroup}"
          }
        }
      }
    ],
    "create-presigned-notebook-url": [
      {
        "action": "athena:CreatePresignedNotebookUrl",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "create-work-group": [
      {
        "action": "athena:CreateWorkGroup",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-capacity-reservation": [
      {
        "action": "athena:DeleteCapacityReservation",
        "resource_mappings": {
          "CapacityReservationName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-data-catalog": [
      {
        "action": "athena:DeleteDataCatalog",
        "resource_mappings": {
          "DataCatalogName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-named-query": [
      {
        "action": "athena:DeleteNamedQuery",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "delete-notebook": [
      {
        "action": "athena:DeleteNotebook",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "delete-prepared-statement": [
      {
        "action": "athena:DeletePreparedStatement",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "${WorkGroup}"
          }
        }
      }
    ],
    "delete-work-group": [
      {
        "action": "athena:DeleteWorkGroup",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "${WorkGroup}"
          }
        }
      }
    ],
    "export-notebook": [
      {
        "action": "athena:ExportNotebook",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "get-calculation-execution": [
      {
        "action": "athena:GetCalculationExecution",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "get-calculation-execution-code": [
      {
        "action": "athena:GetCalculationExecutionCode",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "get-calculation-execution-status": [
      {
        "action": "athena:GetCalculationExecutionStatus",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "get-capacity-assignment-configuration": [
      {
        "action": "athena:GetCapacityAssignmentConfiguration",
        "resource_mappings": {
          "CapacityReservationName": {
            "template": "${CapacityReservationName}"
          }
        }
      }
    ],
    "get-capacity-reservation": [
      {
        "action": "athena:GetCapacityReservation",
        "resource_mappings": {
          "CapacityReservationName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-data-catalog": [
      {
        "action": "athena:GetDataCatalog",
        "resource_mappings": {
          "DataCatalogName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-database": [
      {
        "action": "athena:GetDatabase",
        "resource_mappings": {
          "DataCatalogName": {
            "template": "${CatalogName}"
          }
        }
      }
    ],
    "get-named-query": [
      {
        "action": "athena:GetNamedQuery",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "get-notebook-metadata": [
      {
        "action": "athena:GetNotebookMetadata",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "get-prepared-statement": [
      {
        "action": "athena:GetPreparedStatement",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "${WorkGroup}"
          }
        }
      }
    ],
    "get-query-execution": [
      {
        "action": "athena:GetQueryExecution",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "get-query-results": [
      {
        "action": "athena:GetQueryResults",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "get-query-runtime-statistics": [
      {
        "action": "athena:GetQueryRuntimeStatistics",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "get-session": [
      {
        "action": "athena:GetSession",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "get-session-status": [
      {
        "action": "athena:GetSessionStatus",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "get-table-metadata": [
      {
        "action": "athena:GetTableMetadata",
        "resource_mappings": {
          "DataCatalogName": {
            "template": "${CatalogName}"
          }
        }
      }
    ],
    "get-work-group": [
      {
        "action": "athena:GetWorkGroup",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "${WorkGroup}"
          }
        }
      }
    ],
    "import-notebook": [
      {
        "action": "athena:ImportNotebook",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "${WorkGroup}"
          }
        }
      }
    ],
    "list-application-dpu-sizes": [
      {
        "action": "athena:ListApplicationDPUSizes",
        "resource_mappings": {}
      }
    ],
    "list-calculation-executions": [
      {
        "action": "athena:ListCalculationExecutions",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "list-capacity-reservations": [
      {
        "action": "athena:ListCapacityReservations",
        "resource_mappings": {}
      }
    ],
    "list-data-catalogs": [
      {
        "action": "athena:ListDataCatalogs",
        "resource_mappings": {}
      }
    ],
    "list-databases": [
      {
        "action": "athena:ListDatabases",
        "resource_mappings": {
          "DataCatalogName": {
            "template": "${CatalogName}"
          }
        }
      }
    ],
    "list-engine-versions": [
      {
        "action": "athena:ListEngineVersions",
        "resource_mappings": {}
      }
    ],
    "list-executors": [
      {
        "action": "athena:ListExecutors",
        "resource_mappings": {}
      }
    ],
    "list-named-queries": [
      {
        "action": "athena:ListNamedQueries",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "${WorkGroup}"
          }
        }
      }
    ],
    "list-notebook-metadata": [
      {
        "action": "athena:ListNotebookMetadata",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "${WorkGroup}"
          }
        }
      }
    ],
    "list-notebook-sessions": [
      {
        "action": "athena:ListNotebookSessions",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "list-prepared-statements": [
      {
        "action": "athena:ListPreparedStatements",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "${WorkGroup}"
          }
        }
      }
    ],
    "list-query-executions": [
      {
        "action": "athena:ListQueryExecutions",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "${WorkGroup}"
          }
        }
      }
    ],
    "list-sessions": [
      {
        "action": "athena:ListSessions",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "${WorkGroup}"
          }
        }
      }
    ],
    "list-table-metadata": [
      {
        "action": "athena:ListTableMetadata",
        "resource_mappings": {
          "DataCatalogName": {
            "template": "${CatalogName}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "athena:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "datacatalog": "%%iftemplatematch%${ResourceARN}%%",
          "workgroup": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "list-work-groups": [
      {
        "action": "athena:ListWorkGroups",
        "resource_mappings": {}
      }
    ],
    "put-capacity-assignment-configuration": [
      {
        "action": "athena:PutCapacityAssignmentConfiguration",
        "resource_mappings": {
          "CapacityReservationName": {
            "template": "${CapacityReservationName}"
          },
          "WorkGroupName": {
            "template": "${CapacityAssignments[].WorkGroupNames[]}"
          }
        }
      }
    ],
    "start-calculation-execution": [
      {
        "action": "athena:StartCalculationExecution",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "start-query-execution": [
      {
        "action": "athena:StartQueryExecution",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "${WorkGroup}"
          }
        }
      }
    ],
    "start-session": [
      {
        "action": "athena:StartSession",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "${WorkGroup}"
          }
        }
      }
    ],
    "stop-calculation-execution": [
      {
        "action": "athena:StopCalculationExecution",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "stop-query-execution": [
      {
        "action": "athena:StopQueryExecution",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "athena:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "datacatalog": "%%iftemplatematch%${ResourceARN}%%",
          "workgroup": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "terminate-session": [
      {
        "action": "athena:TerminateSession",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "untag-resource": [
      {
        "action": "athena:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "datacatalog": "%%iftemplatematch%${ResourceARN}%%",
          "workgroup": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "update-capacity-reservation": [
      {
        "action": "athena:UpdateCapacityReservation",
        "resource_mappings": {
          "CapacityReservationName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "update-data-catalog": [
      {
        "action": "athena:UpdateDataCatalog",
        "resource_mappings": {
          "DataCatalogName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "update-named-query": [
      {
        "action": "athena:UpdateNamedQuery",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "update-notebook": [
      {
        "action": "athena:UpdateNotebook",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "update-notebook-metadata": [
      {
        "action": "athena:UpdateNotebookMetadata",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "update-prepared-statement": [
      {
        "action": "athena:UpdatePreparedStatement",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "${WorkGroup}"
          }
        }
      }
    ],
    "update-work-group": [
      {
        "action": "athena:UpdateWorkGroup",
        "resource_mappings": {
          "WorkGroupName": {
            "template": "${WorkGroup}"
          }
        }
      }
    ]
  },
  "auditmanager": {
    "associate-assessment-report-evidence-folder": [
      {
        "action": "auditmanager:AssociateAssessmentReportEvidenceFolder",
        "resource_mappings": {
          "assessmentId": {
            "template": "${assessmentId}"
          }
        }
      }
    ],
    "batch-associate-assessment-report-evidence": [
      {
        "action": "auditmanager:BatchAssociateAssessmentReportEvidence",
        "resource_mappings": {
          "assessmentId": {
            "template": "${assessmentId}"
          }
        }
      }
    ],
    "batch-create-delegation-by-assessment": [
      {
        "action": "auditmanager:BatchCreateDelegationByAssessment",
        "resource_mappings": {
          "assessmentId": {
            "template": "${assessmentId}"
          }
        }
      }
    ],
    "batch-delete-delegation-by-assessment": [
      {
        "action": "auditmanager:BatchDeleteDelegationByAssessment",
        "resource_mappings": {
          "assessmentId": {
            "template": "${assessmentId}"
          }
        }
      }
    ],
    "batch-disassociate-assessment-report-evidence": [
      {
        "action": "auditmanager:BatchDisassociateAssessmentReportEvidence",
        "resource_mappings": {
          "assessmentId": {
            "template": "${assessmentId}"
          }
        }
      }
    ],
    "batch-import-evidence-to-assessment-control": [
      {
        "action": "auditmanager:BatchImportEvidenceToAssessmentControl",
        "resource_mappings": {
          "assessmentId": {
            "template": "${assessmentId}"
          }
        }
      }
    ],
    "create-assessment": [
      {
        "action": "auditmanager:CreateAssessment",
        "resource_mappings": {}
      }
    ],
    "create-assessment-framework": [
      {
        "action": "auditmanager:CreateAssessmentFramework",
        "resource_mappings": {}
      }
    ],
    "create-assessment-report": [
      {
        "action": "auditmanager:CreateAssessmentReport",
        "resource_mappings": {
          "assessmentId": {
            "template": "${assessmentId}"
          }
        }
      }
    ],
    "create-control": [
      {
        "action": "auditmanager:CreateControl",
        "resource_mappings": {}
      }
    ],
    "delete-assessment": [
      {
        "action": "auditmanager:DeleteAssessment",
        "resource_mappings": {
          "assessmentId": {
            "template": "${assessmentId}"
          }
        }
      }
    ],
    "delete-assessment-framework": [
      {
        "action": "auditmanager:DeleteAssessmentFramework",
        "resource_mappings": {
          "assessmentFrameworkId": {
            "template": "${frameworkId}"
          }
        }
      }
    ],
    "delete-assessment-framework-share": [
      {
        "action": "auditmanager:DeleteAssessmentFrameworkShare",
        "resource_mappings": {}
      }
    ],
    "delete-assessment-report": [
      {
        "action": "auditmanager:DeleteAssessmentReport",
        "resource_mappings": {
          "assessmentId": {
            "template": "${assessmentId}"
          }
        }
      }
    ],
    "delete-control": [
      {
        "action": "auditmanager:DeleteControl",
        "resource_mappings": {
          "controlId": {
            "template": "${controlId}"
          }
        }
      }
    ],
    "deregister-account": [
      {
        "action": "auditmanager:DeregisterAccount",
        "resource_mappings": {}
      }
    ],
    "deregister-organization-admin-account": [
      {
        "action": "auditmanager:DeregisterOrganizationAdminAccount",
        "resource_mappings": {}
      }
    ],
    "disassociate-assessment-report-evidence-folder": [
      {
        "action": "auditmanager:DisassociateAssessmentReportEvidenceFolder",
        "resource_mappings": {
          "assessmentId": {
            "template": "${assessmentId}"
          }
        }
      }
    ],
    "get-account-status": [
      {
        "action": "auditmanager:GetAccountStatus",
        "resource_mappings": {}
      }
    ],
    "get-assessment": [
      {
        "action": "auditmanager:GetAssessment",
        "resource_mappings": {
          "assessmentId": {
            "template": "${assessmentId}"
          }
        }
      }
    ],
    "get-assessment-framework": [
      {
        "action": "auditmanager:GetAssessmentFramework",
        "resource_mappings": {
          "assessmentFrameworkId": {
            "template": "${frameworkId}"
          }
        }
      }
    ],
    "get-assessment-report-url": [
      {
        "action": "auditmanager:GetAssessmentReportUrl",
        "resource_mappings": {
          "assessmentId": {
            "template": "${assessmentId}"
          }
        }
      }
    ],
    "get-change-logs": [
      {
        "action": "auditmanager:GetChangeLogs",
        "resource_mappings": {
          "assessmentId": {
            "template": "${assessmentId}"
          }
        }
      }
    ],
    "get-control": [
      {
        "action": "auditmanager:GetControl",
        "resource_mappings": {
          "controlId": {
            "template": "${controlId}"
          }
        }
      }
    ],
    "get-delegations": [
      {
        "action": "auditmanager:GetDelegations",
        "resource_mappings": {}
      }
    ],
    "get-evidence": [
      {
        "action": "auditmanager:GetEvidence",
        "resource_mappings": {
          "assessmentId": {
            "template": "${assessmentId}"
          }
        }
      }
    ],
    "get-evidence-by-evidence-folder": [
      {
        "action": "auditmanager:GetEvidenceByEvidenceFolder",
        "resource_mappings": {
          "assessmentId": {
            "template": "${assessmentId}"
          }
        }
      }
    ],
    "get-evidence-file-upload-url": [
      {
        "action": "auditmanager:GetEvidenceFileUploadUrl",
        "resource_mappings": {}
      }
    ],
    "get-evidence-folder": [
      {
        "action": "auditmanager:GetEvidenceFolder",
        "resource_mappings": {
          "assessmentId": {
            "template": "${assessmentId}"
          }
        }
      }
    ],
    "get-evidence-folders-by-assessment": [
      {
        "action": "auditmanager:GetEvidenceFoldersByAssessment",
        "resource_mappings": {
          "assessmentId": {
            "template": "${assessmentId}"
          }
        }
      }
    ],
    "get-evidence-folders-by-assessment-control": [
      {
        "action": "auditmanager:GetEvidenceFoldersByAssessmentControl",
        "resource_mappings": {
          "assessmentId": {
            "template": "${assessmentId}"
          }
        }
      }
    ],
    "get-insights": [
      {
        "action": "auditmanager:GetInsights",
        "resource_mappings": {}
      }
    ],
    "get-insights-by-assessment": [
      {
        "action": "auditmanager:GetInsightsByAssessment",
        "resource_mappings": {}
      }
    ],
    "get-organization-admin-account": [
      {
        "action": "auditmanager:GetOrganizationAdminAccount",
        "resource_mappings": {}
      }
    ],
    "get-services-in-scope": [
      {
        "action": "auditmanager:GetServicesInScope",
        "resource_mappings": {}
      }
    ],
    "get-settings": [
      {
        "action": "auditmanager:GetSettings",
        "resource_mappings": {}
      }
    ],
    "list-assessment-control-insights-by-control-domain": [
      {
        "action": "auditmanager:ListAssessmentControlInsightsByControlDomain",
        "resource_mappings": {}
      }
    ],
    "list-assessment-framework-share-requests": [
      {
        "action": "auditmanager:ListAssessmentFrameworkShareRequests",
        "resource_mappings": {}
      }
    ],
    "list-assessment-frameworks": [
      {
        "action": "auditmanager:ListAssessmentFrameworks",
        "resource_mappings": {}
      }
    ],
    "list-assessment-reports": [
      {
        "action": "auditmanager:ListAssessmentReports",
        "resource_mappings": {}
      }
    ],
    "list-assessments": [
      {
        "action": "auditmanager:ListAssessments",
        "resource_mappings": {}
      }
    ],
    "list-control-domain-insights": [
      {
        "action": "auditmanager:ListControlDomainInsights",
        "resource_mappings": {}
      }
    ],
    "list-control-domain-insights-by-assessment": [
      {
        "action": "auditmanager:ListControlDomainInsightsByAssessment",
        "resource_mappings": {}
      }
    ],
    "list-control-insights-by-control-domain": [
      {
        "action": "auditmanager:ListControlInsightsByControlDomain",
        "resource_mappings": {}
      }
    ],
    "list-controls": [
      {
        "action": "auditmanager:ListControls",
        "resource_mappings": {}
      }
    ],
    "list-keywords-for-data-source": [
      {
        "action": "auditmanager:ListKeywordsForDataSource",
        "resource_mappings": {}
      }
    ],
    "list-notifications": [
      {
        "action": "auditmanager:ListNotifications",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "auditmanager:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "assessment": "%%iftemplatematch%${resourceArn}%%",
          "control": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "register-account": [
      {
        "action": "auditmanager:RegisterAccount",
        "resource_mappings": {}
      }
    ],
    "register-organization-admin-account": [
      {
        "action": "auditmanager:RegisterOrganizationAdminAccount",
        "resource_mappings": {}
      }
    ],
    "start-assessment-framework-share": [
      {
        "action": "auditmanager:StartAssessmentFrameworkShare",
        "resource_mappings": {
          "AssessmentFrameworkId": {
            "template": "${frameworkId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "auditmanager:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "assessment": "%%iftemplatematch%${resourceArn}%%",
          "control": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "auditmanager:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "assessment": "%%iftemplatematch%${resourceArn}%%",
          "control": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-assessment": [
      {
        "action": "auditmanager:UpdateAssessment",
        "resource_mappings": {
          "assessmentId": {
            "template": "${assessmentId}"
          }
        }
      }
    ],
    "update-assessment-control": [
      {
        "action": "auditmanager:UpdateAssessmentControl",
        "resource_mappings": {
          "assessmentId": {
            "template": "${assessmentId}"
          }
        }
      }
    ],
    "update-assessment-control-set-status": [
      {
        "action": "auditmanager:UpdateAssessmentControlSetStatus",
        "resource_mappings": {
          "assessmentId": {
            "template": "${assessmentId}"
          }
        }
      }
    ],
    "update-assessment-framework": [
      {
        "action": "auditmanager:UpdateAssessmentFramework",
        "resource_mappings": {
          "assessmentFrameworkId": {
            "template": "${frameworkId}"
          }
        }
      }
    ],
    "update-assessment-framework-share": [
      {
        "action": "auditmanager:UpdateAssessmentFrameworkShare",
        "resource_mappings": {}
      }
    ],
    "update-assessment-status": [
      {
        "action": "auditmanager:UpdateAssessmentStatus",
        "resource_mappings": {
          "assessmentId": {
            "template": "${assessmentId}"
          }
        }
      }
    ],
    "update-control": [
      {
        "action": "auditmanager:UpdateControl",
        "resource_mappings": {
          "controlId": {
            "template": "${controlId}"
          }
        }
      }
    ],
    "update-settings": [
      {
        "action": "auditmanager:UpdateSettings",
        "resource_mappings": {}
      }
    ],
    "validate-assessment-report-integrity": [
      {
        "action": "auditmanager:ValidateAssessmentReportIntegrity",
        "resource_mappings": {}
      }
    ]
  },
  "autoscaling": {
    "attach-instances": [
      {
        "action": "autoscaling:AttachInstances",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "attach-load-balancer-target-groups": [
      {
        "action": "autoscaling:AttachLoadBalancerTargetGroups",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "attach-load-balancers": [
      {
        "action": "autoscaling:AttachLoadBalancers",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "attach-traffic-sources": [
      {
        "action": "autoscaling:AttachTrafficSources",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "batch-delete-scheduled-action": [
      {
        "action": "autoscaling:BatchDeleteScheduledAction",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "batch-put-scheduled-update-group-action": [
      {
        "action": "autoscaling:BatchPutScheduledUpdateGroupAction",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "cancel-instance-refresh": [
      {
        "action": "autoscaling:CancelInstanceRefresh",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "complete-lifecycle-action": [
      {
        "action": "autoscaling:CompleteLifecycleAction",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "create-auto-scaling-group": [
      {
        "action": "autoscaling:CreateAutoScalingGroup",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${ServiceLinkedRoleARN}%${LifeCycleHookSpecification.RoleARN}%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${LaunchConfigurationName}%*%%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${LaunchTemplate.LaunchTemplateId}%*%%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${LaunchTemplate.LaunchTemplateName}%*%%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${MixedInstancesPolicy.LaunchTemplate.LaunchTemplateSpecification.LaunchTemplateId}%*%%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${MixedInstancesPolicy.LaunchTemplate.LaunchTemplateSpecification.LaunchTemplateName}%*%%%"
        }
      }
    ],
    "create-launch-configuration": [
      {
        "action": "autoscaling:CreateLaunchConfiguration",
        "resource_mappings": {
          "Id": {
            "template": "*"
          },
          "LaunchConfigurationName": {
            "template": "${LaunchConfigurationName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${IamInstanceProfile}%*%%%"
        }
      }
    ],
    "create-or-update-tags": [
      {
        "action": "autoscaling:CreateOrUpdateTags",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${Tags[].ResourceId}"
          }
        }
      }
    ],
    "delete-auto-scaling-group": [
      {
        "action": "autoscaling:DeleteAutoScalingGroup",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "delete-launch-configuration": [
      {
        "action": "autoscaling:DeleteLaunchConfiguration",
        "resource_mappings": {
          "Id": {
            "template": "*"
          },
          "LaunchConfigurationName": {
            "template": "${LaunchConfigurationName}"
          }
        }
      }
    ],
    "delete-lifecycle-hook": [
      {
        "action": "autoscaling:DeleteLifecycleHook",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "delete-notification-configuration": [
      {
        "action": "autoscaling:DeleteNotificationConfiguration",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "delete-policy": [
      {
        "action": "autoscaling:DeletePolicy",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "delete-scheduled-action": [
      {
        "action": "autoscaling:DeleteScheduledAction",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "delete-tags": [
      {
        "action": "autoscaling:DeleteTags",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${Tags[].ResourceId}"
          }
        }
      }
    ],
    "delete-warm-pool": [
      {
        "action": "autoscaling:DeleteWarmPool",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "describe-account-limits": [
      {
        "action": "autoscaling:DescribeAccountLimits",
        "resource_mappings": {}
      }
    ],
    "describe-adjustment-types": [
      {
        "action": "autoscaling:DescribeAdjustmentTypes",
        "resource_mappings": {}
      }
    ],
    "describe-auto-scaling-groups": [
      {
        "action": "autoscaling:DescribeAutoScalingGroups",
        "resource_mappings": {}
      }
    ],
    "describe-auto-scaling-instances": [
      {
        "action": "autoscaling:DescribeAutoScalingInstances",
        "resource_mappings": {}
      }
    ],
    "describe-auto-scaling-notification-types": [
      {
        "action": "autoscaling:DescribeAutoScalingNotificationTypes",
        "resource_mappings": {}
      }
    ],
    "describe-instance-refreshes": [
      {
        "action": "autoscaling:DescribeInstanceRefreshes",
        "resource_mappings": {}
      }
    ],
    "describe-launch-configurations": [
      {
        "action": "autoscaling:DescribeLaunchConfigurations",
        "resource_mappings": {}
      }
    ],
    "describe-lifecycle-hook-types": [
      {
        "action": "autoscaling:DescribeLifecycleHookTypes",
        "resource_mappings": {}
      }
    ],
    "describe-lifecycle-hooks": [
      {
        "action": "autoscaling:DescribeLifecycleHooks",
        "resource_mappings": {}
      }
    ],
    "describe-load-balancer-target-groups": [
      {
        "action": "autoscaling:DescribeLoadBalancerTargetGroups",
        "resource_mappings": {}
      }
    ],
    "describe-load-balancers": [
      {
        "action": "autoscaling:DescribeLoadBalancers",
        "resource_mappings": {}
      }
    ],
    "describe-metric-collection-types": [
      {
        "action": "autoscaling:DescribeMetricCollectionTypes",
        "resource_mappings": {}
      }
    ],
    "describe-notification-configurations": [
      {
        "action": "autoscaling:DescribeNotificationConfigurations",
        "resource_mappings": {}
      }
    ],
    "describe-policies": [
      {
        "action": "autoscaling:DescribePolicies",
        "resource_mappings": {}
      }
    ],
    "describe-scaling-activities": [
      {
        "action": "autoscaling:DescribeScalingActivities",
        "resource_mappings": {}
      }
    ],
    "describe-scaling-process-types": [
      {
        "action": "autoscaling:DescribeScalingProcessTypes",
        "resource_mappings": {}
      }
    ],
    "describe-scheduled-actions": [
      {
        "action": "autoscaling:DescribeScheduledActions",
        "resource_mappings": {}
      }
    ],
    "describe-tags": [
      {
        "action": "autoscaling:DescribeTags",
        "resource_mappings": {}
      }
    ],
    "describe-termination-policy-types": [
      {
        "action": "autoscaling:DescribeTerminationPolicyTypes",
        "resource_mappings": {}
      }
    ],
    "describe-traffic-sources": [
      {
        "action": "autoscaling:DescribeTrafficSources",
        "resource_mappings": {}
      }
    ],
    "describe-warm-pool": [
      {
        "action": "autoscaling:DescribeWarmPool",
        "resource_mappings": {}
      }
    ],
    "detach-instances": [
      {
        "action": "autoscaling:DetachInstances",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "detach-load-balancer-target-groups": [
      {
        "action": "autoscaling:DetachLoadBalancerTargetGroups",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "detach-load-balancers": [
      {
        "action": "autoscaling:DetachLoadBalancers",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "detach-traffic-sources": [
      {
        "action": "autoscaling:DetachTrafficSources",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "disable-metrics-collection": [
      {
        "action": "autoscaling:DisableMetricsCollection",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "enable-metrics-collection": [
      {
        "action": "autoscaling:EnableMetricsCollection",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "enter-standby": [
      {
        "action": "autoscaling:EnterStandby",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "execute-policy": [
      {
        "action": "autoscaling:ExecutePolicy",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "exit-standby": [
      {
        "action": "autoscaling:ExitStandby",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "get-predictive-scaling-forecast": [
      {
        "action": "autoscaling:GetPredictiveScalingForecast",
        "resource_mappings": {}
      }
    ],
    "put-lifecycle-hook": [
      {
        "action": "autoscaling:PutLifecycleHook",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleARN}"
        }
      }
    ],
    "put-notification-configuration": [
      {
        "action": "autoscaling:PutNotificationConfiguration",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "put-scaling-policy": [
      {
        "action": "autoscaling:PutScalingPolicy",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "put-scheduled-update-group-action": [
      {
        "action": "autoscaling:PutScheduledUpdateGroupAction",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "put-warm-pool": [
      {
        "action": "autoscaling:PutWarmPool",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "record-lifecycle-action-heartbeat": [
      {
        "action": "autoscaling:RecordLifecycleActionHeartbeat",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "resume-processes": [
      {
        "action": "autoscaling:ResumeProcesses",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "rollback-instance-refresh": [
      {
        "action": "autoscaling:RollbackInstanceRefresh",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "set-desired-capacity": [
      {
        "action": "autoscaling:SetDesiredCapacity",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "set-instance-health": [
      {
        "action": "autoscaling:SetInstanceHealth",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "*"
          }
        }
      }
    ],
    "set-instance-protection": [
      {
        "action": "autoscaling:SetInstanceProtection",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "start-instance-refresh": [
      {
        "action": "autoscaling:StartInstanceRefresh",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "suspend-processes": [
      {
        "action": "autoscaling:SuspendProcesses",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      }
    ],
    "terminate-instance-in-auto-scaling-group": [
      {
        "action": "autoscaling:TerminateInstanceInAutoScalingGroup",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "*"
          }
        }
      }
    ],
    "update-auto-scaling-group": [
      {
        "action": "autoscaling:UpdateAutoScalingGroup",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "GroupFriendlyName": {
            "template": "${AutoScalingGroupName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${ServiceLinkedRoleARN}%${LifeCycleHookSpecification.RoleARN}%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${LaunchConfigurationName}%*%%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${LaunchTemplate.LaunchTemplateId}%*%%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${LaunchTemplate.LaunchTemplateName}%*%%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${MixedInstancesPolicy.LaunchTemplate.LaunchTemplateSpecification.LaunchTemplateId}%*%%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${MixedInstancesPolicy.LaunchTemplate.LaunchTemplateSpecification.LaunchTemplateName}%*%%%"
        }
      }
    ]
  },
  "autoscaling-plans": {
    "create-scaling-plan": [
      {
        "action": "autoscaling-plans:CreateScalingPlan",
        "resource_mappings": {}
      }
    ],
    "delete-scaling-plan": [
      {
        "action": "autoscaling-plans:DeleteScalingPlan",
        "resource_mappings": {}
      }
    ],
    "describe-scaling-plan-resources": [
      {
        "action": "autoscaling-plans:DescribeScalingPlanResources",
        "resource_mappings": {}
      }
    ],
    "describe-scaling-plans": [
      {
        "action": "autoscaling-plans:DescribeScalingPlans",
        "resource_mappings": {}
      }
    ],
    "get-scaling-plan-resource-forecast-data": [
      {
        "action": "autoscaling-plans:GetScalingPlanResourceForecastData",
        "resource_mappings": {}
      }
    ],
    "update-scaling-plan": [
      {
        "action": "autoscaling-plans:UpdateScalingPlan",
        "resource_mappings": {}
      }
    ]
  },
  "backup": {
    "cancel-legal-hold": [
      {
        "action": "backup:CancelLegalHold",
        "resource_mappings": {
          "LegalHoldId": {
            "template": "${LegalHoldId}"
          }
        }
      }
    ],
    "create-backup-plan": [
      {
        "action": "backup:CreateBackupPlan",
        "resource_mappings": {
          "BackupPlanId": {
            "template": "*"
          }
        }
      }
    ],
    "create-backup-selection": [
      {
        "action": "backup:CreateBackupSelection",
        "resource_mappings": {
          "BackupPlanId": {
            "template": "${BackupPlanId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${BackupSelection.IamRoleArn}"
        }
      }
    ],
    "create-backup-vault": [
      {
        "action": "backup:CreateBackupVault",
        "resource_mappings": {
          "BackupVaultName": {
            "template": "${BackupVaultName}"
          }
        }
      }
    ],
    "create-framework": [
      {
        "action": "backup:CreateFramework",
        "resource_mappings": {
          "FrameworkName": {
            "template": "${FrameworkName}"
          },
          "FrameworkId": {
            "template": "*"
          }
        }
      }
    ],
    "create-legal-hold": [
      {
        "action": "backup:CreateLegalHold",
        "resource_mappings": {
          "LegalHoldId": {
            "template": "*"
          }
        }
      }
    ],
    "create-logically-air-gapped-backup-vault": [
      {
        "action": "backup:CreateLogicallyAirGappedBackupVault",
        "resource_mappings": {
          "BackupVaultName": {
            "template": "${BackupVaultName}"
          }
        }
      }
    ],
    "create-report-plan": [
      {
        "action": "backup:CreateReportPlan",
        "resource_mappings": {
          "ReportPlanName": {
            "template": "${ReportPlanName}"
          },
          "ReportPlanId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-backup-plan": [
      {
        "action": "backup:DeleteBackupPlan",
        "resource_mappings": {
          "BackupPlanId": {
            "template": "${BackupPlanId}"
          }
        }
      }
    ],
    "delete-backup-selection": [
      {
        "action": "backup:DeleteBackupSelection",
        "resource_mappings": {
          "BackupPlanId": {
            "template": "${BackupPlanId}"
          }
        }
      }
    ],
    "delete-backup-vault": [
      {
        "action": "backup:DeleteBackupVault",
        "resource_mappings": {
          "BackupVaultName": {
            "template": "${BackupVaultName}"
          }
        }
      }
    ],
    "delete-backup-vault-access-policy": [
      {
        "action": "backup:DeleteBackupVaultAccessPolicy",
        "resource_mappings": {
          "BackupVaultName": {
            "template": "${BackupVaultName}"
          }
        }
      }
    ],
    "delete-backup-vault-lock-configuration": [
      {
        "action": "backup:DeleteBackupVaultLockConfiguration",
        "resource_mappings": {
          "BackupVaultName": {
            "template": "${BackupVaultName}"
          }
        }
      }
    ],
    "delete-backup-vault-notifications": [
      {
        "action": "backup:DeleteBackupVaultNotifications",
        "resource_mappings": {
          "BackupVaultName": {
            "template": "${BackupVaultName}"
          }
        }
      }
    ],
    "delete-framework": [
      {
        "action": "backup:DeleteFramework",
        "resource_mappings": {
          "FrameworkName": {
            "template": "${FrameworkName}"
          },
          "FrameworkId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-recovery-point": [
      {
        "action": "backup:DeleteRecoveryPoint",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "recoveryPoint": "${RecoveryPointArn}"
        }
      }
    ],
    "delete-report-plan": [
      {
        "action": "backup:DeleteReportPlan",
        "resource_mappings": {
          "ReportPlanName": {
            "template": "${ReportPlanName}"
          },
          "ReportPlanId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-backup-job": [
      {
        "action": "backup:DescribeBackupJob",
        "resource_mappings": {}
      }
    ],
    "describe-backup-vault": [
      {
        "action": "backup:DescribeBackupVault",
        "resource_mappings": {
          "BackupVaultName": {
            "template": "${BackupVaultName}"
          }
        }
      }
    ],
    "describe-copy-job": [
      {
        "action": "backup:DescribeCopyJob",
        "resource_mappings": {}
      }
    ],
    "describe-framework": [
      {
        "action": "backup:DescribeFramework",
        "resource_mappings": {
          "FrameworkName": {
            "template": "${FrameworkName}"
          },
          "FrameworkId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-global-settings": [
      {
        "action": "backup:DescribeGlobalSettings",
        "resource_mappings": {}
      }
    ],
    "describe-protected-resource": [
      {
        "action": "backup:DescribeProtectedResource",
        "resource_mappings": {}
      }
    ],
    "describe-recovery-point": [
      {
        "action": "backup:DescribeRecoveryPoint",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "recoveryPoint": "${RecoveryPointArn}"
        }
      }
    ],
    "describe-region-settings": [
      {
        "action": "backup:DescribeRegionSettings",
        "resource_mappings": {}
      }
    ],
    "describe-report-job": [
      {
        "action": "backup:DescribeReportJob",
        "resource_mappings": {}
      }
    ],
    "describe-report-plan": [
      {
        "action": "backup:DescribeReportPlan",
        "resource_mappings": {
          "ReportPlanName": {
            "template": "${ReportPlanName}"
          },
          "ReportPlanId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-restore-job": [
      {
        "action": "backup:DescribeRestoreJob",
        "resource_mappings": {}
      }
    ],
    "disassociate-recovery-point": [
      {
        "action": "backup:DisassociateRecoveryPoint",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "recoveryPoint": "${RecoveryPointArn}"
        }
      }
    ],
    "disassociate-recovery-point-from-parent": [
      {
        "action": "backup:DisassociateRecoveryPointFromParent",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "recoveryPoint": "${RecoveryPointArn}"
        }
      }
    ],
    "export-backup-plan-template": [
      {
        "action": "backup:ExportBackupPlanTemplate",
        "resource_mappings": {}
      }
    ],
    "get-backup-plan": [
      {
        "action": "backup:GetBackupPlan",
        "resource_mappings": {
          "BackupPlanId": {
            "template": "${BackupPlanId}"
          }
        }
      }
    ],
    "get-backup-plan-from-json": [
      {
        "action": "backup:GetBackupPlanFromJSON",
        "resource_mappings": {}
      }
    ],
    "get-backup-plan-from-template": [
      {
        "action": "backup:GetBackupPlanFromTemplate",
        "resource_mappings": {}
      }
    ],
    "get-backup-selection": [
      {
        "action": "backup:GetBackupSelection",
        "resource_mappings": {
          "BackupPlanId": {
            "template": "${BackupPlanId}"
          }
        }
      }
    ],
    "get-backup-vault-access-policy": [
      {
        "action": "backup:GetBackupVaultAccessPolicy",
        "resource_mappings": {
          "BackupVaultName": {
            "template": "${BackupVaultName}"
          }
        }
      }
    ],
    "get-backup-vault-notifications": [
      {
        "action": "backup:GetBackupVaultNotifications",
        "resource_mappings": {
          "BackupVaultName": {
            "template": "${BackupVaultName}"
          }
        }
      }
    ],
    "get-legal-hold": [
      {
        "action": "backup:GetLegalHold",
        "resource_mappings": {
          "LegalHoldId": {
            "template": "${LegalHoldId}"
          }
        }
      }
    ],
    "get-recovery-point-restore-metadata": [
      {
        "action": "backup:GetRecoveryPointRestoreMetadata",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "recoveryPoint": "${RecoveryPointArn}"
        }
      }
    ],
    "get-supported-resource-types": [
      {
        "action": "backup:GetSupportedResourceTypes",
        "resource_mappings": {}
      }
    ],
    "list-backup-jobs": [
      {
        "action": "backup:ListBackupJobs",
        "resource_mappings": {}
      }
    ],
    "list-backup-plan-templates": [
      {
        "action": "backup:ListBackupPlanTemplates",
        "resource_mappings": {}
      }
    ],
    "list-backup-plan-versions": [
      {
        "action": "backup:ListBackupPlanVersions",
        "resource_mappings": {
          "BackupPlanId": {
            "template": "${BackupPlanId}"
          }
        }
      }
    ],
    "list-backup-plans": [
      {
        "action": "backup:ListBackupPlans",
        "resource_mappings": {}
      }
    ],
    "list-backup-selections": [
      {
        "action": "backup:ListBackupSelections",
        "resource_mappings": {
          "BackupPlanId": {
            "template": "${BackupPlanId}"
          }
        }
      }
    ],
    "list-backup-vaults": [
      {
        "action": "backup:ListBackupVaults",
        "resource_mappings": {}
      }
    ],
    "list-copy-jobs": [
      {
        "action": "backup:ListCopyJobs",
        "resource_mappings": {}
      }
    ],
    "list-frameworks": [
      {
        "action": "backup:ListFrameworks",
        "resource_mappings": {}
      }
    ],
    "list-legal-holds": [
      {
        "action": "backup:ListLegalHolds",
        "resource_mappings": {}
      }
    ],
    "list-protected-resources": [
      {
        "action": "backup:ListProtectedResources",
        "resource_mappings": {}
      }
    ],
    "list-protected-resources-by-backup-vault": [
      {
        "action": "backup:ListProtectedResourcesByBackupVault",
        "resource_mappings": {
          "BackupVaultName": {
            "template": "${BackupVaultName}"
          }
        }
      }
    ],
    "list-recovery-points-by-backup-vault": [
      {
        "action": "backup:ListRecoveryPointsByBackupVault",
        "resource_mappings": {
          "BackupVaultName": {
            "template": "${BackupVaultName}"
          }
        }
      }
    ],
    "list-recovery-points-by-legal-hold": [
      {
        "action": "backup:ListRecoveryPointsByLegalHold",
        "resource_mappings": {
          "LegalHoldId": {
            "template": "${LegalHoldId}"
          }
        }
      }
    ],
    "list-recovery-points-by-resource": [
      {
        "action": "backup:ListRecoveryPointsByResource",
        "resource_mappings": {}
      }
    ],
    "list-report-jobs": [
      {
        "action": "backup:ListReportJobs",
        "resource_mappings": {}
      }
    ],
    "list-report-plans": [
      {
        "action": "backup:ListReportPlans",
        "resource_mappings": {}
      }
    ],
    "list-restore-jobs": [
      {
        "action": "backup:ListRestoreJobs",
        "resource_mappings": {}
      }
    ],
    "list-tags": [
      {
        "action": "backup:ListTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "backupPlan": "%%iftemplatematch%${ResourceArn}%%",
          "backupVault": "%%iftemplatematch%${ResourceArn}%%",
          "recoveryPoint": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "put-backup-vault-access-policy": [
      {
        "action": "backup:PutBackupVaultAccessPolicy",
        "resource_mappings": {
          "BackupVaultName": {
            "template": "${BackupVaultName}"
          }
        }
      }
    ],
    "put-backup-vault-lock-configuration": [
      {
        "action": "backup:PutBackupVaultLockConfiguration",
        "resource_mappings": {
          "BackupVaultName": {
            "template": "${BackupVaultName}"
          }
        }
      }
    ],
    "put-backup-vault-notifications": [
      {
        "action": "backup:PutBackupVaultNotifications",
        "resource_mappings": {
          "BackupVaultName": {
            "template": "${BackupVaultName}"
          }
        }
      }
    ],
    "start-backup-job": [
      {
        "action": "backup:StartBackupJob",
        "resource_mappings": {
          "BackupVaultName": {
            "template": "${BackupVaultName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${IamRoleArn}"
        }
      }
    ],
    "start-copy-job": [
      {
        "action": "backup:StartCopyJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "recoveryPoint": "${RecoveryPointArn}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${IamRoleArn}"
        }
      }
    ],
    "start-report-job": [
      {
        "action": "backup:StartReportJob",
        "resource_mappings": {
          "ReportPlanName": {
            "template": "${ReportPlanName}"
          },
          "ReportPlanId": {
            "template": "*"
          }
        }
      }
    ],
    "start-restore-job": [
      {
        "action": "backup:StartRestoreJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "recoveryPoint": "${RecoveryPointArn}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${IamRoleArn}"
        }
      }
    ],
    "stop-backup-job": [
      {
        "action": "backup:StopBackupJob",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "backup:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "backupPlan": "%%iftemplatematch%${ResourceArn}%%",
          "backupVault": "%%iftemplatematch%${ResourceArn}%%",
          "recoveryPoint": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "backup:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "backupPlan": "%%iftemplatematch%${ResourceArn}%%",
          "backupVault": "%%iftemplatematch%${ResourceArn}%%",
          "recoveryPoint": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-backup-plan": [
      {
        "action": "backup:UpdateBackupPlan",
        "resource_mappings": {
          "BackupPlanId": {
            "template": "${BackupPlanId}"
          }
        }
      }
    ],
    "update-framework": [
      {
        "action": "backup:UpdateFramework",
        "resource_mappings": {
          "FrameworkName": {
            "template": "${FrameworkName}"
          },
          "FrameworkId": {
            "template": "*"
          }
        }
      }
    ],
    "update-global-settings": [
      {
        "action": "backup:UpdateGlobalSettings",
        "resource_mappings": {}
      }
    ],
    "update-recovery-point-lifecycle": [
      {
        "action": "backup:UpdateRecoveryPointLifecycle",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "recoveryPoint": "${RecoveryPointArn}"
        }
      }
    ],
    "update-region-settings": [
      {
        "action": "backup:UpdateRegionSettings",
        "resource_mappings": {}
      }
    ],
    "update-report-plan": [
      {
        "action": "backup:UpdateReportPlan",
        "resource_mappings": {
          "ReportPlanName": {
            "template": "${ReportPlanName}"
          },
          "ReportPlanId": {
            "template": "*"
          }
        }
      }
    ]
  },
  "backup-gateway": {
    "associate-gateway-to-server": [
      {
        "action": "backup-gateway:AssociateGatewayToServer",
        "resource_mappings": {
          "HypervisorId": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "gateway": "${GatewayArn}"
        }
      }
    ],
    "create-gateway": [
      {
        "action": "backup-gateway:CreateGateway",
        "resource_mappings": {}
      }
    ],
    "delete-gateway": [
      {
        "action": "backup-gateway:DeleteGateway",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayArn}"
        }
      }
    ],
    "delete-hypervisor": [
      {
        "action": "backup-gateway:DeleteHypervisor",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "hypervisor": "${HypervisorArn}"
        }
      }
    ],
    "disassociate-gateway-from-server": [
      {
        "action": "backup-gateway:DisassociateGatewayFromServer",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayArn}"
        }
      }
    ],
    "get-bandwidth-rate-limit-schedule": [
      {
        "action": "backup-gateway:GetBandwidthRateLimitSchedule",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayArn}"
        }
      }
    ],
    "get-gateway": [
      {
        "action": "backup-gateway:GetGateway",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayArn}"
        }
      }
    ],
    "get-hypervisor": [
      {
        "action": "backup-gateway:GetHypervisor",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "hypervisor": "${HypervisorArn}"
        }
      }
    ],
    "get-hypervisor-property-mappings": [
      {
        "action": "backup-gateway:GetHypervisorPropertyMappings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "hypervisor": "${HypervisorArn}"
        }
      }
    ],
    "get-virtual-machine": [
      {
        "action": "backup-gateway:GetVirtualMachine",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "virtualmachine": "${ResourceArn}"
        }
      }
    ],
    "import-hypervisor-configuration": [
      {
        "action": "backup-gateway:ImportHypervisorConfiguration",
        "resource_mappings": {
          "HypervisorId": {
            "template": "*"
          }
        }
      }
    ],
    "list-gateways": [
      {
        "action": "backup-gateway:ListGateways",
        "resource_mappings": {}
      }
    ],
    "list-hypervisors": [
      {
        "action": "backup-gateway:ListHypervisors",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "backup-gateway:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "%%iftemplatematch%${ResourceArn}%%",
          "hypervisor": "%%iftemplatematch%${ResourceArn}%%",
          "virtualmachine": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "list-virtual-machines": [
      {
        "action": "backup-gateway:ListVirtualMachines",
        "resource_mappings": {}
      }
    ],
    "put-bandwidth-rate-limit-schedule": [
      {
        "action": "backup-gateway:PutBandwidthRateLimitSchedule",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayArn}"
        }
      }
    ],
    "put-hypervisor-property-mappings": [
      {
        "action": "backup-gateway:PutHypervisorPropertyMappings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "hypervisor": "${HypervisorArn}"
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${IamRoleArn}"
        }
      }
    ],
    "put-maintenance-start-time": [
      {
        "action": "backup-gateway:PutMaintenanceStartTime",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayArn}"
        }
      }
    ],
    "start-virtual-machines-metadata-sync": [
      {
        "action": "backup-gateway:StartVirtualMachinesMetadataSync",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "hypervisor": "${HypervisorArn}"
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "backup-gateway:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "%%iftemplatematch%${ResourceARN}%%",
          "hypervisor": "%%iftemplatematch%${ResourceARN}%%",
          "virtualmachine": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "test-hypervisor-configuration": [
      {
        "action": "backup-gateway:TestHypervisorConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayArn}"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "backup-gateway:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "%%iftemplatematch%${ResourceARN}%%",
          "hypervisor": "%%iftemplatematch%${ResourceARN}%%",
          "virtualmachine": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "update-gateway-information": [
      {
        "action": "backup-gateway:UpdateGatewayInformation",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayArn}"
        }
      }
    ],
    "update-gateway-software-now": [
      {
        "action": "backup-gateway:UpdateGatewaySoftwareNow",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayArn}"
        }
      }
    ],
    "update-hypervisor": [
      {
        "action": "backup-gateway:UpdateHypervisor",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${HypervisorArn}"
        }
      }
    ]
  },
  "backupstorage": {
    "delete-object": [
      {
        "note": "NotFound",
        "action": "BackupStorage:DeleteObject",
        "resource_mappings": {}
      }
    ],
    "get-chunk": [
      {
        "action": "backup-storage:GetChunk",
        "resource_mappings": {}
      }
    ],
    "get-object-metadata": [
      {
        "action": "backup-storage:GetObjectMetadata",
        "resource_mappings": {}
      }
    ],
    "list-chunks": [
      {
        "action": "backup-storage:ListChunks",
        "resource_mappings": {}
      }
    ],
    "list-objects": [
      {
        "action": "backup-storage:ListObjects",
        "resource_mappings": {}
      }
    ],
    "notify-object-complete": [
      {
        "action": "backup-storage:NotifyObjectComplete",
        "resource_mappings": {}
      }
    ],
    "put-chunk": [
      {
        "action": "backup-storage:PutChunk",
        "resource_mappings": {}
      }
    ],
    "put-object": [
      {
        "action": "backup-storage:PutObject",
        "resource_mappings": {}
      }
    ],
    "start-object": [
      {
        "action": "backup-storage:StartObject",
        "resource_mappings": {}
      }
    ]
  },
  "batch": {
    "cancel-job": [
      {
        "action": "batch:CancelJob",
        "resource_mappings": {
          "jobId": {
            "template": "${jobId}"
          }
        }
      }
    ],
    "create-compute-environment": [
      {
        "action": "batch:CreateComputeEnvironment",
        "resource_mappings": {
          "ComputeEnvironmentName": {
            "template": "${computeEnvironmentName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "arn:${Partition}:iam::${Account}:role/%%regex%${computeResources.instanceRole}%/(?:arn.*/)?(.+)/g%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${computeResources.spotIamFleetRole}%${serviceRole}%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${computeResources.launchTemplate.launchTemplateId}%*%%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${computeResources.launchTemplate.launchTemplateName}%*%%%"
        }
      }
    ],
    "create-job-queue": [
      {
        "action": "batch:CreateJobQueue",
        "resource_mappings": {
          "ComputeEnvironmentName": {
            "template": "${computeEnvironmentOrder[].computeEnvironment}"
          },
          "JobQueueName": {
            "template": "${jobQueueName}"
          }
        }
      }
    ],
    "create-scheduling-policy": [
      {
        "action": "batch:CreateSchedulingPolicy",
        "resource_mappings": {
          "SchedulingPolicyName": {
            "template": "${name}"
          }
        }
      }
    ],
    "delete-compute-environment": [
      {
        "action": "batch:DeleteComputeEnvironment",
        "resource_mappings": {
          "ComputeEnvironmentName": {
            "template": "${computeEnvironment}"
          }
        }
      }
    ],
    "delete-job-queue": [
      {
        "action": "batch:DeleteJobQueue",
        "resource_mappings": {
          "JobQueueName": {
            "template": "${jobQueue}"
          }
        }
      }
    ],
    "delete-scheduling-policy": [
      {
        "action": "batch:DeleteSchedulingPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "scheduling-policy": "${arn}"
        }
      }
    ],
    "deregister-job-definition": [
      {
        "action": "batch:DeregisterJobDefinition",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "job-definition": "%%iftemplatematch%${jobDefinition}%%"
        }
      }
    ],
    "describe-compute-environments": [
      {
        "action": "batch:DescribeComputeEnvironments",
        "resource_mappings": {}
      }
    ],
    "describe-job-definitions": [
      {
        "action": "batch:DescribeJobDefinitions",
        "resource_mappings": {}
      }
    ],
    "describe-job-queues": [
      {
        "action": "batch:DescribeJobQueues",
        "resource_mappings": {}
      }
    ],
    "describe-jobs": [
      {
        "action": "batch:DescribeJobs",
        "resource_mappings": {}
      }
    ],
    "describe-scheduling-policies": [
      {
        "action": "batch:DescribeSchedulingPolicies",
        "resource_mappings": {}
      }
    ],
    "list-jobs": [
      {
        "action": "batch:ListJobs",
        "resource_mappings": {}
      }
    ],
    "list-scheduling-policies": [
      {
        "action": "batch:ListSchedulingPolicies",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "batch:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "compute-environment": "%%iftemplatematch%${resourceArn}%%",
          "job": "%%iftemplatematch%${resourceArn}%%",
          "job-definition": "%%iftemplatematch%${resourceArn}%%",
          "job-queue": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "register-job-definition": [
      {
        "action": "batch:RegisterJobDefinition",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${containerProperties.jobRoleArn}%${containerProperties.executionRoleArn}%%"
        }
      }
    ],
    "submit-job": [
      {
        "action": "batch:SubmitJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "job-definition": "%%iftemplatematch%${jobDefinition}%%",
          "job-queue": "%%iftemplatematch%${jobQueue}%%"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "batch:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "compute-environment": "%%iftemplatematch%${resourceArn}%%",
          "job": "%%iftemplatematch%${resourceArn}%%",
          "job-definition": "%%iftemplatematch%${resourceArn}%%",
          "job-queue": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "terminate-job": [
      {
        "action": "batch:TerminateJob",
        "resource_mappings": {
          "jobId": {
            "template": "${jobId}"
          }
        }
      }
    ],
    "untag-resource": [
      {
        "action": "batch:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "compute-environment": "%%iftemplatematch%${resourceArn}%%",
          "job": "%%iftemplatematch%${resourceArn}%%",
          "job-definition": "%%iftemplatematch%${resourceArn}%%",
          "job-queue": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-compute-environment": [
      {
        "action": "batch:UpdateComputeEnvironment",
        "resource_mappings": {
          "ComputeEnvironmentName": {
            "template": "${computeEnvironment}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "arn:${Partition}:iam::${Account}:role/%%regex%${serviceRole}%/(?:arn.*/)?(.+)/g%%"
        }
      }
    ],
    "update-job-queue": [
      {
        "action": "batch:UpdateJobQueue",
        "resource_mappings": {
          "JobQueueName": {
            "template": "${jobQueue}"
          }
        }
      }
    ],
    "update-scheduling-policy": [
      {
        "action": "batch:UpdateSchedulingPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "scheduling-policy": "${arn}"
        }
      }
    ]
  },
  "bedrock": {
    "create-model-customization-job": [
      {
        "note": "NotFound",
        "action": "Bedrock:CreateModelCustomizationJob",
        "resource_mappings": {}
      }
    ],
    "create-provisioned-model-throughput": [
      {
        "note": "NotFound",
        "action": "Bedrock:CreateProvisionedModelThroughput",
        "resource_mappings": {}
      }
    ],
    "delete-custom-model": [
      {
        "note": "NotFound",
        "action": "Bedrock:DeleteCustomModel",
        "resource_mappings": {}
      }
    ],
    "delete-model-invocation-logging-configuration": [
      {
        "note": "NotFound",
        "action": "Bedrock:DeleteModelInvocationLoggingConfiguration",
        "resource_mappings": {}
      }
    ],
    "delete-provisioned-model-throughput": [
      {
        "note": "NotFound",
        "action": "Bedrock:DeleteProvisionedModelThroughput",
        "resource_mappings": {}
      }
    ],
    "get-custom-model": [
      {
        "note": "NotFound",
        "action": "Bedrock:GetCustomModel",
        "resource_mappings": {}
      }
    ],
    "get-foundation-model": [
      {
        "note": "NotFound",
        "action": "Bedrock:GetFoundationModel",
        "resource_mappings": {}
      }
    ],
    "get-model-customization-job": [
      {
        "note": "NotFound",
        "action": "Bedrock:GetModelCustomizationJob",
        "resource_mappings": {}
      }
    ],
    "get-model-invocation-logging-configuration": [
      {
        "note": "NotFound",
        "action": "Bedrock:GetModelInvocationLoggingConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-provisioned-model-throughput": [
      {
        "note": "NotFound",
        "action": "Bedrock:GetProvisionedModelThroughput",
        "resource_mappings": {}
      }
    ],
    "list-custom-models": [
      {
        "note": "NotFound",
        "action": "Bedrock:ListCustomModels",
        "resource_mappings": {}
      }
    ],
    "list-foundation-models": [
      {
        "note": "NotFound",
        "action": "Bedrock:ListFoundationModels",
        "resource_mappings": {}
      }
    ],
    "list-model-customization-jobs": [
      {
        "note": "NotFound",
        "action": "Bedrock:ListModelCustomizationJobs",
        "resource_mappings": {}
      }
    ],
    "list-provisioned-model-throughputs": [
      {
        "note": "NotFound",
        "action": "Bedrock:ListProvisionedModelThroughputs",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "note": "NotFound",
        "action": "Bedrock:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "put-model-invocation-logging-configuration": [
      {
        "note": "NotFound",
        "action": "Bedrock:PutModelInvocationLoggingConfiguration",
        "resource_mappings": {}
      }
    ],
    "stop-model-customization-job": [
      {
        "note": "NotFound",
        "action": "Bedrock:StopModelCustomizationJob",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "note": "NotFound",
        "action": "Bedrock:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "note": "NotFound",
        "action": "Bedrock:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-provisioned-model-throughput": [
      {
        "note": "NotFound",
        "action": "Bedrock:UpdateProvisionedModelThroughput",
        "resource_mappings": {}
      }
    ]
  },
  "bedrock-runtime": {
    "invoke-model": [
      {
        "note": "NotFound",
        "action": "Bedrock Runtime:InvokeModel",
        "resource_mappings": {}
      }
    ]
  },
  "billingconductor": {
    "associate-accounts": [
      {
        "action": "billingconductor:AssociateAccounts",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "billinggroup": "${Arn}"
        }
      }
    ],
    "associate-pricing-rules": [
      {
        "action": "billingconductor:AssociatePricingRules",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "pricingplan": "${Arn}",
          "pricingrule": "${PricingRuleArns[]}"
        }
      }
    ],
    "batch-associate-resources-to-custom-line-item": [
      {
        "action": "billingconductor:BatchAssociateResourcesToCustomLineItem",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "customlineitem": "${TargetArn}"
        }
      }
    ],
    "batch-disassociate-resources-from-custom-line-item": [
      {
        "action": "billingconductor:BatchDisassociateResourcesFromCustomLineItem",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "customlineitem": "${TargetArn}"
        }
      }
    ],
    "create-billing-group": [
      {
        "action": "billingconductor:CreateBillingGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "pricingplan": "${ComputationPreference.PricingPlanArn}"
        }
      }
    ],
    "create-custom-line-item": [
      {
        "action": "billingconductor:CreateCustomLineItem",
        "resource_mappings": {}
      }
    ],
    "create-pricing-plan": [
      {
        "action": "billingconductor:CreatePricingPlan",
        "resource_mappings": {}
      }
    ],
    "create-pricing-rule": [
      {
        "action": "billingconductor:CreatePricingRule",
        "resource_mappings": {}
      }
    ],
    "delete-billing-group": [
      {
        "action": "billingconductor:DeleteBillingGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "billinggroup": "${Arn}"
        }
      }
    ],
    "delete-custom-line-item": [
      {
        "action": "billingconductor:DeleteCustomLineItem",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "customlineitem": "${Arn}"
        }
      }
    ],
    "delete-pricing-plan": [
      {
        "action": "billingconductor:DeletePricingPlan",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "pricingplan": "${Arn}"
        }
      }
    ],
    "delete-pricing-rule": [
      {
        "action": "billingconductor:DeletePricingRule",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "pricingrule": "${Arn}"
        }
      }
    ],
    "disassociate-accounts": [
      {
        "action": "billingconductor:DisassociateAccounts",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "billinggroup": "${Arn}"
        }
      }
    ],
    "disassociate-pricing-rules": [
      {
        "action": "billingconductor:DisassociatePricingRules",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "pricingplan": "${Arn}",
          "pricingrule": "${PricingRuleArns[]}"
        }
      }
    ],
    "list-account-associations": [
      {
        "action": "billingconductor:ListAccountAssociations",
        "resource_mappings": {}
      }
    ],
    "list-billing-group-cost-reports": [
      {
        "action": "billingconductor:ListBillingGroupCostReports",
        "resource_mappings": {}
      }
    ],
    "list-billing-groups": [
      {
        "action": "billingconductor:ListBillingGroups",
        "resource_mappings": {}
      }
    ],
    "list-custom-line-item-versions": [
      {
        "action": "billingconductor:ListCustomLineItemVersions",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "customlineitem": "${Arn}"
        }
      }
    ],
    "list-custom-line-items": [
      {
        "action": "billingconductor:ListCustomLineItems",
        "resource_mappings": {}
      }
    ],
    "list-pricing-plans": [
      {
        "action": "billingconductor:ListPricingPlans",
        "resource_mappings": {}
      }
    ],
    "list-pricing-plans-associated-with-pricing-rule": [
      {
        "action": "billingconductor:ListPricingPlansAssociatedWithPricingRule",
        "resource_mappings": {
          "PricingPlanId": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "pricingrule": "${PricingRuleArn}"
        }
      }
    ],
    "list-pricing-rules": [
      {
        "action": "billingconductor:ListPricingRules",
        "resource_mappings": {}
      }
    ],
    "list-pricing-rules-associated-to-pricing-plan": [
      {
        "action": "billingconductor:ListPricingRulesAssociatedToPricingPlan",
        "resource_mappings": {
          "PricingRuleId": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "pricingplan": "${PricingPlanArn}"
        }
      }
    ],
    "list-resources-associated-to-custom-line-item": [
      {
        "action": "billingconductor:ListResourcesAssociatedToCustomLineItem",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "customlineitem": "${Arn}"
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "billingconductor:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "billingconductor:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "billingconductor:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-billing-group": [
      {
        "action": "billingconductor:UpdateBillingGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "billinggroup": "${Arn}"
        }
      }
    ],
    "update-custom-line-item": [
      {
        "action": "billingconductor:UpdateCustomLineItem",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "customlineitem": "${Arn}"
        }
      }
    ],
    "update-pricing-plan": [
      {
        "action": "billingconductor:UpdatePricingPlan",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "pricingplan": "${Arn}"
        }
      }
    ],
    "update-pricing-rule": [
      {
        "action": "billingconductor:UpdatePricingRule",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "pricingrule": "${Arn}"
        }
      }
    ]
  },
  "braket": {
    "cancel-job": [
      {
        "action": "braket:CancelJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "job": "${jobArn}"
        }
      }
    ],
    "cancel-quantum-task": [
      {
        "action": "braket:CancelQuantumTask",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "quantum-task": "${quantumTaskArn}"
        }
      }
    ],
    "create-job": [
      {
        "action": "braket:CreateJob",
        "resource_mappings": {}
      }
    ],
    "create-quantum-task": [
      {
        "action": "braket:CreateQuantumTask",
        "resource_mappings": {
          "RandomId": {
            "template": "*"
          }
        }
      }
    ],
    "get-device": [
      {
        "action": "braket:GetDevice",
        "resource_mappings": {}
      }
    ],
    "get-job": [
      {
        "action": "braket:GetJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "job": "${jobArn}"
        }
      }
    ],
    "get-quantum-task": [
      {
        "action": "braket:GetQuantumTask",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "quantum-task": "${quantumTaskArn}"
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "braket:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "quantum-task": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "search-devices": [
      {
        "action": "braket:SearchDevices",
        "resource_mappings": {}
      }
    ],
    "search-jobs": [
      {
        "action": "braket:SearchJobs",
        "resource_mappings": {}
      }
    ],
    "search-quantum-tasks": [
      {
        "action": "braket:SearchQuantumTasks",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "braket:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "quantum-task": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "braket:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "quantum-task": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ]
  },
  "budgets": {
    "create-budget": [
      {
        "action": "budgets:ModifyBudget",
        "resource_mappings": {
          "BudgetName": {
            "template": "${Budget.BudgetName}"
          }
        }
      }
    ],
    "create-budget-action": [
      {
        "action": "budgets:CreateBudgetAction",
        "resource_mappings": {
          "BudgetName": {
            "template": "${BudgetName}"
          },
          "ActionId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${Definition.IamActionDefinition.PolicyArn}%${Definition.IamActionDefinition.Roles}%${Definition.IamActionDefinition.Groups}%${Definition.IamActionDefinition.Users}%${ExecutionRoleArn}%%"
        }
      }
    ],
    "create-notification": [
      {
        "action": "budgets:ModifyBudget",
        "resource_mappings": {
          "BudgetName": {
            "template": "${BudgetName}"
          }
        }
      }
    ],
    "create-subscriber": [
      {
        "action": "budgets:ModifyBudget",
        "resource_mappings": {
          "BudgetName": {
            "template": "${BudgetName}"
          }
        }
      }
    ],
    "delete-budget": [
      {
        "action": "budgets:ModifyBudget",
        "resource_mappings": {
          "BudgetName": {
            "template": "${BudgetName}"
          }
        }
      }
    ],
    "delete-budget-action": [
      {
        "action": "budgets:DeleteBudgetAction",
        "resource_mappings": {
          "BudgetName": {
            "template": "${BudgetName}"
          },
          "ActionId": {
            "template": "${ActionId}"
          }
        }
      }
    ],
    "delete-notification": [
      {
        "action": "budgets:ModifyBudget",
        "resource_mappings": {
          "BudgetName": {
            "template": "${BudgetName}"
          }
        }
      }
    ],
    "delete-subscriber": [
      {
        "action": "budgets:ModifyBudget",
        "resource_mappings": {
          "BudgetName": {
            "template": "${BudgetName}"
          }
        }
      }
    ],
    "describe-budget": [
      {
        "action": "budgets:ViewBudget",
        "resource_mappings": {
          "BudgetName": {
            "template": "${BudgetName}"
          }
        }
      }
    ],
    "describe-budget-action": [
      {
        "action": "budgets:DescribeBudgetAction",
        "resource_mappings": {
          "BudgetName": {
            "template": "${BudgetName}"
          },
          "ActionId": {
            "template": "${ActionId}"
          }
        }
      }
    ],
    "describe-budget-action-histories": [
      {
        "action": "budgets:DescribeBudgetActionHistories",
        "resource_mappings": {
          "BudgetName": {
            "template": "${BudgetName}"
          },
          "ActionId": {
            "template": "${ActionId}"
          }
        }
      }
    ],
    "describe-budget-actions-for-account": [
      {
        "action": "budgets:DescribeBudgetActionsForAccount",
        "resource_mappings": {}
      }
    ],
    "describe-budget-actions-for-budget": [
      {
        "action": "budgets:DescribeBudgetActionsForBudget",
        "resource_mappings": {
          "BudgetName": {
            "template": "${BudgetName}"
          }
        }
      }
    ],
    "describe-budget-notifications-for-account": [
      {
        "action": "budgets:ViewBudget",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "describe-budget-performance-history": [
      {
        "action": "budgets:ViewBudget",
        "resource_mappings": {
          "BudgetName": {
            "template": "${BudgetName}"
          }
        }
      }
    ],
    "describe-budgets": [
      {
        "action": "budgets:ViewBudget",
        "resource_mappings": {
          "BudgetName": {
            "template": "*"
          }
        }
      }
    ],
    "describe-notifications-for-budget": [
      {
        "action": "budgets:ViewBudget",
        "resource_mappings": {
          "BudgetName": {
            "template": "${BudgetName}"
          }
        }
      }
    ],
    "describe-subscribers-for-notification": [
      {
        "action": "budgets:ViewBudget",
        "resource_mappings": {
          "BudgetName": {
            "template": "${BudgetName}"
          }
        }
      }
    ],
    "execute-budget-action": [
      {
        "action": "budgets:ExecuteBudgetAction",
        "resource_mappings": {
          "BudgetName": {
            "template": "${BudgetName}"
          },
          "ActionId": {
            "template": "${ActionId}"
          }
        }
      }
    ],
    "update-budget": [
      {
        "action": "budgets:ModifyBudget",
        "resource_mappings": {
          "BudgetName": {
            "template": "${NewBudget.BudgetName}"
          }
        }
      }
    ],
    "update-budget-action": [
      {
        "action": "budgets:UpdateBudgetAction",
        "resource_mappings": {
          "BudgetName": {
            "template": "${BudgetName}"
          },
          "ActionId": {
            "template": "${ActionId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${Definition.IamActionDefinition.PolicyArn}%${Definition.IamActionDefinition.Roles}%${Definition.IamActionDefinition.Groups}%${Definition.IamActionDefinition.Users}%${ExecutionRoleArn}%%"
        }
      }
    ],
    "update-notification": [
      {
        "action": "budgets:ModifyBudget",
        "resource_mappings": {
          "BudgetName": {
            "template": "${BudgetName}"
          }
        }
      }
    ],
    "update-subscriber": [
      {
        "action": "budgets:ModifyBudget",
        "resource_mappings": {
          "BudgetName": {
            "template": "${BudgetName}"
          }
        }
      }
    ]
  },
  "ce": {
    "create-anomaly-monitor": [
      {
        "action": "ce:CreateAnomalyMonitor",
        "resource_mappings": {}
      }
    ],
    "create-anomaly-subscription": [
      {
        "action": "ce:CreateAnomalySubscription",
        "resource_mappings": {}
      }
    ],
    "create-cost-category-definition": [
      {
        "action": "ce:CreateCostCategoryDefinition",
        "resource_mappings": {}
      }
    ],
    "delete-anomaly-monitor": [
      {
        "action": "ce:DeleteAnomalyMonitor",
        "resource_mappings": {}
      }
    ],
    "delete-anomaly-subscription": [
      {
        "action": "ce:DeleteAnomalySubscription",
        "resource_mappings": {}
      }
    ],
    "delete-cost-category-definition": [
      {
        "action": "ce:DeleteCostCategoryDefinition",
        "resource_mappings": {}
      }
    ],
    "describe-cost-category-definition": [
      {
        "action": "ce:DescribeCostCategoryDefinition",
        "resource_mappings": {}
      }
    ],
    "get-anomalies": [
      {
        "action": "ce:GetAnomalies",
        "resource_mappings": {}
      }
    ],
    "get-anomaly-monitors": [
      {
        "action": "ce:GetAnomalyMonitors",
        "resource_mappings": {}
      }
    ],
    "get-anomaly-subscriptions": [
      {
        "action": "ce:GetAnomalySubscriptions",
        "resource_mappings": {}
      }
    ],
    "get-cost-and-usage": [
      {
        "action": "ce:GetCostAndUsage",
        "resource_mappings": {}
      }
    ],
    "get-cost-and-usage-with-resources": [
      {
        "action": "ce:GetCostAndUsageWithResources",
        "resource_mappings": {}
      }
    ],
    "get-cost-categories": [
      {
        "action": "ce:GetCostCategories",
        "resource_mappings": {}
      }
    ],
    "get-cost-forecast": [
      {
        "action": "ce:GetCostForecast",
        "resource_mappings": {}
      }
    ],
    "get-dimension-values": [
      {
        "action": "ce:GetDimensionValues",
        "resource_mappings": {}
      }
    ],
    "get-reservation-coverage": [
      {
        "action": "ce:GetReservationCoverage",
        "resource_mappings": {}
      }
    ],
    "get-reservation-purchase-recommendation": [
      {
        "action": "ce:GetReservationPurchaseRecommendation",
        "resource_mappings": {}
      }
    ],
    "get-reservation-utilization": [
      {
        "action": "ce:GetReservationUtilization",
        "resource_mappings": {}
      }
    ],
    "get-rightsizing-recommendation": [
      {
        "action": "ce:GetRightsizingRecommendation",
        "resource_mappings": {}
      }
    ],
    "get-savings-plan-purchase-recommendation-details": [
      {
        "action": "ce:GetSavingsPlanPurchaseRecommendationDetails",
        "resource_mappings": {}
      }
    ],
    "get-savings-plans-coverage": [
      {
        "action": "ce:GetSavingsPlansCoverage",
        "resource_mappings": {}
      }
    ],
    "get-savings-plans-purchase-recommendation": [
      {
        "action": "ce:GetSavingsPlansPurchaseRecommendation",
        "resource_mappings": {}
      }
    ],
    "get-savings-plans-utilization": [
      {
        "action": "ce:GetSavingsPlansUtilization",
        "resource_mappings": {}
      }
    ],
    "get-savings-plans-utilization-details": [
      {
        "action": "ce:GetSavingsPlansUtilizationDetails",
        "resource_mappings": {}
      }
    ],
    "get-tags": [
      {
        "action": "ce:GetTags",
        "resource_mappings": {}
      }
    ],
    "get-usage-forecast": [
      {
        "action": "ce:GetUsageForecast",
        "resource_mappings": {}
      }
    ],
    "list-cost-allocation-tags": [
      {
        "action": "ce:ListCostAllocationTags",
        "resource_mappings": {}
      }
    ],
    "list-cost-category-definitions": [
      {
        "action": "ce:ListCostCategoryDefinitions",
        "resource_mappings": {}
      }
    ],
    "list-savings-plans-purchase-recommendation-generation": [
      {
        "action": "ce:ListSavingsPlansPurchaseRecommendationGeneration",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "ce:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "anomalymonitor": "%%iftemplatematch%${ResourceArn}%%",
          "anomalysubscription": "%%iftemplatematch%${ResourceArn}%%",
          "costcategory": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "provide-anomaly-feedback": [
      {
        "action": "ce:ProvideAnomalyFeedback",
        "resource_mappings": {}
      }
    ],
    "start-savings-plans-purchase-recommendation-generation": [
      {
        "action": "ce:StartSavingsPlansPurchaseRecommendationGeneration",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "ce:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "anomalymonitor": "%%iftemplatematch%${ResourceArn}%%",
          "anomalysubscription": "%%iftemplatematch%${ResourceArn}%%",
          "costcategory": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "ce:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "anomalymonitor": "%%iftemplatematch%${ResourceArn}%%",
          "anomalysubscription": "%%iftemplatematch%${ResourceArn}%%",
          "costcategory": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-anomaly-monitor": [
      {
        "action": "ce:UpdateAnomalyMonitor",
        "resource_mappings": {}
      }
    ],
    "update-anomaly-subscription": [
      {
        "action": "ce:UpdateAnomalySubscription",
        "resource_mappings": {}
      }
    ],
    "update-cost-allocation-tags-status": [
      {
        "action": "ce:UpdateCostAllocationTagsStatus",
        "resource_mappings": {}
      }
    ],
    "update-cost-category-definition": [
      {
        "action": "ce:UpdateCostCategoryDefinition",
        "resource_mappings": {}
      }
    ]
  },
  "chime": {
    "associate-phone-number-with-user": [
      {
        "action": "chime:AssociatePhoneNumberWithUser",
        "resource_mappings": {}
      }
    ],
    "associate-phone-numbers-with-voice-connector": [
      {
        "action": "chime:AssociatePhoneNumbersWithVoiceConnector",
        "resource_mappings": {}
      }
    ],
    "associate-phone-numbers-with-voice-connector-group": [
      {
        "action": "chime:AssociatePhoneNumbersWithVoiceConnectorGroup",
        "resource_mappings": {}
      }
    ],
    "associate-signin-delegate-groups-with-account": [
      {
        "action": "chime:AssociateSigninDelegateGroupsWithAccount",
        "resource_mappings": {}
      }
    ],
    "batch-create-attendee": [
      {
        "action": "chime:BatchCreateAttendee",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "MeetingId": {
            "template": "${MeetingId}"
          }
        }
      }
    ],
    "batch-create-channel-membership": [
      {
        "action": "chime:BatchCreateChannelMembership",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${MemberArns}[]",
          "channel": "${ChannelArn}"
        }
      }
    ],
    "batch-create-room-membership": [
      {
        "action": "chime:BatchCreateRoomMembership",
        "resource_mappings": {}
      }
    ],
    "batch-delete-phone-number": [
      {
        "action": "chime:BatchDeletePhoneNumber",
        "resource_mappings": {}
      }
    ],
    "batch-suspend-user": [
      {
        "action": "chime:BatchSuspendUser",
        "resource_mappings": {}
      }
    ],
    "batch-unsuspend-user": [
      {
        "action": "chime:BatchUnsuspendUser",
        "resource_mappings": {}
      }
    ],
    "batch-update-phone-number": [
      {
        "action": "chime:BatchUpdatePhoneNumber",
        "resource_mappings": {}
      }
    ],
    "batch-update-user": [
      {
        "action": "chime:BatchUpdateUser",
        "resource_mappings": {}
      }
    ],
    "create-account": [
      {
        "action": "chime:CreateAccount",
        "resource_mappings": {}
      }
    ],
    "create-app-instance": [
      {
        "action": "chime:CreateAppInstance",
        "resource_mappings": {}
      }
    ],
    "create-app-instance-admin": [
      {
        "action": "chime:CreateAppInstanceAdmin",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance": "${AppInstanceArn}",
          "app-instance-user": "${AppInstanceAdminArn}"
        }
      }
    ],
    "create-app-instance-user": [
      {
        "action": "chime:CreateAppInstanceUser",
        "resource_mappings": {}
      }
    ],
    "create-attendee": [
      {
        "action": "chime:CreateAttendee",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "MeetingId": {
            "template": "${MeetingId}"
          }
        }
      }
    ],
    "create-bot": [
      {
        "action": "chime:CreateBot",
        "resource_mappings": {}
      }
    ],
    "create-channel": [
      {
        "action": "chime:CreateChannel",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "AppInstanceId": {
            "template": "%%regex%${AppInstanceArn}%/^(?:.+\\/)?(.+)$/g%%"
          },
          "AppInstanceUserId": {
            "template": "*"
          }
        }
      }
    ],
    "create-channel-ban": [
      {
        "action": "chime:CreateChannelBan",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${MemberArn}",
          "channel": "${ChannelArn}"
        }
      }
    ],
    "create-channel-membership": [
      {
        "action": "chime:CreateChannelMembership",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${MemberArn}",
          "channel": "${ChannelArn}"
        }
      }
    ],
    "create-channel-moderator": [
      {
        "action": "chime:CreateChannelModerator",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${ChannelModeratorArn}",
          "channel": "${ChannelArn}"
        }
      }
    ],
    "create-media-capture-pipeline": [
      {
        "action": "chime:CreateMediaCapturePipeline",
        "resource_mappings": {}
      }
    ],
    "create-meeting": [
      {
        "action": "chime:CreateMeeting",
        "resource_mappings": {}
      }
    ],
    "create-meeting-dial-out": [
      {
        "action": "chime:CreateMeetingDialOut",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "MeetingId": {
            "template": "${MeetingId}"
          }
        }
      }
    ],
    "create-meeting-with-attendees": [
      {
        "action": "chime:CreateMeetingWithAttendees",
        "resource_mappings": {}
      }
    ],
    "create-phone-number-order": [
      {
        "action": "chime:CreatePhoneNumberOrder",
        "resource_mappings": {}
      }
    ],
    "create-proxy-session": [
      {
        "action": "chime:CreateProxySession",
        "resource_mappings": {}
      }
    ],
    "create-room": [
      {
        "action": "chime:CreateRoom",
        "resource_mappings": {}
      }
    ],
    "create-room-membership": [
      {
        "action": "chime:CreateRoomMembership",
        "resource_mappings": {}
      }
    ],
    "create-sip-media-application": [
      {
        "action": "chime:CreateSipMediaApplication",
        "resource_mappings": {}
      }
    ],
    "create-sip-media-application-call": [
      {
        "action": "chime:CreateSipMediaApplicationCall",
        "resource_mappings": {}
      }
    ],
    "create-sip-rule": [
      {
        "action": "chime:CreateSipRule",
        "resource_mappings": {}
      }
    ],
    "create-user": [
      {
        "action": "chime:CreateUser",
        "resource_mappings": {}
      }
    ],
    "create-voice-connector": [
      {
        "action": "chime:CreateVoiceConnector",
        "resource_mappings": {}
      }
    ],
    "create-voice-connector-group": [
      {
        "action": "chime:CreateVoiceConnectorGroup",
        "resource_mappings": {}
      }
    ],
    "delete-account": [
      {
        "action": "chime:DeleteAccount",
        "resource_mappings": {}
      }
    ],
    "delete-app-instance": [
      {
        "action": "chime:DeleteAppInstance",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance": "${AppInstanceArn}"
        }
      }
    ],
    "delete-app-instance-admin": [
      {
        "action": "chime:DeleteAppInstanceAdmin",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance": "${AppInstanceArn}",
          "app-instance-user": "${AppInstanceAdminArn}"
        }
      }
    ],
    "delete-app-instance-streaming-configurations": [
      {
        "action": "chime:DeleteAppInstanceStreamingConfigurations",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance": "${AppInstanceArn}"
        }
      }
    ],
    "delete-app-instance-user": [
      {
        "action": "chime:DeleteAppInstanceUser",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${AppInstanceUserArn}"
        }
      }
    ],
    "delete-attendee": [
      {
        "action": "chime:DeleteAttendee",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "MeetingId": {
            "template": "${MeetingId}"
          }
        }
      }
    ],
    "delete-channel": [
      {
        "action": "chime:DeleteChannel",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${ChimeBearer}",
          "channel": "${ChannelArn}"
        }
      }
    ],
    "delete-channel-ban": [
      {
        "action": "chime:DeleteChannelBan",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${MemberArn}",
          "channel": "${ChannelArn}"
        }
      }
    ],
    "delete-channel-membership": [
      {
        "action": "chime:DeleteChannelMembership",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${MemberArn}",
          "channel": "${ChannelArn}"
        }
      }
    ],
    "delete-channel-message": [
      {
        "action": "chime:DeleteChannelMessage",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${ChimeBearer}",
          "channel": "${ChannelArn}"
        }
      }
    ],
    "delete-channel-moderator": [
      {
        "action": "chime:DeleteChannelModerator",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${ChannelModeratorArn}",
          "channel": "${ChannelArn}"
        }
      }
    ],
    "delete-events-configuration": [
      {
        "action": "chime:DeleteEventsConfiguration",
        "resource_mappings": {}
      }
    ],
    "delete-media-capture-pipeline": [
      {
        "action": "chime:DeleteMediaCapturePipeline",
        "resource_mappings": {}
      }
    ],
    "delete-meeting": [
      {
        "action": "chime:DeleteMeeting",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "MeetingId": {
            "template": "${MeetingId}"
          }
        }
      }
    ],
    "delete-phone-number": [
      {
        "action": "chime:DeletePhoneNumber",
        "resource_mappings": {}
      }
    ],
    "delete-proxy-session": [
      {
        "action": "chime:DeleteProxySession",
        "resource_mappings": {}
      }
    ],
    "delete-room": [
      {
        "action": "chime:DeleteRoom",
        "resource_mappings": {}
      }
    ],
    "delete-room-membership": [
      {
        "action": "chime:DeleteRoomMembership",
        "resource_mappings": {}
      }
    ],
    "delete-sip-media-application": [
      {
        "action": "chime:DeleteSipMediaApplication",
        "resource_mappings": {}
      }
    ],
    "delete-sip-rule": [
      {
        "action": "chime:DeleteSipRule",
        "resource_mappings": {}
      }
    ],
    "delete-voice-connector": [
      {
        "action": "chime:DeleteVoiceConnector",
        "resource_mappings": {}
      }
    ],
    "delete-voice-connector-emergency-calling-configuration": [
      {
        "action": "chime:DeleteVoiceConnectorEmergencyCallingConfiguration",
        "resource_mappings": {}
      }
    ],
    "delete-voice-connector-group": [
      {
        "action": "chime:DeleteVoiceConnectorGroup",
        "resource_mappings": {}
      }
    ],
    "delete-voice-connector-origination": [
      {
        "action": "chime:DeleteVoiceConnectorOrigination",
        "resource_mappings": {}
      }
    ],
    "delete-voice-connector-proxy": [
      {
        "action": "chime:DeleteVoiceConnectorProxy",
        "resource_mappings": {}
      }
    ],
    "delete-voice-connector-streaming-configuration": [
      {
        "action": "chime:DeleteVoiceConnectorStreamingConfiguration",
        "resource_mappings": {}
      }
    ],
    "delete-voice-connector-termination": [
      {
        "action": "chime:DeleteVoiceConnectorTermination",
        "resource_mappings": {}
      }
    ],
    "delete-voice-connector-termination-credentials": [
      {
        "action": "chime:DeleteVoiceConnectorTerminationCredentials",
        "resource_mappings": {}
      }
    ],
    "describe-app-instance": [
      {
        "action": "chime:DescribeAppInstance",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance": "${AppInstanceArn}"
        }
      }
    ],
    "describe-app-instance-admin": [
      {
        "action": "chime:DescribeAppInstanceAdmin",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance": "${AppInstanceArn}",
          "app-instance-user": "${AppInstanceAdminArn}"
        }
      }
    ],
    "describe-app-instance-user": [
      {
        "action": "chime:DescribeAppInstanceUser",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${AppInstanceUserArn}"
        }
      }
    ],
    "describe-channel": [
      {
        "action": "chime:DescribeChannel",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${ChimeBearer}",
          "channel": "${ChannelArn}"
        }
      }
    ],
    "describe-channel-ban": [
      {
        "action": "chime:DescribeChannelBan",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${MemberArn}",
          "channel": "${ChannelArn}"
        }
      }
    ],
    "describe-channel-membership": [
      {
        "action": "chime:DescribeChannelMembership",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${MemberArn}",
          "channel": "${ChannelArn}"
        }
      }
    ],
    "describe-channel-membership-for-app-instance-user": [
      {
        "action": "chime:DescribeChannelMembershipForAppInstanceUser",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${AppInstanceUserArn}",
          "channel": "${ChannelArn}"
        }
      }
    ],
    "describe-channel-moderated-by-app-instance-user": [
      {
        "action": "chime:DescribeChannelModeratedByAppInstanceUser",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${AppInstanceUserArn}",
          "channel": "${ChannelArn}"
        }
      }
    ],
    "describe-channel-moderator": [
      {
        "action": "chime:DescribeChannelModerator",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${ChannelModeratorArn}",
          "channel": "${ChannelArn}"
        }
      }
    ],
    "disassociate-phone-number-from-user": [
      {
        "action": "chime:DisassociatePhoneNumberFromUser",
        "resource_mappings": {}
      }
    ],
    "disassociate-phone-numbers-from-voice-connector": [
      {
        "action": "chime:DisassociatePhoneNumbersFromVoiceConnector",
        "resource_mappings": {}
      }
    ],
    "disassociate-phone-numbers-from-voice-connector-group": [
      {
        "action": "chime:DisassociatePhoneNumbersFromVoiceConnectorGroup",
        "resource_mappings": {}
      }
    ],
    "disassociate-signin-delegate-groups-from-account": [
      {
        "action": "chime:DisassociateSigninDelegateGroupsFromAccount",
        "resource_mappings": {}
      }
    ],
    "get-account": [
      {
        "action": "chime:GetAccount",
        "resource_mappings": {}
      }
    ],
    "get-account-settings": [
      {
        "action": "chime:GetAccountSettings",
        "resource_mappings": {}
      }
    ],
    "get-app-instance-retention-settings": [
      {
        "action": "chime:GetAppInstanceRetentionSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance": "${AppInstanceArn}"
        }
      }
    ],
    "get-app-instance-streaming-configurations": [
      {
        "action": "chime:GetAppInstanceStreamingConfigurations",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance": "${AppInstanceArn}"
        }
      }
    ],
    "get-attendee": [
      {
        "action": "chime:GetAttendee",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "MeetingId": {
            "template": "${MeetingId}"
          }
        }
      }
    ],
    "get-bot": [
      {
        "action": "chime:GetBot",
        "resource_mappings": {}
      }
    ],
    "get-channel-message": [
      {
        "action": "chime:GetChannelMessage",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${ChimeBearer}",
          "channel": "${ChannelArn}"
        }
      }
    ],
    "get-events-configuration": [
      {
        "action": "chime:GetEventsConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-global-settings": [
      {
        "action": "chime:GetGlobalSettings",
        "resource_mappings": {}
      }
    ],
    "get-media-capture-pipeline": [
      {
        "action": "chime:GetMediaCapturePipeline",
        "resource_mappings": {}
      }
    ],
    "get-meeting": [
      {
        "action": "chime:GetMeeting",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "MeetingId": {
            "template": "${MeetingId}"
          }
        }
      }
    ],
    "get-messaging-session-endpoint": [
      {
        "action": "chime:GetMessagingSessionEndpoint",
        "resource_mappings": {}
      }
    ],
    "get-phone-number": [
      {
        "action": "chime:GetPhoneNumber",
        "resource_mappings": {}
      }
    ],
    "get-phone-number-order": [
      {
        "action": "chime:GetPhoneNumberOrder",
        "resource_mappings": {}
      }
    ],
    "get-phone-number-settings": [
      {
        "action": "chime:GetPhoneNumberSettings",
        "resource_mappings": {}
      }
    ],
    "get-proxy-session": [
      {
        "action": "chime:GetProxySession",
        "resource_mappings": {}
      }
    ],
    "get-retention-settings": [
      {
        "action": "chime:GetRetentionSettings",
        "resource_mappings": {}
      }
    ],
    "get-room": [
      {
        "action": "chime:GetRoom",
        "resource_mappings": {}
      }
    ],
    "get-sip-media-application": [
      {
        "action": "chime:GetSipMediaApplication",
        "resource_mappings": {}
      }
    ],
    "get-sip-media-application-logging-configuration": [
      {
        "action": "chime:GetSipMediaApplicationLoggingConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-sip-rule": [
      {
        "action": "chime:GetSipRule",
        "resource_mappings": {}
      }
    ],
    "get-user": [
      {
        "action": "chime:GetUser",
        "resource_mappings": {}
      }
    ],
    "get-user-settings": [
      {
        "action": "chime:GetUserSettings",
        "resource_mappings": {}
      }
    ],
    "get-voice-connector": [
      {
        "action": "chime:GetVoiceConnector",
        "resource_mappings": {}
      }
    ],
    "get-voice-connector-emergency-calling-configuration": [
      {
        "action": "chime:GetVoiceConnectorEmergencyCallingConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-voice-connector-group": [
      {
        "action": "chime:GetVoiceConnectorGroup",
        "resource_mappings": {}
      }
    ],
    "get-voice-connector-logging-configuration": [
      {
        "action": "chime:GetVoiceConnectorLoggingConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-voice-connector-origination": [
      {
        "action": "chime:GetVoiceConnectorOrigination",
        "resource_mappings": {}
      }
    ],
    "get-voice-connector-proxy": [
      {
        "action": "chime:GetVoiceConnectorProxy",
        "resource_mappings": {}
      }
    ],
    "get-voice-connector-streaming-configuration": [
      {
        "action": "chime:GetVoiceConnectorStreamingConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-voice-connector-termination": [
      {
        "action": "chime:GetVoiceConnectorTermination",
        "resource_mappings": {}
      }
    ],
    "get-voice-connector-termination-health": [
      {
        "action": "chime:GetVoiceConnectorTerminationHealth",
        "resource_mappings": {}
      }
    ],
    "invite-users": [
      {
        "action": "chime:InviteUsers",
        "resource_mappings": {}
      }
    ],
    "list-accounts": [
      {
        "action": "chime:ListAccounts",
        "resource_mappings": {}
      }
    ],
    "list-app-instance-admins": [
      {
        "action": "chime:ListAppInstanceAdmins",
        "resource_mappings": {
          "AccountId": {
            "template": "*"
          },
          "AppInstanceId": {
            "template": "*"
          },
          "AppInstanceUserId": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "app-instance": "${AppInstanceArn}"
        }
      }
    ],
    "list-app-instance-users": [
      {
        "action": "chime:ListAppInstanceUsers",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${AppInstanceArn}/user/*"
        }
      }
    ],
    "list-app-instances": [
      {
        "action": "chime:ListAppInstances",
        "resource_mappings": {
          "AccountId": {
            "template": "*"
          },
          "AppInstanceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-attendee-tags": [
      {
        "action": "chime:ListAttendeeTags",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "MeetingId": {
            "template": "${MeetingId}"
          }
        }
      }
    ],
    "list-attendees": [
      {
        "action": "chime:ListAttendees",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "MeetingId": {
            "template": "${MeetingId}"
          }
        }
      }
    ],
    "list-bots": [
      {
        "action": "chime:ListBots",
        "resource_mappings": {}
      }
    ],
    "list-channel-bans": [
      {
        "action": "chime:ListChannelBans",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${ChimeBearer}",
          "channel": "${ChannelArn}"
        }
      }
    ],
    "list-channel-memberships": [
      {
        "action": "chime:ListChannelMemberships",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${ChimeBearer}",
          "channel": "${ChannelArn}"
        }
      }
    ],
    "list-channel-memberships-for-app-instance-user": [
      {
        "action": "chime:ListChannelMembershipsForAppInstanceUser",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${AppInstanceUserArn}"
        }
      }
    ],
    "list-channel-messages": [
      {
        "action": "chime:ListChannelMessages",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${ChimeBearer}",
          "channel": "${ChannelArn}"
        }
      }
    ],
    "list-channel-moderators": [
      {
        "action": "chime:ListChannelModerators",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${ChimeBearer}",
          "channel": "${ChannelArn}"
        }
      }
    ],
    "list-channels": [
      {
        "action": "chime:ListChannels",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${ChimeBearer}",
          "channel": "${AppInstanceArn}/channel/*"
        }
      }
    ],
    "list-channels-moderated-by-app-instance-user": [
      {
        "action": "chime:ListChannelsModeratedByAppInstanceUser",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${AppInstanceUserArn}"
        }
      }
    ],
    "list-media-capture-pipelines": [
      {
        "action": "chime:ListMediaCapturePipelines",
        "resource_mappings": {}
      }
    ],
    "list-meeting-tags": [
      {
        "action": "chime:ListMeetingTags",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "MeetingId": {
            "template": "${MeetingId}"
          }
        }
      }
    ],
    "list-meetings": [
      {
        "action": "chime:ListMeetings",
        "resource_mappings": {}
      }
    ],
    "list-phone-number-orders": [
      {
        "action": "chime:ListPhoneNumberOrders",
        "resource_mappings": {}
      }
    ],
    "list-phone-numbers": [
      {
        "action": "chime:ListPhoneNumbers",
        "resource_mappings": {}
      }
    ],
    "list-proxy-sessions": [
      {
        "action": "chime:ListProxySessions",
        "resource_mappings": {}
      }
    ],
    "list-room-memberships": [
      {
        "action": "chime:ListRoomMemberships",
        "resource_mappings": {}
      }
    ],
    "list-rooms": [
      {
        "action": "chime:ListRooms",
        "resource_mappings": {}
      }
    ],
    "list-sip-media-applications": [
      {
        "action": "chime:ListSipMediaApplications",
        "resource_mappings": {}
      }
    ],
    "list-sip-rules": [
      {
        "action": "chime:ListSipRules",
        "resource_mappings": {}
      }
    ],
    "list-supported-phone-number-countries": [
      {
        "action": "chime:ListSupportedPhoneNumberCountries",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "chime:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channel": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "list-users": [
      {
        "action": "chime:ListUsers",
        "resource_mappings": {}
      }
    ],
    "list-voice-connector-groups": [
      {
        "action": "chime:ListVoiceConnectorGroups",
        "resource_mappings": {}
      }
    ],
    "list-voice-connector-termination-credentials": [
      {
        "action": "chime:ListVoiceConnectorTerminationCredentials",
        "resource_mappings": {}
      }
    ],
    "list-voice-connectors": [
      {
        "action": "chime:ListVoiceConnectors",
        "resource_mappings": {}
      }
    ],
    "logout-user": [
      {
        "action": "chime:LogoutUser",
        "resource_mappings": {}
      }
    ],
    "put-app-instance-retention-settings": [
      {
        "action": "chime:PutAppInstanceRetentionSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance": "${AppInstanceArn}"
        }
      }
    ],
    "put-app-instance-streaming-configurations": [
      {
        "action": "chime:PutAppInstanceStreamingConfigurations",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance": "${AppInstanceArn}"
        }
      }
    ],
    "put-events-configuration": [
      {
        "action": "chime:PutEventsConfiguration",
        "resource_mappings": {}
      }
    ],
    "put-retention-settings": [
      {
        "action": "chime:PutRetentionSettings",
        "resource_mappings": {}
      }
    ],
    "put-sip-media-application-logging-configuration": [
      {
        "action": "chime:PutSipMediaApplicationLoggingConfiguration",
        "resource_mappings": {}
      }
    ],
    "put-voice-connector-emergency-calling-configuration": [
      {
        "action": "chime:PutVoiceConnectorEmergencyCallingConfiguration",
        "resource_mappings": {}
      }
    ],
    "put-voice-connector-logging-configuration": [
      {
        "action": "chime:PutVoiceConnectorLoggingConfiguration",
        "resource_mappings": {}
      },
      {
        "action": "logs:CreateLogDelivery",
        "resource_mappings": {}
      }
    ],
    "put-voice-connector-origination": [
      {
        "action": "chime:PutVoiceConnectorOrigination",
        "resource_mappings": {}
      }
    ],
    "put-voice-connector-proxy": [
      {
        "action": "chime:PutVoiceConnectorProxy",
        "resource_mappings": {}
      }
    ],
    "put-voice-connector-streaming-configuration": [
      {
        "action": "chime:PutVoiceConnectorStreamingConfiguration",
        "resource_mappings": {}
      }
    ],
    "put-voice-connector-termination": [
      {
        "action": "chime:PutVoiceConnectorTermination",
        "resource_mappings": {}
      }
    ],
    "put-voice-connector-termination-credentials": [
      {
        "action": "chime:PutVoiceConnectorTerminationCredentials",
        "resource_mappings": {}
      }
    ],
    "redact-channel-message": [
      {
        "action": "chime:RedactChannelMessage",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${ChimeBearer}",
          "channel": "${ChannelArn}"
        }
      }
    ],
    "redact-conversation-message": [
      {
        "action": "chime:RedactConversationMessage",
        "resource_mappings": {}
      }
    ],
    "redact-room-message": [
      {
        "action": "chime:RedactRoomMessage",
        "resource_mappings": {}
      }
    ],
    "regenerate-security-token": [
      {
        "action": "chime:RegenerateSecurityToken",
        "resource_mappings": {}
      }
    ],
    "reset-personal-pin": [
      {
        "action": "chime:ResetPersonalPIN",
        "resource_mappings": {}
      }
    ],
    "restore-phone-number": [
      {
        "action": "chime:RestorePhoneNumber",
        "resource_mappings": {}
      }
    ],
    "search-available-phone-numbers": [
      {
        "action": "chime:SearchAvailablePhoneNumbers",
        "resource_mappings": {}
      }
    ],
    "send-channel-message": [
      {
        "action": "chime:SendChannelMessage",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${ChimeBearer}",
          "channel": "${ChannelArn}"
        }
      }
    ],
    "start-meeting-transcription": [
      {
        "action": "chime:StartMeetingTranscription",
        "resource_mappings": {}
      }
    ],
    "stop-meeting-transcription": [
      {
        "action": "chime:StopMeetingTranscription",
        "resource_mappings": {}
      }
    ],
    "tag-attendee": [
      {
        "action": "chime:TagAttendee",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "MeetingId": {
            "template": "${MeetingId}"
          }
        }
      }
    ],
    "tag-meeting": [
      {
        "action": "chime:TagMeeting",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "MeetingId": {
            "template": "${MeetingId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "chime:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channel": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "untag-attendee": [
      {
        "action": "chime:UntagAttendee",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "MeetingId": {
            "template": "${MeetingId}"
          }
        }
      }
    ],
    "untag-meeting": [
      {
        "action": "chime:UntagMeeting",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "MeetingId": {
            "template": "${MeetingId}"
          }
        }
      }
    ],
    "untag-resource": [
      {
        "action": "chime:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channel": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "update-account": [
      {
        "action": "chime:UpdateAccount",
        "resource_mappings": {}
      }
    ],
    "update-account-settings": [
      {
        "action": "chime:UpdateAccountSettings",
        "resource_mappings": {}
      }
    ],
    "update-app-instance": [
      {
        "action": "chime:UpdateAppInstance",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance": "${AppInstanceArn}"
        }
      }
    ],
    "update-app-instance-user": [
      {
        "action": "chime:UpdateAppInstanceUser",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${AppInstanceUserArn}"
        }
      }
    ],
    "update-bot": [
      {
        "action": "chime:UpdateBot",
        "resource_mappings": {}
      }
    ],
    "update-channel": [
      {
        "action": "chime:UpdateChannel",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${ChimeBearer}",
          "channel": "${ChannelArn}"
        }
      }
    ],
    "update-channel-message": [
      {
        "action": "chime:UpdateChannelMessage",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${ChimeBearer}",
          "channel": "${ChannelArn}"
        }
      }
    ],
    "update-channel-read-marker": [
      {
        "action": "chime:UpdateChannelReadMarker",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${ChimeBearer}",
          "channel": "${ChannelArn}"
        }
      }
    ],
    "update-global-settings": [
      {
        "action": "chime:UpdateGlobalSettings",
        "resource_mappings": {}
      }
    ],
    "update-phone-number": [
      {
        "action": "chime:UpdatePhoneNumber",
        "resource_mappings": {}
      }
    ],
    "update-phone-number-settings": [
      {
        "action": "chime:UpdatePhoneNumberSettings",
        "resource_mappings": {}
      }
    ],
    "update-proxy-session": [
      {
        "action": "chime:UpdateProxySession",
        "resource_mappings": {}
      }
    ],
    "update-room": [
      {
        "action": "chime:UpdateRoom",
        "resource_mappings": {}
      }
    ],
    "update-room-membership": [
      {
        "action": "chime:UpdateRoomMembership",
        "resource_mappings": {}
      }
    ],
    "update-sip-media-application": [
      {
        "action": "chime:UpdateSipMediaApplication",
        "resource_mappings": {}
      }
    ],
    "update-sip-media-application-call": [
      {
        "action": "chime:UpdateSipMediaApplicationCall",
        "resource_mappings": {}
      }
    ],
    "update-sip-rule": [
      {
        "action": "chime:UpdateSipRule",
        "resource_mappings": {}
      }
    ],
    "update-user": [
      {
        "action": "chime:UpdateUser",
        "resource_mappings": {}
      }
    ],
    "update-user-settings": [
      {
        "action": "chime:UpdateUserSettings",
        "resource_mappings": {}
      }
    ],
    "update-voice-connector": [
      {
        "action": "chime:UpdateVoiceConnector",
        "resource_mappings": {}
      }
    ],
    "update-voice-connector-group": [
      {
        "action": "chime:UpdateVoiceConnectorGroup",
        "resource_mappings": {}
      }
    ],
    "validate-e911-address": [
      {
        "action": "chime:ValidateE911Address",
        "resource_mappings": {}
      }
    ]
  },
  "chime-sdk-identity": {
    "create-app-instance": [
      {
        "action": "chime:CreateAppInstance",
        "resource_mappings": {}
      }
    ],
    "create-app-instance-admin": [
      {
        "action": "chime:CreateAppInstanceAdmin",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance": "${AppInstanceArn}",
          "app-instance-user": "${AppInstanceAdminArn}"
        }
      }
    ],
    "create-app-instance-bot": [
      {
        "action": "chime:CreateAppInstanceBot",
        "resource_mappings": {}
      }
    ],
    "create-app-instance-user": [
      {
        "action": "chime:CreateAppInstanceUser",
        "resource_mappings": {}
      }
    ],
    "delete-app-instance": [
      {
        "action": "chime:DeleteAppInstance",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance": "${AppInstanceArn}"
        }
      }
    ],
    "delete-app-instance-admin": [
      {
        "action": "chime:DeleteAppInstanceAdmin",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance": "${AppInstanceArn}",
          "app-instance-user": "${AppInstanceAdminArn}"
        }
      }
    ],
    "delete-app-instance-bot": [
      {
        "action": "chime:DeleteAppInstanceBot",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-bot": "${AppInstanceBotArn}"
        }
      }
    ],
    "delete-app-instance-user": [
      {
        "action": "chime:DeleteAppInstanceUser",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${AppInstanceUserArn}"
        }
      }
    ],
    "deregister-app-instance-user-endpoint": [
      {
        "action": "chime:DeregisterAppInstanceUserEndpoint",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${AppInstanceUserArn}"
        }
      }
    ],
    "describe-app-instance": [
      {
        "action": "chime:DescribeAppInstance",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance": "${AppInstanceArn}"
        }
      }
    ],
    "describe-app-instance-admin": [
      {
        "action": "chime:DescribeAppInstanceAdmin",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance": "${AppInstanceArn}",
          "app-instance-user": "${AppInstanceAdminArn}"
        }
      }
    ],
    "describe-app-instance-bot": [
      {
        "action": "chime:DescribeAppInstanceBot",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-bot": "${AppInstanceBotArn}"
        }
      }
    ],
    "describe-app-instance-user": [
      {
        "action": "chime:DescribeAppInstanceUser",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${AppInstanceUserArn}"
        }
      }
    ],
    "describe-app-instance-user-endpoint": [
      {
        "action": "chime:DescribeAppInstanceUserEndpoint",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${AppInstanceUserArn}"
        }
      }
    ],
    "get-app-instance-retention-settings": [
      {
        "action": "chime:GetAppInstanceRetentionSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance": "${AppInstanceArn}"
        }
      }
    ],
    "list-app-instance-admins": [
      {
        "action": "chime:ListAppInstanceAdmins",
        "resource_mappings": {
          "AccountId": {
            "template": "*"
          },
          "AppInstanceId": {
            "template": "*"
          },
          "AppInstanceUserId": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "app-instance": "${AppInstanceArn}"
        }
      }
    ],
    "list-app-instance-bots": [
      {
        "action": "chime:ListAppInstanceBots",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-bot": "${AppInstanceArn}/bot/*"
        }
      }
    ],
    "list-app-instance-user-endpoints": [
      {
        "action": "chime:ListAppInstanceUserEndpoints",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${AppInstanceUserArn}"
        }
      }
    ],
    "list-app-instance-users": [
      {
        "action": "chime:ListAppInstanceUsers",
        "resource_mappings": {
          "AccountId": {
            "template": "*"
          },
          "AppInstanceId": {
            "template": "*"
          },
          "AppInstanceUserId": {
            "template": "*"
          }
        }
      }
    ],
    "list-app-instances": [
      {
        "action": "chime:ListAppInstances",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "AppInstanceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "chime:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channel": "%%iftruthy%${ResourceARN}%%"
        }
      }
    ],
    "put-app-instance-retention-settings": [
      {
        "action": "chime:PutAppInstanceRetentionSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance": "${AppInstanceArn}"
        }
      }
    ],
    "put-app-instance-user-expiration-settings": [
      {
        "action": "chime:PutAppInstanceUserExpirationSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${AppInstanceUserArn}"
        }
      }
    ],
    "register-app-instance-user-endpoint": [
      {
        "action": "chime:RegisterAppInstanceUserEndpoint",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${AppInstanceUserArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "chime:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channel": "%%iftruthy%${ResourceARN}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "chime:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channel": "%%iftruthy%${ResourceARN}%%"
        }
      }
    ],
    "update-app-instance": [
      {
        "action": "chime:UpdateAppInstance",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance": "${AppInstanceArn}"
        }
      }
    ],
    "update-app-instance-bot": [
      {
        "action": "chime:UpdateAppInstanceBot",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-bot": "${AppInstanceBotArn}"
        }
      }
    ],
    "update-app-instance-user": [
      {
        "action": "chime:UpdateAppInstanceUser",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${AppInstanceUserArn}"
        }
      }
    ],
    "update-app-instance-user-endpoint": [
      {
        "action": "chime:UpdateAppInstanceUserEndpoint",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-instance-user": "${AppInstanceUserArn}"
        }
      }
    ]
  },
  "chime-sdk-media-pipelines": {
    "create-media-capture-pipeline": [
      {
        "action": "chime:CreateMediaCapturePipeline",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "create-media-concatenation-pipeline": [
      {
        "action": "chime:CreateMediaConcatenationPipeline",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "create-media-insights-pipeline": [
      {
        "note": "NotFound",
        "action": "Chime SDK Media Pipelines:CreateMediaInsightsPipeline",
        "resource_mappings": {}
      }
    ],
    "create-media-insights-pipeline-configuration": [
      {
        "note": "NotFound",
        "action": "Chime SDK Media Pipelines:CreateMediaInsightsPipelineConfiguration",
        "resource_mappings": {}
      }
    ],
    "create-media-live-connector-pipeline": [
      {
        "action": "chime:CreateMediaLiveConnectorPipeline",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "create-media-pipeline-kinesis-video-stream-pool": [
      {
        "note": "NotFound",
        "action": "Chime SDK Media Pipelines:CreateMediaPipelineKinesisVideoStreamPool",
        "resource_mappings": {}
      }
    ],
    "create-media-stream-pipeline": [
      {
        "note": "NotFound",
        "action": "Chime SDK Media Pipelines:CreateMediaStreamPipeline",
        "resource_mappings": {}
      }
    ],
    "delete-media-capture-pipeline": [
      {
        "action": "chime:DeleteMediaCapturePipeline",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "delete-media-insights-pipeline-configuration": [
      {
        "note": "NotFound",
        "action": "Chime SDK Media Pipelines:DeleteMediaInsightsPipelineConfiguration",
        "resource_mappings": {}
      }
    ],
    "delete-media-pipeline": [
      {
        "action": "chime:DeleteMediaPipeline",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "delete-media-pipeline-kinesis-video-stream-pool": [
      {
        "note": "NotFound",
        "action": "Chime SDK Media Pipelines:DeleteMediaPipelineKinesisVideoStreamPool",
        "resource_mappings": {}
      }
    ],
    "get-media-capture-pipeline": [
      {
        "action": "chime:GetMediaCapturePipeline",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "get-media-insights-pipeline-configuration": [
      {
        "note": "NotFound",
        "action": "Chime SDK Media Pipelines:GetMediaInsightsPipelineConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-media-pipeline": [
      {
        "action": "chime:GetMediaPipeline",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "get-media-pipeline-kinesis-video-stream-pool": [
      {
        "note": "NotFound",
        "action": "Chime SDK Media Pipelines:GetMediaPipelineKinesisVideoStreamPool",
        "resource_mappings": {}
      }
    ],
    "get-speaker-search-task": [
      {
        "note": "NotFound",
        "action": "Chime SDK Media Pipelines:GetSpeakerSearchTask",
        "resource_mappings": {}
      }
    ],
    "get-voice-tone-analysis-task": [
      {
        "note": "NotFound",
        "action": "Chime SDK Media Pipelines:GetVoiceToneAnalysisTask",
        "resource_mappings": {}
      }
    ],
    "list-media-capture-pipelines": [
      {
        "action": "chime:ListMediaCapturePipelines",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "list-media-insights-pipeline-configurations": [
      {
        "note": "NotFound",
        "action": "Chime SDK Media Pipelines:ListMediaInsightsPipelineConfigurations",
        "resource_mappings": {}
      }
    ],
    "list-media-pipeline-kinesis-video-stream-pools": [
      {
        "note": "NotFound",
        "action": "Chime SDK Media Pipelines:ListMediaPipelineKinesisVideoStreamPools",
        "resource_mappings": {}
      }
    ],
    "list-media-pipelines": [
      {
        "action": "chime:ListMediaPipelines",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "chime:ListTagsForResource",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "start-speaker-search-task": [
      {
        "note": "NotFound",
        "action": "Chime SDK Media Pipelines:StartSpeakerSearchTask",
        "resource_mappings": {}
      }
    ],
    "start-voice-tone-analysis-task": [
      {
        "note": "NotFound",
        "action": "Chime SDK Media Pipelines:StartVoiceToneAnalysisTask",
        "resource_mappings": {}
      }
    ],
    "stop-speaker-search-task": [
      {
        "note": "NotFound",
        "action": "Chime SDK Media Pipelines:StopSpeakerSearchTask",
        "resource_mappings": {}
      }
    ],
    "stop-voice-tone-analysis-task": [
      {
        "note": "NotFound",
        "action": "Chime SDK Media Pipelines:StopVoiceToneAnalysisTask",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "chime:TagResource",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "chime:UntagResource",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "update-media-insights-pipeline-configuration": [
      {
        "note": "NotFound",
        "action": "Chime SDK Media Pipelines:UpdateMediaInsightsPipelineConfiguration",
        "resource_mappings": {}
      }
    ],
    "update-media-insights-pipeline-status": [
      {
        "note": "NotFound",
        "action": "Chime SDK Media Pipelines:UpdateMediaInsightsPipelineStatus",
        "resource_mappings": {}
      }
    ],
    "update-media-pipeline-kinesis-video-stream-pool": [
      {
        "note": "NotFound",
        "action": "Chime SDK Media Pipelines:UpdateMediaPipelineKinesisVideoStreamPool",
        "resource_mappings": {}
      }
    ]
  },
  "chime-sdk-meetings": {
    "batch-create-attendee": [
      {
        "action": "chime:BatchCreateAttendee",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:chime:${Region}:${Account}:meeting/${MeetingId}"
        }
      }
    ],
    "batch-update-attendee-capabilities-except": [
      {
        "action": "chime:BatchUpdateAttendeeCapabilitiesExcept",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "create-attendee": [
      {
        "action": "chime:CreateAttendee",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:chime:${Region}:${Account}:meeting/${MeetingId}"
        }
      }
    ],
    "create-meeting": [
      {
        "action": "chime:CreateMeeting",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:chime:${Region}:${Account}:meeting/*"
        }
      }
    ],
    "create-meeting-with-attendees": [
      {
        "action": "chime:CreateMeetingWithAttendees",
        "undocumented": true,
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "delete-attendee": [
      {
        "action": "chime:DeleteAttendee",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:chime:${Region}:${Account}:meeting/${MeetingId}"
        }
      }
    ],
    "delete-meeting": [
      {
        "action": "chime:DeleteMeeting",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:chime:${Region}:${Account}:meeting/${MeetingId}"
        }
      }
    ],
    "get-attendee": [
      {
        "action": "chime:GetAttendee",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:chime:${Region}:${Account}:meeting/${MeetingId}"
        }
      }
    ],
    "get-meeting": [
      {
        "action": "chime:GetMeeting",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:chime:${Region}:${Account}:meeting/${MeetingId}"
        }
      }
    ],
    "list-attendees": [
      {
        "action": "chime:ListAttendees",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:chime:${Region}:${Account}:meeting/${MeetingId}"
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "chime:ListTagsForResource",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "start-meeting-transcription": [
      {
        "action": "chime:StartMeetingTranscription",
        "undocumented": true,
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "stop-meeting-transcription": [
      {
        "action": "chime:StopMeetingTranscription",
        "undocumented": true,
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "chime:TagResource",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "chime:UntagResource",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "update-attendee-capabilities": [
      {
        "action": "chime:UpdateAttendeeCapabilities",
        "undocumented": true,
        "resource_mappings": {}
      }
    ]
  },
  "chime-sdk-messaging": {
    "associate-channel-flow": [
      {
        "action": "chime:AssociateChannelFlow",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "batch-create-channel-membership": [
      {
        "action": "chime:BatchCreateChannelMembership",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "channel-flow-callback": [
      {
        "action": "chime:ChannelFlowCallback",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "create-channel": [
      {
        "action": "chime:CreateChannel",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "create-channel-ban": [
      {
        "action": "chime:CreateChannelBan",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "create-channel-flow": [
      {
        "action": "chime:CreateChannelFlow",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "create-channel-membership": [
      {
        "action": "chime:CreateChannelMembership",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "create-channel-moderator": [
      {
        "action": "chime:CreateChannelModerator",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "delete-channel": [
      {
        "action": "chime:DeleteChannel",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "delete-channel-ban": [
      {
        "action": "chime:DeleteChannelBan",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "delete-channel-flow": [
      {
        "action": "chime:DeleteChannelFlow",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "delete-channel-membership": [
      {
        "action": "chime:DeleteChannelMembership",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "delete-channel-message": [
      {
        "action": "chime:DeleteChannelMessage",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "delete-channel-moderator": [
      {
        "action": "chime:DeleteChannelModerator",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "delete-messaging-streaming-configurations": [
      {
        "note": "NotFound",
        "action": "Chime SDK Messaging:DeleteMessagingStreamingConfigurations",
        "resource_mappings": {}
      }
    ],
    "describe-channel": [
      {
        "action": "chime:DescribeChannel",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "describe-channel-ban": [
      {
        "action": "chime:DescribeChannelBan",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "describe-channel-flow": [
      {
        "action": "chime:DescribeChannelFlow",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "describe-channel-membership": [
      {
        "action": "chime:DescribeChannelMembership",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "describe-channel-membership-for-app-instance-user": [
      {
        "action": "chime:DescribeChannelMembershipForAppInstanceUser",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "describe-channel-moderated-by-app-instance-user": [
      {
        "action": "chime:DescribeChannelModeratedByAppInstanceUser",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "describe-channel-moderator": [
      {
        "action": "chime:DescribeChannelModerator",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "disassociate-channel-flow": [
      {
        "action": "chime:DisassociateChannelFlow",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "get-channel-membership-preferences": [
      {
        "action": "chime:GetChannelMembershipPreferences",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "get-channel-message": [
      {
        "action": "chime:GetChannelMessage",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "get-channel-message-status": [
      {
        "action": "chime:GetChannelMessageStatus",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "get-messaging-session-endpoint": [
      {
        "action": "chime:GetMessagingSessionEndpoint",
        "undocumented": true,
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "get-messaging-streaming-configurations": [
      {
        "note": "NotFound",
        "action": "Chime SDK Messaging:GetMessagingStreamingConfigurations",
        "resource_mappings": {}
      }
    ],
    "list-channel-bans": [
      {
        "action": "chime:ListChannelBans",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "list-channel-flows": [
      {
        "action": "chime:ListChannelFlows",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "list-channel-memberships": [
      {
        "action": "chime:ListChannelMemberships",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "list-channel-memberships-for-app-instance-user": [
      {
        "action": "chime:ListChannelMembershipsForAppInstanceUser",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "list-channel-messages": [
      {
        "action": "chime:ListChannelMessages",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "list-channel-moderators": [
      {
        "action": "chime:ListChannelModerators",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "list-channels": [
      {
        "action": "chime:ListChannels",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "list-channels-associated-with-channel-flow": [
      {
        "action": "chime:ListChannelsAssociatedWithChannelFlow",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "list-channels-moderated-by-app-instance-user": [
      {
        "action": "chime:ListChannelsModeratedByAppInstanceUser",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "list-sub-channels": [
      {
        "action": "chime:ListSubChannels",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "chime:ListTagsForResource",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "put-channel-expiration-settings": [
      {
        "note": "NotFound",
        "action": "Chime SDK Messaging:PutChannelExpirationSettings",
        "resource_mappings": {}
      }
    ],
    "put-channel-membership-preferences": [
      {
        "action": "chime:PutChannelMembershipPreferences",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "put-messaging-streaming-configurations": [
      {
        "note": "NotFound",
        "action": "Chime SDK Messaging:PutMessagingStreamingConfigurations",
        "resource_mappings": {}
      }
    ],
    "redact-channel-message": [
      {
        "action": "chime:RedactChannelMessage",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "search-channels": [
      {
        "action": "chime:SearchChannels",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "send-channel-message": [
      {
        "action": "chime:SendChannelMessage",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "chime:TagResource",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "chime:UntagResource",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "update-channel": [
      {
        "action": "chime:UpdateChannel",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "update-channel-flow": [
      {
        "action": "chime:UpdateChannelFlow",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "update-channel-message": [
      {
        "action": "chime:UpdateChannelMessage",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "update-channel-read-marker": [
      {
        "action": "chime:UpdateChannelReadMarker",
        "undocumented": true,
        "resource_mappings": {}
      }
    ]
  },
  "chime-sdk-voice": {
    "associate-phone-numbers-with-voice-connector": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:AssociatePhoneNumbersWithVoiceConnector",
        "resource_mappings": {}
      }
    ],
    "associate-phone-numbers-with-voice-connector-group": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:AssociatePhoneNumbersWithVoiceConnectorGroup",
        "resource_mappings": {}
      }
    ],
    "batch-delete-phone-number": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:BatchDeletePhoneNumber",
        "resource_mappings": {}
      }
    ],
    "batch-update-phone-number": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:BatchUpdatePhoneNumber",
        "resource_mappings": {}
      }
    ],
    "create-phone-number-order": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:CreatePhoneNumberOrder",
        "resource_mappings": {}
      }
    ],
    "create-proxy-session": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:CreateProxySession",
        "resource_mappings": {}
      }
    ],
    "create-sip-media-application": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:CreateSipMediaApplication",
        "resource_mappings": {}
      }
    ],
    "create-sip-media-application-call": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:CreateSipMediaApplicationCall",
        "resource_mappings": {}
      }
    ],
    "create-sip-rule": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:CreateSipRule",
        "resource_mappings": {}
      }
    ],
    "create-voice-connector": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:CreateVoiceConnector",
        "resource_mappings": {}
      }
    ],
    "create-voice-connector-group": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:CreateVoiceConnectorGroup",
        "resource_mappings": {}
      }
    ],
    "create-voice-profile": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:CreateVoiceProfile",
        "resource_mappings": {}
      }
    ],
    "create-voice-profile-domain": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:CreateVoiceProfileDomain",
        "resource_mappings": {}
      }
    ],
    "delete-phone-number": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:DeletePhoneNumber",
        "resource_mappings": {}
      }
    ],
    "delete-proxy-session": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:DeleteProxySession",
        "resource_mappings": {}
      }
    ],
    "delete-sip-media-application": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:DeleteSipMediaApplication",
        "resource_mappings": {}
      }
    ],
    "delete-sip-rule": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:DeleteSipRule",
        "resource_mappings": {}
      }
    ],
    "delete-voice-connector": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:DeleteVoiceConnector",
        "resource_mappings": {}
      }
    ],
    "delete-voice-connector-emergency-calling-configuration": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:DeleteVoiceConnectorEmergencyCallingConfiguration",
        "resource_mappings": {}
      }
    ],
    "delete-voice-connector-group": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:DeleteVoiceConnectorGroup",
        "resource_mappings": {}
      }
    ],
    "delete-voice-connector-origination": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:DeleteVoiceConnectorOrigination",
        "resource_mappings": {}
      }
    ],
    "delete-voice-connector-proxy": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:DeleteVoiceConnectorProxy",
        "resource_mappings": {}
      }
    ],
    "delete-voice-connector-streaming-configuration": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:DeleteVoiceConnectorStreamingConfiguration",
        "resource_mappings": {}
      }
    ],
    "delete-voice-connector-termination": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:DeleteVoiceConnectorTermination",
        "resource_mappings": {}
      }
    ],
    "delete-voice-connector-termination-credentials": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:DeleteVoiceConnectorTerminationCredentials",
        "resource_mappings": {}
      }
    ],
    "delete-voice-profile": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:DeleteVoiceProfile",
        "resource_mappings": {}
      }
    ],
    "delete-voice-profile-domain": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:DeleteVoiceProfileDomain",
        "resource_mappings": {}
      }
    ],
    "disassociate-phone-numbers-from-voice-connector": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:DisassociatePhoneNumbersFromVoiceConnector",
        "resource_mappings": {}
      }
    ],
    "disassociate-phone-numbers-from-voice-connector-group": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:DisassociatePhoneNumbersFromVoiceConnectorGroup",
        "resource_mappings": {}
      }
    ],
    "get-global-settings": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:GetGlobalSettings",
        "resource_mappings": {}
      }
    ],
    "get-phone-number": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:GetPhoneNumber",
        "resource_mappings": {}
      }
    ],
    "get-phone-number-order": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:GetPhoneNumberOrder",
        "resource_mappings": {}
      }
    ],
    "get-phone-number-settings": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:GetPhoneNumberSettings",
        "resource_mappings": {}
      }
    ],
    "get-proxy-session": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:GetProxySession",
        "resource_mappings": {}
      }
    ],
    "get-sip-media-application": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:GetSipMediaApplication",
        "resource_mappings": {}
      }
    ],
    "get-sip-media-application-alexa-skill-configuration": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:GetSipMediaApplicationAlexaSkillConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-sip-media-application-logging-configuration": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:GetSipMediaApplicationLoggingConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-sip-rule": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:GetSipRule",
        "resource_mappings": {}
      }
    ],
    "get-speaker-search-task": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:GetSpeakerSearchTask",
        "resource_mappings": {}
      }
    ],
    "get-voice-connector": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:GetVoiceConnector",
        "resource_mappings": {}
      }
    ],
    "get-voice-connector-emergency-calling-configuration": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:GetVoiceConnectorEmergencyCallingConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-voice-connector-group": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:GetVoiceConnectorGroup",
        "resource_mappings": {}
      }
    ],
    "get-voice-connector-logging-configuration": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:GetVoiceConnectorLoggingConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-voice-connector-origination": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:GetVoiceConnectorOrigination",
        "resource_mappings": {}
      }
    ],
    "get-voice-connector-proxy": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:GetVoiceConnectorProxy",
        "resource_mappings": {}
      }
    ],
    "get-voice-connector-streaming-configuration": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:GetVoiceConnectorStreamingConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-voice-connector-termination": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:GetVoiceConnectorTermination",
        "resource_mappings": {}
      }
    ],
    "get-voice-connector-termination-health": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:GetVoiceConnectorTerminationHealth",
        "resource_mappings": {}
      }
    ],
    "get-voice-profile": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:GetVoiceProfile",
        "resource_mappings": {}
      }
    ],
    "get-voice-profile-domain": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:GetVoiceProfileDomain",
        "resource_mappings": {}
      }
    ],
    "get-voice-tone-analysis-task": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:GetVoiceToneAnalysisTask",
        "resource_mappings": {}
      }
    ],
    "list-available-voice-connector-regions": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:ListAvailableVoiceConnectorRegions",
        "resource_mappings": {}
      }
    ],
    "list-phone-number-orders": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:ListPhoneNumberOrders",
        "resource_mappings": {}
      }
    ],
    "list-phone-numbers": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:ListPhoneNumbers",
        "resource_mappings": {}
      }
    ],
    "list-proxy-sessions": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:ListProxySessions",
        "resource_mappings": {}
      }
    ],
    "list-sip-media-applications": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:ListSipMediaApplications",
        "resource_mappings": {}
      }
    ],
    "list-sip-rules": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:ListSipRules",
        "resource_mappings": {}
      }
    ],
    "list-supported-phone-number-countries": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:ListSupportedPhoneNumberCountries",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "list-voice-connector-groups": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:ListVoiceConnectorGroups",
        "resource_mappings": {}
      }
    ],
    "list-voice-connector-termination-credentials": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:ListVoiceConnectorTerminationCredentials",
        "resource_mappings": {}
      }
    ],
    "list-voice-connectors": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:ListVoiceConnectors",
        "resource_mappings": {}
      }
    ],
    "list-voice-profile-domains": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:ListVoiceProfileDomains",
        "resource_mappings": {}
      }
    ],
    "list-voice-profiles": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:ListVoiceProfiles",
        "resource_mappings": {}
      }
    ],
    "put-sip-media-application-alexa-skill-configuration": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:PutSipMediaApplicationAlexaSkillConfiguration",
        "resource_mappings": {}
      }
    ],
    "put-sip-media-application-logging-configuration": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:PutSipMediaApplicationLoggingConfiguration",
        "resource_mappings": {}
      }
    ],
    "put-voice-connector-emergency-calling-configuration": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:PutVoiceConnectorEmergencyCallingConfiguration",
        "resource_mappings": {}
      }
    ],
    "put-voice-connector-logging-configuration": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:PutVoiceConnectorLoggingConfiguration",
        "resource_mappings": {}
      }
    ],
    "put-voice-connector-origination": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:PutVoiceConnectorOrigination",
        "resource_mappings": {}
      }
    ],
    "put-voice-connector-proxy": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:PutVoiceConnectorProxy",
        "resource_mappings": {}
      }
    ],
    "put-voice-connector-streaming-configuration": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:PutVoiceConnectorStreamingConfiguration",
        "resource_mappings": {}
      }
    ],
    "put-voice-connector-termination": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:PutVoiceConnectorTermination",
        "resource_mappings": {}
      }
    ],
    "put-voice-connector-termination-credentials": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:PutVoiceConnectorTerminationCredentials",
        "resource_mappings": {}
      }
    ],
    "restore-phone-number": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:RestorePhoneNumber",
        "resource_mappings": {}
      }
    ],
    "search-available-phone-numbers": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:SearchAvailablePhoneNumbers",
        "resource_mappings": {}
      }
    ],
    "start-speaker-search-task": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:StartSpeakerSearchTask",
        "resource_mappings": {}
      }
    ],
    "start-voice-tone-analysis-task": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:StartVoiceToneAnalysisTask",
        "resource_mappings": {}
      }
    ],
    "stop-speaker-search-task": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:StopSpeakerSearchTask",
        "resource_mappings": {}
      }
    ],
    "stop-voice-tone-analysis-task": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:StopVoiceToneAnalysisTask",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-global-settings": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:UpdateGlobalSettings",
        "resource_mappings": {}
      }
    ],
    "update-phone-number": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:UpdatePhoneNumber",
        "resource_mappings": {}
      }
    ],
    "update-phone-number-settings": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:UpdatePhoneNumberSettings",
        "resource_mappings": {}
      }
    ],
    "update-proxy-session": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:UpdateProxySession",
        "resource_mappings": {}
      }
    ],
    "update-sip-media-application": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:UpdateSipMediaApplication",
        "resource_mappings": {}
      }
    ],
    "update-sip-media-application-call": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:UpdateSipMediaApplicationCall",
        "resource_mappings": {}
      }
    ],
    "update-sip-rule": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:UpdateSipRule",
        "resource_mappings": {}
      }
    ],
    "update-voice-connector": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:UpdateVoiceConnector",
        "resource_mappings": {}
      }
    ],
    "update-voice-connector-group": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:UpdateVoiceConnectorGroup",
        "resource_mappings": {}
      }
    ],
    "update-voice-profile": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:UpdateVoiceProfile",
        "resource_mappings": {}
      }
    ],
    "update-voice-profile-domain": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:UpdateVoiceProfileDomain",
        "resource_mappings": {}
      }
    ],
    "validate-e911-address": [
      {
        "note": "NotFound",
        "action": "Chime SDK Voice:ValidateE911Address",
        "resource_mappings": {}
      }
    ]
  },
  "cleanrooms": {
    "batch-get-collaboration-analysis-template": [
      {
        "note": "NotFound",
        "action": "CleanRooms:BatchGetCollaborationAnalysisTemplate",
        "resource_mappings": {}
      }
    ],
    "batch-get-schema": [
      {
        "action": "cleanrooms:BatchGetSchema",
        "resource_mappings": {
          "CollaborationId": {
            "template": "${collaborationIdentifier}"
          },
          "MembershipId": {
            "template": "*"
          },
          "ConfiguredTableAssociationId": {
            "template": "*"
          }
        }
      },
      {
        "action": "cleanrooms:GetSchema",
        "resource_mappings": {
          "CollaborationId": {
            "template": "${collaborationIdentifier}"
          },
          "MembershipId": {
            "template": "*"
          },
          "ConfiguredTableAssociationId": {
            "template": "*"
          }
        }
      }
    ],
    "create-analysis-template": [
      {
        "action": "cleanrooms:CreateAnalysisTemplate",
        "resource_mappings": {
          "MembershipId": {
            "template": "${membershipIdentifier}"
          },
          "AnalysisTemplateId": {
            "template": "*"
          }
        }
      }
    ],
    "create-collaboration": [
      {
        "action": "cleanrooms:CreateCollaboration",
        "resource_mappings": {}
      }
    ],
    "create-configured-table": [
      {
        "action": "cleanrooms:CreateConfiguredTable",
        "resource_mappings": {}
      },
      {
        "action": "glue:BatchGetPartition",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${tableReference.glue.databaseName}"
          },
          "TableName": {
            "template": "${tableReference.glue.tableName}"
          }
        }
      },
      {
        "action": "glue:GetDatabase",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${tableReference.glue.databaseName}"
          }
        }
      },
      {
        "action": "glue:GetDatabases",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${tableReference.glue.databaseName}"
          }
        }
      },
      {
        "action": "glue:GetPartition",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${tableReference.glue.databaseName}"
          },
          "TableName": {
            "template": "${tableReference.glue.tableName}"
          }
        }
      },
      {
        "action": "glue:GetPartitions",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${tableReference.glue.databaseName}"
          },
          "TableName": {
            "template": "${tableReference.glue.tableName}"
          }
        }
      },
      {
        "action": "glue:GetSchemaVersion",
        "resource_mappings": {
          "RegistryName": {
            "template": "*"
          },
          "SchemaName": {
            "template": "*"
          }
        }
      },
      {
        "action": "glue:GetTable",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${tableReference.glue.databaseName}"
          },
          "TableName": {
            "template": "${tableReference.glue.tableName}"
          }
        }
      },
      {
        "action": "glue:GetTables",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${tableReference.glue.databaseName}"
          },
          "TableName": {
            "template": "${tableReference.glue.tableName}"
          }
        }
      }
    ],
    "create-configured-table-analysis-rule": [
      {
        "action": "cleanrooms:CreateConfiguredTableAnalysisRule",
        "resource_mappings": {
          "ConfiguredTableId": {
            "template": "${configuredTableIdentifier}"
          }
        }
      }
    ],
    "create-configured-table-association": [
      {
        "action": "cleanrooms:CreateConfiguredTableAssociation",
        "resource_mappings": {
          "ConfiguredTableId": {
            "template": "${configuredTableIdentifier}"
          },
          "MembershipId": {
            "template": "${membershipIdentifier}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${roleArn}"
        }
      }
    ],
    "create-membership": [
      {
        "action": "cleanrooms:CreateMembership",
        "resource_mappings": {
          "CollaborationId": {
            "template": "${collaborationIdentifier}"
          }
        }
      },
      {
        "action": "logs:CreateLogDelivery",
        "resource_mappings": {}
      },
      {
        "action": "logs:CreateLogGroup",
        "resource_mappings": {
          "LogGroupName": {
            "template": "*"
          }
        }
      },
      {
        "action": "logs:DeleteLogDelivery",
        "resource_mappings": {}
      },
      {
        "action": "logs:DescribeLogGroups",
        "resource_mappings": {
          "LogGroupName": {
            "template": "*"
          }
        }
      },
      {
        "action": "logs:DescribeResourcePolicies",
        "resource_mappings": {}
      },
      {
        "action": "logs:GetLogDelivery",
        "resource_mappings": {}
      },
      {
        "action": "logs:ListLogDeliveries",
        "resource_mappings": {}
      },
      {
        "action": "logs:PutResourcePolicy",
        "resource_mappings": {}
      },
      {
        "action": "logs:UpdateLogDelivery",
        "resource_mappings": {}
      }
    ],
    "delete-analysis-template": [
      {
        "action": "cleanrooms:DeleteAnalysisTemplate",
        "resource_mappings": {
          "MembershipId": {
            "template": "${membershipIdentifier}"
          },
          "AnalysisTemplateId": {
            "template": "${analysisTemplateIdentifier}"
          }
        }
      }
    ],
    "delete-collaboration": [
      {
        "action": "cleanrooms:DeleteCollaboration",
        "resource_mappings": {
          "CollaborationId": {
            "template": "${collaborationIdentifier}"
          }
        }
      }
    ],
    "delete-configured-table": [
      {
        "action": "cleanrooms:DeleteConfiguredTable",
        "resource_mappings": {
          "ConfiguredTableId": {
            "template": "${configuredTableIdentifier}"
          }
        }
      }
    ],
    "delete-configured-table-analysis-rule": [
      {
        "action": "cleanrooms:DeleteConfiguredTableAnalysisRule",
        "resource_mappings": {
          "ConfiguredTableId": {
            "template": "${configuredTableIdentifier}"
          }
        }
      }
    ],
    "delete-configured-table-association": [
      {
        "action": "cleanrooms:DeleteConfiguredTableAssociation",
        "resource_mappings": {
          "MembershipId": {
            "template": "${membershipIdentifier}"
          },
          "ConfiguredTableAssociationId": {
            "template": "${configuredTableAssociationIdentifier}"
          }
        }
      }
    ],
    "delete-member": [
      {
        "action": "cleanrooms:DeleteMember",
        "resource_mappings": {
          "CollaborationId": {
            "template": "${collaborationIdentifier}"
          }
        }
      }
    ],
    "delete-membership": [
      {
        "action": "cleanrooms:DeleteMembership",
        "resource_mappings": {
          "MembershipId": {
            "template": "${membershipIdentifier}"
          }
        }
      }
    ],
    "get-analysis-template": [
      {
        "action": "cleanrooms:GetAnalysisTemplate",
        "resource_mappings": {
          "MembershipId": {
            "template": "${membershipIdentifier}"
          },
          "AnalysisTemplateId": {
            "template": "${analysisTemplateIdentifier}"
          }
        }
      }
    ],
    "get-collaboration": [
      {
        "action": "cleanrooms:GetCollaboration",
        "resource_mappings": {
          "CollaborationId": {
            "template": "${collaborationIdentifier}"
          }
        }
      }
    ],
    "get-collaboration-analysis-template": [
      {
        "action": "cleanrooms:GetCollaborationAnalysisTemplate",
        "resource_mappings": {
          "CollaborationId": {
            "template": "${collaborationIdentifier}"
          }
        },
        "resourcearn_mappings": {
          "analysistemplate": "${analysisTemplateArn}"
        }
      }
    ],
    "get-configured-table": [
      {
        "action": "cleanrooms:GetConfiguredTable",
        "resource_mappings": {
          "ConfiguredTableId": {
            "template": "${configuredTableIdentifier}"
          }
        }
      }
    ],
    "get-configured-table-analysis-rule": [
      {
        "action": "cleanrooms:GetConfiguredTableAnalysisRule",
        "resource_mappings": {
          "ConfiguredTableId": {
            "template": "${configuredTableIdentifier}"
          }
        }
      }
    ],
    "get-configured-table-association": [
      {
        "action": "cleanrooms:GetConfiguredTableAssociation",
        "resource_mappings": {
          "MembershipId": {
            "template": "${membershipIdentifier}"
          },
          "ConfiguredTableAssociationId": {
            "template": "${configuredTableAssociationIdentifier}"
          }
        }
      }
    ],
    "get-membership": [
      {
        "action": "cleanrooms:GetMembership",
        "resource_mappings": {
          "MembershipId": {
            "template": "${membershipIdentifier}"
          }
        }
      }
    ],
    "get-protected-query": [
      {
        "action": "cleanrooms:GetProtectedQuery",
        "resource_mappings": {
          "MembershipId": {
            "template": "${membershipIdentifier}"
          }
        }
      }
    ],
    "get-schema": [
      {
        "action": "cleanrooms:GetSchema",
        "resource_mappings": {
          "CollaborationId": {
            "template": "${collaborationIdentifier}"
          },
          "MembershipId": {
            "template": "*"
          },
          "ConfiguredTableAssociationId": {
            "template": "*"
          }
        }
      }
    ],
    "get-schema-analysis-rule": [
      {
        "action": "cleanrooms:GetSchemaAnalysisRule",
        "resource_mappings": {
          "CollaborationId": {
            "template": "${collaborationIdentifier}"
          }
        }
      }
    ],
    "list-analysis-templates": [
      {
        "action": "cleanrooms:ListAnalysisTemplates",
        "resource_mappings": {
          "MembershipId": {
            "template": "${membershipIdentifier}"
          }
        }
      }
    ],
    "list-collaboration-analysis-templates": [
      {
        "action": "cleanrooms:ListCollaborationAnalysisTemplates",
        "resource_mappings": {
          "CollaborationId": {
            "template": "${collaborationIdentifier}"
          }
        }
      }
    ],
    "list-collaborations": [
      {
        "action": "cleanrooms:ListCollaborations",
        "resource_mappings": {}
      }
    ],
    "list-configured-table-associations": [
      {
        "action": "cleanrooms:ListConfiguredTableAssociations",
        "resource_mappings": {
          "MembershipId": {
            "template": "${membershipIdentifier}"
          }
        }
      }
    ],
    "list-configured-tables": [
      {
        "action": "cleanrooms:ListConfiguredTables",
        "resource_mappings": {}
      }
    ],
    "list-members": [
      {
        "action": "cleanrooms:ListMembers",
        "resource_mappings": {
          "CollaborationId": {
            "template": "${collaborationIdentifier}"
          }
        }
      }
    ],
    "list-memberships": [
      {
        "action": "cleanrooms:ListMemberships",
        "resource_mappings": {}
      }
    ],
    "list-protected-queries": [
      {
        "action": "cleanrooms:ListProtectedQueries",
        "resource_mappings": {
          "MembershipId": {
            "template": "${membershipIdentifier}"
          }
        }
      }
    ],
    "list-schemas": [
      {
        "action": "cleanrooms:ListSchemas",
        "resource_mappings": {
          "CollaborationId": {
            "template": "${collaborationIdentifier}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "cleanrooms:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Collaboration": "%%iftemplatematch%${resourceArn}%%",
          "ConfiguredTable": "%%iftemplatematch%${resourceArn}%%",
          "ConfiguredTableAssociation": "%%iftemplatematch%${resourceArn}%%",
          "Membership": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "start-protected-query": [
      {
        "action": "cleanrooms:StartProtectedQuery",
        "resource_mappings": {
          "MembershipId": {
            "template": "${membershipIdentifier}"
          }
        }
      },
      {
        "action": "cleanrooms:GetSchema",
        "resource_mappings": {
          "CollaborationId": {
            "template": "*"
          },
          "MembershipId": {
            "template": "${membershipIdentifier}"
          },
          "ConfiguredTableAssociationId": {
            "template": "*"
          }
        }
      },
      {
        "action": "s3:GetBucketLocation",
        "resource_mappings": {
          "BucketName": {
            "template": "${resultConfiguration.outputConfiguration.s3.bucket}"
          }
        }
      },
      {
        "action": "s3:ListBucket",
        "resource_mappings": {
          "BucketName": {
            "template": "${resultConfiguration.outputConfiguration.s3.bucket}"
          }
        }
      },
      {
        "action": "s3:PutObject",
        "resource_mappings": {
          "BucketName": {
            "template": "${resultConfiguration.outputConfiguration.s3.bucket}"
          },
          "ObjectName": {
            "template": "${resultConfiguration.outputConfiguration.s3.keyPrefix}*"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "cleanrooms:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Collaboration": "%%iftemplatematch%${resourceArn}%%",
          "ConfiguredTable": "%%iftemplatematch%${resourceArn}%%",
          "ConfiguredTableAssociation": "%%iftemplatematch%${resourceArn}%%",
          "Membership": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "cleanrooms:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Collaboration": "%%iftemplatematch%${resourceArn}%%",
          "ConfiguredTable": "%%iftemplatematch%${resourceArn}%%",
          "ConfiguredTableAssociation": "%%iftemplatematch%${resourceArn}%%",
          "Membership": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-analysis-template": [
      {
        "action": "cleanrooms:UpdateAnalysisTemplate",
        "resource_mappings": {
          "MembershipId": {
            "template": "${membershipIdentifier}"
          },
          "AnalysisTemplateId": {
            "template": "${analysisTemplateIdentifier}"
          }
        }
      }
    ],
    "update-collaboration": [
      {
        "action": "cleanrooms:UpdateCollaboration",
        "resource_mappings": {
          "CollaborationId": {
            "template": "${collaborationIdentifier}"
          }
        }
      }
    ],
    "update-configured-table": [
      {
        "action": "cleanrooms:UpdateConfiguredTable",
        "resource_mappings": {
          "ConfiguredTableId": {
            "template": "${configuredTableIdentifier}"
          }
        }
      }
    ],
    "update-configured-table-analysis-rule": [
      {
        "action": "cleanrooms:UpdateConfiguredTableAnalysisRule",
        "resource_mappings": {
          "ConfiguredTableId": {
            "template": "${configuredTableIdentifier}"
          }
        }
      }
    ],
    "update-configured-table-association": [
      {
        "action": "cleanrooms:UpdateConfiguredTableAssociation",
        "resource_mappings": {
          "MembershipId": {
            "template": "${membershipIdentifier}"
          },
          "ConfiguredTableAssociationId": {
            "template": "${configuredTableAssociationIdentifier}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${roleArn}"
        }
      }
    ],
    "update-membership": [
      {
        "action": "cleanrooms:UpdateMembership",
        "resource_mappings": {
          "MembershipId": {
            "template": "${membershipIdentifier}"
          }
        }
      },
      {
        "action": "logs:CreateLogDelivery",
        "resource_mappings": {}
      },
      {
        "action": "logs:CreateLogGroup",
        "resource_mappings": {
          "LogGroupName": {
            "template": "*"
          }
        }
      },
      {
        "action": "logs:DeleteLogDelivery",
        "resource_mappings": {}
      },
      {
        "action": "logs:DescribeLogGroups",
        "resource_mappings": {
          "LogGroupName": {
            "template": "*"
          }
        }
      },
      {
        "action": "logs:DescribeResourcePolicies",
        "resource_mappings": {}
      },
      {
        "action": "logs:GetLogDelivery",
        "resource_mappings": {}
      },
      {
        "action": "logs:ListLogDeliveries",
        "resource_mappings": {}
      },
      {
        "action": "logs:PutResourcePolicy",
        "resource_mappings": {}
      },
      {
        "action": "logs:UpdateLogDelivery",
        "resource_mappings": {}
      }
    ],
    "update-protected-query": [
      {
        "action": "cleanrooms:UpdateProtectedQuery",
        "resource_mappings": {
          "MembershipId": {
            "template": "${membershipIdentifier}"
          }
        }
      }
    ]
  },
  "cloud9": {
    "create-environment-ec2": [
      {
        "action": "cloud9:CreateEnvironmentEC2",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSubnets",
        "resource_mappings": {}
      }
    ],
    "create-environment-membership": [
      {
        "action": "cloud9:CreateEnvironmentMembership",
        "resource_mappings": {
          "ResourceId": {
            "template": "${environmentId}"
          }
        }
      }
    ],
    "delete-environment": [
      {
        "action": "cloud9:DeleteEnvironment",
        "resource_mappings": {
          "ResourceId": {
            "template": "${environmentId}"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "delete-environment-membership": [
      {
        "action": "cloud9:DeleteEnvironmentMembership",
        "resource_mappings": {
          "ResourceId": {
            "template": "${environmentId}"
          }
        }
      }
    ],
    "describe-environment-memberships": [
      {
        "action": "cloud9:DescribeEnvironmentMemberships",
        "resource_mappings": {
          "ResourceId": {
            "template": "${environmentId}"
          }
        }
      }
    ],
    "describe-environment-status": [
      {
        "action": "cloud9:DescribeEnvironmentStatus",
        "resource_mappings": {
          "ResourceId": {
            "template": "${environmentId}"
          }
        }
      }
    ],
    "describe-environments": [
      {
        "action": "cloud9:DescribeEnvironments",
        "resource_mappings": {
          "ResourceId": {
            "template": "${environmentIds[]}"
          }
        }
      }
    ],
    "list-environments": [
      {
        "action": "cloud9:ListEnvironments",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "cloud9:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "environment": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "cloud9:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "environment": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "cloud9:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "environment": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "update-environment": [
      {
        "action": "cloud9:UpdateEnvironment",
        "resource_mappings": {
          "ResourceId": {
            "template": "${environmentId}"
          }
        }
      }
    ],
    "update-environment-membership": [
      {
        "action": "cloud9:UpdateEnvironmentMembership",
        "resource_mappings": {
          "ResourceId": {
            "template": "${environmentId}"
          }
        }
      }
    ]
  },
  "cloudcontrol": {
    "cancel-resource-request": [
      {
        "action": "cloudformation:CancelResourceRequest",
        "resource_mappings": {}
      }
    ],
    "create-resource": [
      {
        "action": "cloudformation:CreateResource",
        "resource_mappings": {}
      }
    ],
    "delete-resource": [
      {
        "action": "cloudformation:DeleteResource",
        "resource_mappings": {}
      }
    ],
    "get-resource": [
      {
        "action": "cloudformation:GetResource",
        "resource_mappings": {}
      }
    ],
    "get-resource-request-status": [
      {
        "action": "cloudformation:GetResourceRequestStatus",
        "resource_mappings": {}
      }
    ],
    "list-resource-requests": [
      {
        "action": "cloudformation:ListResourceRequests",
        "resource_mappings": {}
      }
    ],
    "list-resources": [
      {
        "action": "cloudformation:ListResources",
        "resource_mappings": {}
      }
    ],
    "update-resource": [
      {
        "action": "cloudformation:UpdateResource",
        "resource_mappings": {}
      }
    ],
    "wait": [
      {
        "action": "cloudformation:GetResourceRequestStatus",
        "resource_mappings": {}
      }
    ]
  },
  "clouddirectory": {
    "add-facet-to-object": [
      {
        "action": "clouddirectory:AddFacetToObject",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "apply-schema": [
      {
        "action": "clouddirectory:ApplySchema",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}",
          "publishedSchema": "${PublishedSchemaArn}"
        }
      }
    ],
    "attach-object": [
      {
        "action": "clouddirectory:AttachObject",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "attach-policy": [
      {
        "action": "clouddirectory:AttachPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "attach-to-index": [
      {
        "action": "clouddirectory:AttachToIndex",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "attach-typed-link": [
      {
        "action": "clouddirectory:AttachTypedLink",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "batch-read": [
      {
        "action": "clouddirectory:BatchRead",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "batch-write": [
      {
        "action": "clouddirectory:BatchWrite",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "create-directory": [
      {
        "action": "clouddirectory:CreateDirectory",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "publishedSchema": "${SchemaArn}"
        }
      }
    ],
    "create-facet": [
      {
        "action": "clouddirectory:CreateFacet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "appliedSchema": "%%iftemplatematch%${SchemaArn}%%",
          "developmentSchema": "%%iftemplatematch%${SchemaArn}%%"
        }
      }
    ],
    "create-index": [
      {
        "action": "clouddirectory:CreateIndex",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "create-object": [
      {
        "action": "clouddirectory:CreateObject",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "create-schema": [
      {
        "action": "clouddirectory:CreateSchema",
        "resource_mappings": {}
      }
    ],
    "create-typed-link-facet": [
      {
        "action": "clouddirectory:CreateTypedLinkFacet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "appliedSchema": "%%iftemplatematch%${SchemaArn}%%",
          "developmentSchema": "%%iftemplatematch%${SchemaArn}%%"
        }
      }
    ],
    "delete-directory": [
      {
        "action": "clouddirectory:DeleteDirectory",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "delete-facet": [
      {
        "action": "clouddirectory:DeleteFacet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "developmentSchema": "%%iftemplatematch%${SchemaArn}%%"
        }
      }
    ],
    "delete-object": [
      {
        "action": "clouddirectory:DeleteObject",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "delete-schema": [
      {
        "action": "clouddirectory:DeleteSchema",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "developmentSchema": "%%iftemplatematch%${SchemaArn}%%",
          "publishedSchema": "%%iftemplatematch%${SchemaArn}%%"
        }
      }
    ],
    "delete-typed-link-facet": [
      {
        "action": "clouddirectory:DeleteTypedLinkFacet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "developmentSchema": "%%iftemplatematch%${SchemaArn}%%"
        }
      }
    ],
    "detach-from-index": [
      {
        "action": "clouddirectory:DetachFromIndex",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "detach-object": [
      {
        "action": "clouddirectory:DetachObject",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "detach-policy": [
      {
        "action": "clouddirectory:DetachPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "detach-typed-link": [
      {
        "action": "clouddirectory:DetachTypedLink",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "disable-directory": [
      {
        "action": "clouddirectory:DisableDirectory",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "enable-directory": [
      {
        "action": "clouddirectory:EnableDirectory",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "get-applied-schema-version": [
      {
        "action": "clouddirectory:GetAppliedSchemaVersion",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "appliedSchema": "${SchemaArn}/*"
        }
      }
    ],
    "get-directory": [
      {
        "action": "clouddirectory:GetDirectory",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "get-facet": [
      {
        "action": "clouddirectory:GetFacet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "appliedSchema": "%%iftemplatematch%${SchemaArn}%%",
          "developmentSchema": "%%iftemplatematch%${SchemaArn}%%",
          "publishedSchema": "%%iftemplatematch%${SchemaArn}%%"
        }
      }
    ],
    "get-link-attributes": [
      {
        "action": "clouddirectory:GetLinkAttributes",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "get-object-attributes": [
      {
        "action": "clouddirectory:GetObjectAttributes",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "get-object-information": [
      {
        "action": "clouddirectory:GetObjectInformation",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "get-schema-as-json": [
      {
        "action": "clouddirectory:GetSchemaAsJson",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "appliedSchema": "%%iftemplatematch%${SchemaArn}%%",
          "developmentSchema": "%%iftemplatematch%${SchemaArn}%%",
          "publishedSchema": "%%iftemplatematch%${SchemaArn}%%"
        }
      }
    ],
    "get-typed-link-facet-information": [
      {
        "action": "clouddirectory:GetTypedLinkFacetInformation",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "appliedSchema": "%%iftemplatematch%${SchemaArn}%%",
          "developmentSchema": "%%iftemplatematch%${SchemaArn}%%",
          "publishedSchema": "%%iftemplatematch%${SchemaArn}%%"
        }
      }
    ],
    "list-applied-schema-arns": [
      {
        "action": "clouddirectory:ListAppliedSchemaArns",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "list-attached-indices": [
      {
        "action": "clouddirectory:ListAttachedIndices",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "list-development-schema-arns": [
      {
        "action": "clouddirectory:ListDevelopmentSchemaArns",
        "resource_mappings": {}
      }
    ],
    "list-directories": [
      {
        "action": "clouddirectory:ListDirectories",
        "resource_mappings": {}
      }
    ],
    "list-facet-attributes": [
      {
        "action": "clouddirectory:ListFacetAttributes",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "appliedSchema": "%%iftemplatematch%${SchemaArn}%%",
          "developmentSchema": "%%iftemplatematch%${SchemaArn}%%",
          "publishedSchema": "%%iftemplatematch%${SchemaArn}%%"
        }
      }
    ],
    "list-facet-names": [
      {
        "action": "clouddirectory:ListFacetNames",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "appliedSchema": "%%iftemplatematch%${SchemaArn}%%",
          "developmentSchema": "%%iftemplatematch%${SchemaArn}%%",
          "publishedSchema": "%%iftemplatematch%${SchemaArn}%%"
        }
      }
    ],
    "list-incoming-typed-links": [
      {
        "action": "clouddirectory:ListIncomingTypedLinks",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "list-index": [
      {
        "action": "clouddirectory:ListIndex",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "list-managed-schema-arns": [
      {
        "action": "clouddirectory:ListManagedSchemaArns",
        "resource_mappings": {}
      }
    ],
    "list-object-attributes": [
      {
        "action": "clouddirectory:ListObjectAttributes",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "list-object-children": [
      {
        "action": "clouddirectory:ListObjectChildren",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "list-object-parent-paths": [
      {
        "action": "clouddirectory:ListObjectParentPaths",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "list-object-parents": [
      {
        "action": "clouddirectory:ListObjectParents",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "list-object-policies": [
      {
        "action": "clouddirectory:ListObjectPolicies",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "list-outgoing-typed-links": [
      {
        "action": "clouddirectory:ListOutgoingTypedLinks",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "list-policy-attachments": [
      {
        "action": "clouddirectory:ListPolicyAttachments",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "list-published-schema-arns": [
      {
        "action": "clouddirectory:ListPublishedSchemaArns",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "clouddirectory:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "list-typed-link-facet-attributes": [
      {
        "action": "clouddirectory:ListTypedLinkFacetAttributes",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "appliedSchema": "%%iftemplatematch%${SchemaArn}%%",
          "developmentSchema": "%%iftemplatematch%${SchemaArn}%%",
          "publishedSchema": "%%iftemplatematch%${SchemaArn}%%"
        }
      }
    ],
    "list-typed-link-facet-names": [
      {
        "action": "clouddirectory:ListTypedLinkFacetNames",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "appliedSchema": "%%iftemplatematch%${SchemaArn}%%",
          "developmentSchema": "%%iftemplatematch%${SchemaArn}%%",
          "publishedSchema": "%%iftemplatematch%${SchemaArn}%%"
        }
      }
    ],
    "lookup-policy": [
      {
        "action": "clouddirectory:LookupPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "publish-schema": [
      {
        "action": "clouddirectory:PublishSchema",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "developmentSchema": "${DevelopmentSchemaArn}"
        }
      }
    ],
    "put-schema-from-json": [
      {
        "action": "clouddirectory:PutSchemaFromJson",
        "resource_mappings": {}
      }
    ],
    "remove-facet-from-object": [
      {
        "action": "clouddirectory:RemoveFacetFromObject",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "clouddirectory:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "clouddirectory:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-facet": [
      {
        "action": "clouddirectory:UpdateFacet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "appliedSchema": "%%iftemplatematch%${SchemaArn}%%",
          "developmentSchema": "%%iftemplatematch%${SchemaArn}%%"
        }
      }
    ],
    "update-link-attributes": [
      {
        "action": "clouddirectory:UpdateLinkAttributes",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "update-object-attributes": [
      {
        "action": "clouddirectory:UpdateObjectAttributes",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}"
        }
      }
    ],
    "update-schema": [
      {
        "action": "clouddirectory:UpdateSchema",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "developmentSchema": "%%iftemplatematch%${SchemaArn}%%"
        }
      }
    ],
    "update-typed-link-facet": [
      {
        "action": "clouddirectory:UpdateTypedLinkFacet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "developmentSchema": "%%iftemplatematch%${SchemaArn}%%"
        }
      }
    ],
    "upgrade-applied-schema": [
      {
        "action": "clouddirectory:UpgradeAppliedSchema",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "directory": "${DirectoryArn}",
          "publishedSchema": "${PublishedSchemaArn}"
        }
      }
    ],
    "upgrade-published-schema": [
      {
        "action": "clouddirectory:UpgradePublishedSchema",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "developmentSchema": "${DevelopmentSchemaArn}",
          "publishedSchema": "${PublishedSchemaArn}"
        }
      }
    ]
  },
  "cloudformation": {
    "activate-organizations-access": [
      {
        "action": "cloudformation:ActivateOrganizationsAccess",
        "resource_mappings": {}
      }
    ],
    "activate-type": [
      {
        "action": "cloudformation:ActivateType",
        "resource_mappings": {}
      }
    ],
    "batch-describe-type-configurations": [
      {
        "action": "cloudformation:BatchDescribeTypeConfigurations",
        "resource_mappings": {}
      }
    ],
    "cancel-update-stack": [
      {
        "action": "cloudformation:CancelUpdateStack",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "continue-update-rollback": [
      {
        "action": "cloudformation:ContinueUpdateRollback",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleARN}"
        }
      }
    ],
    "create-change-set": [
      {
        "action": "cloudformation:CreateChangeSet",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleARN}"
        }
      }
    ],
    "create-stack": [
      {
        "action": "cloudformation:CreateStack",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleARN}"
        }
      }
    ],
    "create-stack-instances": [
      {
        "action": "cloudformation:CreateStackInstances",
        "resource_mappings": {
          "StackSetName": {
            "template": "${StackSetName}"
          },
          "Id": {
            "template": "*"
          },
          "StackSetTarget": {
            "template": "*"
          },
          "Type": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "create-stack-set": [
      {
        "action": "cloudformation:CreateStackSet",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${AdministrationRoleARN}%arn:${Partition}:iam::*:role/${ExecutionRoleName}%%"
        }
      }
    ],
    "deactivate-organizations-access": [
      {
        "action": "cloudformation:DeactivateOrganizationsAccess",
        "resource_mappings": {}
      }
    ],
    "deactivate-type": [
      {
        "action": "cloudformation:DeactivateType",
        "resource_mappings": {}
      }
    ],
    "delete-change-set": [
      {
        "action": "cloudformation:DeleteChangeSet",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-stack": [
      {
        "action": "cloudformation:DeleteStack",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-stack-instances": [
      {
        "action": "cloudformation:DeleteStackInstances",
        "resource_mappings": {
          "StackSetName": {
            "template": "${StackSetName}"
          },
          "Id": {
            "template": "*"
          },
          "StackSetTarget": {
            "template": "*"
          },
          "Type": {
            "template": "*"
          }
        }
      }
    ],
    "delete-stack-set": [
      {
        "action": "cloudformation:DeleteStackSet",
        "resource_mappings": {
          "StackSetName": {
            "template": "${StackSetName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "deregister-type": [
      {
        "action": "cloudformation:DeregisterType",
        "resource_mappings": {}
      }
    ],
    "describe-account-limits": [
      {
        "action": "cloudformation:DescribeAccountLimits",
        "resource_mappings": {}
      }
    ],
    "describe-change-set": [
      {
        "action": "cloudformation:DescribeChangeSet",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "describe-change-set-hooks": [
      {
        "action": "cloudformation:DescribeChangeSetHooks",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "describe-organizations-access": [
      {
        "action": "cloudformation:DescribeOrganizationsAccess",
        "resource_mappings": {}
      }
    ],
    "describe-publisher": [
      {
        "action": "cloudformation:DescribePublisher",
        "resource_mappings": {}
      }
    ],
    "describe-stack-drift-detection-status": [
      {
        "action": "cloudformation:DescribeStackDriftDetectionStatus",
        "resource_mappings": {}
      }
    ],
    "describe-stack-events": [
      {
        "action": "cloudformation:DescribeStackEvents",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "describe-stack-instance": [
      {
        "action": "cloudformation:DescribeStackInstance",
        "resource_mappings": {
          "StackSetName": {
            "template": "${StackSetName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "describe-stack-resource": [
      {
        "action": "cloudformation:DescribeStackResource",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "describe-stack-resource-drifts": [
      {
        "action": "cloudformation:DescribeStackResourceDrifts",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "describe-stack-resources": [
      {
        "action": "cloudformation:DescribeStackResources",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "describe-stack-set": [
      {
        "action": "cloudformation:DescribeStackSet",
        "resource_mappings": {
          "StackSetName": {
            "template": "${StackSetName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "describe-stack-set-operation": [
      {
        "action": "cloudformation:DescribeStackSetOperation",
        "resource_mappings": {
          "StackSetName": {
            "template": "${StackSetName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "describe-stacks": [
      {
        "action": "cloudformation:DescribeStacks",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "describe-type": [
      {
        "action": "cloudformation:DescribeType",
        "resource_mappings": {}
      }
    ],
    "describe-type-registration": [
      {
        "action": "cloudformation:DescribeTypeRegistration",
        "resource_mappings": {}
      }
    ],
    "detect-stack-drift": [
      {
        "action": "cloudformation:DetectStackDrift",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "detect-stack-resource-drift": [
      {
        "action": "cloudformation:DetectStackResourceDrift",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "detect-stack-set-drift": [
      {
        "action": "cloudformation:DetectStackSetDrift",
        "resource_mappings": {
          "StackSetName": {
            "template": "${StackSetName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "estimate-template-cost": [
      {
        "action": "cloudformation:EstimateTemplateCost",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "execute-change-set": [
      {
        "action": "cloudformation:ExecuteChangeSet",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-stack-policy": [
      {
        "action": "cloudformation:GetStackPolicy",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-template": [
      {
        "action": "cloudformation:GetTemplate",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-template-summary": [
      {
        "action": "cloudformation:GetTemplateSummary",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          },
          "Id": {
            "template": "*"
          },
          "StackSetName": {
            "template": "${StackSetName}"
          }
        }
      }
    ],
    "import-stacks-to-stack-set": [
      {
        "action": "cloudformation:ImportStacksToStackSet",
        "resource_mappings": {
          "StackSetName": {
            "template": "${StackSetName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "list-change-sets": [
      {
        "action": "cloudformation:ListChangeSets",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "list-exports": [
      {
        "action": "cloudformation:ListExports",
        "resource_mappings": {}
      }
    ],
    "list-imports": [
      {
        "action": "cloudformation:ListImports",
        "resource_mappings": {}
      }
    ],
    "list-stack-instance-resource-drifts": [
      {
        "action": "cloudformation:ListStackInstanceResourceDrifts",
        "resource_mappings": {
          "StackSetName": {
            "template": "${StackSetName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "list-stack-instances": [
      {
        "action": "cloudformation:ListStackInstances",
        "resource_mappings": {
          "StackSetName": {
            "template": "${StackSetName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "list-stack-resources": [
      {
        "action": "cloudformation:ListStackResources",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "list-stack-set-operation-results": [
      {
        "action": "cloudformation:ListStackSetOperationResults",
        "resource_mappings": {
          "StackSetName": {
            "template": "${StackSetName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "list-stack-set-operations": [
      {
        "action": "cloudformation:ListStackSetOperations",
        "resource_mappings": {
          "StackSetName": {
            "template": "${StackSetName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "list-stack-sets": [
      {
        "action": "cloudformation:ListStackSets",
        "resource_mappings": {
          "StackSetName": {
            "template": "*"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "list-stacks": [
      {
        "action": "cloudformation:ListStacks",
        "resource_mappings": {}
      }
    ],
    "list-type-registrations": [
      {
        "action": "cloudformation:ListTypeRegistrations",
        "resource_mappings": {}
      }
    ],
    "list-type-versions": [
      {
        "action": "cloudformation:ListTypeVersions",
        "resource_mappings": {}
      }
    ],
    "list-types": [
      {
        "action": "cloudformation:ListTypes",
        "resource_mappings": {}
      }
    ],
    "publish-type": [
      {
        "action": "cloudformation:PublishType",
        "resource_mappings": {}
      }
    ],
    "record-handler-progress": [
      {
        "action": "cloudformation:RecordHandlerProgress",
        "resource_mappings": {
          "StackName": {
            "template": "*"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "register-publisher": [
      {
        "action": "cloudformation:RegisterPublisher",
        "resource_mappings": {}
      }
    ],
    "register-type": [
      {
        "action": "cloudformation:RegisterType",
        "resource_mappings": {}
      }
    ],
    "rollback-stack": [
      {
        "action": "cloudformation:RollbackStack",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "set-stack-policy": [
      {
        "action": "cloudformation:SetStackPolicy",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${LoggingConfig.LogRoleArn}%${ExecutionRoleArn}%%"
        }
      }
    ],
    "set-type-configuration": [
      {
        "action": "cloudformation:SetTypeConfiguration",
        "resource_mappings": {}
      }
    ],
    "set-type-default-version": [
      {
        "action": "cloudformation:SetTypeDefaultVersion",
        "resource_mappings": {}
      }
    ],
    "signal-resource": [
      {
        "action": "cloudformation:SignalResource",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "stop-stack-set-operation": [
      {
        "action": "cloudformation:StopStackSetOperation",
        "resource_mappings": {
          "StackSetName": {
            "template": "${StackSetName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "test-type": [
      {
        "action": "cloudformation:TestType",
        "resource_mappings": {}
      }
    ],
    "update-stack": [
      {
        "action": "cloudformation:UpdateStack",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleARN}"
        }
      }
    ],
    "update-stack-instances": [
      {
        "action": "cloudformation:UpdateStackInstances",
        "resource_mappings": {
          "StackSetName": {
            "template": "${StackSetName}"
          },
          "Id": {
            "template": "*"
          },
          "StackSetTarget": {
            "template": "*"
          },
          "Type": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "update-stack-set": [
      {
        "action": "cloudformation:UpdateStackSet",
        "resource_mappings": {
          "StackSetName": {
            "template": "${StackSetName}"
          },
          "Id": {
            "template": "*"
          },
          "StackSetTarget": {
            "template": "*"
          },
          "Type": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${AdministrationRoleARN}%arn:${Partition}:iam::*:role/${ExecutionRoleName}%%"
        }
      }
    ],
    "update-termination-protection": [
      {
        "action": "cloudformation:UpdateTerminationProtection",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "validate-template": [
      {
        "action": "cloudformation:ValidateTemplate",
        "resource_mappings": {}
      }
    ],
    "wait": [
      {
        "action": "cloudformation:DescribeChangeSet",
        "resource_mappings": {
          "StackName": {
            "template": "${StackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ]
  },
  "cloudfront": {
    "associate-alias": [
      {
        "action": "cloudfront:AssociateAlias",
        "resource_mappings": {
          "DistributionId": {
            "template": "${TargetDistributionId}"
          }
        }
      }
    ],
    "copy-distribution": [
      {
        "action": "cloudfront:CopyDistribution",
        "resource_mappings": {
          "DistributionId": {
            "template": "${PrimaryDistributionId}"
          }
        }
      },
      {
        "action": "cloudfront:CreateDistribution",
        "resource_mappings": {
          "DistributionId": {
            "template": "*"
          }
        }
      },
      {
        "action": "cloudfront:GetDistribution",
        "resource_mappings": {
          "DistributionId": {
            "template": "*"
          }
        }
      }
    ],
    "create-cache-policy": [
      {
        "action": "cloudfront:CreateCachePolicy",
        "resource_mappings": {}
      }
    ],
    "create-cloud-front-origin-access-identity": [
      {
        "action": "cloudfront:CreateCloudFrontOriginAccessIdentity",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-continuous-deployment-policy": [
      {
        "action": "cloudfront:CreateContinuousDeploymentPolicy",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-distribution": [
      {
        "action": "cloudfront:CreateDistribution",
        "resource_mappings": {
          "DistributionId": {
            "template": "*"
          }
        }
      }
    ],
    "create-distribution-with-tags": [
      {
        "action": "cloudfront:CreateDistributionWithTags",
        "resource_mappings": {
          "DistributionId": {
            "template": "*"
          }
        }
      }
    ],
    "create-field-level-encryption-config": [
      {
        "action": "cloudfront:CreateFieldLevelEncryptionConfig",
        "resource_mappings": {}
      }
    ],
    "create-field-level-encryption-profile": [
      {
        "action": "cloudfront:CreateFieldLevelEncryptionProfile",
        "resource_mappings": {}
      }
    ],
    "create-function": [
      {
        "action": "cloudfront:CreateFunction",
        "resource_mappings": {}
      }
    ],
    "create-invalidation": [
      {
        "action": "cloudfront:CreateInvalidation",
        "resource_mappings": {
          "DistributionId": {
            "template": "${DistributionId}"
          }
        }
      }
    ],
    "create-key-group": [
      {
        "action": "cloudfront:CreateKeyGroup",
        "resource_mappings": {}
      }
    ],
    "create-monitoring-subscription": [
      {
        "action": "cloudfront:CreateMonitoringSubscription",
        "resource_mappings": {}
      }
    ],
    "create-origin-access-control": [
      {
        "action": "cloudfront:CreateOriginAccessControl",
        "resource_mappings": {}
      }
    ],
    "create-origin-request-policy": [
      {
        "action": "cloudfront:CreateOriginRequestPolicy",
        "resource_mappings": {}
      }
    ],
    "create-public-key": [
      {
        "action": "cloudfront:CreatePublicKey",
        "resource_mappings": {}
      }
    ],
    "create-realtime-log-config": [
      {
        "action": "cloudfront:CreateRealtimeLogConfig",
        "resource_mappings": {}
      }
    ],
    "create-response-headers-policy": [
      {
        "action": "cloudfront:CreateResponseHeadersPolicy",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-streaming-distribution": [
      {
        "action": "cloudfront:CreateStreamingDistribution",
        "resource_mappings": {
          "DistributionId": {
            "template": "*"
          }
        }
      }
    ],
    "create-streaming-distribution-with-tags": [
      {
        "action": "cloudfront:CreateStreamingDistributionWithTags",
        "resource_mappings": {
          "DistributionId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-cache-policy": [
      {
        "action": "cloudfront:DeleteCachePolicy",
        "resource_mappings": {}
      }
    ],
    "delete-cloud-front-origin-access-identity": [
      {
        "action": "cloudfront:DeleteCloudFrontOriginAccessIdentity",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-continuous-deployment-policy": [
      {
        "action": "cloudfront:DeleteContinuousDeploymentPolicy",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-distribution": [
      {
        "action": "cloudfront:DeleteDistribution",
        "resource_mappings": {
          "DistributionId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-field-level-encryption-config": [
      {
        "action": "cloudfront:DeleteFieldLevelEncryptionConfig",
        "resource_mappings": {}
      }
    ],
    "delete-field-level-encryption-profile": [
      {
        "action": "cloudfront:DeleteFieldLevelEncryptionProfile",
        "resource_mappings": {}
      }
    ],
    "delete-function": [
      {
        "action": "cloudfront:DeleteFunction",
        "resource_mappings": {}
      }
    ],
    "delete-key-group": [
      {
        "action": "cloudfront:DeleteKeyGroup",
        "resource_mappings": {}
      }
    ],
    "delete-monitoring-subscription": [
      {
        "action": "cloudfront:DeleteMonitoringSubscription",
        "resource_mappings": {}
      }
    ],
    "delete-origin-access-control": [
      {
        "action": "cloudfront:DeleteOriginAccessControl",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-origin-request-policy": [
      {
        "action": "cloudfront:DeleteOriginRequestPolicy",
        "resource_mappings": {}
      }
    ],
    "delete-public-key": [
      {
        "action": "cloudfront:DeletePublicKey",
        "resource_mappings": {}
      }
    ],
    "delete-realtime-log-config": [
      {
        "action": "cloudfront:DeleteRealtimeLogConfig",
        "resource_mappings": {}
      }
    ],
    "delete-response-headers-policy": [
      {
        "action": "cloudfront:DeleteResponseHeadersPolicy",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-streaming-distribution": [
      {
        "action": "cloudfront:DeleteStreamingDistribution",
        "resource_mappings": {
          "DistributionId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "describe-function": [
      {
        "action": "cloudfront:DescribeFunction",
        "resource_mappings": {}
      }
    ],
    "get-cache-policy": [
      {
        "action": "cloudfront:GetCachePolicy",
        "resource_mappings": {}
      }
    ],
    "get-cache-policy-config": [
      {
        "action": "cloudfront:GetCachePolicyConfig",
        "resource_mappings": {}
      }
    ],
    "get-cloud-front-origin-access-identity": [
      {
        "action": "cloudfront:GetCloudFrontOriginAccessIdentity",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-cloud-front-origin-access-identity-config": [
      {
        "action": "cloudfront:GetCloudFrontOriginAccessIdentityConfig",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-continuous-deployment-policy": [
      {
        "action": "cloudfront:GetContinuousDeploymentPolicy",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-continuous-deployment-policy-config": [
      {
        "action": "cloudfront:GetContinuousDeploymentPolicyConfig",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-distribution": [
      {
        "action": "cloudfront:GetDistribution",
        "resource_mappings": {
          "DistributionId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-distribution-config": [
      {
        "action": "cloudfront:GetDistributionConfig",
        "resource_mappings": {
          "DistributionId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-field-level-encryption": [
      {
        "action": "cloudfront:GetFieldLevelEncryption",
        "resource_mappings": {}
      }
    ],
    "get-field-level-encryption-config": [
      {
        "action": "cloudfront:GetFieldLevelEncryptionConfig",
        "resource_mappings": {}
      }
    ],
    "get-field-level-encryption-profile": [
      {
        "action": "cloudfront:GetFieldLevelEncryptionProfile",
        "resource_mappings": {}
      }
    ],
    "get-field-level-encryption-profile-config": [
      {
        "action": "cloudfront:GetFieldLevelEncryptionProfileConfig",
        "resource_mappings": {}
      }
    ],
    "get-function": [
      {
        "action": "cloudfront:GetFunction",
        "resource_mappings": {}
      }
    ],
    "get-invalidation": [
      {
        "action": "cloudfront:GetInvalidation",
        "resource_mappings": {
          "DistributionId": {
            "template": "${DistributionId}"
          }
        }
      }
    ],
    "get-key-group": [
      {
        "action": "cloudfront:GetKeyGroup",
        "resource_mappings": {}
      }
    ],
    "get-key-group-config": [
      {
        "action": "cloudfront:GetKeyGroupConfig",
        "resource_mappings": {}
      }
    ],
    "get-monitoring-subscription": [
      {
        "action": "cloudfront:GetMonitoringSubscription",
        "resource_mappings": {}
      }
    ],
    "get-origin-access-control": [
      {
        "action": "cloudfront:GetOriginAccessControl",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-origin-access-control-config": [
      {
        "action": "cloudfront:GetOriginAccessControlConfig",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-origin-request-policy": [
      {
        "action": "cloudfront:GetOriginRequestPolicy",
        "resource_mappings": {}
      }
    ],
    "get-origin-request-policy-config": [
      {
        "action": "cloudfront:GetOriginRequestPolicyConfig",
        "resource_mappings": {}
      }
    ],
    "get-public-key": [
      {
        "action": "cloudfront:GetPublicKey",
        "resource_mappings": {}
      }
    ],
    "get-public-key-config": [
      {
        "action": "cloudfront:GetPublicKeyConfig",
        "resource_mappings": {}
      }
    ],
    "get-realtime-log-config": [
      {
        "action": "cloudfront:GetRealtimeLogConfig",
        "resource_mappings": {}
      }
    ],
    "get-response-headers-policy": [
      {
        "action": "cloudfront:GetResponseHeadersPolicy",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-response-headers-policy-config": [
      {
        "action": "cloudfront:GetResponseHeadersPolicyConfig",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-streaming-distribution": [
      {
        "action": "cloudfront:GetStreamingDistribution",
        "resource_mappings": {
          "DistributionId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-streaming-distribution-config": [
      {
        "action": "cloudfront:GetStreamingDistributionConfig",
        "resource_mappings": {
          "DistributionId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "list-cache-policies": [
      {
        "action": "cloudfront:ListCachePolicies",
        "resource_mappings": {}
      }
    ],
    "list-cloud-front-origin-access-identities": [
      {
        "action": "cloudfront:ListCloudFrontOriginAccessIdentities",
        "resource_mappings": {}
      }
    ],
    "list-conflicting-aliases": [
      {
        "action": "cloudfront:ListConflictingAliases",
        "resource_mappings": {
          "DistributionId": {
            "template": "${DistributionId}"
          }
        }
      }
    ],
    "list-continuous-deployment-policies": [
      {
        "action": "cloudfront:ListContinuousDeploymentPolicies",
        "resource_mappings": {}
      }
    ],
    "list-distributions": [
      {
        "action": "cloudfront:ListDistributions",
        "resource_mappings": {}
      }
    ],
    "list-distributions-by-cache-policy-id": [
      {
        "action": "cloudfront:ListDistributionsByCachePolicyId",
        "resource_mappings": {}
      }
    ],
    "list-distributions-by-key-group": [
      {
        "action": "cloudfront:ListDistributionsByKeyGroup",
        "resource_mappings": {}
      }
    ],
    "list-distributions-by-origin-request-policy-id": [
      {
        "action": "cloudfront:ListDistributionsByOriginRequestPolicyId",
        "resource_mappings": {}
      }
    ],
    "list-distributions-by-realtime-log-config": [
      {
        "action": "cloudfront:ListDistributionsByRealtimeLogConfig",
        "resource_mappings": {}
      }
    ],
    "list-distributions-by-response-headers-policy-id": [
      {
        "action": "cloudfront:ListDistributionsByResponseHeadersPolicyId",
        "resource_mappings": {}
      }
    ],
    "list-distributions-by-web-acl-id": [
      {
        "action": "cloudfront:ListDistributionsByWebACLId",
        "resource_mappings": {}
      }
    ],
    "list-field-level-encryption-configs": [
      {
        "action": "cloudfront:ListFieldLevelEncryptionConfigs",
        "resource_mappings": {}
      }
    ],
    "list-field-level-encryption-profiles": [
      {
        "action": "cloudfront:ListFieldLevelEncryptionProfiles",
        "resource_mappings": {}
      }
    ],
    "list-functions": [
      {
        "action": "cloudfront:ListFunctions",
        "resource_mappings": {}
      }
    ],
    "list-invalidations": [
      {
        "action": "cloudfront:ListInvalidations",
        "resource_mappings": {
          "DistributionId": {
            "template": "${DistributionId}"
          }
        }
      }
    ],
    "list-key-groups": [
      {
        "action": "cloudfront:ListKeyGroups",
        "resource_mappings": {}
      }
    ],
    "list-origin-access-controls": [
      {
        "action": "cloudfront:ListOriginAccessControls",
        "resource_mappings": {}
      }
    ],
    "list-origin-request-policies": [
      {
        "action": "cloudfront:ListOriginRequestPolicies",
        "resource_mappings": {}
      }
    ],
    "list-public-keys": [
      {
        "action": "cloudfront:ListPublicKeys",
        "resource_mappings": {}
      }
    ],
    "list-realtime-log-configs": [
      {
        "action": "cloudfront:ListRealtimeLogConfigs",
        "resource_mappings": {}
      }
    ],
    "list-response-headers-policies": [
      {
        "action": "cloudfront:ListResponseHeadersPolicies",
        "resource_mappings": {}
      }
    ],
    "list-streaming-distributions": [
      {
        "action": "cloudfront:ListStreamingDistributions",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "cloudfront:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "distribution": "%%iftemplatematch%${Resource}%%",
          "streaming-distribution": "%%iftemplatematch%${Resource}%%"
        }
      }
    ],
    "publish-function": [
      {
        "action": "cloudfront:PublishFunction",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "cloudfront:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "distribution": "%%iftemplatematch%${Resource}%%",
          "streaming-distribution": "%%iftemplatematch%${Resource}%%"
        }
      }
    ],
    "test-function": [
      {
        "action": "cloudfront:TestFunction",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "cloudfront:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "distribution": "%%iftemplatematch%${Resource}%%",
          "streaming-distribution": "%%iftemplatematch%${Resource}%%"
        }
      }
    ],
    "update-cache-policy": [
      {
        "action": "cloudfront:UpdateCachePolicy",
        "resource_mappings": {}
      }
    ],
    "update-cloud-front-origin-access-identity": [
      {
        "action": "cloudfront:UpdateCloudFrontOriginAccessIdentity",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "update-continuous-deployment-policy": [
      {
        "action": "cloudfront:UpdateContinuousDeploymentPolicy",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "update-distribution": [
      {
        "action": "cloudfront:UpdateDistribution",
        "resource_mappings": {
          "DistributionId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "update-distribution-with-staging-config": [
      {
        "action": "cloudfront:UpdateDistributionWithStagingConfig",
        "resource_mappings": {
          "DistributionId": {
            "template": "${Id}"
          }
        }
      },
      {
        "action": "cloudfront:GetDistribution",
        "resource_mappings": {
          "DistributionId": {
            "template": "%%many%${Id}%${StagingDistributionId}%%"
          }
        }
      },
      {
        "action": "cloudfront:UpdateDistribution",
        "resource_mappings": {
          "DistributionId": {
            "template": "%%many%${Id}%${StagingDistributionId}%%"
          }
        }
      }
    ],
    "update-field-level-encryption-config": [
      {
        "action": "cloudfront:UpdateFieldLevelEncryptionConfig",
        "resource_mappings": {}
      }
    ],
    "update-field-level-encryption-profile": [
      {
        "action": "cloudfront:UpdateFieldLevelEncryptionProfile",
        "resource_mappings": {}
      }
    ],
    "update-function": [
      {
        "action": "cloudfront:UpdateFunction",
        "resource_mappings": {}
      }
    ],
    "update-key-group": [
      {
        "action": "cloudfront:UpdateKeyGroup",
        "resource_mappings": {}
      }
    ],
    "update-origin-access-control": [
      {
        "action": "cloudfront:UpdateOriginAccessControl",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "update-origin-request-policy": [
      {
        "action": "cloudfront:UpdateOriginRequestPolicy",
        "resource_mappings": {}
      }
    ],
    "update-public-key": [
      {
        "action": "cloudfront:UpdatePublicKey",
        "resource_mappings": {}
      }
    ],
    "update-realtime-log-config": [
      {
        "action": "cloudfront:UpdateRealtimeLogConfig",
        "resource_mappings": {}
      }
    ],
    "update-response-headers-policy": [
      {
        "action": "cloudfront:UpdateResponseHeadersPolicy",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "update-streaming-distribution": [
      {
        "action": "cloudfront:UpdateStreamingDistribution",
        "resource_mappings": {
          "DistributionId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "cloudfront:GetDistribution",
        "resource_mappings": {
          "DistributionId": {
            "template": "${Id}"
          }
        }
      }
    ]
  },
  "cloudhsm": {
    "add-tags-to-resource": [
      {
        "action": "cloudhsm:AddTagsToResource",
        "resource_mappings": {}
      }
    ],
    "create-hapg": [
      {
        "action": "cloudhsm:CreateHapg",
        "resource_mappings": {}
      }
    ],
    "create-hsm": [
      {
        "action": "cloudhsm:CreateHsm",
        "resource_mappings": {
          "CloudHsmClusterInstanceName": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${IamRoleArn}"
        }
      }
    ],
    "create-luna-client": [
      {
        "action": "cloudhsm:CreateLunaClient",
        "resource_mappings": {}
      }
    ],
    "delete-hapg": [
      {
        "action": "cloudhsm:DeleteHapg",
        "resource_mappings": {}
      }
    ],
    "delete-hsm": [
      {
        "action": "cloudhsm:DeleteHsm",
        "resource_mappings": {}
      }
    ],
    "delete-luna-client": [
      {
        "action": "cloudhsm:DeleteLunaClient",
        "resource_mappings": {}
      }
    ],
    "describe-hapg": [
      {
        "action": "cloudhsm:DescribeHapg",
        "resource_mappings": {}
      }
    ],
    "describe-hsm": [
      {
        "action": "cloudhsm:DescribeHsm",
        "resource_mappings": {}
      }
    ],
    "describe-luna-client": [
      {
        "action": "cloudhsm:DescribeLunaClient",
        "resource_mappings": {}
      }
    ],
    "get-config": [
      {
        "action": "cloudhsm:GetConfig",
        "resource_mappings": {}
      }
    ],
    "list-available-zones": [
      {
        "action": "cloudhsm:ListAvailableZones",
        "resource_mappings": {}
      }
    ],
    "list-hapgs": [
      {
        "action": "cloudhsm:ListHapgs",
        "resource_mappings": {}
      }
    ],
    "list-hsms": [
      {
        "action": "cloudhsm:ListHsms",
        "resource_mappings": {}
      }
    ],
    "list-luna-clients": [
      {
        "action": "cloudhsm:ListLunaClients",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "cloudhsm:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "modify-hapg": [
      {
        "action": "cloudhsm:ModifyHapg",
        "resource_mappings": {}
      }
    ],
    "modify-hsm": [
      {
        "action": "cloudhsm:ModifyHsm",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${IamRoleArn}"
        }
      }
    ],
    "modify-luna-client": [
      {
        "action": "cloudhsm:ModifyLunaClient",
        "resource_mappings": {}
      }
    ],
    "remove-tags-from-resource": [
      {
        "action": "cloudhsm:RemoveTagsFromResource",
        "resource_mappings": {}
      }
    ]
  },
  "cloudhsmv2": {
    "copy-backup-to-region": [
      {
        "action": "cloudhsm:CopyBackupToRegion",
        "resource_mappings": {
          "CloudHsmBackupInstanceName": {
            "template": "${BackupId}"
          }
        }
      }
    ],
    "create-cluster": [
      {
        "action": "cloudhsm:CreateCluster",
        "resource_mappings": {
          "CloudHsmBackupInstanceName": {
            "template": "${SourceBackupId}"
          }
        }
      }
    ],
    "create-hsm": [
      {
        "action": "cloudhsm:CreateHsm",
        "resource_mappings": {
          "CloudHsmClusterInstanceName": {
            "template": "${ClusterId}"
          }
        }
      }
    ],
    "delete-backup": [
      {
        "action": "cloudhsm:DeleteBackup",
        "resource_mappings": {
          "CloudHsmBackupInstanceName": {
            "template": "${BackupId}"
          }
        }
      }
    ],
    "delete-cluster": [
      {
        "action": "cloudhsm:DeleteCluster",
        "resource_mappings": {
          "CloudHsmClusterInstanceName": {
            "template": "${ClusterId}"
          }
        }
      }
    ],
    "delete-hsm": [
      {
        "action": "cloudhsm:DeleteHsm",
        "resource_mappings": {}
      }
    ],
    "describe-backups": [
      {
        "action": "cloudhsm:DescribeBackups",
        "resource_mappings": {}
      }
    ],
    "describe-clusters": [
      {
        "action": "cloudhsm:DescribeClusters",
        "resource_mappings": {}
      }
    ],
    "initialize-cluster": [
      {
        "action": "cloudhsm:InitializeCluster",
        "resource_mappings": {
          "CloudHsmClusterInstanceName": {
            "template": "${ClusterId}"
          }
        }
      }
    ],
    "list-tags": [
      {
        "action": "cloudhsm:ListTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "backup": "%%iftemplatematch%${ResourceId}%%",
          "cluster": "%%iftemplatematch%${ResourceId}%%"
        }
      }
    ],
    "modify-backup-attributes": [
      {
        "action": "cloudhsm:ModifyBackupAttributes",
        "resource_mappings": {
          "CloudHsmBackupInstanceName": {
            "template": "*"
          }
        }
      }
    ],
    "modify-cluster": [
      {
        "action": "cloudhsm:ModifyCluster",
        "resource_mappings": {
          "CloudHsmClusterInstanceName": {
            "template": "*"
          }
        }
      }
    ],
    "restore-backup": [
      {
        "action": "cloudhsm:RestoreBackup",
        "resource_mappings": {
          "CloudHsmBackupInstanceName": {
            "template": "${BackupId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "cloudhsm:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "backup": "%%iftemplatematch%${ResourceId}%%",
          "cluster": "%%iftemplatematch%${ResourceId}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "cloudhsm:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "backup": "%%iftemplatematch%${ResourceId}%%",
          "cluster": "%%iftemplatematch%${ResourceId}%%"
        }
      }
    ]
  },
  "cloudsearch": {
    "build-suggesters": [
      {
        "action": "cloudsearch:BuildSuggesters",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "create-domain": [
      {
        "action": "cloudsearch:CreateDomain",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "define-analysis-scheme": [
      {
        "action": "cloudsearch:DefineAnalysisScheme",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "define-expression": [
      {
        "action": "cloudsearch:DefineExpression",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "define-index-field": [
      {
        "action": "cloudsearch:DefineIndexField",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "define-suggester": [
      {
        "action": "cloudsearch:DefineSuggester",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "delete-analysis-scheme": [
      {
        "action": "cloudsearch:DeleteAnalysisScheme",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "delete-domain": [
      {
        "action": "cloudsearch:DeleteDomain",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "delete-expression": [
      {
        "action": "cloudsearch:DeleteExpression",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "delete-index-field": [
      {
        "action": "cloudsearch:DeleteIndexField",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "delete-suggester": [
      {
        "action": "cloudsearch:DeleteSuggester",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "describe-analysis-schemes": [
      {
        "action": "cloudsearch:DescribeAnalysisSchemes",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "describe-availability-options": [
      {
        "action": "cloudsearch:DescribeAvailabilityOptions",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "describe-domain-endpoint-options": [
      {
        "action": "cloudsearch:DescribeDomainEndpointOptions",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "describe-domains": [
      {
        "action": "cloudsearch:DescribeDomains",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainNames[]}"
          }
        }
      }
    ],
    "describe-expressions": [
      {
        "action": "cloudsearch:DescribeExpressions",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "describe-index-fields": [
      {
        "action": "cloudsearch:DescribeIndexFields",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "describe-scaling-parameters": [
      {
        "action": "cloudsearch:DescribeScalingParameters",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "describe-service-access-policies": [
      {
        "action": "cloudsearch:DescribeServiceAccessPolicies",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "describe-suggesters": [
      {
        "action": "cloudsearch:DescribeSuggesters",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "index-documents": [
      {
        "action": "cloudsearch:IndexDocuments",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "list-domain-names": [
      {
        "action": "cloudsearch:ListDomainNames",
        "resource_mappings": {
          "DomainName": {
            "template": "*"
          }
        }
      }
    ],
    "update-availability-options": [
      {
        "action": "cloudsearch:UpdateAvailabilityOptions",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "update-domain-endpoint-options": [
      {
        "action": "cloudsearch:UpdateDomainEndpointOptions",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "update-scaling-parameters": [
      {
        "action": "cloudsearch:UpdateScalingParameters",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "update-service-access-policies": [
      {
        "action": "cloudsearch:UpdateServiceAccessPolicies",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ]
  },
  "cloudsearchdomain": {
    "search": [
      {
        "action": "cloudsearch:search",
        "resource_mappings": {
          "DomainName": {
            "template": "*"
          }
        }
      }
    ],
    "suggest": [
      {
        "action": "cloudsearch:suggest",
        "resource_mappings": {
          "DomainName": {
            "template": "*"
          }
        }
      }
    ],
    "upload-documents": [
      {
        "action": "cloudsearch:upload",
        "resource_mappings": {}
      }
    ]
  },
  "cloudtrail": {
    "add-tags": [
      {
        "action": "cloudtrail:AddTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "trail": "${ResourceId}"
        }
      }
    ],
    "cancel-query": [
      {
        "action": "cloudtrail:CancelQuery",
        "resource_mappings": {}
      }
    ],
    "create-channel": [
      {
        "action": "cloudtrail:CreateChannel",
        "resource_mappings": {
          "ChannelId": {
            "template": "*"
          }
        }
      },
      {
        "action": "cloudtrail:AddTags",
        "resource_mappings": {
          "ChannelId": {
            "template": "*"
          },
          "EventDataStoreId": {
            "template": "*"
          },
          "TrailName": {
            "template": "*"
          }
        }
      }
    ],
    "create-event-data-store": [
      {
        "action": "cloudtrail:CreateEventDataStore",
        "resource_mappings": {
          "EventDataStoreId": {
            "template": "*"
          }
        }
      }
    ],
    "create-trail": [
      {
        "action": "cloudtrail:CreateTrail",
        "resource_mappings": {
          "TrailName": {
            "template": "${Name}"
          }
        }
      },
      {
        "action": "s3:PutObject",
        "resource_mappings": {
          "BucketName": {
            "template": "${S3BucketName}"
          },
          "ObjectName": {
            "template": "${S3KeyPrefix}*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${CloudWatchLogsRoleArn}"
        }
      }
    ],
    "delete-channel": [
      {
        "action": "cloudtrail:DeleteChannel",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channel": "%%iftemplatematch%${Channel}%%"
        }
      }
    ],
    "delete-event-data-store": [
      {
        "action": "cloudtrail:DeleteEventDataStore",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "eventdatastore": "${EventDataStore}"
        }
      }
    ],
    "delete-resource-policy": [
      {
        "action": "cloudtrail:DeleteResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channel": "${ResourceArn}"
        }
      }
    ],
    "delete-trail": [
      {
        "action": "cloudtrail:DeleteTrail",
        "resource_mappings": {
          "TrailName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "deregister-organization-delegated-admin": [
      {
        "action": "cloudtrail:DeregisterOrganizationDelegatedAdmin",
        "resource_mappings": {}
      }
    ],
    "describe-query": [
      {
        "action": "cloudtrail:DescribeQuery",
        "resource_mappings": {}
      }
    ],
    "describe-trails": [
      {
        "action": "cloudtrail:DescribeTrails",
        "resource_mappings": {}
      }
    ],
    "get-channel": [
      {
        "action": "cloudtrail:GetChannel",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channel": "%%iftemplatematch%${Channel}%%"
        }
      }
    ],
    "get-event-data-store": [
      {
        "action": "cloudtrail:GetEventDataStore",
        "resource_mappings": {}
      }
    ],
    "get-event-selectors": [
      {
        "action": "cloudtrail:GetEventSelectors",
        "resource_mappings": {
          "TrailName": {
            "template": "${TrailName}"
          }
        }
      }
    ],
    "get-import": [
      {
        "action": "cloudtrail:GetImport",
        "resource_mappings": {}
      }
    ],
    "get-insight-selectors": [
      {
        "action": "cloudtrail:GetInsightSelectors",
        "resource_mappings": {
          "TrailName": {
            "template": "${TrailName}"
          }
        }
      }
    ],
    "get-query-results": [
      {
        "action": "cloudtrail:GetQueryResults",
        "resource_mappings": {}
      }
    ],
    "get-resource-policy": [
      {
        "action": "cloudtrail:GetResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channel": "${ResourceArn}"
        }
      }
    ],
    "get-trail": [
      {
        "action": "cloudtrail:GetTrail",
        "resource_mappings": {}
      }
    ],
    "get-trail-status": [
      {
        "action": "cloudtrail:GetTrailStatus",
        "resource_mappings": {
          "TrailName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "list-channels": [
      {
        "action": "cloudtrail:ListChannels",
        "resource_mappings": {}
      }
    ],
    "list-event-data-stores": [
      {
        "action": "cloudtrail:ListEventDataStores",
        "resource_mappings": {}
      }
    ],
    "list-import-failures": [
      {
        "action": "cloudtrail:ListImportFailures",
        "resource_mappings": {}
      }
    ],
    "list-imports": [
      {
        "action": "cloudtrail:ListImports",
        "resource_mappings": {}
      }
    ],
    "list-public-keys": [
      {
        "action": "cloudtrail:ListPublicKeys",
        "resource_mappings": {}
      }
    ],
    "list-queries": [
      {
        "action": "cloudtrail:ListQueries",
        "resource_mappings": {}
      }
    ],
    "list-tags": [
      {
        "action": "cloudtrail:ListTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "trail": "${ResourceIdList[]}"
        }
      }
    ],
    "list-trails": [
      {
        "action": "cloudtrail:ListTrails",
        "resource_mappings": {}
      }
    ],
    "lookup-events": [
      {
        "action": "cloudtrail:LookupEvents",
        "resource_mappings": {}
      }
    ],
    "put-event-selectors": [
      {
        "action": "cloudtrail:PutEventSelectors",
        "resource_mappings": {
          "TrailName": {
            "template": "${TrailName}"
          }
        }
      }
    ],
    "put-insight-selectors": [
      {
        "action": "cloudtrail:PutInsightSelectors",
        "resource_mappings": {
          "TrailName": {
            "template": "${TrailName}"
          }
        }
      }
    ],
    "put-resource-policy": [
      {
        "action": "cloudtrail:PutResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channel": "${ResourceArn}"
        }
      }
    ],
    "register-organization-delegated-admin": [
      {
        "action": "cloudtrail:RegisterOrganizationDelegatedAdmin",
        "resource_mappings": {}
      }
    ],
    "remove-tags": [
      {
        "action": "cloudtrail:RemoveTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "trail": "${ResourceId}"
        }
      }
    ],
    "restore-event-data-store": [
      {
        "action": "cloudtrail:RestoreEventDataStore",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "eventdatastore": "${EventDataStore}"
        }
      }
    ],
    "start-event-data-store-ingestion": [
      {
        "action": "cloudtrail:StartEventDataStoreIngestion",
        "resource_mappings": {
          "EventDataStoreId": {
            "template": "%%regex%${EventDataStore}%/^(?:.*\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "start-import": [
      {
        "action": "cloudtrail:StartImport",
        "resource_mappings": {}
      }
    ],
    "start-logging": [
      {
        "action": "cloudtrail:StartLogging",
        "resource_mappings": {
          "TrailName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "start-query": [
      {
        "action": "cloudtrail:StartQuery",
        "resource_mappings": {}
      }
    ],
    "stop-event-data-store-ingestion": [
      {
        "action": "cloudtrail:StopEventDataStoreIngestion",
        "resource_mappings": {
          "EventDataStoreId": {
            "template": "%%regex%${EventDataStore}%/^(?:.*\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "stop-import": [
      {
        "action": "cloudtrail:StopImport",
        "resource_mappings": {}
      }
    ],
    "stop-logging": [
      {
        "action": "cloudtrail:StopLogging",
        "resource_mappings": {
          "TrailName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "update-channel": [
      {
        "action": "cloudtrail:UpdateChannel",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channel": "%%iftemplatematch%${Channel}%%"
        }
      }
    ],
    "update-event-data-store": [
      {
        "action": "cloudtrail:UpdateEventDataStore",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "eventdatastore": "${EventDataStore}"
        }
      }
    ],
    "update-trail": [
      {
        "action": "cloudtrail:UpdateTrail",
        "resource_mappings": {
          "TrailName": {
            "template": "${Name}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${CloudWatchLogsRoleArn}"
        }
      }
    ]
  },
  "cloudtrail-data": {
    "put-audit-events": [
      {
        "action": "cloudtrail-data:PutAuditEvents",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channel": "${channelArn}"
        }
      }
    ]
  },
  "cloudwatch": {
    "delete-alarms": [
      {
        "action": "cloudwatch:DeleteAlarms",
        "resource_mappings": {
          "AlarmName": {
            "template": "${AlarmNames[]}"
          }
        }
      }
    ],
    "delete-anomaly-detector": [
      {
        "action": "cloudwatch:DeleteAnomalyDetector",
        "resource_mappings": {}
      }
    ],
    "delete-dashboards": [
      {
        "action": "cloudwatch:DeleteDashboards",
        "resource_mappings": {
          "DashboardName": {
            "template": "${DashboardNames[]}"
          }
        }
      }
    ],
    "delete-insight-rules": [
      {
        "action": "cloudwatch:DeleteInsightRules",
        "resource_mappings": {
          "InsightRuleName": {
            "template": "${RuleNames[]}"
          }
        }
      }
    ],
    "delete-metric-stream": [
      {
        "action": "cloudwatch:DeleteMetricStream",
        "resource_mappings": {
          "MetricStreamName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "describe-alarm-history": [
      {
        "action": "cloudwatch:DescribeAlarmHistory",
        "resource_mappings": {
          "AlarmName": {
            "template": "${AlarmName}"
          }
        }
      }
    ],
    "describe-alarms": [
      {
        "action": "cloudwatch:DescribeAlarms",
        "resource_mappings": {
          "AlarmName": {
            "template": "%%many%${AlarmNames[]}%${AlarmNamePrefix}*%%"
          }
        }
      }
    ],
    "describe-alarms-for-metric": [
      {
        "action": "cloudwatch:DescribeAlarmsForMetric",
        "resource_mappings": {}
      }
    ],
    "describe-anomaly-detectors": [
      {
        "action": "cloudwatch:DescribeAnomalyDetectors",
        "resource_mappings": {}
      }
    ],
    "describe-insight-rules": [
      {
        "action": "cloudwatch:DescribeInsightRules",
        "resource_mappings": {}
      }
    ],
    "disable-alarm-actions": [
      {
        "action": "cloudwatch:DisableAlarmActions",
        "resource_mappings": {
          "AlarmName": {
            "template": "${AlarmNames[]}"
          }
        }
      }
    ],
    "disable-insight-rules": [
      {
        "action": "cloudwatch:DisableInsightRules",
        "resource_mappings": {
          "InsightRuleName": {
            "template": "${RuleNames[]}"
          }
        }
      }
    ],
    "enable-alarm-actions": [
      {
        "action": "cloudwatch:EnableAlarmActions",
        "resource_mappings": {
          "AlarmName": {
            "template": "${AlarmNames[]}"
          }
        }
      }
    ],
    "enable-insight-rules": [
      {
        "action": "cloudwatch:EnableInsightRules",
        "resource_mappings": {
          "InsightRuleName": {
            "template": "${RuleNames[]}"
          }
        }
      }
    ],
    "get-dashboard": [
      {
        "action": "cloudwatch:GetDashboard",
        "resource_mappings": {
          "DashboardName": {
            "template": "${DashboardName}"
          }
        }
      }
    ],
    "get-insight-rule-report": [
      {
        "action": "cloudwatch:GetInsightRuleReport",
        "resource_mappings": {
          "InsightRuleName": {
            "template": "${RuleName}"
          }
        }
      }
    ],
    "get-metric-data": [
      {
        "action": "cloudwatch:GetMetricData",
        "resource_mappings": {}
      }
    ],
    "get-metric-statistics": [
      {
        "action": "cloudwatch:GetMetricStatistics",
        "resource_mappings": {}
      }
    ],
    "get-metric-stream": [
      {
        "action": "cloudwatch:GetMetricStream",
        "resource_mappings": {
          "MetricStreamName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-metric-widget-image": [
      {
        "action": "cloudwatch:GetMetricWidgetImage",
        "resource_mappings": {}
      }
    ],
    "list-dashboards": [
      {
        "action": "cloudwatch:ListDashboards",
        "resource_mappings": {}
      }
    ],
    "list-managed-insight-rules": [
      {
        "action": "cloudwatch:ListManagedInsightRules",
        "resource_mappings": {}
      }
    ],
    "list-metric-streams": [
      {
        "action": "cloudwatch:ListMetricStreams",
        "resource_mappings": {}
      }
    ],
    "list-metrics": [
      {
        "action": "cloudwatch:ListMetrics",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "cloudwatch:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "alarm": "%%iftemplatematch%${ResourceARN}%%",
          "insight-rule": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "put-anomaly-detector": [
      {
        "action": "cloudwatch:PutAnomalyDetector",
        "resource_mappings": {}
      }
    ],
    "put-composite-alarm": [
      {
        "action": "cloudwatch:PutCompositeAlarm",
        "resource_mappings": {
          "AlarmName": {
            "template": "${AlarmName}"
          }
        }
      }
    ],
    "put-dashboard": [
      {
        "action": "cloudwatch:PutDashboard",
        "resource_mappings": {
          "DashboardName": {
            "template": "${DashboardName}"
          }
        }
      }
    ],
    "put-insight-rule": [
      {
        "action": "cloudwatch:PutInsightRule",
        "resource_mappings": {
          "InsightRuleName": {
            "template": "${RuleName}"
          }
        }
      }
    ],
    "put-managed-insight-rules": [
      {
        "action": "cloudwatch:PutManagedInsightRules",
        "resource_mappings": {}
      }
    ],
    "put-metric-alarm": [
      {
        "action": "cloudwatch:PutMetricAlarm",
        "resource_mappings": {
          "AlarmName": {
            "template": "${AlarmName}"
          }
        }
      }
    ],
    "put-metric-data": [
      {
        "action": "cloudwatch:PutMetricData",
        "resource_mappings": {}
      }
    ],
    "put-metric-stream": [
      {
        "action": "cloudwatch:PutMetricStream",
        "resource_mappings": {
          "MetricStreamName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "set-alarm-state": [
      {
        "action": "cloudwatch:SetAlarmState",
        "resource_mappings": {
          "AlarmName": {
            "template": "${AlarmName}"
          }
        }
      }
    ],
    "start-metric-streams": [
      {
        "action": "cloudwatch:StartMetricStreams",
        "resource_mappings": {
          "MetricStreamName": {
            "template": "${Names[]}"
          }
        }
      }
    ],
    "stop-metric-streams": [
      {
        "action": "cloudwatch:StopMetricStreams",
        "resource_mappings": {
          "MetricStreamName": {
            "template": "${Names[]}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "cloudwatch:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "alarm": "%%iftemplatematch%${ResourceARN}%%",
          "insight-rule": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "cloudwatch:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "alarm": "%%iftemplatematch%${ResourceARN}%%",
          "insight-rule": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "wait": [
      {
        "action": "cloudwatch:DescribeAlarms",
        "resource_mappings": {
          "AlarmName": {
            "template": "%%many%${AlarmNames[]}%${AlarmNamePrefix}*%%"
          }
        }
      }
    ]
  },
  "codeartifact": {
    "associate-external-connection": [
      {
        "action": "codeartifact:AssociateExternalConnection",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          },
          "RepositoryName": {
            "template": "${repository}"
          }
        }
      }
    ],
    "copy-package-versions": [
      {
        "action": "codeartifact:CopyPackageVersions",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          },
          "RepositoryName": {
            "template": "%%many%${sourceRepository}%${destinationRepository}%%"
          },
          "PackageFormat": {
            "template": "${format}"
          },
          "PackageNamespace": {
            "template": "${namespace}"
          },
          "PackageName": {
            "template": "${package}"
          }
        }
      }
    ],
    "create-domain": [
      {
        "action": "codeartifact:CreateDomain",
        "resource_mappings": {}
      }
    ],
    "create-repository": [
      {
        "action": "codeartifact:CreateRepository",
        "resource_mappings": {}
      }
    ],
    "delete-domain": [
      {
        "action": "codeartifact:DeleteDomain",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "delete-domain-permissions-policy": [
      {
        "action": "codeartifact:DeleteDomainPermissionsPolicy",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "delete-package": [
      {
        "action": "codeartifact:DeletePackage",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          },
          "RepositoryName": {
            "template": "${repository}"
          },
          "PackageFormat": {
            "template": "${format}"
          },
          "PackageNamespace": {
            "template": "${namespace}"
          },
          "PackageName": {
            "template": "${package}"
          }
        }
      }
    ],
    "delete-package-versions": [
      {
        "action": "codeartifact:DeletePackageVersions",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          },
          "RepositoryName": {
            "template": "${repository}"
          },
          "PackageFormat": {
            "template": "${format}"
          },
          "PackageNamespace": {
            "template": "${namespace}"
          },
          "PackageName": {
            "template": "${package}"
          }
        }
      }
    ],
    "delete-repository": [
      {
        "action": "codeartifact:DeleteRepository",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          },
          "RepositoryName": {
            "template": "${repository}"
          }
        }
      }
    ],
    "delete-repository-permissions-policy": [
      {
        "action": "codeartifact:DeleteRepositoryPermissionsPolicy",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          },
          "RepositoryName": {
            "template": "${repository}"
          }
        }
      }
    ],
    "describe-domain": [
      {
        "action": "codeartifact:DescribeDomain",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "describe-package": [
      {
        "action": "codeartifact:DescribePackage",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          },
          "RepositoryName": {
            "template": "${repository}"
          },
          "PackageFormat": {
            "template": "${format}"
          },
          "PackageNamespace": {
            "template": "${namespace}"
          },
          "PackageName": {
            "template": "${package}"
          }
        }
      }
    ],
    "describe-package-version": [
      {
        "action": "codeartifact:DescribePackageVersion",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          },
          "RepositoryName": {
            "template": "${repository}"
          },
          "PackageFormat": {
            "template": "${format}"
          },
          "PackageNamespace": {
            "template": "${namespace}"
          },
          "PackageName": {
            "template": "${package}"
          }
        }
      }
    ],
    "describe-repository": [
      {
        "action": "codeartifact:DescribeRepository",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          },
          "RepositoryName": {
            "template": "${repository}"
          }
        }
      }
    ],
    "disassociate-external-connection": [
      {
        "action": "codeartifact:DisassociateExternalConnection",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          },
          "RepositoryName": {
            "template": "${repository}"
          }
        }
      }
    ],
    "dispose-package-versions": [
      {
        "action": "codeartifact:DisposePackageVersions",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          },
          "RepositoryName": {
            "template": "${repository}"
          },
          "PackageFormat": {
            "template": "${format}"
          },
          "PackageNamespace": {
            "template": "${namespace}"
          },
          "PackageName": {
            "template": "${package}"
          }
        }
      }
    ],
    "get-authorization-token": [
      {
        "action": "codeartifact:GetAuthorizationToken",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "get-domain-permissions-policy": [
      {
        "action": "codeartifact:GetDomainPermissionsPolicy",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "get-package-version-asset": [
      {
        "action": "codeartifact:GetPackageVersionAsset",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          },
          "RepositoryName": {
            "template": "${repository}"
          },
          "PackageFormat": {
            "template": "${format}"
          },
          "PackageNamespace": {
            "template": "${namespace}"
          },
          "PackageName": {
            "template": "${package}"
          }
        }
      }
    ],
    "get-package-version-readme": [
      {
        "action": "codeartifact:GetPackageVersionReadme",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          },
          "RepositoryName": {
            "template": "${repository}"
          },
          "PackageFormat": {
            "template": "${format}"
          },
          "PackageNamespace": {
            "template": "${namespace}"
          },
          "PackageName": {
            "template": "${package}"
          }
        }
      }
    ],
    "get-repository-endpoint": [
      {
        "action": "codeartifact:GetRepositoryEndpoint",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          },
          "RepositoryName": {
            "template": "${repository}"
          }
        }
      }
    ],
    "get-repository-permissions-policy": [
      {
        "action": "codeartifact:GetRepositoryPermissionsPolicy",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          },
          "RepositoryName": {
            "template": "${repository}"
          }
        }
      }
    ],
    "list-domains": [
      {
        "action": "codeartifact:ListDomains",
        "resource_mappings": {}
      }
    ],
    "list-package-version-assets": [
      {
        "action": "codeartifact:ListPackageVersionAssets",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          },
          "RepositoryName": {
            "template": "${repository}"
          },
          "PackageFormat": {
            "template": "${format}"
          },
          "PackageNamespace": {
            "template": "${namespace}"
          },
          "PackageName": {
            "template": "${package}"
          }
        }
      }
    ],
    "list-package-version-dependencies": [
      {
        "action": "codeartifact:ListPackageVersionDependencies",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          },
          "RepositoryName": {
            "template": "${repository}"
          },
          "PackageFormat": {
            "template": "${format}"
          },
          "PackageNamespace": {
            "template": "${namespace}"
          },
          "PackageName": {
            "template": "${package}"
          }
        }
      }
    ],
    "list-package-versions": [
      {
        "action": "codeartifact:ListPackageVersions",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          },
          "RepositoryName": {
            "template": "${repository}"
          },
          "PackageFormat": {
            "template": "${format}"
          },
          "PackageNamespace": {
            "template": "${namespace}"
          },
          "PackageName": {
            "template": "${package}"
          }
        }
      }
    ],
    "list-packages": [
      {
        "action": "codeartifact:ListPackages",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          },
          "RepositoryName": {
            "template": "${repository}"
          }
        }
      }
    ],
    "list-repositories": [
      {
        "action": "codeartifact:ListRepositories",
        "resource_mappings": {}
      }
    ],
    "list-repositories-in-domain": [
      {
        "action": "codeartifact:ListRepositoriesInDomain",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "codeartifact:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "domain": "%%iftemplatematch%${resourceArn}%%",
          "repository": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "publish-package-version": [
      {
        "action": "codeartifact:PublishPackageVersion",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          },
          "RepositoryName": {
            "template": "${repository}"
          },
          "PackageFormat": {
            "template": "${format}"
          },
          "PackageNamespace": {
            "template": "${namespace}"
          },
          "PackageName": {
            "template": "${package}"
          }
        }
      }
    ],
    "put-domain-permissions-policy": [
      {
        "action": "codeartifact:PutDomainPermissionsPolicy",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "put-package-origin-configuration": [
      {
        "action": "codeartifact:PutPackageOriginConfiguration",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          },
          "RepositoryName": {
            "template": "${repository}"
          },
          "PackageFormat": {
            "template": "${format}"
          },
          "PackageNamespace": {
            "template": "${namespace}"
          },
          "PackageName": {
            "template": "${package}"
          }
        }
      }
    ],
    "put-repository-permissions-policy": [
      {
        "action": "codeartifact:PutRepositoryPermissionsPolicy",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          },
          "RepositoryName": {
            "template": "${repository}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "codeartifact:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "domain": "%%iftemplatematch%${resourceArn}%%",
          "repository": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "codeartifact:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "domain": "%%iftemplatematch%${resourceArn}%%",
          "repository": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-package-versions-status": [
      {
        "action": "codeartifact:UpdatePackageVersionsStatus",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          },
          "RepositoryName": {
            "template": "${repository}"
          },
          "PackageFormat": {
            "template": "${format}"
          },
          "PackageNamespace": {
            "template": "${namespace}"
          },
          "PackageName": {
            "template": "${package}"
          }
        }
      }
    ],
    "update-repository": [
      {
        "action": "codeartifact:UpdateRepository",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          },
          "RepositoryName": {
            "template": "${repository}"
          }
        }
      }
    ]
  },
  "codebuild": {
    "batch-delete-builds": [
      {
        "action": "codebuild:BatchDeleteBuilds",
        "resource_mappings": {
          "ProjectName": {
            "template": "%%regex%${ids[]}%/\\:(.+)$/g%%"
          }
        }
      }
    ],
    "batch-get-build-batches": [
      {
        "action": "codebuild:BatchGetBuildBatches",
        "resource_mappings": {
          "ProjectName": {
            "template": "%%regex%${ids[]}%/\\:(.+)$/g%%"
          }
        }
      }
    ],
    "batch-get-builds": [
      {
        "action": "codebuild:BatchGetBuilds",
        "resource_mappings": {
          "ProjectName": {
            "template": "%%regex%${ids[]}%/\\:(.+)$/g%%"
          }
        }
      }
    ],
    "batch-get-projects": [
      {
        "action": "codebuild:BatchGetProjects",
        "resource_mappings": {
          "ProjectName": {
            "template": "${names[]}"
          }
        }
      }
    ],
    "batch-get-report-groups": [
      {
        "action": "codebuild:BatchGetReportGroups",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "report-group": "${reportGroupArns[]}"
        }
      }
    ],
    "batch-get-reports": [
      {
        "action": "codebuild:BatchGetReports",
        "resource_mappings": {
          "ReportGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "create-project": [
      {
        "action": "codebuild:CreateProject",
        "resource_mappings": {
          "ProjectName": {
            "template": "${name}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${serviceRole}%${buildBatchConfig.serviceRole}%%"
        }
      }
    ],
    "create-report-group": [
      {
        "action": "codebuild:CreateReportGroup",
        "resource_mappings": {
          "ReportGroupName": {
            "template": "${name}"
          }
        }
      }
    ],
    "create-webhook": [
      {
        "action": "codebuild:CreateWebhook",
        "resource_mappings": {
          "ProjectName": {
            "template": "${projectName}"
          }
        }
      }
    ],
    "delete-build-batch": [
      {
        "action": "codebuild:DeleteBuildBatch",
        "resource_mappings": {
          "ProjectName": {
            "template": "%%regex%${ids[]}%/\\:(.+)$/g%%"
          }
        }
      }
    ],
    "delete-project": [
      {
        "action": "codebuild:DeleteProject",
        "resource_mappings": {
          "ProjectName": {
            "template": "${name}"
          }
        }
      }
    ],
    "delete-report": [
      {
        "action": "codebuild:DeleteReport",
        "resource_mappings": {
          "ReportGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "delete-report-group": [
      {
        "action": "codebuild:DeleteReportGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "report-group": "${arn}"
        }
      }
    ],
    "delete-resource-policy": [
      {
        "action": "codebuild:DeleteResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "project": "%%iftemplatematch%${resourceArn}%%",
          "report-group": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "delete-source-credentials": [
      {
        "action": "codebuild:DeleteSourceCredentials",
        "resource_mappings": {}
      }
    ],
    "delete-webhook": [
      {
        "action": "codebuild:DeleteWebhook",
        "resource_mappings": {
          "ProjectName": {
            "template": "${projectName}"
          }
        }
      }
    ],
    "describe-code-coverages": [
      {
        "action": "codebuild:DescribeCodeCoverages",
        "resource_mappings": {
          "ReportGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "describe-test-cases": [
      {
        "action": "codebuild:DescribeTestCases",
        "resource_mappings": {
          "ReportGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "get-report-group-trend": [
      {
        "action": "codebuild:GetReportGroupTrend",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "report-group": "${reportGroupArn}"
        }
      }
    ],
    "get-resource-policy": [
      {
        "action": "codebuild:GetResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "project": "%%iftemplatematch%${resourceArn}%%",
          "report-group": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "import-source-credentials": [
      {
        "action": "codebuild:ImportSourceCredentials",
        "resource_mappings": {}
      }
    ],
    "invalidate-project-cache": [
      {
        "action": "codebuild:InvalidateProjectCache",
        "resource_mappings": {
          "ProjectName": {
            "template": "${projectName}"
          }
        }
      }
    ],
    "list-build-batches": [
      {
        "action": "codebuild:ListBuildBatches",
        "resource_mappings": {}
      }
    ],
    "list-build-batches-for-project": [
      {
        "action": "codebuild:ListBuildBatchesForProject",
        "resource_mappings": {
          "ProjectName": {
            "template": "${projectName}"
          }
        }
      }
    ],
    "list-builds": [
      {
        "action": "codebuild:ListBuilds",
        "resource_mappings": {}
      }
    ],
    "list-builds-for-project": [
      {
        "action": "codebuild:ListBuildsForProject",
        "resource_mappings": {
          "ProjectName": {
            "template": "${projectName}"
          }
        }
      }
    ],
    "list-curated-environment-images": [
      {
        "action": "codebuild:ListCuratedEnvironmentImages",
        "resource_mappings": {}
      }
    ],
    "list-projects": [
      {
        "action": "codebuild:ListProjects",
        "resource_mappings": {}
      }
    ],
    "list-report-groups": [
      {
        "action": "codebuild:ListReportGroups",
        "resource_mappings": {}
      }
    ],
    "list-reports": [
      {
        "action": "codebuild:ListReports",
        "resource_mappings": {}
      }
    ],
    "list-reports-for-report-group": [
      {
        "action": "codebuild:ListReportsForReportGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "report-group": "${reportGroupArn}"
        }
      }
    ],
    "list-shared-projects": [
      {
        "action": "codebuild:ListSharedProjects",
        "resource_mappings": {}
      }
    ],
    "list-shared-report-groups": [
      {
        "action": "codebuild:ListSharedReportGroups",
        "resource_mappings": {}
      }
    ],
    "list-source-credentials": [
      {
        "action": "codebuild:ListSourceCredentials",
        "resource_mappings": {}
      }
    ],
    "put-resource-policy": [
      {
        "action": "codebuild:PutResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "project": "%%iftemplatematch%${resourceArn}%%",
          "report-group": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "retry-build": [
      {
        "action": "codebuild:RetryBuild",
        "resource_mappings": {
          "ProjectName": {
            "template": "%%regex%${id}%/\\:(.+)$/g%%"
          }
        }
      }
    ],
    "retry-build-batch": [
      {
        "action": "codebuild:RetryBuildBatch",
        "resource_mappings": {
          "ProjectName": {
            "template": "%%regex%${id}%/\\:(.+)$/g%%"
          }
        }
      }
    ],
    "start-build": [
      {
        "action": "codebuild:StartBuild",
        "resource_mappings": {
          "ProjectName": {
            "template": "${projectName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${serviceRoleOverride}"
        }
      }
    ],
    "start-build-batch": [
      {
        "action": "codebuild:StartBuildBatch",
        "resource_mappings": {
          "ProjectName": {
            "template": "${projectName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${serviceRoleOverride}%${buildBatchConfigOverride.serviceRole}%%"
        }
      }
    ],
    "stop-build": [
      {
        "action": "codebuild:StopBuild",
        "resource_mappings": {
          "ProjectName": {
            "template": "%%regex%${id}%\\:(.+)$/g%%"
          }
        }
      }
    ],
    "stop-build-batch": [
      {
        "action": "codebuild:StopBuildBatch",
        "resource_mappings": {
          "ProjectName": {
            "template": "%%regex%${id}%\\:(.+)$/g%%"
          }
        }
      }
    ],
    "update-project": [
      {
        "action": "codebuild:UpdateProject",
        "resource_mappings": {
          "ProjectName": {
            "template": "${name}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${serviceRole}%${buildBatchConfig.serviceRole}%%"
        }
      }
    ],
    "update-project-visibility": [
      {
        "action": "codebuild:UpdateProjectVisibility",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "project": "${projectArn}"
        }
      }
    ],
    "update-report-group": [
      {
        "action": "codebuild:UpdateReportGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "report-group": "${arn}"
        }
      }
    ],
    "update-webhook": [
      {
        "action": "codebuild:UpdateWebhook",
        "resource_mappings": {
          "ProjectName": {
            "template": "${projectName}"
          }
        }
      }
    ]
  },
  "codecatalyst": {
    "create-access-token": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:CreateAccessToken",
        "resource_mappings": {}
      }
    ],
    "create-dev-environment": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:CreateDevEnvironment",
        "resource_mappings": {}
      }
    ],
    "create-project": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:CreateProject",
        "resource_mappings": {}
      }
    ],
    "create-source-repository": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:CreateSourceRepository",
        "resource_mappings": {}
      }
    ],
    "create-source-repository-branch": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:CreateSourceRepositoryBranch",
        "resource_mappings": {}
      }
    ],
    "delete-access-token": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:DeleteAccessToken",
        "resource_mappings": {}
      }
    ],
    "delete-dev-environment": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:DeleteDevEnvironment",
        "resource_mappings": {}
      }
    ],
    "delete-project": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:DeleteProject",
        "resource_mappings": {}
      }
    ],
    "delete-source-repository": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:DeleteSourceRepository",
        "resource_mappings": {}
      }
    ],
    "delete-space": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:DeleteSpace",
        "resource_mappings": {}
      }
    ],
    "get-dev-environment": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:GetDevEnvironment",
        "resource_mappings": {}
      }
    ],
    "get-project": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:GetProject",
        "resource_mappings": {}
      }
    ],
    "get-source-repository": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:GetSourceRepository",
        "resource_mappings": {}
      }
    ],
    "get-source-repository-clone-urls": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:GetSourceRepositoryCloneUrls",
        "resource_mappings": {}
      }
    ],
    "get-space": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:GetSpace",
        "resource_mappings": {}
      }
    ],
    "get-subscription": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:GetSubscription",
        "resource_mappings": {}
      }
    ],
    "get-user-details": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:GetUserDetails",
        "resource_mappings": {}
      }
    ],
    "list-access-tokens": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:ListAccessTokens",
        "resource_mappings": {}
      }
    ],
    "list-dev-environment-sessions": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:ListDevEnvironmentSessions",
        "resource_mappings": {}
      }
    ],
    "list-dev-environments": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:ListDevEnvironments",
        "resource_mappings": {}
      }
    ],
    "list-event-logs": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:ListEventLogs",
        "resource_mappings": {}
      }
    ],
    "list-projects": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:ListProjects",
        "resource_mappings": {}
      }
    ],
    "list-source-repositories": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:ListSourceRepositories",
        "resource_mappings": {}
      }
    ],
    "list-source-repository-branches": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:ListSourceRepositoryBranches",
        "resource_mappings": {}
      }
    ],
    "list-spaces": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:ListSpaces",
        "resource_mappings": {}
      }
    ],
    "start-dev-environment": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:StartDevEnvironment",
        "resource_mappings": {}
      }
    ],
    "start-dev-environment-session": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:StartDevEnvironmentSession",
        "resource_mappings": {}
      }
    ],
    "stop-dev-environment": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:StopDevEnvironment",
        "resource_mappings": {}
      }
    ],
    "stop-dev-environment-session": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:StopDevEnvironmentSession",
        "resource_mappings": {}
      }
    ],
    "update-dev-environment": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:UpdateDevEnvironment",
        "resource_mappings": {}
      }
    ],
    "update-project": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:UpdateProject",
        "resource_mappings": {}
      }
    ],
    "update-space": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:UpdateSpace",
        "resource_mappings": {}
      }
    ],
    "verify-session": [
      {
        "note": "NotFound",
        "action": "CodeCatalyst:VerifySession",
        "resource_mappings": {}
      }
    ]
  },
  "codecommit": {
    "associate-approval-rule-template-with-repository": [
      {
        "action": "codecommit:AssociateApprovalRuleTemplateWithRepository",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "batch-associate-approval-rule-template-with-repositories": [
      {
        "action": "codecommit:BatchAssociateApprovalRuleTemplateWithRepositories",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryNames[]}"
          }
        }
      }
    ],
    "batch-describe-merge-conflicts": [
      {
        "action": "codecommit:BatchDescribeMergeConflicts",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "batch-disassociate-approval-rule-template-from-repositories": [
      {
        "action": "codecommit:BatchDisassociateApprovalRuleTemplateFromRepositories",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryNames[]}"
          }
        }
      }
    ],
    "batch-get-commits": [
      {
        "action": "codecommit:BatchGetCommits",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "batch-get-repositories": [
      {
        "action": "codecommit:BatchGetRepositories",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryNames[]}"
          }
        }
      }
    ],
    "create-approval-rule-template": [
      {
        "action": "codecommit:CreateApprovalRuleTemplate",
        "resource_mappings": {}
      }
    ],
    "create-branch": [
      {
        "action": "codecommit:CreateBranch",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "create-commit": [
      {
        "action": "codecommit:CreateCommit",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "create-pull-request": [
      {
        "action": "codecommit:CreatePullRequest",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${targets[].repositoryName}"
          }
        }
      }
    ],
    "create-pull-request-approval-rule": [
      {
        "action": "codecommit:CreatePullRequestApprovalRule",
        "resource_mappings": {
          "RepositoryName": {
            "template": "*"
          }
        }
      }
    ],
    "create-repository": [
      {
        "action": "codecommit:CreateRepository",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "create-unreferenced-merge-commit": [
      {
        "action": "codecommit:CreateUnreferencedMergeCommit",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "delete-approval-rule-template": [
      {
        "action": "codecommit:DeleteApprovalRuleTemplate",
        "resource_mappings": {}
      }
    ],
    "delete-branch": [
      {
        "action": "codecommit:DeleteBranch",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "delete-comment-content": [
      {
        "action": "codecommit:DeleteCommentContent",
        "resource_mappings": {
          "RepositoryName": {
            "template": "*"
          }
        }
      }
    ],
    "delete-file": [
      {
        "action": "codecommit:DeleteFile",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "delete-pull-request-approval-rule": [
      {
        "action": "codecommit:DeletePullRequestApprovalRule",
        "resource_mappings": {
          "RepositoryName": {
            "template": "*"
          }
        }
      }
    ],
    "delete-repository": [
      {
        "action": "codecommit:DeleteRepository",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "describe-merge-conflicts": [
      {
        "action": "codecommit:DescribeMergeConflicts",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "describe-pull-request-events": [
      {
        "action": "codecommit:DescribePullRequestEvents",
        "resource_mappings": {
          "RepositoryName": {
            "template": "*"
          }
        }
      }
    ],
    "disassociate-approval-rule-template-from-repository": [
      {
        "action": "codecommit:DisassociateApprovalRuleTemplateFromRepository",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "evaluate-pull-request-approval-rules": [
      {
        "action": "codecommit:EvaluatePullRequestApprovalRules",
        "resource_mappings": {
          "RepositoryName": {
            "template": "*"
          }
        }
      }
    ],
    "get-approval-rule-template": [
      {
        "action": "codecommit:GetApprovalRuleTemplate",
        "resource_mappings": {}
      }
    ],
    "get-blob": [
      {
        "action": "codecommit:GetBlob",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "get-branch": [
      {
        "action": "codecommit:GetBranch",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "get-comment": [
      {
        "action": "codecommit:GetComment",
        "resource_mappings": {
          "RepositoryName": {
            "template": "*"
          }
        }
      }
    ],
    "get-comment-reactions": [
      {
        "action": "codecommit:GetCommentReactions",
        "resource_mappings": {
          "RepositoryName": {
            "template": "*"
          }
        }
      }
    ],
    "get-comments-for-compared-commit": [
      {
        "action": "codecommit:GetCommentsForComparedCommit",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "get-comments-for-pull-request": [
      {
        "action": "codecommit:GetCommentsForPullRequest",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "get-commit": [
      {
        "action": "codecommit:GetCommit",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "get-differences": [
      {
        "action": "codecommit:GetDifferences",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "get-file": [
      {
        "action": "codecommit:GetFile",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "get-folder": [
      {
        "action": "codecommit:GetFolder",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "get-merge-commit": [
      {
        "action": "codecommit:GetMergeCommit",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "get-merge-conflicts": [
      {
        "action": "codecommit:GetMergeConflicts",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "get-merge-options": [
      {
        "action": "codecommit:GetMergeOptions",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "get-pull-request": [
      {
        "action": "codecommit:GetPullRequest",
        "resource_mappings": {
          "RepositoryName": {
            "template": "*"
          }
        }
      }
    ],
    "get-pull-request-approval-states": [
      {
        "action": "codecommit:GetPullRequestApprovalStates",
        "resource_mappings": {
          "RepositoryName": {
            "template": "*"
          }
        }
      }
    ],
    "get-pull-request-override-state": [
      {
        "action": "codecommit:GetPullRequestOverrideState",
        "resource_mappings": {
          "RepositoryName": {
            "template": "*"
          }
        }
      }
    ],
    "get-repository": [
      {
        "action": "codecommit:GetRepository",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "get-repository-triggers": [
      {
        "action": "codecommit:GetRepositoryTriggers",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "list-approval-rule-templates": [
      {
        "action": "codecommit:ListApprovalRuleTemplates",
        "resource_mappings": {}
      }
    ],
    "list-associated-approval-rule-templates-for-repository": [
      {
        "action": "codecommit:ListAssociatedApprovalRuleTemplatesForRepository",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "list-branches": [
      {
        "action": "codecommit:ListBranches",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "list-file-commit-history": [
      {
        "action": "codecommit:ListFileCommitHistory",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "list-pull-requests": [
      {
        "action": "codecommit:ListPullRequests",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "list-repositories": [
      {
        "action": "codecommit:ListRepositories",
        "resource_mappings": {}
      }
    ],
    "list-repositories-for-approval-rule-template": [
      {
        "action": "codecommit:ListRepositoriesForApprovalRuleTemplate",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "codecommit:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "repository": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "merge-branches-by-fast-forward": [
      {
        "action": "codecommit:MergeBranchesByFastForward",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "merge-branches-by-squash": [
      {
        "action": "codecommit:MergeBranchesBySquash",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "merge-branches-by-three-way": [
      {
        "action": "codecommit:MergeBranchesByThreeWay",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "merge-pull-request-by-fast-forward": [
      {
        "action": "codecommit:MergePullRequestByFastForward",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "merge-pull-request-by-squash": [
      {
        "action": "codecommit:MergePullRequestBySquash",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "merge-pull-request-by-three-way": [
      {
        "action": "codecommit:MergePullRequestByThreeWay",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "override-pull-request-approval-rules": [
      {
        "action": "codecommit:OverridePullRequestApprovalRules",
        "resource_mappings": {
          "RepositoryName": {
            "template": "*"
          }
        }
      }
    ],
    "post-comment-for-compared-commit": [
      {
        "action": "codecommit:PostCommentForComparedCommit",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "post-comment-for-pull-request": [
      {
        "action": "codecommit:PostCommentForPullRequest",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "post-comment-reply": [
      {
        "action": "codecommit:PostCommentReply",
        "resource_mappings": {
          "RepositoryName": {
            "template": "*"
          }
        }
      }
    ],
    "put-comment-reaction": [
      {
        "action": "codecommit:PutCommentReaction",
        "resource_mappings": {
          "RepositoryName": {
            "template": "*"
          }
        }
      }
    ],
    "put-file": [
      {
        "action": "codecommit:PutFile",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "put-repository-triggers": [
      {
        "action": "codecommit:PutRepositoryTriggers",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "codecommit:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "repository": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "test-repository-triggers": [
      {
        "action": "codecommit:TestRepositoryTriggers",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "untag-resource": [
      {
        "action": "codecommit:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "repository": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-approval-rule-template-content": [
      {
        "action": "codecommit:UpdateApprovalRuleTemplateContent",
        "resource_mappings": {}
      }
    ],
    "update-approval-rule-template-description": [
      {
        "action": "codecommit:UpdateApprovalRuleTemplateDescription",
        "resource_mappings": {}
      }
    ],
    "update-approval-rule-template-name": [
      {
        "action": "codecommit:UpdateApprovalRuleTemplateName",
        "resource_mappings": {}
      }
    ],
    "update-comment": [
      {
        "action": "codecommit:UpdateComment",
        "resource_mappings": {
          "RepositoryName": {
            "template": "*"
          }
        }
      }
    ],
    "update-default-branch": [
      {
        "action": "codecommit:UpdateDefaultBranch",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "update-pull-request-approval-rule-content": [
      {
        "action": "codecommit:UpdatePullRequestApprovalRuleContent",
        "resource_mappings": {
          "RepositoryName": {
            "template": "*"
          }
        }
      }
    ],
    "update-pull-request-approval-state": [
      {
        "action": "codecommit:UpdatePullRequestApprovalState",
        "resource_mappings": {
          "RepositoryName": {
            "template": "*"
          }
        }
      }
    ],
    "update-pull-request-description": [
      {
        "action": "codecommit:UpdatePullRequestDescription",
        "resource_mappings": {
          "RepositoryName": {
            "template": "*"
          }
        }
      }
    ],
    "update-pull-request-status": [
      {
        "action": "codecommit:UpdatePullRequestStatus",
        "resource_mappings": {
          "RepositoryName": {
            "template": "*"
          }
        }
      }
    ],
    "update-pull-request-title": [
      {
        "action": "codecommit:UpdatePullRequestTitle",
        "resource_mappings": {
          "RepositoryName": {
            "template": "*"
          }
        }
      }
    ],
    "update-repository-description": [
      {
        "action": "codecommit:UpdateRepositoryDescription",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "update-repository-name": [
      {
        "action": "codecommit:UpdateRepositoryName",
        "resource_mappings": {
          "RepositoryName": {
            "template": "%%many%${oldName}%${newName}%%"
          }
        }
      }
    ]
  },
  "codeguru-reviewer": {
    "associate-repository": [
      {
        "action": "codeguru-reviewer:AssociateRepository",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          },
          "RepositoryName": {
            "template": "${Repository.CodeCommit.Name}"
          }
        },
        "resourcearn_mappings": {
          "connection": "%%many%${Repository.Bitbucket.ConnectionArn}%${Repository.GitHubEnterpriseServer.ConnectionArn}%%"
        }
      },
      {
        "action": "codecommit:ListRepositories",
        "resource_mappings": {}
      },
      {
        "action": "codecommit:TagResource",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${Repository.CodeCommit.Name}"
          }
        }
      },
      {
        "action": "events:PutRule",
        "resource_mappings": {
          "EventBusName": {
            "template": "*"
          },
          "RuleName": {
            "template": "*"
          }
        }
      },
      {
        "action": "events:PutTargets",
        "resource_mappings": {
          "EventBusName": {
            "template": "*"
          },
          "RuleName": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "s3:CreateBucket",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          }
        }
      },
      {
        "action": "s3:ListBucket",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          }
        }
      },
      {
        "action": "s3:PutBucketPolicy",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          }
        }
      },
      {
        "action": "s3:PutLifecycleConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          }
        }
      }
    ],
    "create-code-review": [
      {
        "action": "codeguru-reviewer:CreateCodeReview",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "association": "${RepositoryAssociationArn}"
        }
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      }
    ],
    "describe-code-review": [
      {
        "action": "codeguru-reviewer:DescribeCodeReview",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "association": "${CodeReviewArn}"
        }
      }
    ],
    "describe-recommendation-feedback": [
      {
        "action": "codeguru-reviewer:DescribeRecommendationFeedback",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-repository-association": [
      {
        "action": "codeguru-reviewer:DescribeRepositoryAssociation",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "association": "${AssociationArn}"
        }
      }
    ],
    "disassociate-repository": [
      {
        "action": "codeguru-reviewer:DisassociateRepository",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "association": "${AssociationArn}"
        }
      },
      {
        "action": "codecommit:UntagResource",
        "resource_mappings": {
          "RepositoryName": {
            "template": "*"
          }
        }
      }
    ],
    "list-code-reviews": [
      {
        "action": "codeguru-reviewer:ListCodeReviews",
        "resource_mappings": {}
      }
    ],
    "list-recommendation-feedback": [
      {
        "action": "codeguru-reviewer:ListRecommendationFeedback",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-recommendations": [
      {
        "action": "codeguru-reviewer:ListRecommendations",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-repository-associations": [
      {
        "action": "codeguru-reviewer:ListRepositoryAssociations",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "codeguru-reviewer:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "association": "%%iftruthy%${resourceArn}%%"
        }
      }
    ],
    "put-recommendation-feedback": [
      {
        "action": "codeguru-reviewer:PutRecommendationFeedback",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "codeguru-reviewer:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "association": "%%iftruthy%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "codeguru-reviewer:UnTagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "association": "%%iftruthy%${resourceArn}%%"
        }
      }
    ],
    "wait": [
      {
        "action": "codeguru-reviewer:DescribeCodeReview",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "association": "${CodeReviewArn}"
        }
      }
    ]
  },
  "codeguru-security": {
    "batch-get-findings": [
      {
        "action": "codeguru-security:BatchGetFindings",
        "resource_mappings": {
          "ScanName": {
            "template": "${findingIdentifiers[].scanName}"
          }
        }
      }
    ],
    "create-scan": [
      {
        "action": "codeguru-security:CreateScan",
        "resource_mappings": {
          "ScanName": {
            "template": "${scanName}"
          }
        }
      }
    ],
    "create-upload-url": [
      {
        "action": "codeguru-security:CreateUploadUrl",
        "resource_mappings": {
          "ScanName": {
            "template": "${scanName}"
          }
        }
      }
    ],
    "get-account-configuration": [
      {
        "action": "codeguru-security:GetAccountConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-findings": [
      {
        "action": "codeguru-security:GetFindings",
        "resource_mappings": {
          "ScanName": {
            "template": "${scanName}"
          }
        }
      }
    ],
    "get-metrics-summary": [
      {
        "action": "codeguru-security:GetMetricsSummary",
        "resource_mappings": {}
      }
    ],
    "get-scan": [
      {
        "action": "codeguru-security:GetScan",
        "resource_mappings": {
          "ScanName": {
            "template": "${scanName}"
          }
        }
      }
    ],
    "list-findings-metrics": [
      {
        "action": "codeguru-security:ListFindingsMetrics",
        "resource_mappings": {}
      }
    ],
    "list-scans": [
      {
        "action": "codeguru-security:ListScans",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "codeguru-security:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ScanName": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "codeguru-security:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ScanName": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "codeguru-security:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ScanName": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-account-configuration": [
      {
        "action": "codeguru-security:UpdateAccountConfiguration",
        "resource_mappings": {}
      }
    ]
  },
  "codeguruprofiler": {
    "add-notification-channels": [
      {
        "action": "codeguru-profiler:AddNotificationChannels",
        "resource_mappings": {
          "profilingGroupName": {
            "template": "${profilingGroupName}"
          }
        }
      }
    ],
    "batch-get-frame-metric-data": [
      {
        "action": "codeguru-profiler:BatchGetFrameMetricData",
        "resource_mappings": {
          "profilingGroupName": {
            "template": "${profilingGroupName}"
          }
        }
      }
    ],
    "configure-agent": [
      {
        "action": "codeguru-profiler:ConfigureAgent",
        "resource_mappings": {
          "profilingGroupName": {
            "template": "${profilingGroupName}"
          }
        }
      }
    ],
    "create-profiling-group": [
      {
        "action": "codeguru-profiler:CreateProfilingGroup",
        "resource_mappings": {}
      }
    ],
    "delete-profiling-group": [
      {
        "action": "codeguru-profiler:DeleteProfilingGroup",
        "resource_mappings": {
          "profilingGroupName": {
            "template": "${profilingGroupName}"
          }
        }
      }
    ],
    "describe-profiling-group": [
      {
        "action": "codeguru-profiler:DescribeProfilingGroup",
        "resource_mappings": {
          "profilingGroupName": {
            "template": "${profilingGroupName}"
          }
        }
      }
    ],
    "get-findings-report-account-summary": [
      {
        "action": "codeguru-profiler:GetFindingsReportAccountSummary",
        "resource_mappings": {}
      }
    ],
    "get-notification-configuration": [
      {
        "action": "codeguru-profiler:GetNotificationConfiguration",
        "resource_mappings": {
          "profilingGroupName": {
            "template": "${profilingGroupName}"
          }
        }
      }
    ],
    "get-policy": [
      {
        "action": "codeguru-profiler:GetPolicy",
        "resource_mappings": {
          "profilingGroupName": {
            "template": "${profilingGroupName}"
          }
        }
      }
    ],
    "get-profile": [
      {
        "action": "codeguru-profiler:GetProfile",
        "resource_mappings": {
          "profilingGroupName": {
            "template": "${profilingGroupName}"
          }
        }
      }
    ],
    "get-recommendations": [
      {
        "action": "codeguru-profiler:GetRecommendations",
        "resource_mappings": {
          "profilingGroupName": {
            "template": "${profilingGroupName}"
          }
        }
      }
    ],
    "list-findings-reports": [
      {
        "action": "codeguru-profiler:ListFindingsReports",
        "resource_mappings": {
          "profilingGroupName": {
            "template": "${profilingGroupName}"
          }
        }
      }
    ],
    "list-profile-times": [
      {
        "action": "codeguru-profiler:ListProfileTimes",
        "resource_mappings": {
          "profilingGroupName": {
            "template": "${profilingGroupName}"
          }
        }
      }
    ],
    "list-profiling-groups": [
      {
        "action": "codeguru-profiler:ListProfilingGroups",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "codeguru-profiler:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ProfilingGroup": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "post-agent-profile": [
      {
        "action": "codeguru-profiler:PostAgentProfile",
        "resource_mappings": {
          "profilingGroupName": {
            "template": "${profilingGroupName}"
          }
        }
      }
    ],
    "put-permission": [
      {
        "action": "codeguru-profiler:PutPermission",
        "resource_mappings": {
          "profilingGroupName": {
            "template": "${profilingGroupName}"
          }
        }
      }
    ],
    "remove-notification-channel": [
      {
        "action": "codeguru-profiler:RemoveNotificationChannel",
        "resource_mappings": {
          "profilingGroupName": {
            "template": "${profilingGroupName}"
          }
        }
      }
    ],
    "remove-permission": [
      {
        "action": "codeguru-profiler:RemovePermission",
        "resource_mappings": {
          "profilingGroupName": {
            "template": "${profilingGroupName}"
          }
        }
      }
    ],
    "submit-feedback": [
      {
        "action": "codeguru-profiler:SubmitFeedback",
        "resource_mappings": {
          "profilingGroupName": {
            "template": "${profilingGroupName}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "codeguru-profiler:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ProfilingGroup": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "codeguru-profiler:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ProfilingGroup": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-profiling-group": [
      {
        "action": "codeguru-profiler:UpdateProfilingGroup",
        "resource_mappings": {
          "profilingGroupName": {
            "template": "${profilingGroupName}"
          }
        }
      }
    ]
  },
  "codepipeline": {
    "acknowledge-job": [
      {
        "action": "codepipeline:AcknowledgeJob",
        "resource_mappings": {}
      }
    ],
    "acknowledge-third-party-job": [
      {
        "action": "codepipeline:AcknowledgeThirdPartyJob",
        "resource_mappings": {}
      }
    ],
    "create-custom-action-type": [
      {
        "action": "codepipeline:CreateCustomActionType",
        "resource_mappings": {
          "Owner": {
            "template": "Custom"
          },
          "Category": {
            "template": "${category}"
          },
          "Provider": {
            "template": "${provider}"
          },
          "Version": {
            "template": "${version}"
          }
        }
      }
    ],
    "create-pipeline": [
      {
        "action": "codepipeline:CreatePipeline",
        "resource_mappings": {
          "PipelineName": {
            "template": "${pipeline.name}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${pipeline.roleArn}"
        }
      }
    ],
    "delete-custom-action-type": [
      {
        "action": "codepipeline:DeleteCustomActionType",
        "resource_mappings": {
          "Owner": {
            "template": "ThirdParty"
          },
          "Category": {
            "template": "${category}"
          },
          "Provider": {
            "template": "${provider}"
          },
          "Version": {
            "template": "${version}"
          }
        }
      }
    ],
    "delete-pipeline": [
      {
        "action": "codepipeline:DeletePipeline",
        "resource_mappings": {
          "PipelineName": {
            "template": "${name}"
          }
        }
      }
    ],
    "delete-webhook": [
      {
        "action": "codepipeline:DeleteWebhook",
        "resource_mappings": {
          "WebhookName": {
            "template": "${name}"
          }
        }
      }
    ],
    "deregister-webhook-with-third-party": [
      {
        "action": "codepipeline:DeregisterWebhookWithThirdParty",
        "resource_mappings": {
          "WebhookName": {
            "template": "${webhookName}"
          }
        }
      }
    ],
    "disable-stage-transition": [
      {
        "action": "codepipeline:DisableStageTransition",
        "resource_mappings": {
          "PipelineName": {
            "template": "${pipelineName}"
          },
          "StageName": {
            "template": "${stageName}"
          }
        }
      }
    ],
    "enable-stage-transition": [
      {
        "action": "codepipeline:EnableStageTransition",
        "resource_mappings": {
          "PipelineName": {
            "template": "${pipelineName}"
          },
          "StageName": {
            "template": "${stageName}"
          }
        }
      }
    ],
    "get-action-type": [
      {
        "action": "codepipeline:GetActionType",
        "resource_mappings": {}
      }
    ],
    "get-job-details": [
      {
        "action": "codepipeline:GetJobDetails",
        "resource_mappings": {}
      }
    ],
    "get-pipeline": [
      {
        "action": "codepipeline:GetPipeline",
        "resource_mappings": {
          "PipelineName": {
            "template": "${name}"
          }
        }
      }
    ],
    "get-pipeline-execution": [
      {
        "action": "codepipeline:GetPipelineExecution",
        "resource_mappings": {
          "PipelineName": {
            "template": "${pipelineName}"
          }
        }
      }
    ],
    "get-pipeline-state": [
      {
        "action": "codepipeline:GetPipelineState",
        "resource_mappings": {
          "PipelineName": {
            "template": "${name}"
          }
        }
      }
    ],
    "get-third-party-job-details": [
      {
        "action": "codepipeline:GetThirdPartyJobDetails",
        "resource_mappings": {}
      }
    ],
    "list-action-executions": [
      {
        "action": "codepipeline:ListActionExecutions",
        "resource_mappings": {
          "PipelineName": {
            "template": "${pipelineName}"
          }
        }
      }
    ],
    "list-action-types": [
      {
        "action": "codepipeline:ListActionTypes",
        "resource_mappings": {}
      }
    ],
    "list-pipeline-executions": [
      {
        "action": "codepipeline:ListPipelineExecutions",
        "resource_mappings": {
          "PipelineName": {
            "template": "${pipelineName}"
          }
        }
      }
    ],
    "list-pipelines": [
      {
        "action": "codepipeline:ListPipelines",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "codepipeline:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "actiontype": "%%iftemplatematch%${resourceArn}%%",
          "pipeline": "%%iftemplatematch%${resourceArn}%%",
          "webhook": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "list-webhooks": [
      {
        "action": "codepipeline:ListWebhooks",
        "resource_mappings": {
          "WebhookName": {
            "template": "*"
          }
        }
      }
    ],
    "poll-for-jobs": [
      {
        "action": "codepipeline:PollForJobs",
        "resource_mappings": {
          "Owner": {
            "template": "${actionTypeId.owner}"
          },
          "Category": {
            "template": "${actionTypeId.category}"
          },
          "Provider": {
            "template": "${actionTypeId.provider}"
          },
          "Version": {
            "template": "${actionTypeId.version}"
          }
        }
      }
    ],
    "poll-for-third-party-jobs": [
      {
        "action": "codepipeline:PollForThirdPartyJobs",
        "resource_mappings": {}
      }
    ],
    "put-action-revision": [
      {
        "action": "codepipeline:PutActionRevision",
        "resource_mappings": {
          "PipelineName": {
            "template": "${pipelineName}"
          },
          "StageName": {
            "template": "${stageName}"
          },
          "ActionName": {
            "template": "${actionName}"
          }
        }
      }
    ],
    "put-approval-result": [
      {
        "action": "codepipeline:PutApprovalResult",
        "resource_mappings": {
          "PipelineName": {
            "template": "${pipelineName}"
          },
          "StageName": {
            "template": "${stageName}"
          },
          "ActionName": {
            "template": "${actionName}"
          }
        }
      }
    ],
    "put-job-failure-result": [
      {
        "action": "codepipeline:PutJobFailureResult",
        "resource_mappings": {}
      }
    ],
    "put-job-success-result": [
      {
        "action": "codepipeline:PutJobSuccessResult",
        "resource_mappings": {}
      }
    ],
    "put-third-party-job-failure-result": [
      {
        "action": "codepipeline:PutThirdPartyJobFailureResult",
        "resource_mappings": {}
      }
    ],
    "put-third-party-job-success-result": [
      {
        "action": "codepipeline:PutThirdPartyJobSuccessResult",
        "resource_mappings": {}
      }
    ],
    "put-webhook": [
      {
        "action": "codepipeline:PutWebhook",
        "resource_mappings": {
          "PipelineName": {
            "template": "${webhook.targetPipeline}"
          },
          "WebhookName": {
            "template": "${webhook.name}"
          }
        }
      }
    ],
    "register-webhook-with-third-party": [
      {
        "action": "codepipeline:RegisterWebhookWithThirdParty",
        "resource_mappings": {
          "WebhookName": {
            "template": "${webhookName}"
          }
        }
      }
    ],
    "retry-stage-execution": [
      {
        "action": "codepipeline:RetryStageExecution",
        "resource_mappings": {
          "PipelineName": {
            "template": "${pipelineName}"
          },
          "StageName": {
            "template": "${stageName}"
          }
        }
      }
    ],
    "start-pipeline-execution": [
      {
        "action": "codepipeline:StartPipelineExecution",
        "resource_mappings": {
          "PipelineName": {
            "template": "${name}"
          }
        }
      }
    ],
    "stop-pipeline-execution": [
      {
        "action": "codepipeline:StopPipelineExecution",
        "resource_mappings": {
          "PipelineName": {
            "template": "${pipelineName}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "codepipeline:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "actiontype": "%%iftemplatematch%${resourceArn}%%",
          "pipeline": "%%iftemplatematch%${resourceArn}%%",
          "webhook": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "codepipeline:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "actiontype": "%%iftemplatematch%${resourceArn}%%",
          "pipeline": "%%iftemplatematch%${resourceArn}%%",
          "webhook": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-action-type": [
      {
        "action": "codepipeline:UpdateActionType",
        "resource_mappings": {
          "Owner": {
            "template": "${actionType.id.owner}"
          },
          "Category": {
            "template": "${actionType.id.category}"
          },
          "Provider": {
            "template": "${actionType.id.provider}"
          },
          "Version": {
            "template": "${actionType.id.version}"
          }
        }
      }
    ],
    "update-pipeline": [
      {
        "action": "codepipeline:UpdatePipeline",
        "resource_mappings": {
          "PipelineName": {
            "template": "${pipeline.name}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${pipeline.roleArn}"
        }
      }
    ]
  },
  "codestar": {
    "associate-team-member": [
      {
        "action": "codestar:AssociateTeamMember",
        "resource_mappings": {
          "ProjectId": {
            "template": "${projectId}"
          }
        }
      }
    ],
    "create-project": [
      {
        "action": "codestar:CreateProject",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${toolchain.roleArn}"
        }
      }
    ],
    "create-user-profile": [
      {
        "action": "codestar:CreateUserProfile",
        "resource_mappings": {
          "aws:username": {
            "template": "${aws:username}"
          }
        }
      }
    ],
    "delete-project": [
      {
        "action": "codestar:DeleteProject",
        "resource_mappings": {
          "ProjectId": {
            "template": "${id}"
          }
        }
      }
    ],
    "delete-user-profile": [
      {
        "action": "codestar:DeleteUserProfile",
        "resource_mappings": {
          "aws:username": {
            "template": "${aws:username}"
          }
        }
      }
    ],
    "describe-project": [
      {
        "action": "codestar:DescribeProject",
        "resource_mappings": {
          "ProjectId": {
            "template": "${id}"
          }
        }
      }
    ],
    "describe-user-profile": [
      {
        "action": "codestar:DescribeUserProfile",
        "resource_mappings": {}
      }
    ],
    "disassociate-team-member": [
      {
        "action": "codestar:DisassociateTeamMember",
        "resource_mappings": {
          "ProjectId": {
            "template": "${projectId}"
          }
        }
      }
    ],
    "list-projects": [
      {
        "action": "codestar:ListProjects",
        "resource_mappings": {}
      }
    ],
    "list-resources": [
      {
        "action": "codestar:ListResources",
        "resource_mappings": {
          "ProjectId": {
            "template": "${projectId}"
          }
        }
      }
    ],
    "list-tags-for-project": [
      {
        "action": "codestar:ListTagsForProject",
        "resource_mappings": {
          "ProjectId": {
            "template": "${id}"
          }
        }
      }
    ],
    "list-team-members": [
      {
        "action": "codestar:ListTeamMembers",
        "resource_mappings": {
          "ProjectId": {
            "template": "${projectId}"
          }
        }
      }
    ],
    "list-user-profiles": [
      {
        "action": "codestar:ListUserProfiles",
        "resource_mappings": {}
      }
    ],
    "tag-project": [
      {
        "action": "codestar:TagProject",
        "resource_mappings": {
          "ProjectId": {
            "template": "${id}"
          }
        }
      }
    ],
    "untag-project": [
      {
        "action": "codestar:UntagProject",
        "resource_mappings": {
          "ProjectId": {
            "template": "${id}"
          }
        }
      }
    ],
    "update-project": [
      {
        "action": "codestar:UpdateProject",
        "resource_mappings": {
          "ProjectId": {
            "template": "${id}"
          }
        }
      }
    ],
    "update-team-member": [
      {
        "action": "codestar:UpdateTeamMember",
        "resource_mappings": {
          "ProjectId": {
            "template": "${projectId}"
          }
        }
      }
    ],
    "update-user-profile": [
      {
        "action": "codestar:UpdateUserProfile",
        "resource_mappings": {
          "aws:username": {
            "template": "${aws:username}"
          }
        }
      }
    ]
  },
  "codestar-connections": {
    "create-connection": [
      {
        "action": "codestar-connections:CreateConnection",
        "resource_mappings": {}
      }
    ],
    "create-host": [
      {
        "action": "codestar-connections:CreateHost",
        "resource_mappings": {}
      }
    ],
    "delete-connection": [
      {
        "action": "codestar-connections:DeleteConnection",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Connection": "${ConnectionArn}"
        }
      }
    ],
    "delete-host": [
      {
        "action": "codestar-connections:DeleteHost",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Host": "${HostArn}"
        }
      }
    ],
    "get-connection": [
      {
        "action": "codestar-connections:GetConnection",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Connection": "${ConnectionArn}"
        }
      }
    ],
    "get-host": [
      {
        "action": "codestar-connections:GetHost",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Host": "${HostArn}"
        }
      }
    ],
    "list-connections": [
      {
        "action": "codestar-connections:ListConnections",
        "resource_mappings": {}
      }
    ],
    "list-hosts": [
      {
        "action": "codestar-connections:ListHosts",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "codestar-connections:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Connection": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "codestar-connections:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Connection": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "codestar-connections:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Connection": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-host": [
      {
        "action": "codestar-connections:UpdateHost",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Host": "${HostArn}"
        }
      }
    ]
  },
  "codestar-notifications": {
    "create-notification-rule": [
      {
        "action": "codestar-notifications:CreateNotificationRule",
        "resource_mappings": {
          "NotificationRuleId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-notification-rule": [
      {
        "action": "codestar-notifications:DeleteNotificationRule",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "notificationrule": "${Arn}"
        }
      }
    ],
    "delete-target": [
      {
        "action": "codestar-notifications:DeleteTarget",
        "resource_mappings": {}
      }
    ],
    "describe-notification-rule": [
      {
        "action": "codestar-notifications:DescribeNotificationRule",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "notificationrule": "${Arn}"
        }
      }
    ],
    "list-event-types": [
      {
        "action": "codestar-notifications:ListEventTypes",
        "resource_mappings": {}
      }
    ],
    "list-notification-rules": [
      {
        "action": "codestar-notifications:ListNotificationRules",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "codestar-notifications:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "notificationrule": "%%iftemplatematch%${Arn}%%"
        }
      }
    ],
    "list-targets": [
      {
        "action": "codestar-notifications:ListTargets",
        "resource_mappings": {}
      }
    ],
    "subscribe": [
      {
        "action": "codestar-notifications:Subscribe",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "notificationrule": "${Arn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "codestar-notifications:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "notificationrule": "%%iftemplatematch%${Arn}%%"
        }
      }
    ],
    "unsubscribe": [
      {
        "action": "codestar-notifications:Unsubscribe",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "notificationrule": "${Arn}"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "codestar-notifications:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "notificationrule": "%%iftemplatematch%${Arn}%%"
        }
      }
    ],
    "update-notification-rule": [
      {
        "action": "codestar-notifications:UpdateNotificationRule",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "notificationrule": "${Arn}"
        }
      }
    ]
  },
  "cognito-identity": {
    "create-identity-pool": [
      {
        "action": "cognito-identity:CreateIdentityPool",
        "resource_mappings": {}
      }
    ],
    "delete-identities": [
      {
        "action": "cognito-identity:DeleteIdentities",
        "resource_mappings": {}
      }
    ],
    "delete-identity-pool": [
      {
        "action": "cognito-identity:DeleteIdentityPool",
        "resource_mappings": {
          "IdentityPoolId": {
            "template": "${IdentityPoolId}"
          }
        }
      }
    ],
    "describe-identity": [
      {
        "action": "cognito-identity:DescribeIdentity",
        "resource_mappings": {}
      }
    ],
    "describe-identity-pool": [
      {
        "action": "cognito-identity:DescribeIdentityPool",
        "resource_mappings": {
          "IdentityPoolId": {
            "template": "${IdentityPoolId}"
          }
        }
      }
    ],
    "get-credentials-for-identity": [
      {
        "action": "cognito-identity:GetCredentialsForIdentity",
        "resource_mappings": {}
      }
    ],
    "get-id": [
      {
        "action": "cognito-identity:GetId",
        "resource_mappings": {}
      }
    ],
    "get-identity-pool-roles": [
      {
        "action": "cognito-identity:GetIdentityPoolRoles",
        "resource_mappings": {
          "IdentityPoolId": {
            "template": "${IdentityPoolId}"
          }
        }
      }
    ],
    "get-open-id-token": [
      {
        "action": "cognito-identity:GetOpenIdToken",
        "resource_mappings": {}
      }
    ],
    "get-open-id-token-for-developer-identity": [
      {
        "action": "cognito-identity:GetOpenIdTokenForDeveloperIdentity",
        "resource_mappings": {
          "IdentityPoolId": {
            "template": "${IdentityPoolId}"
          }
        }
      }
    ],
    "get-principal-tag-attribute-map": [
      {
        "action": "cognito-identity:GetPrincipalTagAttributeMap",
        "resource_mappings": {
          "IdentityPoolId": {
            "template": "${IdentityPoolId}"
          }
        }
      }
    ],
    "list-identities": [
      {
        "action": "cognito-identity:ListIdentities",
        "resource_mappings": {
          "IdentityPoolId": {
            "template": "${IdentityPoolId}"
          }
        }
      }
    ],
    "list-identity-pools": [
      {
        "action": "cognito-identity:ListIdentityPools",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "cognito-identity:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "identitypool": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "lookup-developer-identity": [
      {
        "action": "cognito-identity:LookupDeveloperIdentity",
        "resource_mappings": {
          "IdentityPoolId": {
            "template": "${IdentityPoolId}"
          }
        }
      }
    ],
    "merge-developer-identities": [
      {
        "action": "cognito-identity:MergeDeveloperIdentities",
        "resource_mappings": {
          "IdentityPoolId": {
            "template": "${IdentityPoolId}"
          }
        }
      }
    ],
    "set-identity-pool-roles": [
      {
        "action": "cognito-identity:SetIdentityPoolRoles",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "set-principal-tag-attribute-map": [
      {
        "action": "cognito-identity:SetPrincipalTagAttributeMap",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "cognito-identity:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "identitypool": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "unlink-developer-identity": [
      {
        "action": "cognito-identity:UnlinkDeveloperIdentity",
        "resource_mappings": {
          "IdentityPoolId": {
            "template": "${IdentityPoolId}"
          }
        }
      }
    ],
    "unlink-identity": [
      {
        "action": "cognito-identity:UnlinkIdentity",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "cognito-identity:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "identitypool": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-identity-pool": [
      {
        "action": "cognito-identity:UpdateIdentityPool",
        "resource_mappings": {
          "IdentityPoolId": {
            "template": "${IdentityPoolId}"
          }
        }
      }
    ]
  },
  "cognito-idp": {
    "add-custom-attributes": [
      {
        "action": "cognito-idp:AddCustomAttributes",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "admin-add-user-to-group": [
      {
        "action": "cognito-idp:AdminAddUserToGroup",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "admin-confirm-sign-up": [
      {
        "action": "cognito-idp:AdminConfirmSignUp",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "admin-create-user": [
      {
        "action": "cognito-idp:AdminCreateUser",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "admin-delete-user": [
      {
        "action": "cognito-idp:AdminDeleteUser",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "admin-delete-user-attributes": [
      {
        "action": "cognito-idp:AdminDeleteUserAttributes",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "admin-disable-provider-for-user": [
      {
        "action": "cognito-idp:AdminDisableProviderForUser",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "admin-disable-user": [
      {
        "action": "cognito-idp:AdminDisableUser",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "admin-enable-user": [
      {
        "action": "cognito-idp:AdminEnableUser",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "admin-forget-device": [
      {
        "action": "cognito-idp:AdminForgetDevice",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "admin-get-device": [
      {
        "action": "cognito-idp:AdminGetDevice",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "admin-get-user": [
      {
        "action": "cognito-idp:AdminGetUser",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "admin-initiate-auth": [
      {
        "action": "cognito-idp:AdminInitiateAuth",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "admin-link-provider-for-user": [
      {
        "action": "cognito-idp:AdminLinkProviderForUser",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "admin-list-devices": [
      {
        "action": "cognito-idp:AdminListDevices",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "admin-list-groups-for-user": [
      {
        "action": "cognito-idp:AdminListGroupsForUser",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "admin-list-user-auth-events": [
      {
        "action": "cognito-idp:AdminListUserAuthEvents",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "admin-remove-user-from-group": [
      {
        "action": "cognito-idp:AdminRemoveUserFromGroup",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "admin-reset-user-password": [
      {
        "action": "cognito-idp:AdminResetUserPassword",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "admin-respond-to-auth-challenge": [
      {
        "action": "cognito-idp:AdminRespondToAuthChallenge",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "admin-set-user-mfa-preference": [
      {
        "action": "cognito-idp:AdminSetUserMFAPreference",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "admin-set-user-password": [
      {
        "action": "cognito-idp:AdminSetUserPassword",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "admin-set-user-settings": [
      {
        "action": "cognito-idp:AdminSetUserSettings",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "admin-update-auth-event-feedback": [
      {
        "action": "cognito-idp:AdminUpdateAuthEventFeedback",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "admin-update-device-status": [
      {
        "action": "cognito-idp:AdminUpdateDeviceStatus",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "admin-update-user-attributes": [
      {
        "action": "cognito-idp:AdminUpdateUserAttributes",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "admin-user-global-sign-out": [
      {
        "action": "cognito-idp:AdminUserGlobalSignOut",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "associate-software-token": [
      {
        "action": "cognito-idp:AssociateSoftwareToken",
        "resource_mappings": {}
      }
    ],
    "change-password": [
      {
        "action": "cognito-idp:ChangePassword",
        "resource_mappings": {}
      }
    ],
    "confirm-device": [
      {
        "action": "cognito-idp:ConfirmDevice",
        "resource_mappings": {}
      }
    ],
    "confirm-forgot-password": [
      {
        "action": "cognito-idp:ConfirmForgotPassword",
        "resource_mappings": {}
      }
    ],
    "confirm-sign-up": [
      {
        "action": "cognito-idp:ConfirmSignUp",
        "resource_mappings": {}
      }
    ],
    "create-group": [
      {
        "action": "cognito-idp:CreateGroup",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "create-identity-provider": [
      {
        "action": "cognito-idp:CreateIdentityProvider",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "create-resource-server": [
      {
        "action": "cognito-idp:CreateResourceServer",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "create-user-import-job": [
      {
        "action": "cognito-idp:CreateUserImportJob",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${CloudWatchLogsRoleArn}"
        }
      }
    ],
    "create-user-pool": [
      {
        "action": "cognito-idp:CreateUserPool",
        "resource_mappings": {}
      }
    ],
    "create-user-pool-client": [
      {
        "action": "cognito-idp:CreateUserPoolClient",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${AnalyticsConfiguration.RoleArn}"
        }
      }
    ],
    "create-user-pool-domain": [
      {
        "action": "cognito-idp:CreateUserPoolDomain",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "delete-group": [
      {
        "action": "cognito-idp:DeleteGroup",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "delete-identity-provider": [
      {
        "action": "cognito-idp:DeleteIdentityProvider",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "delete-resource-server": [
      {
        "action": "cognito-idp:DeleteResourceServer",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "delete-user": [
      {
        "action": "cognito-idp:DeleteUser",
        "resource_mappings": {}
      }
    ],
    "delete-user-attributes": [
      {
        "action": "cognito-idp:DeleteUserAttributes",
        "resource_mappings": {}
      }
    ],
    "delete-user-pool": [
      {
        "action": "cognito-idp:DeleteUserPool",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "delete-user-pool-client": [
      {
        "action": "cognito-idp:DeleteUserPoolClient",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "delete-user-pool-domain": [
      {
        "action": "cognito-idp:DeleteUserPoolDomain",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "describe-identity-provider": [
      {
        "action": "cognito-idp:DescribeIdentityProvider",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "describe-resource-server": [
      {
        "action": "cognito-idp:DescribeResourceServer",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "describe-risk-configuration": [
      {
        "action": "cognito-idp:DescribeRiskConfiguration",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "describe-user-import-job": [
      {
        "action": "cognito-idp:DescribeUserImportJob",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "describe-user-pool": [
      {
        "action": "cognito-idp:DescribeUserPool",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "describe-user-pool-client": [
      {
        "action": "cognito-idp:DescribeUserPoolClient",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "describe-user-pool-domain": [
      {
        "action": "cognito-idp:DescribeUserPoolDomain",
        "resource_mappings": {}
      }
    ],
    "forget-device": [
      {
        "action": "cognito-idp:ForgetDevice",
        "resource_mappings": {}
      }
    ],
    "forgot-password": [
      {
        "action": "cognito-idp:ForgotPassword",
        "resource_mappings": {}
      }
    ],
    "get-csv-header": [
      {
        "action": "cognito-idp:GetCSVHeader",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "get-device": [
      {
        "action": "cognito-idp:GetDevice",
        "resource_mappings": {}
      }
    ],
    "get-group": [
      {
        "action": "cognito-idp:GetGroup",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "get-identity-provider-by-identifier": [
      {
        "action": "cognito-idp:GetIdentityProviderByIdentifier",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "get-log-delivery-configuration": [
      {
        "action": "cognito-idp:GetLogDeliveryConfiguration",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "get-signing-certificate": [
      {
        "action": "cognito-idp:GetSigningCertificate",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "get-ui-customization": [
      {
        "action": "cognito-idp:GetUICustomization",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "get-user": [
      {
        "action": "cognito-idp:GetUser",
        "resource_mappings": {}
      }
    ],
    "get-user-attribute-verification-code": [
      {
        "action": "cognito-idp:GetUserAttributeVerificationCode",
        "resource_mappings": {}
      }
    ],
    "get-user-pool-mfa-config": [
      {
        "action": "cognito-idp:GetUserPoolMfaConfig",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "global-sign-out": [
      {
        "action": "cognito-idp:GlobalSignOut",
        "resource_mappings": {}
      }
    ],
    "initiate-auth": [
      {
        "action": "cognito-idp:InitiateAuth",
        "resource_mappings": {}
      }
    ],
    "list-devices": [
      {
        "action": "cognito-idp:ListDevices",
        "resource_mappings": {}
      }
    ],
    "list-groups": [
      {
        "action": "cognito-idp:ListGroups",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "list-identity-providers": [
      {
        "action": "cognito-idp:ListIdentityProviders",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "list-resource-servers": [
      {
        "action": "cognito-idp:ListResourceServers",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "cognito-idp:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "userpool": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "list-user-import-jobs": [
      {
        "action": "cognito-idp:ListUserImportJobs",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "list-user-pool-clients": [
      {
        "action": "cognito-idp:ListUserPoolClients",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "list-user-pools": [
      {
        "action": "cognito-idp:ListUserPools",
        "resource_mappings": {}
      }
    ],
    "list-users": [
      {
        "action": "cognito-idp:ListUsers",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "list-users-in-group": [
      {
        "action": "cognito-idp:ListUsersInGroup",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "resend-confirmation-code": [
      {
        "action": "cognito-idp:ResendConfirmationCode",
        "resource_mappings": {}
      }
    ],
    "respond-to-auth-challenge": [
      {
        "action": "cognito-idp:RespondToAuthChallenge",
        "resource_mappings": {}
      }
    ],
    "revoke-token": [
      {
        "action": "cognito-idp:RevokeToken",
        "resource_mappings": {}
      },
      {
        "action": "cognito-idp:RevokeToken",
        "resource_mappings": {}
      }
    ],
    "set-log-delivery-configuration": [
      {
        "action": "cognito-idp:SetLogDeliveryConfiguration",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "set-risk-configuration": [
      {
        "action": "cognito-idp:SetRiskConfiguration",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "set-ui-customization": [
      {
        "action": "cognito-idp:SetUICustomization",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "set-user-mfa-preference": [
      {
        "action": "cognito-idp:SetUserMFAPreference",
        "resource_mappings": {}
      }
    ],
    "set-user-pool-mfa-config": [
      {
        "action": "cognito-idp:SetUserPoolMfaConfig",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "set-user-settings": [
      {
        "action": "cognito-idp:SetUserSettings",
        "resource_mappings": {}
      }
    ],
    "sign-up": [
      {
        "action": "cognito-idp:SignUp",
        "resource_mappings": {}
      }
    ],
    "start-user-import-job": [
      {
        "action": "cognito-idp:StartUserImportJob",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "stop-user-import-job": [
      {
        "action": "cognito-idp:StopUserImportJob",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "cognito-idp:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "userpool": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "cognito-idp:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "userpool": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-auth-event-feedback": [
      {
        "action": "cognito-idp:UpdateAuthEventFeedback",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "update-device-status": [
      {
        "action": "cognito-idp:UpdateDeviceStatus",
        "resource_mappings": {}
      }
    ],
    "update-group": [
      {
        "action": "cognito-idp:UpdateGroup",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "update-identity-provider": [
      {
        "action": "cognito-idp:UpdateIdentityProvider",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "update-resource-server": [
      {
        "action": "cognito-idp:UpdateResourceServer",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "update-user-attributes": [
      {
        "action": "cognito-idp:UpdateUserAttributes",
        "resource_mappings": {}
      }
    ],
    "update-user-pool": [
      {
        "action": "cognito-idp:UpdateUserPool",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "update-user-pool-client": [
      {
        "action": "cognito-idp:UpdateUserPoolClient",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${AnalyticsConfiguration.RoleArn}"
        }
      }
    ],
    "update-user-pool-domain": [
      {
        "action": "cognito-idp:UpdateUserPoolDomain",
        "resource_mappings": {
          "UserPoolId": {
            "template": "${UserPoolId}"
          }
        }
      }
    ],
    "verify-software-token": [
      {
        "action": "cognito-idp:VerifySoftwareToken",
        "resource_mappings": {}
      }
    ],
    "verify-user-attribute": [
      {
        "action": "cognito-idp:VerifyUserAttribute",
        "resource_mappings": {}
      }
    ]
  },
  "cognito-sync": {
    "bulk-publish": [
      {
        "action": "cognito-sync:BulkPublish",
        "resource_mappings": {
          "IdentityPoolId": {
            "template": "${IdentityPoolId}"
          }
        }
      }
    ],
    "delete-dataset": [
      {
        "action": "cognito-sync:DeleteDataset",
        "resource_mappings": {
          "IdentityPoolId": {
            "template": "${IdentityPoolId}"
          },
          "IdentityId": {
            "template": "${IdentityId}"
          },
          "DatasetName": {
            "template": "${DatasetName}"
          }
        }
      }
    ],
    "describe-dataset": [
      {
        "action": "cognito-sync:DescribeDataset",
        "resource_mappings": {
          "IdentityPoolId": {
            "template": "${IdentityPoolId}"
          },
          "IdentityId": {
            "template": "${IdentityId}"
          },
          "DatasetName": {
            "template": "${DatasetName}"
          }
        }
      }
    ],
    "describe-identity-pool-usage": [
      {
        "action": "cognito-sync:DescribeIdentityPoolUsage",
        "resource_mappings": {
          "IdentityPoolId": {
            "template": "${IdentityPoolId}"
          }
        }
      }
    ],
    "describe-identity-usage": [
      {
        "action": "cognito-sync:DescribeIdentityUsage",
        "resource_mappings": {
          "IdentityPoolId": {
            "template": "${IdentityPoolId}"
          },
          "IdentityId": {
            "template": "${IdentityId}"
          }
        }
      }
    ],
    "get-bulk-publish-details": [
      {
        "action": "cognito-sync:GetBulkPublishDetails",
        "resource_mappings": {
          "IdentityPoolId": {
            "template": "${IdentityPoolId}"
          }
        }
      }
    ],
    "get-cognito-events": [
      {
        "action": "cognito-sync:GetCognitoEvents",
        "resource_mappings": {
          "IdentityPoolId": {
            "template": "${IdentityPoolId}"
          }
        }
      }
    ],
    "get-identity-pool-configuration": [
      {
        "action": "cognito-sync:GetIdentityPoolConfiguration",
        "resource_mappings": {
          "IdentityPoolId": {
            "template": "${IdentityPoolId}"
          }
        }
      }
    ],
    "list-datasets": [
      {
        "action": "cognito-sync:ListDatasets",
        "resource_mappings": {
          "IdentityPoolId": {
            "template": "${IdentityPoolId}"
          },
          "IdentityId": {
            "template": "${IdentityId}"
          },
          "DatasetName": {
            "template": "*"
          }
        }
      }
    ],
    "list-identity-pool-usage": [
      {
        "action": "cognito-sync:ListIdentityPoolUsage",
        "resource_mappings": {
          "IdentityPoolId": {
            "template": "*"
          }
        }
      }
    ],
    "list-records": [
      {
        "action": "cognito-sync:ListRecords",
        "resource_mappings": {
          "IdentityPoolId": {
            "template": "${IdentityPoolId}"
          },
          "IdentityId": {
            "template": "${IdentityId}"
          },
          "DatasetName": {
            "template": "${DatasetName}"
          }
        }
      }
    ],
    "register-device": [
      {
        "action": "cognito-sync:RegisterDevice",
        "resource_mappings": {
          "IdentityPoolId": {
            "template": "${IdentityPoolId}"
          },
          "IdentityId": {
            "template": "${IdentityId}"
          }
        }
      }
    ],
    "set-cognito-events": [
      {
        "action": "cognito-sync:SetCognitoEvents",
        "resource_mappings": {
          "IdentityPoolId": {
            "template": "${IdentityPoolId}"
          }
        }
      }
    ],
    "set-identity-pool-configuration": [
      {
        "action": "cognito-sync:SetIdentityPoolConfiguration",
        "resource_mappings": {
          "IdentityPoolId": {
            "template": "${IdentityPoolId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${PushSync.RoleArn}%${CognitoStreams.RoleArn}%%"
        }
      }
    ],
    "subscribe-to-dataset": [
      {
        "action": "cognito-sync:SubscribeToDataset",
        "resource_mappings": {
          "IdentityPoolId": {
            "template": "${IdentityPoolId}"
          },
          "IdentityId": {
            "template": "${IdentityId}"
          },
          "DatasetName": {
            "template": "${DatasetName}"
          }
        }
      }
    ],
    "unsubscribe-from-dataset": [
      {
        "action": "cognito-sync:UnsubscribeFromDataset",
        "resource_mappings": {
          "IdentityPoolId": {
            "template": "${IdentityPoolId}"
          },
          "IdentityId": {
            "template": "${IdentityId}"
          },
          "DatasetName": {
            "template": "${DatasetName}"
          }
        }
      }
    ],
    "update-records": [
      {
        "action": "cognito-sync:UpdateRecords",
        "resource_mappings": {
          "IdentityPoolId": {
            "template": "${IdentityPoolId}"
          },
          "IdentityId": {
            "template": "${IdentityId}"
          },
          "DatasetName": {
            "template": "${DatasetName}"
          }
        }
      }
    ]
  },
  "comprehend": {
    "batch-detect-dominant-language": [
      {
        "action": "comprehend:BatchDetectDominantLanguage",
        "resource_mappings": {}
      }
    ],
    "batch-detect-entities": [
      {
        "action": "comprehend:BatchDetectEntities",
        "resource_mappings": {}
      }
    ],
    "batch-detect-key-phrases": [
      {
        "action": "comprehend:BatchDetectKeyPhrases",
        "resource_mappings": {}
      }
    ],
    "batch-detect-sentiment": [
      {
        "action": "comprehend:BatchDetectSentiment",
        "resource_mappings": {}
      }
    ],
    "batch-detect-syntax": [
      {
        "action": "comprehend:BatchDetectSyntax",
        "resource_mappings": {}
      }
    ],
    "batch-detect-targeted-sentiment": [
      {
        "action": "comprehend:BatchDetectTargetedSentiment",
        "resource_mappings": {}
      }
    ],
    "classify-document": [
      {
        "action": "comprehend:ClassifyDocument",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "document-classifier-endpoint": "${EndpointArn}"
        }
      }
    ],
    "contains-pii-entities": [
      {
        "action": "comprehend:ContainsPiiEntities",
        "resource_mappings": {}
      }
    ],
    "create-dataset": [
      {
        "action": "comprehend:CreateDataset",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "flywheel": "${FlywheelArn}"
        }
      }
    ],
    "create-document-classifier": [
      {
        "action": "comprehend:CreateDocumentClassifier",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${DataAccessRoleArn}"
        }
      }
    ],
    "create-endpoint": [
      {
        "action": "comprehend:CreateEndpoint",
        "resource_mappings": {
          "DocumentClassifierName": {
            "template": "*"
          },
          "EntityRecognizerName": {
            "template": "*"
          }
        }
      }
    ],
    "create-entity-recognizer": [
      {
        "action": "comprehend:CreateEntityRecognizer",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${DataAccessRoleArn}"
        }
      }
    ],
    "create-flywheel": [
      {
        "action": "comprehend:CreateFlywheel",
        "resource_mappings": {
          "FlywheelName": {
            "template": "${FlywheelName}"
          },
          "DocumentClassifierName": {
            "template": "*"
          },
          "EntityRecognizerName": {
            "template": "*"
          }
        }
      }
    ],
    "delete-document-classifier": [
      {
        "action": "comprehend:DeleteDocumentClassifier",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "document-classifier": "${DocumentClassifierArn}"
        }
      }
    ],
    "delete-endpoint": [
      {
        "action": "comprehend:DeleteEndpoint",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "document-classifier-endpoint": "%%iftemplatematch%${EndpointArn}%%",
          "entity-recognizer-endpoint": "%%iftemplatematch%${EndpointArn}%%"
        }
      }
    ],
    "delete-entity-recognizer": [
      {
        "action": "comprehend:DeleteEntityRecognizer",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "entity-recognizer": "${EntityRecognizerArn}"
        }
      }
    ],
    "delete-flywheel": [
      {
        "action": "comprehend:DeleteFlywheel",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "flywheel": "${FlywheelArn}"
        }
      }
    ],
    "delete-resource-policy": [
      {
        "action": "comprehend:DeleteResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "document-classifier": "%%iftemplatematch%${ResourceArn}%%",
          "entity-recognizer": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "describe-dataset": [
      {
        "action": "comprehend:DescribeDataset",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "flywheel-dataset": "${DatasetArn}"
        }
      }
    ],
    "describe-document-classification-job": [
      {
        "action": "comprehend:DescribeDocumentClassificationJob",
        "resource_mappings": {}
      }
    ],
    "describe-document-classifier": [
      {
        "action": "comprehend:DescribeDocumentClassifier",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "document-classifier": "${DocumentClassifierArn}"
        }
      }
    ],
    "describe-dominant-language-detection-job": [
      {
        "action": "comprehend:DescribeDominantLanguageDetectionJob",
        "resource_mappings": {}
      }
    ],
    "describe-endpoint": [
      {
        "action": "comprehend:DescribeEndpoint",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "document-classifier-endpoint": "%%iftemplatematch%${EndpointArn}%%",
          "entity-recognizer-endpoint": "%%iftemplatematch%${EndpointArn}%%"
        }
      }
    ],
    "describe-entities-detection-job": [
      {
        "action": "comprehend:DescribeEntitiesDetectionJob",
        "resource_mappings": {}
      }
    ],
    "describe-entity-recognizer": [
      {
        "action": "comprehend:DescribeEntityRecognizer",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "entity-recognizer": "${EntityRecognizerArn}"
        }
      }
    ],
    "describe-events-detection-job": [
      {
        "action": "comprehend:DescribeEventsDetectionJob",
        "resource_mappings": {}
      }
    ],
    "describe-flywheel": [
      {
        "action": "comprehend:DescribeFlywheel",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "flywheel": "${FlywheelArn}"
        }
      }
    ],
    "describe-flywheel-iteration": [
      {
        "action": "comprehend:DescribeFlywheelIteration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "flywheel": "${FlywheelArn}"
        }
      }
    ],
    "describe-key-phrases-detection-job": [
      {
        "action": "comprehend:DescribeKeyPhrasesDetectionJob",
        "resource_mappings": {}
      }
    ],
    "describe-pii-entities-detection-job": [
      {
        "action": "comprehend:DescribePiiEntitiesDetectionJob",
        "resource_mappings": {}
      }
    ],
    "describe-resource-policy": [
      {
        "action": "comprehend:DescribeResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "document-classifier": "%%iftemplatematch%${ResourceArn}%%",
          "entity-recognizer": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "describe-sentiment-detection-job": [
      {
        "action": "comprehend:DescribeSentimentDetectionJob",
        "resource_mappings": {}
      }
    ],
    "describe-targeted-sentiment-detection-job": [
      {
        "action": "comprehend:DescribeTargetedSentimentDetectionJob",
        "resource_mappings": {
          "JobId": {
            "template": "${JobId}"
          }
        }
      }
    ],
    "describe-topics-detection-job": [
      {
        "action": "comprehend:DescribeTopicsDetectionJob",
        "resource_mappings": {}
      }
    ],
    "detect-dominant-language": [
      {
        "action": "comprehend:DetectDominantLanguage",
        "resource_mappings": {}
      }
    ],
    "detect-entities": [
      {
        "action": "comprehend:DetectEntities",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "entity-recognizer-endpoint": "${EndpointArn}"
        }
      }
    ],
    "detect-key-phrases": [
      {
        "action": "comprehend:DetectKeyPhrases",
        "resource_mappings": {}
      }
    ],
    "detect-pii-entities": [
      {
        "action": "comprehend:DetectPiiEntities",
        "resource_mappings": {}
      }
    ],
    "detect-sentiment": [
      {
        "action": "comprehend:DetectSentiment",
        "resource_mappings": {}
      }
    ],
    "detect-syntax": [
      {
        "action": "comprehend:DetectSyntax",
        "resource_mappings": {}
      }
    ],
    "detect-targeted-sentiment": [
      {
        "action": "comprehend:DetectTargetedSentiment",
        "resource_mappings": {}
      }
    ],
    "import-model": [
      {
        "action": "comprehend:ImportModel",
        "resource_mappings": {
          "DocumentClassifierName": {
            "template": "*"
          },
          "EntityRecognizerName": {
            "template": "*"
          }
        }
      }
    ],
    "list-datasets": [
      {
        "action": "comprehend:ListDatasets",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "flywheel": "${FlywheelArn}"
        }
      }
    ],
    "list-document-classification-jobs": [
      {
        "action": "comprehend:ListDocumentClassificationJobs",
        "resource_mappings": {}
      }
    ],
    "list-document-classifier-summaries": [
      {
        "action": "comprehend:ListDocumentClassifierSummaries",
        "resource_mappings": {}
      }
    ],
    "list-document-classifiers": [
      {
        "action": "comprehend:ListDocumentClassifiers",
        "resource_mappings": {}
      }
    ],
    "list-dominant-language-detection-jobs": [
      {
        "action": "comprehend:ListDominantLanguageDetectionJobs",
        "resource_mappings": {}
      }
    ],
    "list-endpoints": [
      {
        "action": "comprehend:ListEndpoints",
        "resource_mappings": {}
      }
    ],
    "list-entities-detection-jobs": [
      {
        "action": "comprehend:ListEntitiesDetectionJobs",
        "resource_mappings": {}
      }
    ],
    "list-entity-recognizer-summaries": [
      {
        "action": "comprehend:ListEntityRecognizerSummaries",
        "resource_mappings": {}
      }
    ],
    "list-entity-recognizers": [
      {
        "action": "comprehend:ListEntityRecognizers",
        "resource_mappings": {}
      }
    ],
    "list-events-detection-jobs": [
      {
        "action": "comprehend:ListEventsDetectionJobs",
        "resource_mappings": {}
      }
    ],
    "list-flywheel-iteration-history": [
      {
        "action": "comprehend:ListFlywheelIterationHistory",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "flywheel": "${FlywheelArn}"
        }
      }
    ],
    "list-flywheels": [
      {
        "action": "comprehend:ListFlywheels",
        "resource_mappings": {}
      }
    ],
    "list-key-phrases-detection-jobs": [
      {
        "action": "comprehend:ListKeyPhrasesDetectionJobs",
        "resource_mappings": {}
      }
    ],
    "list-pii-entities-detection-jobs": [
      {
        "action": "comprehend:ListPiiEntitiesDetectionJobs",
        "resource_mappings": {}
      }
    ],
    "list-sentiment-detection-jobs": [
      {
        "action": "comprehend:ListSentimentDetectionJobs",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "comprehend:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "document-classifier": "%%iftemplatematch%${ResourceArn}%%",
          "document-classifier-endpoint": "%%iftemplatematch%${ResourceArn}%%",
          "entity-recognizer": "%%iftemplatematch%${ResourceArn}%%",
          "entity-recognizer-endpoint": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "list-targeted-sentiment-detection-jobs": [
      {
        "action": "comprehend:ListTargetedSentimentDetectionJobs",
        "resource_mappings": {}
      }
    ],
    "list-topics-detection-jobs": [
      {
        "action": "comprehend:ListTopicsDetectionJobs",
        "resource_mappings": {}
      }
    ],
    "put-resource-policy": [
      {
        "action": "comprehend:PutResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "document-classifier": "%%iftemplatematch%${ResourceArn}%%",
          "entity-recognizer": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "start-document-classification-job": [
      {
        "action": "comprehend:StartDocumentClassificationJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "document-classifier": "${DocumentClassifierArn}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${DataAccessRoleArn}"
        }
      }
    ],
    "start-dominant-language-detection-job": [
      {
        "action": "comprehend:StartDominantLanguageDetectionJob",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${DataAccessRoleArn}"
        }
      }
    ],
    "start-entities-detection-job": [
      {
        "action": "comprehend:StartEntitiesDetectionJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "entity-recognizer": "${EntityRecognizerArn}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${DataAccessRoleArn}"
        }
      }
    ],
    "start-events-detection-job": [
      {
        "action": "comprehend:StartEventsDetectionJob",
        "resource_mappings": {}
      }
    ],
    "start-flywheel-iteration": [
      {
        "action": "comprehend:StartFlywheelIteration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "flywheel": "${FlywheelArn}"
        }
      }
    ],
    "start-key-phrases-detection-job": [
      {
        "action": "comprehend:StartKeyPhrasesDetectionJob",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${DataAccessRoleArn}"
        }
      }
    ],
    "start-pii-entities-detection-job": [
      {
        "action": "comprehend:StartPiiEntitiesDetectionJob",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${DataAccessRoleArn}"
        }
      }
    ],
    "start-sentiment-detection-job": [
      {
        "action": "comprehend:StartSentimentDetectionJob",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${DataAccessRoleArn}"
        }
      }
    ],
    "start-targeted-sentiment-detection-job": [
      {
        "action": "comprehend:StartTargetedSentimentDetectionJob",
        "resource_mappings": {
          "JobId": {
            "template": "*"
          }
        }
      }
    ],
    "start-topics-detection-job": [
      {
        "action": "comprehend:StartTopicsDetectionJob",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${DataAccessRoleArn}"
        }
      }
    ],
    "stop-dominant-language-detection-job": [
      {
        "action": "comprehend:StopDominantLanguageDetectionJob",
        "resource_mappings": {}
      }
    ],
    "stop-entities-detection-job": [
      {
        "action": "comprehend:StopEntitiesDetectionJob",
        "resource_mappings": {}
      }
    ],
    "stop-events-detection-job": [
      {
        "action": "comprehend:StopEventsDetectionJob",
        "resource_mappings": {}
      }
    ],
    "stop-key-phrases-detection-job": [
      {
        "action": "comprehend:StopKeyPhrasesDetectionJob",
        "resource_mappings": {}
      }
    ],
    "stop-pii-entities-detection-job": [
      {
        "action": "comprehend:StopPiiEntitiesDetectionJob",
        "resource_mappings": {}
      }
    ],
    "stop-sentiment-detection-job": [
      {
        "action": "comprehend:StopSentimentDetectionJob",
        "resource_mappings": {}
      }
    ],
    "stop-targeted-sentiment-detection-job": [
      {
        "action": "comprehend:StopTargetedSentimentDetectionJob",
        "resource_mappings": {
          "JobId": {
            "template": "${JobId}"
          }
        }
      }
    ],
    "stop-training-document-classifier": [
      {
        "action": "comprehend:StopTrainingDocumentClassifier",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "document-classifier": "${DocumentClassifierArn}"
        }
      }
    ],
    "stop-training-entity-recognizer": [
      {
        "action": "comprehend:StopTrainingEntityRecognizer",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "entity-recognizer": "${EntityRecognizerArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "comprehend:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "document-classifier": "%%iftemplatematch%${ResourceArn}%%",
          "document-classifier-endpoint": "%%iftemplatematch%${ResourceArn}%%",
          "entity-recognizer": "%%iftemplatematch%${ResourceArn}%%",
          "entity-recognizer-endpoint": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "comprehend:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "document-classifier": "%%iftemplatematch%${ResourceArn}%%",
          "document-classifier-endpoint": "%%iftemplatematch%${ResourceArn}%%",
          "entity-recognizer": "%%iftemplatematch%${ResourceArn}%%",
          "entity-recognizer-endpoint": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-endpoint": [
      {
        "action": "comprehend:UpdateEndpoint",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "document-classifier-endpoint": "%%iftemplatematch%${EndpointArn}%%",
          "entity-recognizer-endpoint": "%%iftemplatematch%${EndpointArn}%%"
        }
      }
    ],
    "update-flywheel": [
      {
        "action": "comprehend:UpdateFlywheel",
        "resource_mappings": {
          "DocumentClassifierName": {
            "template": "*"
          },
          "EntityRecognizerName": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "flywheel": "${FlywheelArn}"
        }
      }
    ]
  },
  "comprehendmedical": {
    "describe-entities-detection-v2-job": [
      {
        "action": "comprehendmedical:DescribeEntitiesDetectionV2Job",
        "resource_mappings": {}
      }
    ],
    "describe-icd10-cm-inference-job": [
      {
        "action": "comprehendmedical:DescribeICD10CMInferenceJob",
        "resource_mappings": {}
      }
    ],
    "describe-phi-detection-job": [
      {
        "action": "comprehendmedical:DescribePHIDetectionJob",
        "resource_mappings": {}
      }
    ],
    "describe-rx-norm-inference-job": [
      {
        "action": "comprehendmedical:DescribeRxNormInferenceJob",
        "resource_mappings": {}
      }
    ],
    "describe-snomedct-inference-job": [
      {
        "action": "comprehendmedical:DescribeSNOMEDCTInferenceJob",
        "resource_mappings": {}
      }
    ],
    "detect-entities": [
      {
        "action": "comprehendmedical:DetectEntities",
        "resource_mappings": {}
      }
    ],
    "detect-entities-v2": [
      {
        "action": "comprehendmedical:DetectEntitiesV2",
        "resource_mappings": {}
      }
    ],
    "detect-phi": [
      {
        "action": "comprehendmedical:DetectPHI",
        "resource_mappings": {}
      }
    ],
    "infer-icd10-cm": [
      {
        "action": "comprehendmedical:InferICD10CM",
        "resource_mappings": {}
      }
    ],
    "infer-rx-norm": [
      {
        "action": "comprehendmedical:InferRxNorm",
        "resource_mappings": {}
      }
    ],
    "infer-snomedct": [
      {
        "action": "comprehendmedical:InferSNOMEDCT",
        "resource_mappings": {}
      }
    ],
    "list-entities-detection-v2-jobs": [
      {
        "action": "comprehendmedical:ListEntitiesDetectionV2Jobs",
        "resource_mappings": {}
      }
    ],
    "list-icd10-cm-inference-jobs": [
      {
        "action": "comprehendmedical:ListICD10CMInferenceJobs",
        "resource_mappings": {}
      }
    ],
    "list-phi-detection-jobs": [
      {
        "action": "comprehendmedical:ListPHIDetectionJobs",
        "resource_mappings": {}
      }
    ],
    "list-rx-norm-inference-jobs": [
      {
        "action": "comprehendmedical:ListRxNormInferenceJobs",
        "resource_mappings": {}
      }
    ],
    "list-snomedct-inference-jobs": [
      {
        "action": "comprehendmedical:ListSNOMEDCTInferenceJobs",
        "resource_mappings": {}
      }
    ],
    "start-entities-detection-v2-job": [
      {
        "action": "comprehendmedical:StartEntitiesDetectionV2Job",
        "resource_mappings": {}
      }
    ],
    "start-icd10-cm-inference-job": [
      {
        "action": "comprehendmedical:StartICD10CMInferenceJob",
        "resource_mappings": {}
      }
    ],
    "start-phi-detection-job": [
      {
        "action": "comprehendmedical:StartPHIDetectionJob",
        "resource_mappings": {}
      }
    ],
    "start-rx-norm-inference-job": [
      {
        "action": "comprehendmedical:StartRxNormInferenceJob",
        "resource_mappings": {}
      }
    ],
    "start-snomedct-inference-job": [
      {
        "action": "comprehendmedical:StartSNOMEDCTInferenceJob",
        "resource_mappings": {}
      }
    ],
    "stop-entities-detection-v2-job": [
      {
        "action": "comprehendmedical:StopEntitiesDetectionV2Job",
        "resource_mappings": {}
      }
    ],
    "stop-icd10-cm-inference-job": [
      {
        "action": "comprehendmedical:StopICD10CMInferenceJob",
        "resource_mappings": {}
      }
    ],
    "stop-phi-detection-job": [
      {
        "action": "comprehendmedical:StopPHIDetectionJob",
        "resource_mappings": {}
      }
    ],
    "stop-rx-norm-inference-job": [
      {
        "action": "comprehendmedical:StopRxNormInferenceJob",
        "resource_mappings": {}
      }
    ],
    "stop-snomedct-inference-job": [
      {
        "action": "comprehendmedical:StopSNOMEDCTInferenceJob",
        "resource_mappings": {}
      }
    ]
  },
  "compute-optimizer": {
    "delete-recommendation-preferences": [
      {
        "action": "compute-optimizer:DeleteRecommendationPreferences",
        "resource_mappings": {}
      },
      {
        "action": "autoscaling:DescribeAutoScalingGroups",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeInstances",
        "resource_mappings": {}
      }
    ],
    "describe-recommendation-export-jobs": [
      {
        "action": "compute-optimizer:DescribeRecommendationExportJobs",
        "resource_mappings": {}
      }
    ],
    "export-auto-scaling-group-recommendations": [
      {
        "action": "compute-optimizer:ExportAutoScalingGroupRecommendations",
        "resource_mappings": {}
      },
      {
        "action": "autoscaling:DescribeAutoScalingGroups",
        "resource_mappings": {}
      }
    ],
    "export-ebs-volume-recommendations": [
      {
        "action": "compute-optimizer:ExportEBSVolumeRecommendations",
        "resource_mappings": {}
      },
      {
        "action": "compute-optimizer:GetEBSVolumeRecommendations",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeVolumes",
        "resource_mappings": {}
      }
    ],
    "export-ec2-instance-recommendations": [
      {
        "action": "compute-optimizer:ExportEC2InstanceRecommendations",
        "resource_mappings": {}
      },
      {
        "action": "compute-optimizer:GetEC2InstanceRecommendations",
        "documented_dependant_action": true
      },
      {
        "action": "ec2:DescribeInstances",
        "resource_mappings": {}
      }
    ],
    "export-ecs-service-recommendations": [
      {
        "action": "compute-optimizer:ExportECSServiceRecommendations",
        "resource_mappings": {}
      },
      {
        "action": "compute-optimizer:GetECSServiceRecommendations",
        "resource_mappings": {}
      },
      {
        "action": "ecs:ListClusters",
        "resource_mappings": {}
      },
      {
        "action": "ecs:ListServices",
        "resource_mappings": {}
      }
    ],
    "export-lambda-function-recommendations": [
      {
        "action": "compute-optimizer:ExportLambdaFunctionRecommendations",
        "resource_mappings": {}
      },
      {
        "action": "compute-optimizer:GetLambdaFunctionRecommendations",
        "resource_mappings": {}
      },
      {
        "action": "lambda:ListFunctions",
        "resource_mappings": {}
      },
      {
        "action": "lambda:ListProvisionedConcurrencyConfigs",
        "resource_mappings": {
          "FunctionName": {
            "template": "*"
          }
        }
      }
    ],
    "export-license-recommendations": [
      {
        "action": "compute-optimizer:ExportLicenseRecommendations",
        "resource_mappings": {}
      },
      {
        "action": "compute-optimizer:GetLicenseRecommendations",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeInstances",
        "resource_mappings": {}
      }
    ],
    "get-auto-scaling-group-recommendations": [
      {
        "action": "compute-optimizer:GetAutoScalingGroupRecommendations",
        "resource_mappings": {}
      },
      {
        "action": "autoscaling:DescribeAutoScalingGroups",
        "resource_mappings": {}
      }
    ],
    "get-ebs-volume-recommendations": [
      {
        "action": "compute-optimizer:GetEBSVolumeRecommendations",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeVolumes",
        "resource_mappings": {}
      }
    ],
    "get-ec2-instance-recommendations": [
      {
        "action": "compute-optimizer:GetEC2InstanceRecommendations",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeInstances",
        "resource_mappings": {}
      }
    ],
    "get-ec2-recommendation-projected-metrics": [
      {
        "action": "compute-optimizer:GetEC2RecommendationProjectedMetrics",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeInstances",
        "resource_mappings": {}
      }
    ],
    "get-ecs-service-recommendation-projected-metrics": [
      {
        "action": "compute-optimizer:GetECSServiceRecommendationProjectedMetrics",
        "resource_mappings": {}
      }
    ],
    "get-ecs-service-recommendations": [
      {
        "action": "compute-optimizer:GetECSServiceRecommendations",
        "resource_mappings": {}
      },
      {
        "action": "ecs:ListClusters",
        "resource_mappings": {}
      },
      {
        "action": "ecs:ListServices",
        "resource_mappings": {}
      }
    ],
    "get-effective-recommendation-preferences": [
      {
        "action": "compute-optimizer:GetEffectiveRecommendationPreferences",
        "resource_mappings": {}
      },
      {
        "action": "autoscaling:DescribeAutoScalingGroups",
        "resource_mappings": {}
      },
      {
        "action": "autoscaling:DescribeAutoScalingInstances",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeInstances",
        "resource_mappings": {}
      }
    ],
    "get-enrollment-status": [
      {
        "action": "compute-optimizer:GetEnrollmentStatus",
        "resource_mappings": {}
      }
    ],
    "get-enrollment-statuses-for-organization": [
      {
        "action": "compute-optimizer:GetEnrollmentStatusesForOrganization",
        "resource_mappings": {}
      }
    ],
    "get-lambda-function-recommendations": [
      {
        "action": "compute-optimizer:GetLambdaFunctionRecommendations",
        "resource_mappings": {}
      },
      {
        "action": "lambda:ListFunctions",
        "resource_mappings": {}
      }
    ],
    "get-license-recommendations": [
      {
        "action": "compute-optimizer:GetLicenseRecommendations",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeInstances",
        "resource_mappings": {}
      }
    ],
    "get-recommendation-preferences": [
      {
        "action": "compute-optimizer:GetRecommendationPreferences",
        "resource_mappings": {}
      }
    ],
    "get-recommendation-summaries": [
      {
        "action": "compute-optimizer:GetRecommendationSummaries",
        "resource_mappings": {}
      }
    ],
    "put-recommendation-preferences": [
      {
        "action": "compute-optimizer:PutRecommendationPreferences",
        "resource_mappings": {}
      },
      {
        "action": "autoscaling:DescribeAutoScalingGroups",
        "resource_mappings": {}
      },
      {
        "action": "autoscaling:DescribeAutoScalingInstances",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeInstances",
        "resource_mappings": {}
      }
    ],
    "update-enrollment-status": [
      {
        "action": "compute-optimizer:UpdateEnrollmentStatus",
        "resource_mappings": {}
      }
    ]
  },
  "connect": {
    "activate-evaluation-form": [
      {
        "action": "connect:ActivateEvaluationForm",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "FormId": {
            "template": "${EvaluationFormId}"
          }
        }
      }
    ],
    "associate-approved-origin": [
      {
        "action": "connect:AssociateApprovedOrigin",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "associate-bot": [
      {
        "action": "connect:AssociateBot",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      },
      {
        "action": "iam:AttachRolePolicy",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PutRolePolicy",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "lex:GetBot",
        "resource_mappings": {
          "BotName": {
            "template": "*"
          },
          "BotVersion": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "bot alias": "${LexV2Bot.AliasArn}"
        }
      },
      {
        "action": "lex:UpdateResourcePolicy",
        "resource_mappings": {
          "BotId": {
            "template": "*"
          },
          "BotAliasId": {
            "template": "*"
          }
        }
      }
    ],
    "associate-default-vocabulary": [
      {
        "action": "connect:AssociateDefaultVocabulary",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "associate-instance-storage-config": [
      {
        "action": "connect:AssociateInstanceStorageConfig",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      },
      {
        "action": "ds:DescribeDirectories",
        "resource_mappings": {}
      }
    ],
    "associate-lambda-function": [
      {
        "action": "connect:AssociateLambdaFunction",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      },
      {
        "action": "lambda:AddPermission",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "function": "${FunctionArn}"
        }
      }
    ],
    "associate-lex-bot": [
      {
        "action": "connect:AssociateLexBot",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      },
      {
        "action": "iam:AttachRolePolicy",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "associate-phone-number-contact-flow": [
      {
        "action": "connect:AssociatePhoneNumberContactFlow",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactFlowId": {
            "template": "${ContactFlowId}"
          },
          "PhoneNumberId": {
            "template": "${PhoneNumberId}"
          }
        }
      }
    ],
    "associate-queue-quick-connects": [
      {
        "action": "connect:AssociateQueueQuickConnects",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "QueueId": {
            "template": "${QueueId}"
          },
          "QuickConnectId": {
            "template": "${QuickConnectIds[]}"
          }
        }
      }
    ],
    "associate-routing-profile-queues": [
      {
        "action": "connect:AssociateRoutingProfileQueues",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "QueueId": {
            "template": "${QueueConfigs[].QueueReference.QueueId}"
          },
          "RoutingProfileId": {
            "template": "${RoutingProfileId}"
          }
        }
      }
    ],
    "associate-security-key": [
      {
        "action": "connect:AssociateSecurityKey",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "associate-traffic-distribution-group-user": [
      {
        "action": "connect:AssociateTrafficDistributionGroupUser",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "TrafficDistributionGroupId": {
            "template": "${TrafficDistributionGroupId}"
          },
          "UserId": {
            "template": "${UserId}"
          }
        }
      },
      {
        "action": "connect:DescribeUser",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "UserId": {
            "template": "${UserId}"
          }
        }
      },
      {
        "action": "connect:SearchUsers",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "claim-phone-number": [
      {
        "action": "connect:ClaimPhoneNumber",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-agent-status": [
      {
        "action": "connect:CreateAgentStatus",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "AgentStatusId": {
            "template": "*"
          }
        }
      }
    ],
    "create-contact-flow": [
      {
        "action": "connect:CreateContactFlow",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactFlowId": {
            "template": "*"
          }
        }
      }
    ],
    "create-contact-flow-module": [
      {
        "action": "connect:CreateContactFlowModule",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactFlowModuleId": {
            "template": "*"
          }
        }
      }
    ],
    "create-evaluation-form": [
      {
        "action": "connect:CreateEvaluationForm",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "FormId": {
            "template": "*"
          }
        }
      }
    ],
    "create-hours-of-operation": [
      {
        "action": "connect:CreateHoursOfOperation",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "HoursOfOperationId": {
            "template": "*"
          }
        }
      }
    ],
    "create-instance": [
      {
        "action": "connect:CreateInstance",
        "resource_mappings": {}
      },
      {
        "action": "ds:AuthorizeApplication",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "create-integration-association": [
      {
        "action": "connect:CreateIntegrationAssociation",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "IntegrationAssociationId": {
            "template": "*"
          }
        }
      },
      {
        "action": "app-integrations:CreateEventIntegrationAssociation",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "event-integration-association": "${IntegrationArn}"
        }
      },
      {
        "action": "connect:DescribeInstance",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      },
      {
        "action": "ds:DescribeDirectories",
        "resource_mappings": {}
      },
      {
        "action": "events:PutRule",
        "resource_mappings": {
          "EventBusName": {
            "template": "*"
          },
          "RuleName": {
            "template": "*"
          }
        }
      },
      {
        "action": "events:PutTargets",
        "resource_mappings": {
          "EventBusName": {
            "template": "*"
          },
          "RuleName": {
            "template": "*"
          }
        }
      }
    ],
    "create-participant": [
      {
        "action": "connect:CreateParticipant",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactId": {
            "template": "${ContactId}"
          }
        }
      }
    ],
    "create-prompt": [
      {
        "note": "NotFound",
        "action": "Connect:CreatePrompt",
        "resource_mappings": {}
      }
    ],
    "create-queue": [
      {
        "action": "connect:CreateQueue",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "HoursOfOperationId": {
            "template": "${HoursOfOperationId}"
          },
          "QueueId": {
            "template": "*"
          },
          "ContactFlowId": {
            "template": "${OutboundCallerConfig.OutboundFlowId}"
          },
          "PhoneNumberId": {
            "template": "${OutboundCallerConfig.OutboundCallerIdNumberId}"
          },
          "QuickConnectId": {
            "template": "${QuickConnectIds[]}"
          }
        }
      }
    ],
    "create-quick-connect": [
      {
        "action": "connect:CreateQuickConnect",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "QuickConnectId": {
            "template": "*"
          },
          "ContactFlowId": {
            "template": "%%many%${QuickConnectConfig.UserConfig.ContactFlowId}%${QuickConnectConfig.QueueConfig.ContactFlowId}%%"
          },
          "QueueId": {
            "template": "${QuickConnectConfig.QueueConfig.QueueId}"
          },
          "UserId": {
            "template": "${QuickConnectConfig.UserConfig.UserId}"
          }
        }
      }
    ],
    "create-routing-profile": [
      {
        "action": "connect:CreateRoutingProfile",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "QueueId": {
            "template": "${QueueConfigs[].QueueReference.QueueId}"
          },
          "RoutingProfileId": {
            "template": "*"
          }
        }
      }
    ],
    "create-rule": [
      {
        "action": "connect:CreateRule",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "RuleId": {
            "template": "*"
          }
        }
      }
    ],
    "create-security-profile": [
      {
        "action": "connect:CreateSecurityProfile",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "SecurityProfileId": {
            "template": "*"
          }
        }
      }
    ],
    "create-task-template": [
      {
        "action": "connect:CreateTaskTemplate",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "TaskTemplateId": {
            "template": "*"
          }
        }
      }
    ],
    "create-traffic-distribution-group": [
      {
        "action": "connect:CreateTrafficDistributionGroup",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "TrafficDistributionGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "create-use-case": [
      {
        "action": "connect:CreateUseCase",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "IntegrationAssociationId": {
            "template": "${IntegrationAssociationId}"
          },
          "UseCaseId": {
            "template": "*"
          }
        }
      },
      {
        "action": "connect:DescribeInstance",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      },
      {
        "action": "ds:DescribeDirectories",
        "resource_mappings": {}
      }
    ],
    "create-user": [
      {
        "action": "connect:CreateUser",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "RoutingProfileId": {
            "template": "${RoutingProfileId}"
          },
          "SecurityProfileId": {
            "template": "${SecurityProfileIds[]}"
          },
          "UserId": {
            "template": "*"
          },
          "HierarchyGroupId": {
            "template": "${HierarchyGroupId}"
          }
        }
      }
    ],
    "create-user-hierarchy-group": [
      {
        "action": "connect:CreateUserHierarchyGroup",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "HierarchyGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "create-view": [
      {
        "action": "connect:CreateView",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ViewId": {
            "template": "*"
          }
        }
      }
    ],
    "create-view-version": [
      {
        "action": "connect:CreateViewVersion",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ViewId": {
            "template": "${ViewId}"
          }
        }
      }
    ],
    "create-vocabulary": [
      {
        "action": "connect:CreateVocabulary",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "VocabularyId": {
            "template": "*"
          }
        }
      }
    ],
    "deactivate-evaluation-form": [
      {
        "action": "connect:DeactivateEvaluationForm",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "FormId": {
            "template": "${EvaluationFormId}"
          }
        }
      }
    ],
    "delete-contact-evaluation": [
      {
        "action": "connect:DeleteContactEvaluation",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "EvaluationId": {
            "template": "${EvaluationId}"
          }
        }
      }
    ],
    "delete-contact-flow": [
      {
        "action": "connect:DeleteContactFlow",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactFlowId": {
            "template": "${ContactFlowId}"
          }
        }
      }
    ],
    "delete-contact-flow-module": [
      {
        "action": "connect:DeleteContactFlowModule",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactFlowModuleId": {
            "template": "${ContactFlowModuleId}"
          }
        }
      }
    ],
    "delete-evaluation-form": [
      {
        "action": "connect:DeleteEvaluationForm",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "FormId": {
            "template": "${EvaluationFormId}"
          }
        }
      }
    ],
    "delete-hours-of-operation": [
      {
        "action": "connect:DeleteHoursOfOperation",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "HoursOfOperationId": {
            "template": "${HoursOfOperationId}"
          }
        }
      }
    ],
    "delete-instance": [
      {
        "action": "connect:DeleteInstance",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      },
      {
        "action": "ds:DeleteDirectory",
        "resource_mappings": {
          "DirectoryId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DeleteNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-integration-association": [
      {
        "action": "connect:DeleteIntegrationAssociation",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "IntegrationAssociationId": {
            "template": "${IntegrationAssociationId}"
          }
        }
      },
      {
        "action": "app-integrations:DeleteEventIntegrationAssociation",
        "resource_mappings": {
          "EventIntegrationName": {
            "template": "*"
          },
          "ResourceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "connect:DescribeInstance",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      },
      {
        "action": "ds:DescribeDirectories",
        "resource_mappings": {}
      },
      {
        "action": "events:DeleteRule",
        "resource_mappings": {
          "EventBusName": {
            "template": "*"
          },
          "RuleName": {
            "template": "*"
          }
        }
      },
      {
        "action": "events:ListTargetsByRule",
        "resource_mappings": {
          "EventBusName": {
            "template": "*"
          },
          "RuleName": {
            "template": "*"
          }
        }
      },
      {
        "action": "events:RemoveTargets",
        "resource_mappings": {
          "EventBusName": {
            "template": "*"
          },
          "RuleName": {
            "template": "*"
          }
        }
      }
    ],
    "delete-prompt": [
      {
        "action": "connect:DeletePrompt",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "PromptId": {
            "template": "${PromptId}"
          }
        }
      }
    ],
    "delete-queue": [
      {
        "action": "connect:DeleteQueue",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "QueueId": {
            "template": "${QueueId}"
          }
        }
      }
    ],
    "delete-quick-connect": [
      {
        "action": "connect:DeleteQuickConnect",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "QuickConnectId": {
            "template": "${QuickConnectId}"
          }
        }
      }
    ],
    "delete-routing-profile": [
      {
        "action": "connect:DeleteRoutingProfile",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "RoutingProfileId": {
            "template": "${RoutingProfileId}"
          }
        }
      }
    ],
    "delete-rule": [
      {
        "action": "connect:DeleteRule",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "RuleId": {
            "template": "${RuleId}"
          }
        }
      }
    ],
    "delete-security-profile": [
      {
        "action": "connect:DeleteSecurityProfile",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "SecurityProfileId": {
            "template": "${SecurityProfileId}"
          }
        }
      }
    ],
    "delete-task-template": [
      {
        "action": "connect:DeleteTaskTemplate",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "TaskTemplateId": {
            "template": "${TaskTemplateId}"
          }
        }
      }
    ],
    "delete-traffic-distribution-group": [
      {
        "action": "connect:DeleteTrafficDistributionGroup",
        "resource_mappings": {
          "TrafficDistributionGroupId": {
            "template": "${TrafficDistributionGroupId}"
          }
        }
      }
    ],
    "delete-use-case": [
      {
        "action": "connect:DeleteUseCase",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "UseCaseId": {
            "template": "${UseCaseId}"
          }
        }
      },
      {
        "action": "connect:DescribeInstance",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      },
      {
        "action": "ds:DescribeDirectories",
        "resource_mappings": {}
      }
    ],
    "delete-user": [
      {
        "action": "connect:DeleteUser",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "UserId": {
            "template": "${UserId}"
          }
        }
      }
    ],
    "delete-user-hierarchy-group": [
      {
        "action": "connect:DeleteUserHierarchyGroup",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "HierarchyGroupId": {
            "template": "${HierarchyGroupId}"
          }
        }
      }
    ],
    "delete-view": [
      {
        "action": "connect:DeleteView",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ViewId": {
            "template": "${ViewId}"
          }
        }
      }
    ],
    "delete-view-version": [
      {
        "action": "connect:DeleteViewVersion",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ViewId": {
            "template": "${ViewId}"
          },
          "ViewVersion": {
            "template": "${ViewVersion}"
          }
        }
      }
    ],
    "delete-vocabulary": [
      {
        "action": "connect:DeleteVocabulary",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "VocabularyId": {
            "template": "${VocabularyId}"
          }
        }
      }
    ],
    "describe-agent-status": [
      {
        "action": "connect:DescribeAgentStatus",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "AgentStatusId": {
            "template": "${AgentStatusId}"
          }
        }
      }
    ],
    "describe-contact": [
      {
        "action": "connect:DescribeContact",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactId": {
            "template": "${ContactId}"
          }
        }
      }
    ],
    "describe-contact-evaluation": [
      {
        "action": "connect:DescribeContactEvaluation",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "EvaluationId": {
            "template": "${EvaluationId}"
          }
        }
      }
    ],
    "describe-contact-flow": [
      {
        "action": "connect:DescribeContactFlow",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactFlowId": {
            "template": "${ContactFlowId}"
          }
        }
      }
    ],
    "describe-contact-flow-module": [
      {
        "action": "connect:DescribeContactFlowModule",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactFlowModuleId": {
            "template": "${ContactFlowModuleId}"
          }
        }
      }
    ],
    "describe-evaluation-form": [
      {
        "action": "connect:DescribeEvaluationForm",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "FormId": {
            "template": "${EvaluationFormId}"
          }
        }
      }
    ],
    "describe-hours-of-operation": [
      {
        "action": "connect:DescribeHoursOfOperation",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "HoursOfOperationId": {
            "template": "${HoursOfOperationId}"
          }
        }
      }
    ],
    "describe-instance": [
      {
        "action": "connect:DescribeInstance",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      },
      {
        "action": "ds:DescribeDirectories",
        "resource_mappings": {}
      }
    ],
    "describe-instance-attribute": [
      {
        "action": "connect:DescribeInstanceAttribute",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "describe-instance-storage-config": [
      {
        "action": "connect:DescribeInstanceStorageConfig",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "describe-phone-number": [
      {
        "action": "connect:DescribePhoneNumber",
        "resource_mappings": {
          "PhoneNumberId": {
            "template": "${PhoneNumberId}"
          }
        }
      }
    ],
    "describe-prompt": [
      {
        "action": "connect:DescribePrompt",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "PromptId": {
            "template": "${PromptId}"
          }
        }
      }
    ],
    "describe-queue": [
      {
        "action": "connect:DescribeQueue",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "QueueId": {
            "template": "${QueueId}"
          }
        }
      }
    ],
    "describe-quick-connect": [
      {
        "action": "connect:DescribeQuickConnect",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "QuickConnectId": {
            "template": "${QuickConnectId}"
          }
        }
      }
    ],
    "describe-routing-profile": [
      {
        "action": "connect:DescribeRoutingProfile",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "RoutingProfileId": {
            "template": "${RoutingProfileId}"
          }
        }
      }
    ],
    "describe-rule": [
      {
        "action": "connect:DescribeRule",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "RuleId": {
            "template": "${RuleId}"
          }
        }
      }
    ],
    "describe-security-profile": [
      {
        "action": "connect:DescribeSecurityProfile",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "SecurityProfileId": {
            "template": "${SecurityProfileId}"
          }
        }
      }
    ],
    "describe-traffic-distribution-group": [
      {
        "action": "connect:DescribeTrafficDistributionGroup",
        "resource_mappings": {
          "TrafficDistributionGroupId": {
            "template": "${TrafficDistributionGroupId}"
          }
        }
      }
    ],
    "describe-user": [
      {
        "action": "connect:DescribeUser",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "UserId": {
            "template": "${UserId}"
          }
        }
      }
    ],
    "describe-user-hierarchy-group": [
      {
        "action": "connect:DescribeUserHierarchyGroup",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "HierarchyGroupId": {
            "template": "${HierarchyGroupId}"
          }
        }
      }
    ],
    "describe-user-hierarchy-structure": [
      {
        "action": "connect:DescribeUserHierarchyStructure",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "describe-view": [
      {
        "action": "connect:DescribeView",
        "resource_mappings": {
          "ViewId": {
            "template": "${ViewId}"
          },
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ViewQualifier": {
            "template": "*"
          }
        }
      }
    ],
    "describe-vocabulary": [
      {
        "action": "connect:DescribeVocabulary",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "VocabularyId": {
            "template": "${VocabularyId}"
          }
        }
      }
    ],
    "disassociate-approved-origin": [
      {
        "action": "connect:DisassociateApprovedOrigin",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "disassociate-bot": [
      {
        "action": "connect:DisassociateBot",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      },
      {
        "action": "iam:AttachRolePolicy",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PutRolePolicy",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "lex:DeleteResourcePolicy",
        "resource_mappings": {
          "BotId": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "bot alias": "${LexV2Bot.AliasArn}"
        }
      },
      {
        "action": "lex:UpdateResourcePolicy",
        "resource_mappings": {
          "BotId": {
            "template": "*"
          },
          "BotAliasId": {
            "template": "*"
          }
        }
      }
    ],
    "disassociate-instance-storage-config": [
      {
        "action": "connect:DisassociateInstanceStorageConfig",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "disassociate-lambda-function": [
      {
        "action": "connect:DisassociateLambdaFunction",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      },
      {
        "action": "lambda:RemovePermission",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "function": "${FunctionArn}"
        }
      }
    ],
    "disassociate-lex-bot": [
      {
        "action": "connect:DisassociateLexBot",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      },
      {
        "action": "iam:AttachRolePolicy",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "disassociate-phone-number-contact-flow": [
      {
        "action": "connect:DisassociatePhoneNumberContactFlow",
        "resource_mappings": {
          "PhoneNumberId": {
            "template": "${PhoneNumberId}"
          }
        }
      }
    ],
    "disassociate-queue-quick-connects": [
      {
        "action": "connect:DisassociateQueueQuickConnects",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "QueueId": {
            "template": "${QueueId}"
          },
          "QuickConnectId": {
            "template": "${QuickConnectIds[]}"
          }
        }
      }
    ],
    "disassociate-routing-profile-queues": [
      {
        "action": "connect:DisassociateRoutingProfileQueues",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "RoutingProfileId": {
            "template": "${RoutingProfileId}"
          }
        }
      }
    ],
    "disassociate-security-key": [
      {
        "action": "connect:DisassociateSecurityKey",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "disassociate-traffic-distribution-group-user": [
      {
        "action": "connect:DisassociateTrafficDistributionGroupUser",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "TrafficDistributionGroupId": {
            "template": "${TrafficDistributionGroupId}"
          },
          "UserId": {
            "template": "${UserId}"
          }
        }
      }
    ],
    "dismiss-user-contact": [
      {
        "action": "connect:DismissUserContact",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "UserId": {
            "template": "${UserId}"
          }
        }
      }
    ],
    "get-contact-attributes": [
      {
        "action": "connect:GetContactAttributes",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactId": {
            "template": "${InitialContactId}"
          }
        }
      }
    ],
    "get-current-metric-data": [
      {
        "action": "connect:GetCurrentMetricData",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "QueueId": {
            "template": "*"
          }
        }
      }
    ],
    "get-current-user-data": [
      {
        "action": "connect:GetCurrentUserData",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "QueueId": {
            "template": "*"
          }
        }
      }
    ],
    "get-federation-token": [
      {
        "action": "connect:GetFederationToken",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "get-metric-data": [
      {
        "action": "connect:GetMetricData",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "QueueId": {
            "template": "*"
          }
        }
      }
    ],
    "get-metric-data-v2": [
      {
        "action": "connect:GetMetricDataV2",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          },
          "HierarchyGroupId": {
            "template": "*"
          },
          "QueueId": {
            "template": "*"
          },
          "RoutingProfileId": {
            "template": "*"
          },
          "UserId": {
            "template": "*"
          }
        }
      }
    ],
    "get-prompt-file": [
      {
        "action": "connect:GetPromptFile",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "PromptId": {
            "template": "${PromptId}"
          }
        }
      }
    ],
    "get-task-template": [
      {
        "action": "connect:GetTaskTemplate",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "TaskTemplateId": {
            "template": "${TaskTemplateId}"
          }
        }
      }
    ],
    "get-traffic-distribution": [
      {
        "action": "connect:GetTrafficDistribution",
        "resource_mappings": {
          "TrafficDistributionGroupId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "list-agent-statuses": [
      {
        "action": "connect:ListAgentStatuses",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "list-approved-origins": [
      {
        "action": "connect:ListApprovedOrigins",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "list-bots": [
      {
        "action": "connect:ListBots",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "list-contact-evaluations": [
      {
        "action": "connect:ListContactEvaluations",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "list-contact-flow-modules": [
      {
        "action": "connect:ListContactFlowModules",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "list-contact-flows": [
      {
        "action": "connect:ListContactFlows",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "list-contact-references": [
      {
        "action": "connect:ListContactReferences",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactId": {
            "template": "${ContactId}"
          }
        }
      }
    ],
    "list-default-vocabularies": [
      {
        "action": "connect:ListDefaultVocabularies",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "list-evaluation-form-versions": [
      {
        "action": "connect:ListEvaluationFormVersions",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "FormId": {
            "template": "${EvaluationFormId}"
          }
        }
      }
    ],
    "list-evaluation-forms": [
      {
        "action": "connect:ListEvaluationForms",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "list-hours-of-operations": [
      {
        "action": "connect:ListHoursOfOperations",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "list-instance-attributes": [
      {
        "action": "connect:ListInstanceAttributes",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "list-instance-storage-configs": [
      {
        "action": "connect:ListInstanceStorageConfigs",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "list-instances": [
      {
        "action": "connect:ListInstances",
        "resource_mappings": {}
      },
      {
        "action": "ds:DescribeDirectories",
        "resource_mappings": {}
      }
    ],
    "list-integration-associations": [
      {
        "action": "connect:ListIntegrationAssociations",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      },
      {
        "action": "connect:DescribeInstance",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      },
      {
        "action": "ds:DescribeDirectories",
        "resource_mappings": {}
      }
    ],
    "list-lambda-functions": [
      {
        "action": "connect:ListLambdaFunctions",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "list-lex-bots": [
      {
        "action": "connect:ListLexBots",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "list-phone-numbers": [
      {
        "action": "connect:ListPhoneNumbers",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "list-phone-numbers-v2": [
      {
        "action": "connect:ListPhoneNumbersV2",
        "resource_mappings": {}
      }
    ],
    "list-prompts": [
      {
        "action": "connect:ListPrompts",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "list-queue-quick-connects": [
      {
        "action": "connect:ListQueueQuickConnects",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "QueueId": {
            "template": "${QueueId}"
          }
        }
      }
    ],
    "list-queues": [
      {
        "action": "connect:ListQueues",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "list-quick-connects": [
      {
        "action": "connect:ListQuickConnects",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "list-routing-profile-queues": [
      {
        "action": "connect:ListRoutingProfileQueues",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "RoutingProfileId": {
            "template": "${RoutingProfileId}"
          }
        }
      }
    ],
    "list-routing-profiles": [
      {
        "action": "connect:ListRoutingProfiles",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "list-rules": [
      {
        "action": "connect:ListRules",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "list-security-keys": [
      {
        "action": "connect:ListSecurityKeys",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "list-security-profile-applications": [
      {
        "note": "NotFound",
        "action": "Connect:ListSecurityProfileApplications",
        "resource_mappings": {}
      }
    ],
    "list-security-profile-permissions": [
      {
        "action": "connect:ListSecurityProfilePermissions",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "SecurityProfileId": {
            "template": "${SecurityProfileId}"
          }
        }
      }
    ],
    "list-security-profiles": [
      {
        "action": "connect:ListSecurityProfiles",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "connect:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "contact-flow": "%%iftemplatematch%${resourceArn}%%",
          "queue": "%%iftemplatematch%${resourceArn}%%",
          "quick-connect": "%%iftemplatematch%${resourceArn}%%",
          "routing-profile": "%%iftemplatematch%${resourceArn}%%",
          "user": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "list-task-templates": [
      {
        "action": "connect:ListTaskTemplates",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "list-traffic-distribution-group-users": [
      {
        "action": "connect:ListTrafficDistributionGroupUsers",
        "resource_mappings": {
          "TrafficDistributionGroupId": {
            "template": "${TrafficDistributionGroupId}"
          }
        }
      }
    ],
    "list-traffic-distribution-groups": [
      {
        "action": "connect:ListTrafficDistributionGroups",
        "resource_mappings": {
          "TrafficDistributionGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "list-use-cases": [
      {
        "action": "connect:ListUseCases",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      },
      {
        "action": "connect:DescribeInstance",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      },
      {
        "action": "ds:DescribeDirectories",
        "resource_mappings": {}
      }
    ],
    "list-user-hierarchy-groups": [
      {
        "action": "connect:ListUserHierarchyGroups",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "list-users": [
      {
        "action": "connect:ListUsers",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "list-view-versions": [
      {
        "action": "connect:ListViewVersions",
        "resource_mappings": {
          "ViewId": {
            "template": "${ViewId}"
          },
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "list-views": [
      {
        "action": "connect:ListViews",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "monitor-contact": [
      {
        "action": "connect:MonitorContact",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactId": {
            "template": "${ContactId}"
          },
          "UserId": {
            "template": "${UserId}"
          }
        }
      }
    ],
    "put-user-status": [
      {
        "action": "connect:PutUserStatus",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "AgentStatusId": {
            "template": "${AgentStatusId}"
          },
          "UserId": {
            "template": "${UserId}"
          }
        }
      }
    ],
    "release-phone-number": [
      {
        "action": "connect:ReleasePhoneNumber",
        "resource_mappings": {
          "PhoneNumberId": {
            "template": "${PhoneNumberId}"
          }
        }
      }
    ],
    "replicate-instance": [
      {
        "action": "connect:ReplicateInstance",
        "resource_mappings": {}
      },
      {
        "action": "ds:AuthorizeApplication",
        "resource_mappings": {
          "DirectoryId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ds:CheckAlias",
        "resource_mappings": {}
      },
      {
        "action": "ds:CreateAlias",
        "resource_mappings": {
          "DirectoryId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ds:CreateDirectory",
        "resource_mappings": {}
      },
      {
        "action": "ds:CreateIdentityPoolDirectory",
        "resource_mappings": {}
      },
      {
        "action": "ds:DeleteDirectory",
        "resource_mappings": {
          "DirectoryId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ds:DescribeDirectories",
        "resource_mappings": {}
      },
      {
        "action": "ds:UnauthorizeApplication",
        "resource_mappings": {
          "DirectoryId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:AttachRolePolicy",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PutRolePolicy",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "resume-contact-recording": [
      {
        "action": "connect:ResumeContactRecording",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactId": {
            "template": "${ContactId}"
          }
        }
      }
    ],
    "search-available-phone-numbers": [
      {
        "action": "connect:SearchAvailablePhoneNumbers",
        "resource_mappings": {}
      }
    ],
    "search-hours-of-operations": [
      {
        "action": "connect:SearchHoursOfOperations",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      },
      {
        "action": "connect:DescribeHoursOfOperation",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "HoursOfOperationId": {
            "template": "*"
          }
        }
      }
    ],
    "search-prompts": [
      {
        "action": "connect:SearchPrompts",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      },
      {
        "action": "connect:DescribePrompt",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "PromptId": {
            "template": "*"
          }
        }
      }
    ],
    "search-queues": [
      {
        "action": "connect:SearchQueues",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      },
      {
        "action": "connect:DescribeQueue",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "QueueId": {
            "template": "*"
          }
        }
      }
    ],
    "search-quick-connects": [
      {
        "action": "connect:SearchQuickConnects",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      },
      {
        "action": "connect:DescribeQuickConnect",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "QuickConnectId": {
            "template": "*"
          }
        }
      }
    ],
    "search-resource-tags": [
      {
        "action": "connect:SearchResourceTags",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "search-routing-profiles": [
      {
        "action": "connect:SearchRoutingProfiles",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      },
      {
        "action": "connect:DescribeRoutingProfile",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "RoutingProfileId": {
            "template": "*"
          }
        }
      }
    ],
    "search-security-profiles": [
      {
        "action": "connect:SearchSecurityProfiles",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      },
      {
        "action": "connect:DescribeSecurityProfile",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "SecurityProfileId": {
            "template": "*"
          }
        }
      }
    ],
    "search-users": [
      {
        "action": "connect:SearchUsers",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      },
      {
        "action": "connect:DescribeUser",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "UserId": {
            "template": "*"
          }
        }
      }
    ],
    "search-vocabularies": [
      {
        "action": "connect:SearchVocabularies",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "VocabularyId": {
            "template": "*"
          }
        }
      }
    ],
    "start-chat-contact": [
      {
        "action": "connect:StartChatContact",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactFlowId": {
            "template": "${ContactFlowId}"
          }
        }
      }
    ],
    "start-contact-evaluation": [
      {
        "action": "connect:StartContactEvaluation",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "EvaluationId": {
            "template": "*"
          }
        }
      }
    ],
    "start-contact-recording": [
      {
        "action": "connect:StartContactRecording",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactId": {
            "template": "%%many%${ContactId}%${InitialContactId}%%"
          }
        }
      }
    ],
    "start-contact-streaming": [
      {
        "action": "connect:StartContactStreaming",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "start-outbound-voice-contact": [
      {
        "action": "connect:StartOutboundVoiceContact",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactId": {
            "template": "*"
          }
        }
      }
    ],
    "start-task-contact": [
      {
        "action": "connect:StartTaskContact",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactFlowId": {
            "template": "${ContactFlowId}"
          }
        }
      }
    ],
    "stop-contact": [
      {
        "action": "connect:StopContact",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactId": {
            "template": "${ContactId}"
          }
        }
      }
    ],
    "stop-contact-recording": [
      {
        "action": "connect:StopContactRecording",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactId": {
            "template": "%%many%${ContactId}%${InitialContactId}%%"
          }
        }
      }
    ],
    "stop-contact-streaming": [
      {
        "action": "connect:StopContactStreaming",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "submit-contact-evaluation": [
      {
        "action": "connect:SubmitContactEvaluation",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "EvaluationId": {
            "template": "${EvaluationId}"
          }
        }
      }
    ],
    "suspend-contact-recording": [
      {
        "action": "connect:SuspendContactRecording",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactId": {
            "template": "%%many%${ContactId}%${InitialContactId}%%"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "connect:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "contact-flow": "%%iftemplatematch%${resourceArn}%%",
          "queue": "%%iftemplatematch%${resourceArn}%%",
          "quick-connect": "%%iftemplatematch%${resourceArn}%%",
          "routing-profile": "%%iftemplatematch%${resourceArn}%%",
          "user": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "transfer-contact": [
      {
        "action": "connect:TransferContact",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactId": {
            "template": "${ContactId}"
          },
          "ContactFlowId": {
            "template": "${ContactFlowId}"
          }
        }
      }
    ],
    "untag-resource": [
      {
        "action": "connect:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "contact-flow": "%%iftemplatematch%${resourceArn}%%",
          "queue": "%%iftemplatematch%${resourceArn}%%",
          "quick-connect": "%%iftemplatematch%${resourceArn}%%",
          "routing-profile": "%%iftemplatematch%${resourceArn}%%",
          "user": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-agent-status": [
      {
        "action": "connect:UpdateAgentStatus",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "AgentStatusId": {
            "template": "${AgentStatusId}"
          }
        }
      }
    ],
    "update-contact": [
      {
        "action": "connect:UpdateContact",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactId": {
            "template": "${ContactId}"
          }
        }
      }
    ],
    "update-contact-attributes": [
      {
        "action": "connect:UpdateContactAttributes",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactId": {
            "template": "${InitialContactId}"
          }
        }
      }
    ],
    "update-contact-evaluation": [
      {
        "action": "connect:UpdateContactEvaluation",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "EvaluationId": {
            "template": "${EvaluationId}"
          }
        }
      }
    ],
    "update-contact-flow-content": [
      {
        "action": "connect:UpdateContactFlowContent",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactFlowId": {
            "template": "${ContactFlowId}"
          }
        }
      }
    ],
    "update-contact-flow-metadata": [
      {
        "action": "connect:UpdateContactFlowMetadata",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactFlowId": {
            "template": "${ContactFlowId}"
          }
        }
      }
    ],
    "update-contact-flow-module-content": [
      {
        "action": "connect:UpdateContactFlowModuleContent",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactFlowModuleId": {
            "template": "${ContactFlowModuleId}"
          }
        }
      }
    ],
    "update-contact-flow-module-metadata": [
      {
        "action": "connect:UpdateContactFlowModuleMetadata",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactFlowModuleId": {
            "template": "${ContactFlowModuleId}"
          }
        }
      }
    ],
    "update-contact-flow-name": [
      {
        "action": "connect:UpdateContactFlowName",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactFlowId": {
            "template": "${ContactFlowId}"
          }
        }
      }
    ],
    "update-contact-schedule": [
      {
        "action": "connect:UpdateContactSchedule",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactId": {
            "template": "${ContactId}"
          }
        }
      }
    ],
    "update-evaluation-form": [
      {
        "action": "connect:UpdateEvaluationForm",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "FormId": {
            "template": "${EvaluationFormId}"
          }
        }
      }
    ],
    "update-hours-of-operation": [
      {
        "action": "connect:UpdateHoursOfOperation",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "HoursOfOperationId": {
            "template": "${HoursOfOperationId}"
          }
        }
      }
    ],
    "update-instance-attribute": [
      {
        "action": "connect:UpdateInstanceAttribute",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      },
      {
        "action": "ds:DescribeDirectories",
        "resource_mappings": {}
      }
    ],
    "update-instance-storage-config": [
      {
        "action": "connect:UpdateInstanceStorageConfig",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      },
      {
        "action": "ds:DescribeDirectories",
        "resource_mappings": {}
      }
    ],
    "update-participant-role-config": [
      {
        "action": "connect:UpdateParticipantRoleConfig",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactId": {
            "template": "${ContactId}"
          }
        }
      }
    ],
    "update-phone-number": [
      {
        "action": "connect:UpdatePhoneNumber",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          },
          "PhoneNumberId": {
            "template": "${PhoneNumberId}"
          }
        }
      }
    ],
    "update-phone-number-metadata": [
      {
        "note": "NotFound",
        "action": "Connect:UpdatePhoneNumberMetadata",
        "resource_mappings": {}
      }
    ],
    "update-prompt": [
      {
        "note": "NotFound",
        "action": "Connect:UpdatePrompt",
        "resource_mappings": {}
      }
    ],
    "update-queue-hours-of-operation": [
      {
        "action": "connect:UpdateQueueHoursOfOperation",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "HoursOfOperationId": {
            "template": "${HoursOfOperationId}"
          },
          "QueueId": {
            "template": "${QueueId}"
          }
        }
      }
    ],
    "update-queue-max-contacts": [
      {
        "action": "connect:UpdateQueueMaxContacts",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "QueueId": {
            "template": "${QueueId}"
          }
        }
      }
    ],
    "update-queue-name": [
      {
        "action": "connect:UpdateQueueName",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "QueueId": {
            "template": "${QueueId}"
          }
        }
      }
    ],
    "update-queue-outbound-caller-config": [
      {
        "action": "connect:UpdateQueueOutboundCallerConfig",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "QueueId": {
            "template": "${QueueId}"
          },
          "ContactFlowId": {
            "template": "${OutboundCallerConfig.OutboundFlowId}"
          },
          "PhoneNumberId": {
            "template": "${OutboundCallerConfig.OutboundCallerIdNumberId}"
          }
        }
      }
    ],
    "update-queue-status": [
      {
        "action": "connect:UpdateQueueStatus",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "QueueId": {
            "template": "${QueueId}"
          }
        }
      }
    ],
    "update-quick-connect-config": [
      {
        "action": "connect:UpdateQuickConnectConfig",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "QuickConnectId": {
            "template": "${QuickConnectId}"
          },
          "ContactFlowId": {
            "template": "%%many%${QuickConnectConfig.UserConfig.ContactFlowId}%${QuickConnectConfig.QueueConfig.ContactFlowId}%%"
          },
          "QueueId": {
            "template": "${QuickConnectConfig.QueueConfig.QueueId}"
          },
          "UserId": {
            "template": "${QuickConnectConfig.UserConfig.UserId}"
          }
        }
      }
    ],
    "update-quick-connect-name": [
      {
        "action": "connect:UpdateQuickConnectName",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "QuickConnectId": {
            "template": "${QuickConnectId}"
          }
        }
      }
    ],
    "update-routing-profile-agent-availability-timer": [
      {
        "action": "connect:UpdateRoutingProfileAgentAvailabilityTimer",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "RoutingProfileId": {
            "template": "${RoutingProfileId}"
          }
        }
      }
    ],
    "update-routing-profile-concurrency": [
      {
        "action": "connect:UpdateRoutingProfileConcurrency",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "RoutingProfileId": {
            "template": "${RoutingProfileId}"
          }
        }
      }
    ],
    "update-routing-profile-default-outbound-queue": [
      {
        "action": "connect:UpdateRoutingProfileDefaultOutboundQueue",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "QueueId": {
            "template": "${DefaultOutboundQueueId}"
          },
          "RoutingProfileId": {
            "template": "${RoutingProfileId}"
          }
        }
      }
    ],
    "update-routing-profile-name": [
      {
        "action": "connect:UpdateRoutingProfileName",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "RoutingProfileId": {
            "template": "${RoutingProfileId}"
          }
        }
      }
    ],
    "update-routing-profile-queues": [
      {
        "action": "connect:UpdateRoutingProfileQueues",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "RoutingProfileId": {
            "template": "${RoutingProfileId}"
          }
        }
      }
    ],
    "update-rule": [
      {
        "action": "connect:UpdateRule",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "update-security-profile": [
      {
        "action": "connect:UpdateSecurityProfile",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "SecurityProfileId": {
            "template": "${SecurityProfileId}"
          }
        }
      }
    ],
    "update-task-template": [
      {
        "action": "connect:UpdateTaskTemplate",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "TaskTemplateId": {
            "template": "${TaskTemplateId}"
          }
        }
      }
    ],
    "update-traffic-distribution": [
      {
        "action": "connect:UpdateTrafficDistribution",
        "resource_mappings": {
          "TrafficDistributionGroupId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "update-user-hierarchy": [
      {
        "action": "connect:UpdateUserHierarchy",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "UserId": {
            "template": "${UserId}"
          },
          "HierarchyGroupId": {
            "template": "${HierarchyGroupId}"
          }
        }
      }
    ],
    "update-user-hierarchy-group-name": [
      {
        "action": "connect:UpdateUserHierarchyGroupName",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "HierarchyGroupId": {
            "template": "${HierarchyGroupId}"
          }
        }
      }
    ],
    "update-user-hierarchy-structure": [
      {
        "action": "connect:UpdateUserHierarchyStructure",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "update-user-identity-info": [
      {
        "action": "connect:UpdateUserIdentityInfo",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "UserId": {
            "template": "${UserId}"
          }
        }
      }
    ],
    "update-user-phone-config": [
      {
        "action": "connect:UpdateUserPhoneConfig",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "UserId": {
            "template": "${UserId}"
          }
        }
      }
    ],
    "update-user-routing-profile": [
      {
        "action": "connect:UpdateUserRoutingProfile",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "RoutingProfileId": {
            "template": "${RoutingProfileId}"
          },
          "UserId": {
            "template": "${UserId}"
          }
        }
      }
    ],
    "update-user-security-profiles": [
      {
        "action": "connect:UpdateUserSecurityProfiles",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "SecurityProfileId": {
            "template": "${SecurityProfileIds[]}"
          },
          "UserId": {
            "template": "${UserId}"
          }
        }
      }
    ],
    "update-view-content": [
      {
        "action": "connect:UpdateViewContent",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ViewId": {
            "template": "${ViewId}"
          }
        }
      }
    ],
    "update-view-metadata": [
      {
        "action": "connect:UpdateViewMetadata",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ViewId": {
            "template": "${ViewId}"
          }
        }
      }
    ]
  },
  "connect-contact-lens": {
    "list-realtime-contact-analysis-segments": [
      {
        "action": "connect:ListRealtimeContactAnalysisSegments",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "ContactId": {
            "template": "${ContactId}"
          }
        }
      }
    ]
  },
  "connectcampaigns": {
    "create-campaign": [
      {
        "action": "connect-campaigns:CreateCampaign",
        "resource_mappings": {
          "CampaignId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-campaign": [
      {
        "action": "connect-campaigns:DeleteCampaign",
        "resource_mappings": {
          "CampaignId": {
            "template": "${id}"
          }
        }
      }
    ],
    "delete-connect-instance-config": [
      {
        "action": "connect-campaigns:DeleteConnectInstanceConfig",
        "resource_mappings": {}
      }
    ],
    "delete-instance-onboarding-job": [
      {
        "action": "connect-campaigns:DeleteInstanceOnboardingJob",
        "resource_mappings": {}
      }
    ],
    "describe-campaign": [
      {
        "action": "connect-campaigns:DescribeCampaign",
        "resource_mappings": {
          "CampaignId": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-campaign-state": [
      {
        "action": "connect-campaigns:GetCampaignState",
        "resource_mappings": {
          "CampaignId": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-campaign-state-batch": [
      {
        "action": "connect-campaigns:GetCampaignStateBatch",
        "resource_mappings": {
          "CampaignId": {
            "template": "${campaignIds[]}"
          }
        }
      }
    ],
    "get-connect-instance-config": [
      {
        "action": "connect-campaigns:GetConnectInstanceConfig",
        "resource_mappings": {}
      }
    ],
    "get-instance-onboarding-job-status": [
      {
        "action": "connect-campaigns:GetInstanceOnboardingJobStatus",
        "resource_mappings": {}
      }
    ],
    "list-campaigns": [
      {
        "action": "connect-campaigns:ListCampaigns",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "connect-campaigns:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "campaign": "%%iftemplatematch%${arn}%%"
        }
      }
    ],
    "pause-campaign": [
      {
        "action": "connect-campaigns:PauseCampaign",
        "resource_mappings": {
          "CampaignId": {
            "template": "${id}"
          }
        }
      }
    ],
    "put-dial-request-batch": [
      {
        "action": "connect-campaigns:PutDialRequestBatch",
        "resource_mappings": {
          "CampaignId": {
            "template": "${id}"
          }
        }
      }
    ],
    "resume-campaign": [
      {
        "action": "connect-campaigns:ResumeCampaign",
        "resource_mappings": {
          "CampaignId": {
            "template": "${id}"
          }
        }
      }
    ],
    "start-campaign": [
      {
        "action": "connect-campaigns:StartCampaign",
        "resource_mappings": {
          "CampaignId": {
            "template": "${id}"
          }
        }
      }
    ],
    "start-instance-onboarding-job": [
      {
        "action": "connect-campaigns:StartInstanceOnboardingJob",
        "resource_mappings": {}
      }
    ],
    "stop-campaign": [
      {
        "action": "connect-campaigns:StopCampaign",
        "resource_mappings": {
          "CampaignId": {
            "template": "${id}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "connect-campaigns:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "campaign": "%%iftemplatematch%${arn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "connect-campaigns:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "campaign": "%%iftemplatematch%${arn}%%"
        }
      }
    ],
    "update-campaign-dialer-config": [
      {
        "action": "connect-campaigns:UpdateCampaignDialerConfig",
        "resource_mappings": {
          "CampaignId": {
            "template": "${id}"
          }
        }
      }
    ],
    "update-campaign-name": [
      {
        "action": "connect-campaigns:UpdateCampaignName",
        "resource_mappings": {
          "CampaignId": {
            "template": "${id}"
          }
        }
      }
    ],
    "update-campaign-outbound-call-config": [
      {
        "action": "connect-campaigns:UpdateCampaignOutboundCallConfig",
        "resource_mappings": {
          "CampaignId": {
            "template": "${id}"
          }
        }
      }
    ]
  },
  "connectcases": {
    "batch-get-field": [
      {
        "note": "NotFound",
        "action": "ConnectCases:BatchGetField",
        "resource_mappings": {}
      }
    ],
    "batch-put-field-options": [
      {
        "note": "NotFound",
        "action": "ConnectCases:BatchPutFieldOptions",
        "resource_mappings": {}
      }
    ],
    "create-case": [
      {
        "note": "NotFound",
        "action": "ConnectCases:CreateCase",
        "resource_mappings": {}
      }
    ],
    "create-domain": [
      {
        "note": "NotFound",
        "action": "ConnectCases:CreateDomain",
        "resource_mappings": {}
      }
    ],
    "create-field": [
      {
        "note": "NotFound",
        "action": "ConnectCases:CreateField",
        "resource_mappings": {}
      }
    ],
    "create-layout": [
      {
        "note": "NotFound",
        "action": "ConnectCases:CreateLayout",
        "resource_mappings": {}
      }
    ],
    "create-related-item": [
      {
        "note": "NotFound",
        "action": "ConnectCases:CreateRelatedItem",
        "resource_mappings": {}
      }
    ],
    "create-template": [
      {
        "note": "NotFound",
        "action": "ConnectCases:CreateTemplate",
        "resource_mappings": {}
      }
    ],
    "delete-domain": [
      {
        "note": "NotFound",
        "action": "ConnectCases:DeleteDomain",
        "resource_mappings": {}
      }
    ],
    "get-case": [
      {
        "note": "NotFound",
        "action": "ConnectCases:GetCase",
        "resource_mappings": {}
      }
    ],
    "get-case-event-configuration": [
      {
        "note": "NotFound",
        "action": "ConnectCases:GetCaseEventConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-domain": [
      {
        "note": "NotFound",
        "action": "ConnectCases:GetDomain",
        "resource_mappings": {}
      }
    ],
    "get-layout": [
      {
        "note": "NotFound",
        "action": "ConnectCases:GetLayout",
        "resource_mappings": {}
      }
    ],
    "get-template": [
      {
        "note": "NotFound",
        "action": "ConnectCases:GetTemplate",
        "resource_mappings": {}
      }
    ],
    "list-cases-for-contact": [
      {
        "note": "NotFound",
        "action": "ConnectCases:ListCasesForContact",
        "resource_mappings": {}
      }
    ],
    "list-domains": [
      {
        "note": "NotFound",
        "action": "ConnectCases:ListDomains",
        "resource_mappings": {}
      }
    ],
    "list-field-options": [
      {
        "note": "NotFound",
        "action": "ConnectCases:ListFieldOptions",
        "resource_mappings": {}
      }
    ],
    "list-fields": [
      {
        "note": "NotFound",
        "action": "ConnectCases:ListFields",
        "resource_mappings": {}
      }
    ],
    "list-layouts": [
      {
        "note": "NotFound",
        "action": "ConnectCases:ListLayouts",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "note": "NotFound",
        "action": "ConnectCases:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "list-templates": [
      {
        "note": "NotFound",
        "action": "ConnectCases:ListTemplates",
        "resource_mappings": {}
      }
    ],
    "put-case-event-configuration": [
      {
        "note": "NotFound",
        "action": "ConnectCases:PutCaseEventConfiguration",
        "resource_mappings": {}
      }
    ],
    "search-cases": [
      {
        "note": "NotFound",
        "action": "ConnectCases:SearchCases",
        "resource_mappings": {}
      }
    ],
    "search-related-items": [
      {
        "note": "NotFound",
        "action": "ConnectCases:SearchRelatedItems",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "note": "NotFound",
        "action": "ConnectCases:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "note": "NotFound",
        "action": "ConnectCases:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-case": [
      {
        "note": "NotFound",
        "action": "ConnectCases:UpdateCase",
        "resource_mappings": {}
      }
    ],
    "update-field": [
      {
        "note": "NotFound",
        "action": "ConnectCases:UpdateField",
        "resource_mappings": {}
      }
    ],
    "update-layout": [
      {
        "note": "NotFound",
        "action": "ConnectCases:UpdateLayout",
        "resource_mappings": {}
      }
    ],
    "update-template": [
      {
        "note": "NotFound",
        "action": "ConnectCases:UpdateTemplate",
        "resource_mappings": {}
      }
    ]
  },
  "connectparticipant": {
    "complete-attachment-upload": [
      {
        "note": "NotFound",
        "action": "ConnectParticipant:CompleteAttachmentUpload",
        "resource_mappings": {}
      }
    ],
    "create-participant-connection": [
      {
        "note": "NotFound",
        "action": "ConnectParticipant:CreateParticipantConnection",
        "resource_mappings": {}
      }
    ],
    "describe-view": [
      {
        "note": "NotFound",
        "action": "ConnectParticipant:DescribeView",
        "resource_mappings": {}
      }
    ],
    "disconnect-participant": [
      {
        "note": "NotFound",
        "action": "ConnectParticipant:DisconnectParticipant",
        "resource_mappings": {}
      }
    ],
    "get-attachment": [
      {
        "note": "NotFound",
        "action": "ConnectParticipant:GetAttachment",
        "resource_mappings": {}
      }
    ],
    "get-transcript": [
      {
        "note": "NotFound",
        "action": "ConnectParticipant:GetTranscript",
        "resource_mappings": {}
      }
    ],
    "send-event": [
      {
        "note": "NotFound",
        "action": "ConnectParticipant:SendEvent",
        "resource_mappings": {}
      }
    ],
    "send-message": [
      {
        "note": "NotFound",
        "action": "ConnectParticipant:SendMessage",
        "resource_mappings": {}
      }
    ],
    "start-attachment-upload": [
      {
        "note": "NotFound",
        "action": "ConnectParticipant:StartAttachmentUpload",
        "resource_mappings": {}
      }
    ]
  },
  "controltower": {
    "disable-control": [
      {
        "action": "controltower:DisableControl",
        "resource_mappings": {}
      }
    ],
    "enable-control": [
      {
        "action": "controltower:EnableControl",
        "resource_mappings": {}
      }
    ],
    "get-control-operation": [
      {
        "action": "controltower:GetControlOperation",
        "resource_mappings": {}
      }
    ],
    "get-enabled-control": [
      {
        "note": "NotFound",
        "action": "ControlTower:GetEnabledControl",
        "resource_mappings": {}
      }
    ],
    "list-enabled-controls": [
      {
        "action": "controltower:ListEnabledControls",
        "resource_mappings": {}
      }
    ]
  },
  "cur": {
    "delete-report-definition": [
      {
        "action": "cur:DeleteReportDefinition",
        "resource_mappings": {
          "ReportName": {
            "template": "${ReportName}"
          }
        }
      }
    ],
    "describe-report-definitions": [
      {
        "action": "cur:DescribeReportDefinitions",
        "resource_mappings": {}
      }
    ],
    "modify-report-definition": [
      {
        "action": "cur:ModifyReportDefinition",
        "resource_mappings": {
          "ReportName": {
            "template": "${ReportName}"
          }
        }
      }
    ],
    "put-report-definition": [
      {
        "action": "cur:PutReportDefinition",
        "resource_mappings": {
          "ReportName": {
            "template": "${ReportDefinition.ReportName}"
          }
        }
      }
    ]
  },
  "customer-profiles": {
    "add-profile-key": [
      {
        "action": "profile:AddProfileKey",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "create-calculated-attribute-definition": [
      {
        "action": "profile:CreateCalculatedAttributeDefinition",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          },
          "CalculatedAttributeName": {
            "template": "${CalculatedAttributeName}"
          }
        }
      }
    ],
    "create-domain": [
      {
        "action": "profile:CreateDomain",
        "resource_mappings": {}
      }
    ],
    "create-event-stream": [
      {
        "action": "profile:CreateEventStream",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          },
          "EventStreamName": {
            "template": "${EventStreamName}"
          }
        }
      },
      {
        "action": "iam:PutRolePolicy",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "kinesis:DescribeStreamSummary",
        "resource_mappings": {
          "StreamName": {
            "template": "*"
          }
        }
      }
    ],
    "create-integration-workflow": [
      {
        "action": "profile:CreateIntegrationWorkflow",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "create-profile": [
      {
        "action": "profile:CreateProfile",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "delete-calculated-attribute-definition": [
      {
        "action": "profile:DeleteCalculatedAttributeDefinition",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          },
          "CalculatedAttributeName": {
            "template": "${CalculatedAttributeName}"
          }
        }
      }
    ],
    "delete-domain": [
      {
        "action": "profile:DeleteDomain",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "delete-event-stream": [
      {
        "action": "profile:DeleteEventStream",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          },
          "EventStreamName": {
            "template": "${EventStreamName}"
          }
        }
      },
      {
        "action": "iam:DeleteRolePolicy",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "delete-integration": [
      {
        "action": "profile:DeleteIntegration",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          },
          "Uri": {
            "template": "${Uri}"
          }
        }
      }
    ],
    "delete-profile": [
      {
        "action": "profile:DeleteProfile",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "delete-profile-key": [
      {
        "action": "profile:DeleteProfileKey",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "delete-profile-object": [
      {
        "action": "profile:DeleteProfileObject",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          },
          "ObjectTypeName": {
            "template": "${ObjectTypeName}"
          }
        }
      }
    ],
    "delete-profile-object-type": [
      {
        "action": "profile:DeleteProfileObjectType",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          },
          "ObjectTypeName": {
            "template": "${ObjectTypeName}"
          }
        }
      }
    ],
    "delete-workflow": [
      {
        "action": "profile:DeleteWorkflow",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "get-auto-merging-preview": [
      {
        "action": "profile:GetAutoMergingPreview",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "get-calculated-attribute-definition": [
      {
        "action": "profile:GetCalculatedAttributeDefinition",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          },
          "CalculatedAttributeName": {
            "template": "${CalculatedAttributeName}"
          }
        }
      }
    ],
    "get-calculated-attribute-for-profile": [
      {
        "action": "profile:GetCalculatedAttributeForProfile",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          },
          "CalculatedAttributeName": {
            "template": "${CalculatedAttributeName}"
          }
        }
      }
    ],
    "get-domain": [
      {
        "action": "profile:GetDomain",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "get-event-stream": [
      {
        "action": "profile:GetEventStream",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          },
          "EventStreamName": {
            "template": "${EventStreamName}"
          }
        }
      },
      {
        "action": "kinesis:DescribeStreamSummary",
        "resource_mappings": {
          "StreamName": {
            "template": "*"
          }
        }
      }
    ],
    "get-identity-resolution-job": [
      {
        "action": "profile:GetIdentityResolutionJob",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "get-integration": [
      {
        "action": "profile:GetIntegration",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          },
          "Uri": {
            "template": "${Uri}"
          }
        }
      }
    ],
    "get-matches": [
      {
        "action": "profile:GetMatches",
        "resource_mappings": {}
      }
    ],
    "get-profile-object-type": [
      {
        "action": "profile:GetProfileObjectType",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          },
          "ObjectTypeName": {
            "template": "${ObjectTypeName}"
          }
        }
      }
    ],
    "get-profile-object-type-template": [
      {
        "action": "profile:GetProfileObjectTypeTemplate",
        "resource_mappings": {}
      }
    ],
    "get-similar-profiles": [
      {
        "action": "profile:GetSimilarProfiles",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "get-workflow": [
      {
        "action": "profile:GetWorkflow",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "get-workflow-steps": [
      {
        "action": "profile:GetWorkflowSteps",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "list-account-integrations": [
      {
        "action": "profile:ListAccountIntegrations",
        "resource_mappings": {}
      }
    ],
    "list-calculated-attribute-definitions": [
      {
        "action": "profile:ListCalculatedAttributeDefinitions",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "list-calculated-attributes-for-profile": [
      {
        "action": "profile:ListCalculatedAttributesForProfile",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "list-domains": [
      {
        "action": "profile:ListDomains",
        "resource_mappings": {}
      }
    ],
    "list-event-streams": [
      {
        "action": "profile:ListEventStreams",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "list-identity-resolution-jobs": [
      {
        "action": "profile:ListIdentityResolutionJobs",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "list-integrations": [
      {
        "action": "profile:ListIntegrations",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "list-profile-object-type-templates": [
      {
        "action": "profile:ListProfileObjectTypeTemplates",
        "resource_mappings": {}
      }
    ],
    "list-profile-object-types": [
      {
        "action": "profile:ListProfileObjectTypes",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "list-profile-objects": [
      {
        "action": "profile:ListProfileObjects",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          },
          "ObjectTypeName": {
            "template": "${ObjectTypeName}"
          }
        }
      }
    ],
    "list-rule-based-matches": [
      {
        "action": "profile:ListRuleBasedMatches",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "profile:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "list-workflows": [
      {
        "action": "profile:ListWorkflows",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "merge-profiles": [
      {
        "action": "profile:MergeProfiles",
        "resource_mappings": {}
      }
    ],
    "put-integration": [
      {
        "action": "profile:PutIntegration",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          },
          "Uri": {
            "template": "${Uri}"
          }
        }
      }
    ],
    "put-profile-object": [
      {
        "action": "profile:PutProfileObject",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          },
          "ObjectTypeName": {
            "template": "${ObjectTypeName}"
          }
        }
      }
    ],
    "put-profile-object-type": [
      {
        "action": "profile:PutProfileObjectType",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          },
          "ObjectTypeName": {
            "template": "${ObjectTypeName}"
          }
        }
      }
    ],
    "search-profiles": [
      {
        "action": "profile:SearchProfiles",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "profile:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "profile:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-calculated-attribute-definition": [
      {
        "action": "profile:UpdateCalculatedAttributeDefinition",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          },
          "CalculatedAttributeName": {
            "template": "${CalculatedAttributeName}"
          }
        }
      }
    ],
    "update-domain": [
      {
        "action": "profile:UpdateDomain",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "update-profile": [
      {
        "action": "profile:UpdateProfile",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ]
  },
  "databrew": {
    "batch-delete-recipe-version": [
      {
        "action": "databrew:BatchDeleteRecipeVersion",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "create-dataset": [
      {
        "action": "databrew:CreateDataset",
        "resource_mappings": {}
      }
    ],
    "create-profile-job": [
      {
        "action": "databrew:CreateProfileJob",
        "resource_mappings": {}
      }
    ],
    "create-project": [
      {
        "action": "databrew:CreateProject",
        "resource_mappings": {}
      }
    ],
    "create-recipe": [
      {
        "action": "databrew:CreateRecipe",
        "resource_mappings": {}
      }
    ],
    "create-recipe-job": [
      {
        "action": "databrew:CreateRecipeJob",
        "resource_mappings": {}
      }
    ],
    "create-ruleset": [
      {
        "action": "databrew:CreateRuleset",
        "resource_mappings": {}
      }
    ],
    "create-schedule": [
      {
        "action": "databrew:CreateSchedule",
        "resource_mappings": {}
      }
    ],
    "delete-dataset": [
      {
        "action": "databrew:DeleteDataset",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-job": [
      {
        "action": "databrew:DeleteJob",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-project": [
      {
        "action": "databrew:DeleteProject",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-recipe-version": [
      {
        "action": "databrew:DeleteRecipeVersion",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-ruleset": [
      {
        "action": "databrew:DeleteRuleset",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-schedule": [
      {
        "action": "databrew:DeleteSchedule",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "describe-dataset": [
      {
        "action": "databrew:DescribeDataset",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "describe-job": [
      {
        "action": "databrew:DescribeJob",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "describe-job-run": [
      {
        "action": "databrew:DescribeJobRun",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-project": [
      {
        "action": "databrew:DescribeProject",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "describe-recipe": [
      {
        "action": "databrew:DescribeRecipe",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "describe-ruleset": [
      {
        "action": "databrew:DescribeRuleset",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-schedule": [
      {
        "action": "databrew:DescribeSchedule",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "list-datasets": [
      {
        "action": "databrew:ListDatasets",
        "resource_mappings": {}
      }
    ],
    "list-job-runs": [
      {
        "action": "databrew:ListJobRuns",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "list-jobs": [
      {
        "action": "databrew:ListJobs",
        "resource_mappings": {}
      }
    ],
    "list-projects": [
      {
        "action": "databrew:ListProjects",
        "resource_mappings": {}
      }
    ],
    "list-recipe-versions": [
      {
        "action": "databrew:ListRecipeVersions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "list-recipes": [
      {
        "action": "databrew:ListRecipes",
        "resource_mappings": {}
      }
    ],
    "list-rulesets": [
      {
        "action": "databrew:ListRulesets",
        "resource_mappings": {}
      }
    ],
    "list-schedules": [
      {
        "action": "databrew:ListSchedules",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "databrew:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Dataset": "%%iftemplatematch%${ResourceArn}%%",
          "Job": "%%iftemplatematch%${ResourceArn}%%",
          "Project": "%%iftemplatematch%${ResourceArn}%%",
          "Recipe": "%%iftemplatematch%${ResourceArn}%%",
          "Schedule": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "publish-recipe": [
      {
        "action": "databrew:PublishRecipe",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "send-project-session-action": [
      {
        "action": "databrew:SendProjectSessionAction",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "start-job-run": [
      {
        "action": "databrew:StartJobRun",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "start-project-session": [
      {
        "action": "databrew:StartProjectSession",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "stop-job-run": [
      {
        "action": "databrew:StopJobRun",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "databrew:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Dataset": "%%iftemplatematch%${ResourceArn}%%",
          "Job": "%%iftemplatematch%${ResourceArn}%%",
          "Project": "%%iftemplatematch%${ResourceArn}%%",
          "Recipe": "%%iftemplatematch%${ResourceArn}%%",
          "Schedule": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "databrew:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Dataset": "%%iftemplatematch%${ResourceArn}%%",
          "Job": "%%iftemplatematch%${ResourceArn}%%",
          "Project": "%%iftemplatematch%${ResourceArn}%%",
          "Recipe": "%%iftemplatematch%${ResourceArn}%%",
          "Schedule": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-dataset": [
      {
        "action": "databrew:UpdateDataset",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "update-profile-job": [
      {
        "action": "databrew:UpdateProfileJob",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "update-project": [
      {
        "action": "databrew:UpdateProject",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "update-recipe": [
      {
        "action": "databrew:UpdateRecipe",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "update-recipe-job": [
      {
        "action": "databrew:UpdateRecipeJob",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "update-ruleset": [
      {
        "action": "databrew:UpdateRuleset",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "update-schedule": [
      {
        "action": "databrew:UpdateSchedule",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ]
  },
  "dataexchange": {
    "cancel-job": [
      {
        "action": "dataexchange:CancelJob",
        "resource_mappings": {
          "JobId": {
            "template": "${JobId}"
          }
        }
      }
    ],
    "create-data-set": [
      {
        "action": "dataexchange:CreateDataSet",
        "resource_mappings": {}
      }
    ],
    "create-event-action": [
      {
        "action": "dataexchange:CreateEventAction",
        "resource_mappings": {
          "EventActionId": {
            "template": "*"
          }
        }
      }
    ],
    "create-job": [
      {
        "action": "dataexchange:CreateJob",
        "resource_mappings": {
          "JobId": {
            "template": "*"
          }
        }
      }
    ],
    "create-revision": [
      {
        "action": "dataexchange:CreateRevision",
        "resource_mappings": {}
      }
    ],
    "delete-asset": [
      {
        "action": "dataexchange:DeleteAsset",
        "resource_mappings": {
          "DataSetId": {
            "template": "${DataSetId}"
          },
          "RevisionId": {
            "template": "${RevisionId}"
          },
          "AssetId": {
            "template": "${AssetId}"
          }
        }
      }
    ],
    "delete-data-set": [
      {
        "action": "dataexchange:DeleteDataSet",
        "resource_mappings": {
          "DataSetId": {
            "template": "${DataSetId}"
          }
        }
      }
    ],
    "delete-event-action": [
      {
        "action": "dataexchange:DeleteEventAction",
        "resource_mappings": {
          "EventActionId": {
            "template": "${EventActionId}"
          }
        }
      }
    ],
    "delete-revision": [
      {
        "action": "dataexchange:DeleteRevision",
        "resource_mappings": {
          "DataSetId": {
            "template": "${DataSetId}"
          },
          "RevisionId": {
            "template": "${RevisionId}"
          }
        }
      }
    ],
    "get-asset": [
      {
        "action": "dataexchange:GetAsset",
        "resource_mappings": {
          "DataSetId": {
            "template": "${DataSetId}"
          },
          "RevisionId": {
            "template": "${RevisionId}"
          },
          "AssetId": {
            "template": "${AssetId}"
          }
        }
      }
    ],
    "get-data-set": [
      {
        "action": "dataexchange:GetDataSet",
        "resource_mappings": {
          "DataSetId": {
            "template": "${DataSetId}"
          }
        }
      }
    ],
    "get-event-action": [
      {
        "action": "dataexchange:GetEventAction",
        "resource_mappings": {
          "EventActionId": {
            "template": "${EventActionId}"
          }
        }
      }
    ],
    "get-job": [
      {
        "action": "dataexchange:GetJob",
        "resource_mappings": {
          "JobId": {
            "template": "${JobId}"
          }
        }
      }
    ],
    "get-revision": [
      {
        "action": "dataexchange:GetRevision",
        "resource_mappings": {
          "DataSetId": {
            "template": "${DataSetId}"
          },
          "RevisionId": {
            "template": "${RevisionId}"
          }
        }
      }
    ],
    "list-data-set-revisions": [
      {
        "action": "dataexchange:ListDataSetRevisions",
        "resource_mappings": {
          "DataSetId": {
            "template": "${DataSetId}"
          },
          "RevisionId": {
            "template": "*"
          }
        }
      }
    ],
    "list-data-sets": [
      {
        "action": "dataexchange:ListDataSets",
        "resource_mappings": {
          "DataSetId": {
            "template": "*"
          }
        }
      }
    ],
    "list-event-actions": [
      {
        "action": "dataexchange:ListEventActions",
        "resource_mappings": {
          "EventActionId": {
            "template": "${EventSourceId}"
          }
        }
      }
    ],
    "list-jobs": [
      {
        "action": "dataexchange:ListJobs",
        "resource_mappings": {
          "JobId": {
            "template": "*"
          }
        }
      }
    ],
    "list-revision-assets": [
      {
        "action": "dataexchange:ListRevisionAssets",
        "resource_mappings": {
          "DataSetId": {
            "template": "${DataSetId}"
          },
          "RevisionId": {
            "template": "${RevisionId}"
          },
          "AssetId": {
            "template": "*"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "dataexchange:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "data-sets": "%%iftemplatematch%${ResourceArn}%%",
          "revisions": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "revoke-revision": [
      {
        "action": "dataexchange:RevokeRevision",
        "resource_mappings": {
          "DataSetId": {
            "template": "${DataSetId}"
          },
          "RevisionId": {
            "template": "${RevisionId}"
          }
        }
      }
    ],
    "send-api-asset": [
      {
        "action": "dataexchange:SendApiAsset",
        "resource_mappings": {
          "DataSetId": {
            "template": "${DataSetId}"
          },
          "RevisionId": {
            "template": "${RevisionId}"
          },
          "AssetId": {
            "template": "${AssetId}"
          }
        }
      }
    ],
    "start-job": [
      {
        "action": "dataexchange:StartJob",
        "resource_mappings": {
          "JobId": {
            "template": "${JobId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "dataexchange:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "data-sets": "%%iftemplatematch%${ResourceArn}%%",
          "revisions": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "dataexchange:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "data-sets": "%%iftemplatematch%${ResourceArn}%%",
          "revisions": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-asset": [
      {
        "action": "dataexchange:UpdateAsset",
        "resource_mappings": {
          "DataSetId": {
            "template": "${DataSetId}"
          },
          "RevisionId": {
            "template": "${RevisionId}"
          },
          "AssetId": {
            "template": "${AssetId}"
          }
        }
      }
    ],
    "update-data-set": [
      {
        "action": "dataexchange:UpdateDataSet",
        "resource_mappings": {
          "DataSetId": {
            "template": "${DataSetId}"
          }
        }
      }
    ],
    "update-event-action": [
      {
        "action": "dataexchange:UpdateEventAction",
        "resource_mappings": {
          "EventActionId": {
            "template": "${EventActionId}"
          }
        }
      }
    ],
    "update-revision": [
      {
        "action": "dataexchange:UpdateRevision",
        "resource_mappings": {
          "DataSetId": {
            "template": "${DataSetId}"
          },
          "RevisionId": {
            "template": "${RevisionId}"
          }
        }
      }
    ]
  },
  "datapipeline": {
    "activate-pipeline": [
      {
        "action": "datapipeline:ActivatePipeline",
        "resource_mappings": {}
      }
    ],
    "add-tags": [
      {
        "action": "datapipeline:AddTags",
        "resource_mappings": {}
      }
    ],
    "create-pipeline": [
      {
        "action": "datapipeline:CreatePipeline",
        "resource_mappings": {}
      }
    ],
    "deactivate-pipeline": [
      {
        "action": "datapipeline:DeactivatePipeline",
        "resource_mappings": {}
      }
    ],
    "delete-pipeline": [
      {
        "action": "datapipeline:DeletePipeline",
        "resource_mappings": {}
      }
    ],
    "describe-objects": [
      {
        "action": "datapipeline:DescribeObjects",
        "resource_mappings": {}
      }
    ],
    "describe-pipelines": [
      {
        "action": "datapipeline:DescribePipelines",
        "resource_mappings": {}
      }
    ],
    "evaluate-expression": [
      {
        "action": "datapipeline:EvaluateExpression",
        "resource_mappings": {}
      }
    ],
    "get-pipeline-definition": [
      {
        "action": "datapipeline:GetPipelineDefinition",
        "resource_mappings": {}
      }
    ],
    "list-pipelines": [
      {
        "action": "datapipeline:ListPipelines",
        "resource_mappings": {}
      }
    ],
    "poll-for-task": [
      {
        "action": "datapipeline:PollForTask",
        "resource_mappings": {}
      }
    ],
    "put-pipeline-definition": [
      {
        "action": "datapipeline:PutPipelineDefinition",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "query-objects": [
      {
        "action": "datapipeline:QueryObjects",
        "resource_mappings": {}
      }
    ],
    "remove-tags": [
      {
        "action": "datapipeline:RemoveTags",
        "resource_mappings": {}
      }
    ],
    "report-task-progress": [
      {
        "action": "datapipeline:ReportTaskProgress",
        "resource_mappings": {}
      }
    ],
    "report-task-runner-heartbeat": [
      {
        "action": "datapipeline:ReportTaskRunnerHeartbeat",
        "resource_mappings": {}
      }
    ],
    "set-status": [
      {
        "action": "datapipeline:SetStatus",
        "resource_mappings": {}
      }
    ],
    "set-task-status": [
      {
        "action": "datapipeline:SetTaskStatus",
        "resource_mappings": {}
      }
    ],
    "validate-pipeline-definition": [
      {
        "action": "datapipeline:ValidatePipelineDefinition",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "*"
        }
      }
    ]
  },
  "datasync": {
    "add-storage-system": [
      {
        "action": "datasync:AddStorageSystem",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "agent": "${AgentArns[]}"
        }
      }
    ],
    "cancel-task-execution": [
      {
        "action": "datasync:CancelTaskExecution",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "taskexecution": "${TaskExecutionArn}"
        }
      }
    ],
    "create-agent": [
      {
        "action": "datasync:CreateAgent",
        "resource_mappings": {}
      }
    ],
    "create-location-azure-blob": [
      {
        "action": "datasync:CreateLocationAzureBlob",
        "resource_mappings": {}
      }
    ],
    "create-location-efs": [
      {
        "action": "datasync:CreateLocationEfs",
        "resource_mappings": {}
      }
    ],
    "create-location-fsx-lustre": [
      {
        "action": "datasync:CreateLocationFsxLustre",
        "resource_mappings": {}
      }
    ],
    "create-location-fsx-ontap": [
      {
        "action": "datasync:CreateLocationFsxOntap",
        "resource_mappings": {}
      }
    ],
    "create-location-fsx-open-zfs": [
      {
        "action": "datasync:CreateLocationFsxOpenZfs",
        "resource_mappings": {}
      }
    ],
    "create-location-fsx-windows": [
      {
        "action": "datasync:CreateLocationFsxWindows",
        "resource_mappings": {}
      }
    ],
    "create-location-hdfs": [
      {
        "action": "datasync:CreateLocationHdfs",
        "resource_mappings": {}
      }
    ],
    "create-location-nfs": [
      {
        "action": "datasync:CreateLocationNfs",
        "resource_mappings": {}
      }
    ],
    "create-location-object-storage": [
      {
        "action": "datasync:CreateLocationObjectStorage",
        "resource_mappings": {}
      }
    ],
    "create-location-s3": [
      {
        "action": "datasync:CreateLocationS3",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${S3Config.BucketAccessRoleArn}"
        }
      }
    ],
    "create-location-smb": [
      {
        "action": "datasync:CreateLocationSmb",
        "resource_mappings": {}
      }
    ],
    "create-task": [
      {
        "action": "datasync:CreateTask",
        "resource_mappings": {}
      }
    ],
    "delete-agent": [
      {
        "action": "datasync:DeleteAgent",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "agent": "${AgentArn}"
        }
      }
    ],
    "delete-location": [
      {
        "action": "datasync:DeleteLocation",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "location": "${LocationArn}"
        }
      }
    ],
    "delete-task": [
      {
        "action": "datasync:DeleteTask",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "task": "${TaskArn}"
        }
      }
    ],
    "describe-agent": [
      {
        "action": "datasync:DescribeAgent",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "agent": "${AgentArn}"
        }
      }
    ],
    "describe-discovery-job": [
      {
        "action": "datasync:DescribeDiscoveryJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "discoveryjob": "${DiscoveryJobArn}"
        }
      }
    ],
    "describe-location-azure-blob": [
      {
        "action": "datasync:DescribeLocationAzureBlob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "location": "${LocationArn}"
        }
      }
    ],
    "describe-location-efs": [
      {
        "action": "datasync:DescribeLocationEfs",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "location": "${LocationArn}"
        }
      }
    ],
    "describe-location-fsx-lustre": [
      {
        "action": "datasync:DescribeLocationFsxLustre",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "location": "${LocationArn}"
        }
      }
    ],
    "describe-location-fsx-ontap": [
      {
        "action": "datasync:DescribeLocationFsxOntap",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "location": "${LocationArn}"
        }
      }
    ],
    "describe-location-fsx-open-zfs": [
      {
        "action": "datasync:DescribeLocationFsxOpenZfs",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "location": "${LocationArn}"
        }
      }
    ],
    "describe-location-fsx-windows": [
      {
        "action": "datasync:DescribeLocationFsxWindows",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "location": "${LocationArn}"
        }
      }
    ],
    "describe-location-hdfs": [
      {
        "action": "datasync:DescribeLocationHdfs",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "location": "${LocationArn}"
        }
      }
    ],
    "describe-location-nfs": [
      {
        "action": "datasync:DescribeLocationNfs",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "location": "${LocationArn}"
        }
      }
    ],
    "describe-location-object-storage": [
      {
        "action": "datasync:DescribeLocationObjectStorage",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "location": "${LocationArn}"
        }
      }
    ],
    "describe-location-s3": [
      {
        "action": "datasync:DescribeLocationS3",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "location": "${LocationArn}"
        }
      }
    ],
    "describe-location-smb": [
      {
        "action": "datasync:DescribeLocationSmb",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "location": "${LocationArn}"
        }
      }
    ],
    "describe-storage-system": [
      {
        "action": "datasync:DescribeStorageSystem",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "storagesystem": "${StorageSystemArn}"
        }
      }
    ],
    "describe-storage-system-resource-metrics": [
      {
        "action": "datasync:DescribeStorageSystemResourceMetrics",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "discoveryjob": "${DiscoveryJobArn}"
        }
      }
    ],
    "describe-storage-system-resources": [
      {
        "action": "datasync:DescribeStorageSystemResources",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "discoveryjob": "${DiscoveryJobArn}"
        }
      }
    ],
    "describe-task": [
      {
        "action": "datasync:DescribeTask",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "task": "${TaskArn}"
        }
      }
    ],
    "describe-task-execution": [
      {
        "action": "datasync:DescribeTaskExecution",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "taskexecution": "${TaskExecutionArn}"
        }
      }
    ],
    "generate-recommendations": [
      {
        "action": "datasync:GenerateRecommendations",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "discoveryjob": "${DiscoveryJobArn}"
        }
      }
    ],
    "list-agents": [
      {
        "action": "datasync:ListAgents",
        "resource_mappings": {}
      }
    ],
    "list-discovery-jobs": [
      {
        "action": "datasync:ListDiscoveryJobs",
        "resource_mappings": {}
      }
    ],
    "list-locations": [
      {
        "action": "datasync:ListLocations",
        "resource_mappings": {}
      }
    ],
    "list-storage-systems": [
      {
        "action": "datasync:ListStorageSystems",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "datasync:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "agent": "%%iftemplatematch%${ResourceArn}%%",
          "location": "%%iftemplatematch%${ResourceArn}%%",
          "task": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "list-task-executions": [
      {
        "action": "datasync:ListTaskExecutions",
        "resource_mappings": {}
      }
    ],
    "list-tasks": [
      {
        "action": "datasync:ListTasks",
        "resource_mappings": {}
      }
    ],
    "remove-storage-system": [
      {
        "action": "datasync:RemoveStorageSystem",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "storagesystem": "${StorageSystemArn}"
        }
      }
    ],
    "start-discovery-job": [
      {
        "action": "datasync:StartDiscoveryJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "storagesystem": "${StorageSystemArn}"
        }
      }
    ],
    "start-task-execution": [
      {
        "action": "datasync:StartTaskExecution",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "task": "${TaskArn}"
        }
      }
    ],
    "stop-discovery-job": [
      {
        "action": "datasync:StopDiscoveryJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "discoveryjob": "${DiscoveryJobArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "datasync:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "agent": "%%iftemplatematch%${ResourceArn}%%",
          "location": "%%iftemplatematch%${ResourceArn}%%",
          "task": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "datasync:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "agent": "%%iftemplatematch%${ResourceArn}%%",
          "location": "%%iftemplatematch%${ResourceArn}%%",
          "task": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-agent": [
      {
        "action": "datasync:UpdateAgent",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "agent": "${AgentArn}"
        }
      }
    ],
    "update-discovery-job": [
      {
        "action": "datasync:UpdateDiscoveryJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "discoveryjob": "${DiscoveryJobArn}"
        }
      }
    ],
    "update-location-azure-blob": [
      {
        "action": "datasync:UpdateLocationAzureBlob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "location": "${LocationArn}"
        }
      }
    ],
    "update-location-hdfs": [
      {
        "action": "datasync:UpdateLocationHdfs",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "location": "${LocationArn}"
        }
      }
    ],
    "update-location-nfs": [
      {
        "action": "datasync:UpdateLocationNfs",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "location": "${LocationArn}"
        }
      }
    ],
    "update-location-object-storage": [
      {
        "action": "datasync:UpdateLocationObjectStorage",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "location": "${LocationArn}"
        }
      }
    ],
    "update-location-smb": [
      {
        "action": "datasync:UpdateLocationSmb",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "location": "${LocationArn}"
        }
      }
    ],
    "update-storage-system": [
      {
        "action": "datasync:UpdateStorageSystem",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "storagesystem": "${StorageSystemArn}"
        }
      }
    ],
    "update-task": [
      {
        "action": "datasync:UpdateTask",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "task": "${TaskArn}"
        }
      }
    ],
    "update-task-execution": [
      {
        "action": "datasync:UpdateTaskExecution",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "taskexecution": "${TaskExecutionArn}"
        }
      }
    ]
  },
  "datazone": {
    "accept-predictions": [
      {
        "note": "NotFound",
        "action": "DataZone:AcceptPredictions",
        "resource_mappings": {}
      }
    ],
    "accept-subscription-request": [
      {
        "note": "NotFound",
        "action": "DataZone:AcceptSubscriptionRequest",
        "resource_mappings": {}
      }
    ],
    "cancel-subscription": [
      {
        "note": "NotFound",
        "action": "DataZone:CancelSubscription",
        "resource_mappings": {}
      }
    ],
    "create-asset": [
      {
        "note": "NotFound",
        "action": "DataZone:CreateAsset",
        "resource_mappings": {}
      }
    ],
    "create-asset-revision": [
      {
        "note": "NotFound",
        "action": "DataZone:CreateAssetRevision",
        "resource_mappings": {}
      }
    ],
    "create-asset-type": [
      {
        "note": "NotFound",
        "action": "DataZone:CreateAssetType",
        "resource_mappings": {}
      }
    ],
    "create-data-source": [
      {
        "note": "NotFound",
        "action": "DataZone:CreateDataSource",
        "resource_mappings": {}
      }
    ],
    "create-domain": [
      {
        "note": "NotFound",
        "action": "DataZone:CreateDomain",
        "resource_mappings": {}
      }
    ],
    "create-environment": [
      {
        "note": "NotFound",
        "action": "DataZone:CreateEnvironment",
        "resource_mappings": {}
      }
    ],
    "create-environment-profile": [
      {
        "note": "NotFound",
        "action": "DataZone:CreateEnvironmentProfile",
        "resource_mappings": {}
      }
    ],
    "create-form-type": [
      {
        "note": "NotFound",
        "action": "DataZone:CreateFormType",
        "resource_mappings": {}
      }
    ],
    "create-glossary": [
      {
        "note": "NotFound",
        "action": "DataZone:CreateGlossary",
        "resource_mappings": {}
      }
    ],
    "create-glossary-term": [
      {
        "note": "NotFound",
        "action": "DataZone:CreateGlossaryTerm",
        "resource_mappings": {}
      }
    ],
    "create-group-profile": [
      {
        "note": "NotFound",
        "action": "DataZone:CreateGroupProfile",
        "resource_mappings": {}
      }
    ],
    "create-listing-change-set": [
      {
        "note": "NotFound",
        "action": "DataZone:CreateListingChangeSet",
        "resource_mappings": {}
      }
    ],
    "create-project": [
      {
        "note": "NotFound",
        "action": "DataZone:CreateProject",
        "resource_mappings": {}
      }
    ],
    "create-project-membership": [
      {
        "note": "NotFound",
        "action": "DataZone:CreateProjectMembership",
        "resource_mappings": {}
      }
    ],
    "create-subscription-grant": [
      {
        "note": "NotFound",
        "action": "DataZone:CreateSubscriptionGrant",
        "resource_mappings": {}
      }
    ],
    "create-subscription-request": [
      {
        "note": "NotFound",
        "action": "DataZone:CreateSubscriptionRequest",
        "resource_mappings": {}
      }
    ],
    "create-subscription-target": [
      {
        "note": "NotFound",
        "action": "DataZone:CreateSubscriptionTarget",
        "resource_mappings": {}
      }
    ],
    "create-user-profile": [
      {
        "note": "NotFound",
        "action": "DataZone:CreateUserProfile",
        "resource_mappings": {}
      }
    ],
    "delete-asset": [
      {
        "note": "NotFound",
        "action": "DataZone:DeleteAsset",
        "resource_mappings": {}
      }
    ],
    "delete-asset-type": [
      {
        "note": "NotFound",
        "action": "DataZone:DeleteAssetType",
        "resource_mappings": {}
      }
    ],
    "delete-data-source": [
      {
        "note": "NotFound",
        "action": "DataZone:DeleteDataSource",
        "resource_mappings": {}
      }
    ],
    "delete-domain": [
      {
        "note": "NotFound",
        "action": "DataZone:DeleteDomain",
        "resource_mappings": {}
      }
    ],
    "delete-environment": [
      {
        "note": "NotFound",
        "action": "DataZone:DeleteEnvironment",
        "resource_mappings": {}
      }
    ],
    "delete-environment-blueprint-configuration": [
      {
        "note": "NotFound",
        "action": "DataZone:DeleteEnvironmentBlueprintConfiguration",
        "resource_mappings": {}
      }
    ],
    "delete-environment-profile": [
      {
        "note": "NotFound",
        "action": "DataZone:DeleteEnvironmentProfile",
        "resource_mappings": {}
      }
    ],
    "delete-form-type": [
      {
        "note": "NotFound",
        "action": "DataZone:DeleteFormType",
        "resource_mappings": {}
      }
    ],
    "delete-glossary": [
      {
        "note": "NotFound",
        "action": "DataZone:DeleteGlossary",
        "resource_mappings": {}
      }
    ],
    "delete-glossary-term": [
      {
        "note": "NotFound",
        "action": "DataZone:DeleteGlossaryTerm",
        "resource_mappings": {}
      }
    ],
    "delete-listing": [
      {
        "note": "NotFound",
        "action": "DataZone:DeleteListing",
        "resource_mappings": {}
      }
    ],
    "delete-project": [
      {
        "note": "NotFound",
        "action": "DataZone:DeleteProject",
        "resource_mappings": {}
      }
    ],
    "delete-project-membership": [
      {
        "note": "NotFound",
        "action": "DataZone:DeleteProjectMembership",
        "resource_mappings": {}
      }
    ],
    "delete-subscription-grant": [
      {
        "note": "NotFound",
        "action": "DataZone:DeleteSubscriptionGrant",
        "resource_mappings": {}
      }
    ],
    "delete-subscription-request": [
      {
        "note": "NotFound",
        "action": "DataZone:DeleteSubscriptionRequest",
        "resource_mappings": {}
      }
    ],
    "delete-subscription-target": [
      {
        "note": "NotFound",
        "action": "DataZone:DeleteSubscriptionTarget",
        "resource_mappings": {}
      }
    ],
    "get-asset": [
      {
        "note": "NotFound",
        "action": "DataZone:GetAsset",
        "resource_mappings": {}
      }
    ],
    "get-asset-type": [
      {
        "note": "NotFound",
        "action": "DataZone:GetAssetType",
        "resource_mappings": {}
      }
    ],
    "get-data-source": [
      {
        "note": "NotFound",
        "action": "DataZone:GetDataSource",
        "resource_mappings": {}
      }
    ],
    "get-data-source-run": [
      {
        "note": "NotFound",
        "action": "DataZone:GetDataSourceRun",
        "resource_mappings": {}
      }
    ],
    "get-domain": [
      {
        "note": "NotFound",
        "action": "DataZone:GetDomain",
        "resource_mappings": {}
      }
    ],
    "get-environment": [
      {
        "note": "NotFound",
        "action": "DataZone:GetEnvironment",
        "resource_mappings": {}
      }
    ],
    "get-environment-blueprint": [
      {
        "note": "NotFound",
        "action": "DataZone:GetEnvironmentBlueprint",
        "resource_mappings": {}
      }
    ],
    "get-environment-blueprint-configuration": [
      {
        "note": "NotFound",
        "action": "DataZone:GetEnvironmentBlueprintConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-environment-profile": [
      {
        "note": "NotFound",
        "action": "DataZone:GetEnvironmentProfile",
        "resource_mappings": {}
      }
    ],
    "get-form-type": [
      {
        "note": "NotFound",
        "action": "DataZone:GetFormType",
        "resource_mappings": {}
      }
    ],
    "get-glossary": [
      {
        "note": "NotFound",
        "action": "DataZone:GetGlossary",
        "resource_mappings": {}
      }
    ],
    "get-glossary-term": [
      {
        "note": "NotFound",
        "action": "DataZone:GetGlossaryTerm",
        "resource_mappings": {}
      }
    ],
    "get-group-profile": [
      {
        "note": "NotFound",
        "action": "DataZone:GetGroupProfile",
        "resource_mappings": {}
      }
    ],
    "get-iam-portal-login-url": [
      {
        "note": "NotFound",
        "action": "DataZone:GetIamPortalLoginUrl",
        "resource_mappings": {}
      }
    ],
    "get-listing": [
      {
        "note": "NotFound",
        "action": "DataZone:GetListing",
        "resource_mappings": {}
      }
    ],
    "get-project": [
      {
        "note": "NotFound",
        "action": "DataZone:GetProject",
        "resource_mappings": {}
      }
    ],
    "get-subscription": [
      {
        "note": "NotFound",
        "action": "DataZone:GetSubscription",
        "resource_mappings": {}
      }
    ],
    "get-subscription-grant": [
      {
        "note": "NotFound",
        "action": "DataZone:GetSubscriptionGrant",
        "resource_mappings": {}
      }
    ],
    "get-subscription-request-details": [
      {
        "note": "NotFound",
        "action": "DataZone:GetSubscriptionRequestDetails",
        "resource_mappings": {}
      }
    ],
    "get-subscription-target": [
      {
        "note": "NotFound",
        "action": "DataZone:GetSubscriptionTarget",
        "resource_mappings": {}
      }
    ],
    "get-user-profile": [
      {
        "note": "NotFound",
        "action": "DataZone:GetUserProfile",
        "resource_mappings": {}
      }
    ],
    "list-asset-revisions": [
      {
        "note": "NotFound",
        "action": "DataZone:ListAssetRevisions",
        "resource_mappings": {}
      }
    ],
    "list-data-source-run-activities": [
      {
        "note": "NotFound",
        "action": "DataZone:ListDataSourceRunActivities",
        "resource_mappings": {}
      }
    ],
    "list-data-source-runs": [
      {
        "note": "NotFound",
        "action": "DataZone:ListDataSourceRuns",
        "resource_mappings": {}
      }
    ],
    "list-data-sources": [
      {
        "note": "NotFound",
        "action": "DataZone:ListDataSources",
        "resource_mappings": {}
      }
    ],
    "list-domains": [
      {
        "note": "NotFound",
        "action": "DataZone:ListDomains",
        "resource_mappings": {}
      }
    ],
    "list-environment-blueprint-configurations": [
      {
        "note": "NotFound",
        "action": "DataZone:ListEnvironmentBlueprintConfigurations",
        "resource_mappings": {}
      }
    ],
    "list-environment-blueprints": [
      {
        "note": "NotFound",
        "action": "DataZone:ListEnvironmentBlueprints",
        "resource_mappings": {}
      }
    ],
    "list-environment-profiles": [
      {
        "note": "NotFound",
        "action": "DataZone:ListEnvironmentProfiles",
        "resource_mappings": {}
      }
    ],
    "list-environments": [
      {
        "note": "NotFound",
        "action": "DataZone:ListEnvironments",
        "resource_mappings": {}
      }
    ],
    "list-notifications": [
      {
        "note": "NotFound",
        "action": "DataZone:ListNotifications",
        "resource_mappings": {}
      }
    ],
    "list-project-memberships": [
      {
        "note": "NotFound",
        "action": "DataZone:ListProjectMemberships",
        "resource_mappings": {}
      }
    ],
    "list-projects": [
      {
        "note": "NotFound",
        "action": "DataZone:ListProjects",
        "resource_mappings": {}
      }
    ],
    "list-subscription-grants": [
      {
        "note": "NotFound",
        "action": "DataZone:ListSubscriptionGrants",
        "resource_mappings": {}
      }
    ],
    "list-subscription-requests": [
      {
        "note": "NotFound",
        "action": "DataZone:ListSubscriptionRequests",
        "resource_mappings": {}
      }
    ],
    "list-subscription-targets": [
      {
        "note": "NotFound",
        "action": "DataZone:ListSubscriptionTargets",
        "resource_mappings": {}
      }
    ],
    "list-subscriptions": [
      {
        "note": "NotFound",
        "action": "DataZone:ListSubscriptions",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "note": "NotFound",
        "action": "DataZone:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "put-environment-blueprint-configuration": [
      {
        "note": "NotFound",
        "action": "DataZone:PutEnvironmentBlueprintConfiguration",
        "resource_mappings": {}
      }
    ],
    "reject-predictions": [
      {
        "note": "NotFound",
        "action": "DataZone:RejectPredictions",
        "resource_mappings": {}
      }
    ],
    "reject-subscription-request": [
      {
        "note": "NotFound",
        "action": "DataZone:RejectSubscriptionRequest",
        "resource_mappings": {}
      }
    ],
    "revoke-subscription": [
      {
        "note": "NotFound",
        "action": "DataZone:RevokeSubscription",
        "resource_mappings": {}
      }
    ],
    "search": [
      {
        "note": "NotFound",
        "action": "DataZone:Search",
        "resource_mappings": {}
      }
    ],
    "search-group-profiles": [
      {
        "note": "NotFound",
        "action": "DataZone:SearchGroupProfiles",
        "resource_mappings": {}
      }
    ],
    "search-listings": [
      {
        "note": "NotFound",
        "action": "DataZone:SearchListings",
        "resource_mappings": {}
      }
    ],
    "search-types": [
      {
        "note": "NotFound",
        "action": "DataZone:SearchTypes",
        "resource_mappings": {}
      }
    ],
    "search-user-profiles": [
      {
        "note": "NotFound",
        "action": "DataZone:SearchUserProfiles",
        "resource_mappings": {}
      }
    ],
    "start-data-source-run": [
      {
        "note": "NotFound",
        "action": "DataZone:StartDataSourceRun",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "note": "NotFound",
        "action": "DataZone:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "note": "NotFound",
        "action": "DataZone:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-data-source": [
      {
        "note": "NotFound",
        "action": "DataZone:UpdateDataSource",
        "resource_mappings": {}
      }
    ],
    "update-domain": [
      {
        "note": "NotFound",
        "action": "DataZone:UpdateDomain",
        "resource_mappings": {}
      }
    ],
    "update-environment": [
      {
        "note": "NotFound",
        "action": "DataZone:UpdateEnvironment",
        "resource_mappings": {}
      }
    ],
    "update-environment-profile": [
      {
        "note": "NotFound",
        "action": "DataZone:UpdateEnvironmentProfile",
        "resource_mappings": {}
      }
    ],
    "update-glossary": [
      {
        "note": "NotFound",
        "action": "DataZone:UpdateGlossary",
        "resource_mappings": {}
      }
    ],
    "update-glossary-term": [
      {
        "note": "NotFound",
        "action": "DataZone:UpdateGlossaryTerm",
        "resource_mappings": {}
      }
    ],
    "update-group-profile": [
      {
        "note": "NotFound",
        "action": "DataZone:UpdateGroupProfile",
        "resource_mappings": {}
      }
    ],
    "update-project": [
      {
        "note": "NotFound",
        "action": "DataZone:UpdateProject",
        "resource_mappings": {}
      }
    ],
    "update-subscription-grant-status": [
      {
        "note": "NotFound",
        "action": "DataZone:UpdateSubscriptionGrantStatus",
        "resource_mappings": {}
      }
    ],
    "update-subscription-request": [
      {
        "note": "NotFound",
        "action": "DataZone:UpdateSubscriptionRequest",
        "resource_mappings": {}
      }
    ],
    "update-subscription-target": [
      {
        "note": "NotFound",
        "action": "DataZone:UpdateSubscriptionTarget",
        "resource_mappings": {}
      }
    ],
    "update-user-profile": [
      {
        "note": "NotFound",
        "action": "DataZone:UpdateUserProfile",
        "resource_mappings": {}
      }
    ]
  },
  "dax": {
    "create-cluster": [
      {
        "action": "dax:CreateCluster",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterName}"
          }
        }
      },
      {
        "action": "dax:CreateParameterGroup",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${IamRoleArn}"
        }
      }
    ],
    "create-parameter-group": [
      {
        "action": "dax:CreateParameterGroup",
        "resource_mappings": {}
      }
    ],
    "create-subnet-group": [
      {
        "action": "dax:CreateSubnetGroup",
        "resource_mappings": {}
      }
    ],
    "decrease-replication-factor": [
      {
        "action": "dax:DecreaseReplicationFactor",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterName}"
          }
        }
      }
    ],
    "delete-cluster": [
      {
        "action": "dax:DeleteCluster",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterName}"
          }
        }
      }
    ],
    "delete-parameter-group": [
      {
        "action": "dax:DeleteParameterGroup",
        "resource_mappings": {}
      }
    ],
    "delete-subnet-group": [
      {
        "action": "dax:DeleteSubnetGroup",
        "resource_mappings": {}
      }
    ],
    "describe-clusters": [
      {
        "action": "dax:DescribeClusters",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterNames[]}"
          }
        }
      }
    ],
    "describe-default-parameters": [
      {
        "action": "dax:DescribeDefaultParameters",
        "resource_mappings": {}
      }
    ],
    "describe-events": [
      {
        "action": "dax:DescribeEvents",
        "resource_mappings": {}
      }
    ],
    "describe-parameter-groups": [
      {
        "action": "dax:DescribeParameterGroups",
        "resource_mappings": {}
      }
    ],
    "describe-parameters": [
      {
        "action": "dax:DescribeParameters",
        "resource_mappings": {}
      }
    ],
    "describe-subnet-groups": [
      {
        "action": "dax:DescribeSubnetGroups",
        "resource_mappings": {}
      }
    ],
    "increase-replication-factor": [
      {
        "action": "dax:IncreaseReplicationFactor",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterName}"
          }
        }
      }
    ],
    "list-tags": [
      {
        "action": "dax:ListTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "%%iftemplatematch%${ResourceName}%%"
        }
      }
    ],
    "reboot-node": [
      {
        "action": "dax:RebootNode",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterName}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "dax:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "%%iftemplatematch%${ResourceName}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "dax:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "%%iftemplatematch%${ResourceName}%%"
        }
      }
    ],
    "update-cluster": [
      {
        "action": "dax:UpdateCluster",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterName}"
          }
        }
      }
    ],
    "update-parameter-group": [
      {
        "action": "dax:UpdateParameterGroup",
        "resource_mappings": {}
      }
    ],
    "update-subnet-group": [
      {
        "action": "dax:UpdateSubnetGroup",
        "resource_mappings": {}
      }
    ]
  },
  "detective": {
    "accept-invitation": [
      {
        "action": "detective:AcceptInvitation",
        "resource_mappings": {}
      }
    ],
    "batch-get-graph-member-datasources": [
      {
        "action": "detective:BatchGetGraphMemberDatasources",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Graph": "${GraphArn}"
        }
      }
    ],
    "batch-get-membership-datasources": [
      {
        "action": "detective:BatchGetMembershipDatasources",
        "resource_mappings": {}
      }
    ],
    "create-graph": [
      {
        "action": "detective:CreateGraph",
        "resource_mappings": {}
      }
    ],
    "create-members": [
      {
        "action": "detective:CreateMembers",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Graph": "${GraphArn}"
        }
      }
    ],
    "delete-graph": [
      {
        "action": "detective:DeleteGraph",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Graph": "${GraphArn}"
        }
      }
    ],
    "delete-members": [
      {
        "action": "detective:DeleteMembers",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Graph": "${GraphArn}"
        }
      }
    ],
    "describe-organization-configuration": [
      {
        "action": "detective:DescribeOrganizationConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Graph": "${GraphArn}"
        }
      },
      {
        "action": "organizations:DescribeOrganization",
        "resource_mappings": {}
      }
    ],
    "disable-organization-admin-account": [
      {
        "action": "detective:DisableOrganizationAdminAccount",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "organizations:DescribeOrganization",
        "resource_mappings": {}
      }
    ],
    "disassociate-membership": [
      {
        "action": "detective:DisassociateMembership",
        "resource_mappings": {}
      }
    ],
    "enable-organization-admin-account": [
      {
        "action": "detective:EnableOrganizationAdminAccount",
        "resource_mappings": {}
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "organizations:DescribeOrganization",
        "resource_mappings": {}
      },
      {
        "action": "organizations:EnableAWSServiceAccess",
        "resource_mappings": {}
      },
      {
        "action": "organizations:RegisterDelegatedAdministrator",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "AccountId": {
            "template": "*"
          }
        }
      }
    ],
    "get-members": [
      {
        "action": "detective:GetMembers",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Graph": "${GraphArn}"
        }
      }
    ],
    "list-datasource-packages": [
      {
        "action": "detective:ListDatasourcePackages",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Graph": "${GraphArn}"
        }
      }
    ],
    "list-graphs": [
      {
        "action": "detective:ListGraphs",
        "resource_mappings": {}
      }
    ],
    "list-invitations": [
      {
        "action": "detective:ListInvitations",
        "resource_mappings": {}
      }
    ],
    "list-members": [
      {
        "action": "detective:ListMembers",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Graph": "${GraphArn}"
        }
      }
    ],
    "list-organization-admin-accounts": [
      {
        "action": "detective:ListOrganizationAdminAccounts",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "organizations:DescribeOrganization",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "detective:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Graph": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "reject-invitation": [
      {
        "action": "detective:RejectInvitation",
        "resource_mappings": {}
      }
    ],
    "start-monitoring-member": [
      {
        "action": "detective:StartMonitoringMember",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Graph": "${GraphArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "detective:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Graph": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "detective:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Graph": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-datasource-packages": [
      {
        "action": "detective:UpdateDatasourcePackages",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Graph": "${GraphArn}"
        }
      }
    ],
    "update-organization-configuration": [
      {
        "action": "detective:UpdateOrganizationConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Graph": "${GraphArn}"
        }
      },
      {
        "action": "organizations:DescribeOrganization",
        "resource_mappings": {}
      }
    ]
  },
  "devicefarm": {
    "create-device-pool": [
      {
        "action": "devicefarm:CreateDevicePool",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "project": "${projectArn}"
        }
      }
    ],
    "create-instance-profile": [
      {
        "action": "devicefarm:CreateInstanceProfile",
        "resource_mappings": {}
      }
    ],
    "create-network-profile": [
      {
        "action": "devicefarm:CreateNetworkProfile",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "project": "${projectArn}"
        }
      }
    ],
    "create-project": [
      {
        "action": "devicefarm:CreateProject",
        "resource_mappings": {}
      }
    ],
    "create-remote-access-session": [
      {
        "action": "devicefarm:CreateRemoteAccessSession",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "device": "${deviceArn}",
          "project": "${projectArn}"
        }
      }
    ],
    "create-test-grid-project": [
      {
        "action": "devicefarm:CreateTestGridProject",
        "resource_mappings": {}
      }
    ],
    "create-test-grid-url": [
      {
        "action": "devicefarm:CreateTestGridUrl",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "testgrid-project": "${projectArn}"
        }
      }
    ],
    "create-upload": [
      {
        "action": "devicefarm:CreateUpload",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "project": "${projectArn}"
        }
      }
    ],
    "create-vpce-configuration": [
      {
        "action": "devicefarm:CreateVPCEConfiguration",
        "resource_mappings": {}
      }
    ],
    "delete-device-pool": [
      {
        "action": "devicefarm:DeleteDevicePool",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "devicepool": "${arn}"
        }
      }
    ],
    "delete-instance-profile": [
      {
        "action": "devicefarm:DeleteInstanceProfile",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "instanceprofile": "${arn}"
        }
      }
    ],
    "delete-network-profile": [
      {
        "action": "devicefarm:DeleteNetworkProfile",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "networkprofile": "${arn}"
        }
      }
    ],
    "delete-project": [
      {
        "action": "devicefarm:DeleteProject",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "project": "${arn}"
        }
      }
    ],
    "delete-remote-access-session": [
      {
        "action": "devicefarm:DeleteRemoteAccessSession",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "session": "${arn}"
        }
      }
    ],
    "delete-run": [
      {
        "action": "devicefarm:DeleteRun",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "run": "${arn}"
        }
      }
    ],
    "delete-test-grid-project": [
      {
        "action": "devicefarm:DeleteTestGridProject",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "testgrid-project": "${projectArn}"
        }
      }
    ],
    "delete-upload": [
      {
        "action": "devicefarm:DeleteUpload",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "upload": "${arn}"
        }
      }
    ],
    "delete-vpce-configuration": [
      {
        "action": "devicefarm:DeleteVPCEConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "vpceconfiguration": "${arn}"
        }
      }
    ],
    "get-account-settings": [
      {
        "action": "devicefarm:GetAccountSettings",
        "resource_mappings": {}
      }
    ],
    "get-device": [
      {
        "action": "devicefarm:GetDevice",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "device": "${arn}"
        }
      }
    ],
    "get-device-instance": [
      {
        "action": "devicefarm:GetDeviceInstance",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "deviceinstance": "${arn}"
        }
      }
    ],
    "get-device-pool": [
      {
        "action": "devicefarm:GetDevicePool",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "devicepool": "${arn}"
        }
      }
    ],
    "get-device-pool-compatibility": [
      {
        "action": "devicefarm:GetDevicePoolCompatibility",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "devicepool": "${devicePoolArn}"
        }
      }
    ],
    "get-instance-profile": [
      {
        "action": "devicefarm:GetInstanceProfile",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "instanceprofile": "${arn}"
        }
      }
    ],
    "get-job": [
      {
        "action": "devicefarm:GetJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "job": "${arn}"
        }
      }
    ],
    "get-network-profile": [
      {
        "action": "devicefarm:GetNetworkProfile",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "networkprofile": "${arn}"
        }
      }
    ],
    "get-offering-status": [
      {
        "action": "devicefarm:GetOfferingStatus",
        "resource_mappings": {}
      }
    ],
    "get-project": [
      {
        "action": "devicefarm:GetProject",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "project": "${arn}"
        }
      }
    ],
    "get-remote-access-session": [
      {
        "action": "devicefarm:GetRemoteAccessSession",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "session": "${arn}"
        }
      }
    ],
    "get-run": [
      {
        "action": "devicefarm:GetRun",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "run": "${arn}"
        }
      }
    ],
    "get-suite": [
      {
        "action": "devicefarm:GetSuite",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "suite": "${arn}"
        }
      }
    ],
    "get-test": [
      {
        "action": "devicefarm:GetTest",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "test": "${arn}"
        }
      }
    ],
    "get-test-grid-project": [
      {
        "action": "devicefarm:GetTestGridProject",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "testgrid-project": "${projectArn}"
        }
      }
    ],
    "get-test-grid-session": [
      {
        "action": "devicefarm:GetTestGridSession",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "testgrid-project": "${projectArn}",
          "testgrid-session": "${sessionArn}"
        }
      }
    ],
    "get-upload": [
      {
        "action": "devicefarm:GetUpload",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "upload": "${arn}"
        }
      }
    ],
    "get-vpce-configuration": [
      {
        "action": "devicefarm:GetVPCEConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "vpceconfiguration": "${arn}"
        }
      }
    ],
    "install-to-remote-access-session": [
      {
        "action": "devicefarm:InstallToRemoteAccessSession",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "session": "${remoteAccessSessionArn}"
        }
      }
    ],
    "list-artifacts": [
      {
        "action": "devicefarm:ListArtifacts",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "job": "%%iftemplatematch%${arn}%%",
          "run": "%%iftemplatematch%${arn}%%",
          "suite": "%%iftemplatematch%${arn}%%",
          "test": "%%iftemplatematch%${arn}%%"
        }
      }
    ],
    "list-device-instances": [
      {
        "action": "devicefarm:ListDeviceInstances",
        "resource_mappings": {}
      }
    ],
    "list-device-pools": [
      {
        "action": "devicefarm:ListDevicePools",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "project": "${arn}"
        }
      }
    ],
    "list-devices": [
      {
        "action": "devicefarm:ListDevices",
        "resource_mappings": {}
      }
    ],
    "list-instance-profiles": [
      {
        "action": "devicefarm:ListInstanceProfiles",
        "resource_mappings": {}
      }
    ],
    "list-jobs": [
      {
        "action": "devicefarm:ListJobs",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "run": "${arn}"
        }
      }
    ],
    "list-network-profiles": [
      {
        "action": "devicefarm:ListNetworkProfiles",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "project": "${arn}"
        }
      }
    ],
    "list-offering-promotions": [
      {
        "action": "devicefarm:ListOfferingPromotions",
        "resource_mappings": {}
      }
    ],
    "list-offering-transactions": [
      {
        "action": "devicefarm:ListOfferingTransactions",
        "resource_mappings": {}
      }
    ],
    "list-offerings": [
      {
        "action": "devicefarm:ListOfferings",
        "resource_mappings": {}
      }
    ],
    "list-projects": [
      {
        "action": "devicefarm:ListProjects",
        "resource_mappings": {}
      }
    ],
    "list-remote-access-sessions": [
      {
        "action": "devicefarm:ListRemoteAccessSessions",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "project": "${arn}"
        }
      }
    ],
    "list-runs": [
      {
        "action": "devicefarm:ListRuns",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "project": "${arn}"
        }
      }
    ],
    "list-samples": [
      {
        "action": "devicefarm:ListSamples",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "job": "${arn}"
        }
      }
    ],
    "list-suites": [
      {
        "action": "devicefarm:ListSuites",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "job": "${arn}"
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "devicefarm:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "device": "%%iftemplatematch%${ResourceARN}%%",
          "deviceinstance": "%%iftemplatematch%${ResourceARN}%%",
          "devicepool": "%%iftemplatematch%${ResourceARN}%%",
          "instanceprofile": "%%iftemplatematch%${ResourceARN}%%",
          "networkprofile": "%%iftemplatematch%${ResourceARN}%%",
          "project": "%%iftemplatematch%${ResourceARN}%%",
          "run": "%%iftemplatematch%${ResourceARN}%%",
          "session": "%%iftemplatematch%${ResourceARN}%%",
          "testgrid-project": "%%iftemplatematch%${ResourceARN}%%",
          "testgrid-session": "%%iftemplatematch%${ResourceARN}%%",
          "vpceconfiguration": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "list-test-grid-projects": [
      {
        "action": "devicefarm:ListTestGridProjects",
        "resource_mappings": {}
      }
    ],
    "list-test-grid-session-actions": [
      {
        "action": "devicefarm:ListTestGridSessionActions",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "testgrid-session": "${sessionArn}"
        }
      }
    ],
    "list-test-grid-session-artifacts": [
      {
        "action": "devicefarm:ListTestGridSessionArtifacts",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "testgrid-session": "${sessionArn}"
        }
      }
    ],
    "list-test-grid-sessions": [
      {
        "action": "devicefarm:ListTestGridSessions",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "testgrid-project": "${projectArn}"
        }
      }
    ],
    "list-tests": [
      {
        "action": "devicefarm:ListTests",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "suite": "${arn}"
        }
      }
    ],
    "list-unique-problems": [
      {
        "action": "devicefarm:ListUniqueProblems",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "run": "${arn}"
        }
      }
    ],
    "list-uploads": [
      {
        "action": "devicefarm:ListUploads",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "project": "${arn}"
        }
      }
    ],
    "list-vpce-configurations": [
      {
        "action": "devicefarm:ListVPCEConfigurations",
        "resource_mappings": {}
      }
    ],
    "purchase-offering": [
      {
        "action": "devicefarm:PurchaseOffering",
        "resource_mappings": {}
      }
    ],
    "renew-offering": [
      {
        "action": "devicefarm:RenewOffering",
        "resource_mappings": {}
      }
    ],
    "schedule-run": [
      {
        "action": "devicefarm:ScheduleRun",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "project": "${projectArn}",
          "devicepool": "${devicePoolArn}"
        }
      }
    ],
    "stop-job": [
      {
        "action": "devicefarm:StopJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "job": "${arn}"
        }
      }
    ],
    "stop-remote-access-session": [
      {
        "action": "devicefarm:StopRemoteAccessSession",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "session": "${arn}"
        }
      }
    ],
    "stop-run": [
      {
        "action": "devicefarm:StopRun",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "run": "${arn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "devicefarm:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "device": "%%iftemplatematch%${ResourceARN}%%",
          "deviceinstance": "%%iftemplatematch%${ResourceARN}%%",
          "devicepool": "%%iftemplatematch%${ResourceARN}%%",
          "instanceprofile": "%%iftemplatematch%${ResourceARN}%%",
          "networkprofile": "%%iftemplatematch%${ResourceARN}%%",
          "project": "%%iftemplatematch%${ResourceARN}%%",
          "run": "%%iftemplatematch%${ResourceARN}%%",
          "session": "%%iftemplatematch%${ResourceARN}%%",
          "testgrid-project": "%%iftemplatematch%${ResourceARN}%%",
          "testgrid-session": "%%iftemplatematch%${ResourceARN}%%",
          "vpceconfiguration": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "devicefarm:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "device": "%%iftemplatematch%${ResourceARN}%%",
          "deviceinstance": "%%iftemplatematch%${ResourceARN}%%",
          "devicepool": "%%iftemplatematch%${ResourceARN}%%",
          "instanceprofile": "%%iftemplatematch%${ResourceARN}%%",
          "networkprofile": "%%iftemplatematch%${ResourceARN}%%",
          "project": "%%iftemplatematch%${ResourceARN}%%",
          "run": "%%iftemplatematch%${ResourceARN}%%",
          "session": "%%iftemplatematch%${ResourceARN}%%",
          "testgrid-project": "%%iftemplatematch%${ResourceARN}%%",
          "testgrid-session": "%%iftemplatematch%${ResourceARN}%%",
          "vpceconfiguration": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "update-device-instance": [
      {
        "action": "devicefarm:UpdateDeviceInstance",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "deviceinstance": "${arn}",
          "instanceprofile": "${profileArn}"
        }
      }
    ],
    "update-device-pool": [
      {
        "action": "devicefarm:UpdateDevicePool",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "devicepool": "${arn}"
        }
      }
    ],
    "update-instance-profile": [
      {
        "action": "devicefarm:UpdateInstanceProfile",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "instanceprofile": "${arn}"
        }
      }
    ],
    "update-network-profile": [
      {
        "action": "devicefarm:UpdateNetworkProfile",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "networkprofile": "${arn}"
        }
      }
    ],
    "update-project": [
      {
        "action": "devicefarm:UpdateProject",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "project": "${arn}"
        }
      }
    ],
    "update-test-grid-project": [
      {
        "action": "devicefarm:UpdateTestGridProject",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "testgrid-project": "${projectArn}"
        }
      }
    ],
    "update-upload": [
      {
        "action": "devicefarm:UpdateUpload",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "upload": "${arn}"
        }
      }
    ],
    "update-vpce-configuration": [
      {
        "action": "devicefarm:UpdateVPCEConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "vpceconfiguration": "${arn}"
        }
      }
    ]
  },
  "devops-guru": {
    "add-notification-channel": [
      {
        "action": "devops-guru:AddNotificationChannel",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "topic": "${Config.Sns.TopicArn}"
        }
      },
      {
        "action": "sns:GetTopicAttributes",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "topic": "${Config.Sns.TopicArn}"
        }
      }
    ],
    "delete-insight": [
      {
        "action": "devops-guru:DeleteInsight",
        "resource_mappings": {}
      }
    ],
    "describe-account-health": [
      {
        "action": "devops-guru:DescribeAccountHealth",
        "resource_mappings": {}
      }
    ],
    "describe-account-overview": [
      {
        "action": "devops-guru:DescribeAccountOverview",
        "resource_mappings": {}
      }
    ],
    "describe-anomaly": [
      {
        "action": "devops-guru:DescribeAnomaly",
        "resource_mappings": {}
      }
    ],
    "describe-event-sources-config": [
      {
        "action": "devops-guru:DescribeEventSourcesConfig",
        "resource_mappings": {}
      }
    ],
    "describe-feedback": [
      {
        "action": "devops-guru:DescribeFeedback",
        "resource_mappings": {}
      }
    ],
    "describe-insight": [
      {
        "action": "devops-guru:DescribeInsight",
        "resource_mappings": {}
      }
    ],
    "describe-organization-health": [
      {
        "action": "devops-guru:DescribeOrganizationHealth",
        "resource_mappings": {}
      }
    ],
    "describe-organization-overview": [
      {
        "action": "devops-guru:DescribeOrganizationOverview",
        "resource_mappings": {}
      }
    ],
    "describe-organization-resource-collection-health": [
      {
        "action": "devops-guru:DescribeOrganizationResourceCollectionHealth",
        "resource_mappings": {}
      }
    ],
    "describe-resource-collection-health": [
      {
        "action": "devops-guru:DescribeResourceCollectionHealth",
        "resource_mappings": {}
      }
    ],
    "describe-service-integration": [
      {
        "action": "devops-guru:DescribeServiceIntegration",
        "resource_mappings": {}
      }
    ],
    "get-cost-estimation": [
      {
        "action": "devops-guru:GetCostEstimation",
        "resource_mappings": {}
      }
    ],
    "get-resource-collection": [
      {
        "action": "devops-guru:GetResourceCollection",
        "resource_mappings": {}
      }
    ],
    "list-anomalies-for-insight": [
      {
        "action": "devops-guru:ListAnomaliesForInsight",
        "resource_mappings": {}
      }
    ],
    "list-anomalous-log-groups": [
      {
        "action": "devops-guru:ListAnomalousLogGroups",
        "resource_mappings": {}
      }
    ],
    "list-events": [
      {
        "action": "devops-guru:ListEvents",
        "resource_mappings": {}
      }
    ],
    "list-insights": [
      {
        "action": "devops-guru:ListInsights",
        "resource_mappings": {}
      }
    ],
    "list-monitored-resources": [
      {
        "action": "devops-guru:ListMonitoredResources",
        "resource_mappings": {}
      }
    ],
    "list-notification-channels": [
      {
        "action": "devops-guru:ListNotificationChannels",
        "resource_mappings": {}
      }
    ],
    "list-organization-insights": [
      {
        "action": "devops-guru:ListOrganizationInsights",
        "resource_mappings": {}
      }
    ],
    "list-recommendations": [
      {
        "action": "devops-guru:ListRecommendations",
        "resource_mappings": {}
      }
    ],
    "put-feedback": [
      {
        "action": "devops-guru:PutFeedback",
        "resource_mappings": {}
      }
    ],
    "remove-notification-channel": [
      {
        "action": "devops-guru:RemoveNotificationChannel",
        "resource_mappings": {
          "TopicName": {
            "template": "*"
          }
        }
      },
      {
        "action": "sns:GetTopicAttributes",
        "resource_mappings": {
          "TopicName": {
            "template": "*"
          }
        }
      }
    ],
    "search-insights": [
      {
        "action": "devops-guru:SearchInsights",
        "resource_mappings": {}
      }
    ],
    "search-organization-insights": [
      {
        "action": "devops-guru:SearchOrganizationInsights",
        "resource_mappings": {}
      }
    ],
    "start-cost-estimation": [
      {
        "action": "devops-guru:StartCostEstimation",
        "resource_mappings": {}
      }
    ],
    "update-event-sources-config": [
      {
        "action": "devops-guru:UpdateEventSourcesConfig",
        "resource_mappings": {}
      }
    ],
    "update-resource-collection": [
      {
        "action": "devops-guru:UpdateResourceCollection",
        "resource_mappings": {}
      }
    ],
    "update-service-integration": [
      {
        "action": "devops-guru:UpdateServiceIntegration",
        "resource_mappings": {}
      }
    ]
  },
  "directconnect": {
    "accept-direct-connect-gateway-association-proposal": [
      {
        "action": "directconnect:AcceptDirectConnectGatewayAssociationProposal",
        "resource_mappings": {
          "DirectConnectGatewayId": {
            "template": "${directConnectGatewayId}"
          }
        }
      }
    ],
    "allocate-connection-on-interconnect": [
      {
        "action": "directconnect:AllocateConnectionOnInterconnect",
        "resource_mappings": {
          "ConnectionId": {
            "template": "*"
          }
        }
      }
    ],
    "allocate-hosted-connection": [
      {
        "action": "directconnect:AllocateHostedConnection",
        "resource_mappings": {
          "ConnectionId": {
            "template": "${connectionId}"
          },
          "LagId": {
            "template": "*"
          }
        }
      }
    ],
    "allocate-private-virtual-interface": [
      {
        "action": "directconnect:AllocatePrivateVirtualInterface",
        "resource_mappings": {
          "ConnectionId": {
            "template": "${connectionId}"
          },
          "LagId": {
            "template": "*"
          }
        }
      }
    ],
    "allocate-public-virtual-interface": [
      {
        "action": "directconnect:AllocatePublicVirtualInterface",
        "resource_mappings": {
          "ConnectionId": {
            "template": "${connectionId}"
          },
          "LagId": {
            "template": "*"
          }
        }
      }
    ],
    "allocate-transit-virtual-interface": [
      {
        "action": "directconnect:AllocateTransitVirtualInterface",
        "resource_mappings": {
          "ConnectionId": {
            "template": "${connectionId}"
          },
          "LagId": {
            "template": "*"
          }
        }
      }
    ],
    "associate-connection-with-lag": [
      {
        "action": "directconnect:AssociateConnectionWithLag",
        "resource_mappings": {
          "ConnectionId": {
            "template": "${connectionId}"
          },
          "LagId": {
            "template": "${lagId}"
          }
        }
      }
    ],
    "associate-hosted-connection": [
      {
        "action": "directconnect:AssociateHostedConnection",
        "resource_mappings": {
          "ConnectionId": {
            "template": "${parentConnectionId}"
          },
          "LagId": {
            "template": "*"
          }
        }
      }
    ],
    "associate-mac-sec-key": [
      {
        "action": "directconnect:AssociateMacSecKey",
        "resource_mappings": {
          "ConnectionId": {
            "template": "${connectionId}"
          },
          "LagId": {
            "template": "*"
          }
        }
      }
    ],
    "associate-virtual-interface": [
      {
        "action": "directconnect:AssociateVirtualInterface",
        "resource_mappings": {
          "VirtualInterfaceId": {
            "template": "${virtualInterfaceId}"
          },
          "ConnectionId": {
            "template": "${connectionId}"
          },
          "LagId": {
            "template": "*"
          }
        }
      }
    ],
    "confirm-connection": [
      {
        "action": "directconnect:ConfirmConnection",
        "resource_mappings": {
          "ConnectionId": {
            "template": "${connectionId}"
          }
        }
      }
    ],
    "confirm-customer-agreement": [
      {
        "action": "directconnect:ConfirmCustomerAgreement",
        "resource_mappings": {}
      }
    ],
    "confirm-private-virtual-interface": [
      {
        "action": "directconnect:ConfirmPrivateVirtualInterface",
        "resource_mappings": {
          "VirtualInterfaceId": {
            "template": "${virtualInterfaceId}"
          }
        }
      }
    ],
    "confirm-public-virtual-interface": [
      {
        "action": "directconnect:ConfirmPublicVirtualInterface",
        "resource_mappings": {
          "VirtualInterfaceId": {
            "template": "${virtualInterfaceId}"
          }
        }
      }
    ],
    "confirm-transit-virtual-interface": [
      {
        "action": "directconnect:ConfirmTransitVirtualInterface",
        "resource_mappings": {
          "VirtualInterfaceId": {
            "template": "${virtualInterfaceId}"
          }
        }
      }
    ],
    "create-bgp-peer": [
      {
        "action": "directconnect:CreateBGPPeer",
        "resource_mappings": {
          "VirtualInterfaceId": {
            "template": "${virtualInterfaceId}"
          }
        }
      }
    ],
    "create-connection": [
      {
        "action": "directconnect:CreateConnection",
        "resource_mappings": {
          "LagId": {
            "template": "${lagId}"
          }
        }
      }
    ],
    "create-direct-connect-gateway": [
      {
        "action": "directconnect:CreateDirectConnectGateway",
        "resource_mappings": {}
      }
    ],
    "create-direct-connect-gateway-association": [
      {
        "action": "directconnect:CreateDirectConnectGatewayAssociation",
        "resource_mappings": {
          "DirectConnectGatewayId": {
            "template": "${directConnectGatewayId}"
          }
        }
      }
    ],
    "create-direct-connect-gateway-association-proposal": [
      {
        "action": "directconnect:CreateDirectConnectGatewayAssociationProposal",
        "resource_mappings": {
          "DirectConnectGatewayId": {
            "template": "${directConnectGatewayId}"
          }
        }
      }
    ],
    "create-interconnect": [
      {
        "action": "directconnect:CreateInterconnect",
        "resource_mappings": {
          "LagId": {
            "template": "${lagId}"
          }
        }
      }
    ],
    "create-lag": [
      {
        "action": "directconnect:CreateLag",
        "resource_mappings": {
          "ConnectionId": {
            "template": "${connectionId}"
          }
        }
      }
    ],
    "create-private-virtual-interface": [
      {
        "action": "directconnect:CreatePrivateVirtualInterface",
        "resource_mappings": {
          "ConnectionId": {
            "template": "${connectionId}"
          },
          "LagId": {
            "template": "*"
          }
        }
      }
    ],
    "create-public-virtual-interface": [
      {
        "action": "directconnect:CreatePublicVirtualInterface",
        "resource_mappings": {
          "ConnectionId": {
            "template": "${connectionId}"
          },
          "LagId": {
            "template": "*"
          }
        }
      }
    ],
    "create-transit-virtual-interface": [
      {
        "action": "directconnect:CreateTransitVirtualInterface",
        "resource_mappings": {
          "ConnectionId": {
            "template": "${connectionId}"
          },
          "LagId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-bgp-peer": [
      {
        "action": "directconnect:DeleteBGPPeer",
        "resource_mappings": {
          "VirtualInterfaceId": {
            "template": "${virtualInterfaceId}"
          }
        }
      }
    ],
    "delete-connection": [
      {
        "action": "directconnect:DeleteConnection",
        "resource_mappings": {
          "ConnectionId": {
            "template": "${connectionId}"
          }
        }
      }
    ],
    "delete-direct-connect-gateway": [
      {
        "action": "directconnect:DeleteDirectConnectGateway",
        "resource_mappings": {
          "DirectConnectGatewayId": {
            "template": "${directConnectGatewayId}"
          }
        }
      }
    ],
    "delete-direct-connect-gateway-association": [
      {
        "action": "directconnect:DeleteDirectConnectGatewayAssociation",
        "resource_mappings": {
          "DirectConnectGatewayId": {
            "template": "${directConnectGatewayId}"
          }
        }
      }
    ],
    "delete-direct-connect-gateway-association-proposal": [
      {
        "action": "directconnect:DeleteDirectConnectGatewayAssociationProposal",
        "resource_mappings": {}
      }
    ],
    "delete-interconnect": [
      {
        "action": "directconnect:DeleteInterconnect",
        "resource_mappings": {
          "ConnectionId": {
            "template": "${interconnectId}"
          }
        }
      }
    ],
    "delete-lag": [
      {
        "action": "directconnect:DeleteLag",
        "resource_mappings": {
          "LagId": {
            "template": "${lagId}"
          }
        }
      }
    ],
    "delete-virtual-interface": [
      {
        "action": "directconnect:DeleteVirtualInterface",
        "resource_mappings": {
          "VirtualInterfaceId": {
            "template": "${virtualInterfaceId}"
          }
        }
      }
    ],
    "describe-connection-loa": [
      {
        "action": "directconnect:DescribeConnectionLoa",
        "resource_mappings": {
          "ConnectionId": {
            "template": "${connectionId}"
          }
        }
      }
    ],
    "describe-connections": [
      {
        "action": "directconnect:DescribeConnections",
        "resource_mappings": {
          "ConnectionId": {
            "template": "${connectionId}"
          }
        }
      }
    ],
    "describe-connections-on-interconnect": [
      {
        "action": "directconnect:DescribeConnectionsOnInterconnect",
        "resource_mappings": {
          "ConnectionId": {
            "template": "${interconnectId}"
          }
        }
      }
    ],
    "describe-customer-metadata": [
      {
        "action": "directconnect:DescribeCustomerMetadata",
        "resource_mappings": {}
      }
    ],
    "describe-direct-connect-gateway-association-proposals": [
      {
        "action": "directconnect:DescribeDirectConnectGatewayAssociationProposals",
        "resource_mappings": {
          "DirectConnectGatewayId": {
            "template": "${directConnectGatewayId}"
          }
        }
      }
    ],
    "describe-direct-connect-gateway-associations": [
      {
        "action": "directconnect:DescribeDirectConnectGatewayAssociations",
        "resource_mappings": {
          "DirectConnectGatewayId": {
            "template": "${directConnectGatewayId}"
          }
        }
      }
    ],
    "describe-direct-connect-gateway-attachments": [
      {
        "action": "directconnect:DescribeDirectConnectGatewayAttachments",
        "resource_mappings": {
          "DirectConnectGatewayId": {
            "template": "${directConnectGatewayId}"
          }
        }
      }
    ],
    "describe-direct-connect-gateways": [
      {
        "action": "directconnect:DescribeDirectConnectGateways",
        "resource_mappings": {
          "DirectConnectGatewayId": {
            "template": "${directConnectGatewayId}"
          }
        }
      }
    ],
    "describe-hosted-connections": [
      {
        "action": "directconnect:DescribeHostedConnections",
        "resource_mappings": {
          "ConnectionId": {
            "template": "${connectionId}"
          },
          "LagId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-interconnect-loa": [
      {
        "action": "directconnect:DescribeInterconnectLoa",
        "resource_mappings": {
          "ConnectionId": {
            "template": "${interconnectId}"
          }
        }
      }
    ],
    "describe-interconnects": [
      {
        "action": "directconnect:DescribeInterconnects",
        "resource_mappings": {
          "ConnectionId": {
            "template": "${interconnectId}"
          }
        }
      }
    ],
    "describe-lags": [
      {
        "action": "directconnect:DescribeLags",
        "resource_mappings": {
          "LagId": {
            "template": "${lagId}"
          }
        }
      }
    ],
    "describe-loa": [
      {
        "action": "directconnect:DescribeLoa",
        "resource_mappings": {
          "ConnectionId": {
            "template": "${connectionId}"
          },
          "LagId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-locations": [
      {
        "action": "directconnect:DescribeLocations",
        "resource_mappings": {}
      }
    ],
    "describe-router-configuration": [
      {
        "action": "directconnect:DescribeRouterConfiguration",
        "resource_mappings": {
          "VirtualInterfaceId": {
            "template": "${virtualInterfaceId}"
          }
        }
      }
    ],
    "describe-tags": [
      {
        "action": "directconnect:DescribeTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dxcon": "%%iftemplatematch%${ResourceArns[]}%%",
          "dxlag": "%%iftemplatematch%${ResourceArns[]}%%",
          "dxvif": "%%iftemplatematch%${ResourceArns[]}%%"
        }
      }
    ],
    "describe-virtual-gateways": [
      {
        "action": "directconnect:DescribeVirtualGateways",
        "resource_mappings": {}
      }
    ],
    "describe-virtual-interfaces": [
      {
        "action": "directconnect:DescribeVirtualInterfaces",
        "resource_mappings": {
          "ConnectionId": {
            "template": "${connectionId}"
          },
          "LagId": {
            "template": "*"
          },
          "VirtualInterfaceId": {
            "template": "${virtualInterfaceId}"
          }
        }
      }
    ],
    "disassociate-connection-from-lag": [
      {
        "action": "directconnect:DisassociateConnectionFromLag",
        "resource_mappings": {
          "ConnectionId": {
            "template": "${connectionId}"
          },
          "LagId": {
            "template": "${lagId}"
          }
        }
      }
    ],
    "disassociate-mac-sec-key": [
      {
        "action": "directconnect:DisassociateMacSecKey",
        "resource_mappings": {
          "ConnectionId": {
            "template": "${connectionId}"
          },
          "LagId": {
            "template": "*"
          }
        }
      }
    ],
    "list-virtual-interface-test-history": [
      {
        "action": "directconnect:ListVirtualInterfaceTestHistory",
        "resource_mappings": {
          "VirtualInterfaceId": {
            "template": "${virtualInterfaceId}"
          }
        }
      }
    ],
    "start-bgp-failover-test": [
      {
        "action": "directconnect:StartBgpFailoverTest",
        "resource_mappings": {
          "VirtualInterfaceId": {
            "template": "${virtualInterfaceId}"
          }
        }
      }
    ],
    "stop-bgp-failover-test": [
      {
        "action": "directconnect:StopBgpFailoverTest",
        "resource_mappings": {
          "VirtualInterfaceId": {
            "template": "${virtualInterfaceId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "directconnect:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dxcon": "%%iftemplatematch%${resourceArn}%%",
          "dxlag": "%%iftemplatematch%${resourceArn}%%",
          "dxvif": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "directconnect:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dxcon": "%%iftemplatematch%${resourceArn}%%",
          "dxlag": "%%iftemplatematch%${resourceArn}%%",
          "dxvif": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-connection": [
      {
        "action": "directconnect:UpdateConnection",
        "resource_mappings": {
          "ConnectionId": {
            "template": "${connectionId}"
          }
        }
      }
    ],
    "update-direct-connect-gateway": [
      {
        "action": "directconnect:UpdateDirectConnectGateway",
        "resource_mappings": {
          "DirectConnectGatewayId": {
            "template": "${directConnectGatewayId}"
          }
        }
      }
    ],
    "update-direct-connect-gateway-association": [
      {
        "action": "directconnect:UpdateDirectConnectGatewayAssociation",
        "resource_mappings": {}
      }
    ],
    "update-lag": [
      {
        "action": "directconnect:UpdateLag",
        "resource_mappings": {
          "LagId": {
            "template": "${lagId}"
          }
        }
      }
    ],
    "update-virtual-interface-attributes": [
      {
        "action": "directconnect:UpdateVirtualInterfaceAttributes",
        "resource_mappings": {
          "VirtualInterfaceId": {
            "template": "${virtualInterfaceId}"
          }
        }
      }
    ]
  },
  "discovery": {
    "associate-configuration-items-to-application": [
      {
        "action": "discovery:AssociateConfigurationItemsToApplication",
        "resource_mappings": {}
      }
    ],
    "batch-delete-agents": [
      {
        "note": "NotFound",
        "action": "Application Discovery Service:BatchDeleteAgents",
        "resource_mappings": {}
      }
    ],
    "batch-delete-import-data": [
      {
        "action": "discovery:BatchDeleteImportData",
        "resource_mappings": {}
      }
    ],
    "create-application": [
      {
        "action": "discovery:CreateApplication",
        "resource_mappings": {}
      }
    ],
    "create-tags": [
      {
        "action": "discovery:CreateTags",
        "resource_mappings": {}
      }
    ],
    "delete-applications": [
      {
        "action": "discovery:DeleteApplications",
        "resource_mappings": {}
      }
    ],
    "delete-tags": [
      {
        "action": "discovery:DeleteTags",
        "resource_mappings": {}
      }
    ],
    "describe-agents": [
      {
        "action": "discovery:DescribeAgents",
        "resource_mappings": {}
      }
    ],
    "describe-batch-delete-configuration-task": [
      {
        "note": "NotFound",
        "action": "Application Discovery Service:DescribeBatchDeleteConfigurationTask",
        "resource_mappings": {}
      }
    ],
    "describe-configurations": [
      {
        "action": "discovery:DescribeConfigurations",
        "resource_mappings": {}
      }
    ],
    "describe-continuous-exports": [
      {
        "action": "discovery:DescribeContinuousExports",
        "resource_mappings": {}
      }
    ],
    "describe-export-configurations": [
      {
        "action": "discovery:DescribeExportConfigurations",
        "resource_mappings": {}
      }
    ],
    "describe-export-tasks": [
      {
        "action": "discovery:DescribeExportTasks",
        "resource_mappings": {}
      }
    ],
    "describe-import-tasks": [
      {
        "action": "discovery:DescribeImportTasks",
        "resource_mappings": {}
      }
    ],
    "describe-tags": [
      {
        "action": "discovery:DescribeTags",
        "resource_mappings": {}
      }
    ],
    "disassociate-configuration-items-from-application": [
      {
        "action": "discovery:DisassociateConfigurationItemsFromApplication",
        "resource_mappings": {}
      }
    ],
    "export-configurations": [
      {
        "action": "discovery:ExportConfigurations",
        "resource_mappings": {}
      }
    ],
    "get-discovery-summary": [
      {
        "action": "discovery:GetDiscoverySummary",
        "resource_mappings": {}
      }
    ],
    "list-configurations": [
      {
        "action": "discovery:ListConfigurations",
        "resource_mappings": {}
      }
    ],
    "list-server-neighbors": [
      {
        "action": "discovery:ListServerNeighbors",
        "resource_mappings": {}
      }
    ],
    "start-batch-delete-configuration-task": [
      {
        "note": "NotFound",
        "action": "Application Discovery Service:StartBatchDeleteConfigurationTask",
        "resource_mappings": {}
      }
    ],
    "start-continuous-export": [
      {
        "action": "discovery:StartContinuousExport",
        "resource_mappings": {}
      }
    ],
    "start-data-collection-by-agent-ids": [
      {
        "action": "discovery:StartDataCollectionByAgentIds",
        "resource_mappings": {}
      }
    ],
    "start-export-task": [
      {
        "action": "discovery:StartExportTask",
        "resource_mappings": {}
      }
    ],
    "start-import-task": [
      {
        "action": "discovery:StartImportTask",
        "resource_mappings": {}
      }
    ],
    "stop-continuous-export": [
      {
        "action": "discovery:StopContinuousExport",
        "resource_mappings": {}
      }
    ],
    "stop-data-collection-by-agent-ids": [
      {
        "action": "discovery:StopDataCollectionByAgentIds",
        "resource_mappings": {}
      }
    ],
    "update-application": [
      {
        "action": "discovery:UpdateApplication",
        "resource_mappings": {}
      }
    ]
  },
  "dlm": {
    "create-lifecycle-policy": [
      {
        "action": "dlm:CreateLifecyclePolicy",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${ExecutionRoleArn}"
        }
      }
    ],
    "delete-lifecycle-policy": [
      {
        "action": "dlm:DeleteLifecyclePolicy",
        "resource_mappings": {
          "ResourceName": {
            "template": "${PolicyId}"
          }
        }
      }
    ],
    "get-lifecycle-policies": [
      {
        "action": "dlm:GetLifecyclePolicies",
        "resource_mappings": {}
      }
    ],
    "get-lifecycle-policy": [
      {
        "action": "dlm:GetLifecyclePolicy",
        "resource_mappings": {
          "ResourceName": {
            "template": "${PolicyId}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "dlm:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "policy": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "dlm:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "policy": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "dlm:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "policy": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-lifecycle-policy": [
      {
        "action": "dlm:UpdateLifecyclePolicy",
        "resource_mappings": {
          "ResourceName": {
            "template": "${PolicyId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${ExecutionRoleArn}"
        }
      }
    ]
  },
  "dms": {
    "add-tags-to-resource": [
      {
        "action": "dms:AddTagsToResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Certificate": "%%iftemplatematch%${ResourceArn}%%",
          "Endpoint": "%%iftemplatematch%${ResourceArn}%%",
          "EventSubscription": "%%iftemplatematch%${ResourceArn}%%",
          "ReplicationInstance": "%%iftemplatematch%${ResourceArn}%%",
          "ReplicationSubnetGroup": "%%iftemplatematch%${ResourceArn}%%",
          "ReplicationTask": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "apply-pending-maintenance-action": [
      {
        "action": "dms:ApplyPendingMaintenanceAction",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ReplicationInstance": "${ReplicationInstanceArn}"
        }
      }
    ],
    "batch-start-recommendations": [
      {
        "action": "dms:BatchStartRecommendations",
        "resource_mappings": {}
      }
    ],
    "cancel-replication-task-assessment-run": [
      {
        "action": "dms:CancelReplicationTaskAssessmentRun",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ReplicationTaskAssessmentRun": "${ReplicationTaskAssessmentRunArn}"
        }
      }
    ],
    "create-data-provider": [
      {
        "action": "dms:CreateDataProvider",
        "resource_mappings": {}
      }
    ],
    "create-endpoint": [
      {
        "action": "dms:CreateEndpoint",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${ServiceAccessRoleArn}%${DynamoDbSettings.ServiceAccessRoleArn}%${S3Settings.ServiceAccessRoleArn}%${DmsTransferSettings.ServiceAccessRoleArn}%${KinesisSettings.ServiceAccessRoleArn}%${ElasticsearchSettings.ServiceAccessRoleArn}%${NeptuneSettings.ServiceAccessRoleArn}%${NeptuneSettings.IamAuthEnabled}%${RedshiftSettings.ServiceAccessRoleArn}%%"
        }
      }
    ],
    "create-event-subscription": [
      {
        "action": "dms:CreateEventSubscription",
        "resource_mappings": {}
      }
    ],
    "create-fleet-advisor-collector": [
      {
        "action": "dms:CreateFleetAdvisorCollector",
        "resource_mappings": {}
      }
    ],
    "create-instance-profile": [
      {
        "action": "dms:CreateInstanceProfile",
        "resource_mappings": {}
      }
    ],
    "create-migration-project": [
      {
        "action": "dms:CreateMigrationProject",
        "resource_mappings": {}
      }
    ],
    "create-replication-config": [
      {
        "action": "dms:CreateReplicationConfig",
        "resource_mappings": {}
      }
    ],
    "create-replication-instance": [
      {
        "action": "dms:CreateReplicationInstance",
        "resource_mappings": {}
      }
    ],
    "create-replication-subnet-group": [
      {
        "action": "dms:CreateReplicationSubnetGroup",
        "resource_mappings": {}
      }
    ],
    "create-replication-task": [
      {
        "action": "dms:CreateReplicationTask",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Endpoint": "%%many%${SourceEndpointArn}%${TargetEndpointArn}%%",
          "ReplicationInstance": "${ReplicationInstanceArn}"
        }
      }
    ],
    "delete-certificate": [
      {
        "action": "dms:DeleteCertificate",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Certificate": "${CertificateArn}"
        }
      }
    ],
    "delete-connection": [
      {
        "action": "dms:DeleteConnection",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Endpoint": "${EndpointArn}",
          "ReplicationInstance": "${ReplicationInstanceArn}"
        }
      }
    ],
    "delete-data-provider": [
      {
        "action": "dms:DeleteDataProvider",
        "resource_mappings": {}
      }
    ],
    "delete-endpoint": [
      {
        "action": "dms:DeleteEndpoint",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Endpoint": "${EndpointArn}"
        }
      }
    ],
    "delete-event-subscription": [
      {
        "action": "dms:DeleteEventSubscription",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "EventSubscription": "arn:${Partition}:dms:${Region}:${Account}:es:*"
        }
      }
    ],
    "delete-fleet-advisor-collector": [
      {
        "action": "dms:DeleteFleetAdvisorCollector",
        "resource_mappings": {}
      }
    ],
    "delete-fleet-advisor-databases": [
      {
        "action": "dms:DeleteFleetAdvisorDatabases",
        "resource_mappings": {}
      }
    ],
    "delete-instance-profile": [
      {
        "action": "dms:DeleteInstanceProfile",
        "resource_mappings": {}
      }
    ],
    "delete-migration-project": [
      {
        "action": "dms:DeleteMigrationProject",
        "resource_mappings": {}
      }
    ],
    "delete-replication-config": [
      {
        "action": "dms:DeleteReplicationConfig",
        "resource_mappings": {}
      }
    ],
    "delete-replication-instance": [
      {
        "action": "dms:DeleteReplicationInstance",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ReplicationInstance": "${ReplicationInstanceArn}"
        }
      }
    ],
    "delete-replication-subnet-group": [
      {
        "action": "dms:DeleteReplicationSubnetGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ReplicationSubnetGroup": "arn:${Partition}:dms:${Region}:${Account}:subgrp:${ReplicationSubnetGroupIdentifier}"
        }
      }
    ],
    "delete-replication-task": [
      {
        "action": "dms:DeleteReplicationTask",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ReplicationTask": "${ReplicationTaskArn}"
        }
      }
    ],
    "delete-replication-task-assessment-run": [
      {
        "action": "dms:DeleteReplicationTaskAssessmentRun",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ReplicationTaskAssessmentRun": "${ReplicationTaskAssessmentRunArn}"
        }
      }
    ],
    "describe-account-attributes": [
      {
        "action": "dms:DescribeAccountAttributes",
        "resource_mappings": {}
      }
    ],
    "describe-applicable-individual-assessments": [
      {
        "action": "dms:DescribeApplicableIndividualAssessments",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ReplicationInstance": "${ReplicationInstanceArn}",
          "ReplicationTask": "${ReplicationTaskArn}"
        }
      }
    ],
    "describe-certificates": [
      {
        "action": "dms:DescribeCertificates",
        "resource_mappings": {}
      }
    ],
    "describe-connections": [
      {
        "action": "dms:DescribeConnections",
        "resource_mappings": {}
      }
    ],
    "describe-conversion-configuration": [
      {
        "action": "dms:DescribeConversionConfiguration",
        "resource_mappings": {}
      }
    ],
    "describe-data-providers": [
      {
        "action": "dms:DescribeDataProviders",
        "resource_mappings": {}
      },
      {
        "action": "dms:ListDataProviders",
        "resource_mappings": {}
      }
    ],
    "describe-endpoint-settings": [
      {
        "action": "dms:DescribeEndpointSettings",
        "resource_mappings": {}
      }
    ],
    "describe-endpoint-types": [
      {
        "action": "dms:DescribeEndpointTypes",
        "resource_mappings": {}
      }
    ],
    "describe-endpoints": [
      {
        "action": "dms:DescribeEndpoints",
        "resource_mappings": {}
      }
    ],
    "describe-engine-versions": [
      {
        "note": "NotFound",
        "action": "Database Migration Service:DescribeEngineVersions",
        "resource_mappings": {}
      }
    ],
    "describe-event-categories": [
      {
        "action": "dms:DescribeEventCategories",
        "resource_mappings": {}
      }
    ],
    "describe-event-subscriptions": [
      {
        "action": "dms:DescribeEventSubscriptions",
        "resource_mappings": {}
      }
    ],
    "describe-events": [
      {
        "action": "dms:DescribeEvents",
        "resource_mappings": {}
      }
    ],
    "describe-extension-pack-associations": [
      {
        "action": "dms:DescribeExtensionPackAssociations",
        "resource_mappings": {}
      },
      {
        "action": "dms:ListExtensionPacks",
        "resource_mappings": {}
      }
    ],
    "describe-fleet-advisor-collectors": [
      {
        "action": "dms:DescribeFleetAdvisorCollectors",
        "resource_mappings": {}
      }
    ],
    "describe-fleet-advisor-databases": [
      {
        "action": "dms:DescribeFleetAdvisorDatabases",
        "resource_mappings": {}
      }
    ],
    "describe-fleet-advisor-lsa-analysis": [
      {
        "action": "dms:DescribeFleetAdvisorLsaAnalysis",
        "resource_mappings": {}
      }
    ],
    "describe-fleet-advisor-schema-object-summary": [
      {
        "action": "dms:DescribeFleetAdvisorSchemaObjectSummary",
        "resource_mappings": {}
      }
    ],
    "describe-fleet-advisor-schemas": [
      {
        "action": "dms:DescribeFleetAdvisorSchemas",
        "resource_mappings": {}
      }
    ],
    "describe-instance-profiles": [
      {
        "action": "dms:DescribeInstanceProfiles",
        "resource_mappings": {}
      },
      {
        "action": "dms:ListInstanceProfiles",
        "resource_mappings": {}
      }
    ],
    "describe-metadata-model-assessments": [
      {
        "action": "dms:DescribeMetadataModelAssessments",
        "resource_mappings": {}
      },
      {
        "action": "dms:ListMetadataModelAssessments",
        "resource_mappings": {}
      }
    ],
    "describe-metadata-model-conversions": [
      {
        "action": "dms:DescribeMetadataModelConversions",
        "resource_mappings": {}
      },
      {
        "action": "dms:ListMetadataModelConversions",
        "resource_mappings": {}
      }
    ],
    "describe-metadata-model-exports-as-script": [
      {
        "action": "dms:DescribeMetadataModelExportsAsScript",
        "resource_mappings": {}
      },
      {
        "action": "dms:ListMetadataModelExports",
        "resource_mappings": {}
      }
    ],
    "describe-metadata-model-exports-to-target": [
      {
        "action": "dms:DescribeMetadataModelExportsToTarget",
        "resource_mappings": {}
      },
      {
        "action": "dms:ListMetadataModelExports",
        "resource_mappings": {}
      }
    ],
    "describe-metadata-model-imports": [
      {
        "action": "dms:DescribeMetadataModelImports",
        "resource_mappings": {}
      }
    ],
    "describe-migration-projects": [
      {
        "action": "dms:DescribeMigrationProjects",
        "resource_mappings": {}
      },
      {
        "action": "dms:ListMigrationProjects",
        "resource_mappings": {}
      }
    ],
    "describe-orderable-replication-instances": [
      {
        "action": "dms:DescribeOrderableReplicationInstances",
        "resource_mappings": {}
      }
    ],
    "describe-pending-maintenance-actions": [
      {
        "action": "dms:DescribePendingMaintenanceActions",
        "resource_mappings": {}
      }
    ],
    "describe-recommendation-limitations": [
      {
        "action": "dms:DescribeRecommendationLimitations",
        "resource_mappings": {}
      }
    ],
    "describe-recommendations": [
      {
        "action": "dms:DescribeRecommendations",
        "resource_mappings": {}
      }
    ],
    "describe-refresh-schemas-status": [
      {
        "action": "dms:DescribeRefreshSchemasStatus",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Endpoint": "${EndpointArn}"
        }
      }
    ],
    "describe-replication-configs": [
      {
        "action": "dms:DescribeReplicationConfigs",
        "resource_mappings": {}
      }
    ],
    "describe-replication-instance-task-logs": [
      {
        "action": "dms:DescribeReplicationInstanceTaskLogs",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ReplicationInstance": "${ReplicationInstanceArn}"
        }
      }
    ],
    "describe-replication-instances": [
      {
        "action": "dms:DescribeReplicationInstances",
        "resource_mappings": {}
      }
    ],
    "describe-replication-subnet-groups": [
      {
        "action": "dms:DescribeReplicationSubnetGroups",
        "resource_mappings": {}
      }
    ],
    "describe-replication-table-statistics": [
      {
        "action": "dms:DescribeReplicationTableStatistics",
        "resource_mappings": {}
      }
    ],
    "describe-replication-task-assessment-results": [
      {
        "action": "dms:DescribeReplicationTaskAssessmentResults",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ReplicationTask": "${ReplicationTaskArn}"
        }
      }
    ],
    "describe-replication-task-assessment-runs": [
      {
        "action": "dms:DescribeReplicationTaskAssessmentRuns",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ReplicationInstance": "arn:${Partition}:dms:${Region}:${Account}:rep:*",
          "ReplicationTask": "arn:${Partition}:dms:${Region}:${Account}:task:*",
          "ReplicationTaskAssessmentRun": "arn:${Partition}:dms:${Region}:${Account}:assessment-run:*"
        }
      }
    ],
    "describe-replication-task-individual-assessments": [
      {
        "action": "dms:DescribeReplicationTaskIndividualAssessments",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ReplicationTask": "arn:${Partition}:dms:${Region}:${Account}:task:*",
          "ReplicationTaskAssessmentRun": "arn:${Partition}:dms:${Region}:${Account}:assessment-run:*"
        }
      }
    ],
    "describe-replication-tasks": [
      {
        "action": "dms:DescribeReplicationTasks",
        "resource_mappings": {}
      }
    ],
    "describe-replications": [
      {
        "action": "dms:DescribeReplications",
        "resource_mappings": {}
      }
    ],
    "describe-schemas": [
      {
        "action": "dms:DescribeSchemas",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Endpoint": "${EndpointArn}"
        }
      }
    ],
    "describe-table-statistics": [
      {
        "action": "dms:DescribeTableStatistics",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ReplicationTask": "${ReplicationTaskArn}"
        }
      }
    ],
    "export-metadata-model-assessment": [
      {
        "action": "dms:ExportMetadataModelAssessment",
        "resource_mappings": {}
      }
    ],
    "import-certificate": [
      {
        "action": "dms:ImportCertificate",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "dms:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Certificate": "%%iftemplatematch%${ResourceArn}%%",
          "Endpoint": "%%iftemplatematch%${ResourceArn}%%",
          "EventSubscription": "%%iftemplatematch%${ResourceArn}%%",
          "ReplicationInstance": "%%iftemplatematch%${ResourceArn}%%",
          "ReplicationSubnetGroup": "%%iftemplatematch%${ResourceArn}%%",
          "ReplicationTask": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "modify-conversion-configuration": [
      {
        "action": "dms:ModifyConversionConfiguration",
        "resource_mappings": {}
      },
      {
        "action": "dms:UpdateConversionConfiguration",
        "resource_mappings": {}
      }
    ],
    "modify-data-provider": [
      {
        "action": "dms:ModifyDataProvider",
        "resource_mappings": {}
      },
      {
        "action": "dms:UpdateDataProvider",
        "resource_mappings": {}
      }
    ],
    "modify-endpoint": [
      {
        "action": "dms:ModifyEndpoint",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Endpoint": "${EndpointArn}",
          "Certificate": "${CertificateArn}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${ServiceAccessRoleArn}%${DynamoDbSettings.ServiceAccessRoleArn}%${S3Settings.ServiceAccessRoleArn}%${DmsTransferSettings.ServiceAccessRoleArn}%${KinesisSettings.ServiceAccessRoleArn}%${ElasticsearchSettings.ServiceAccessRoleArn}%${NeptuneSettings.ServiceAccessRoleArn}%${NeptuneSettings.IamAuthEnabled}%${RedshiftSettings.ServiceAccessRoleArn}%%"
        }
      }
    ],
    "modify-event-subscription": [
      {
        "action": "dms:ModifyEventSubscription",
        "resource_mappings": {}
      }
    ],
    "modify-instance-profile": [
      {
        "action": "dms:ModifyInstanceProfile",
        "resource_mappings": {}
      },
      {
        "action": "dms:UpdateInstanceProfile",
        "resource_mappings": {}
      }
    ],
    "modify-migration-project": [
      {
        "action": "dms:ModifyMigrationProject",
        "resource_mappings": {}
      },
      {
        "action": "dms:UpdateMigrationProject",
        "resource_mappings": {}
      }
    ],
    "modify-replication-config": [
      {
        "action": "dms:ModifyReplicationConfig",
        "resource_mappings": {}
      }
    ],
    "modify-replication-instance": [
      {
        "action": "dms:ModifyReplicationInstance",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ReplicationInstance": "${ReplicationInstanceArn}"
        }
      }
    ],
    "modify-replication-subnet-group": [
      {
        "action": "dms:ModifyReplicationSubnetGroup",
        "resource_mappings": {}
      }
    ],
    "modify-replication-task": [
      {
        "action": "dms:ModifyReplicationTask",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ReplicationTask": "${ReplicationTaskArn}"
        }
      }
    ],
    "move-replication-task": [
      {
        "action": "dms:MoveReplicationTask",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ReplicationInstance": "${TargetReplicationInstanceArn}",
          "ReplicationTask": "${ReplicationTaskArn}"
        }
      }
    ],
    "reboot-replication-instance": [
      {
        "action": "dms:RebootReplicationInstance",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ReplicationInstance": "${ReplicationInstanceArn}"
        }
      }
    ],
    "refresh-schemas": [
      {
        "action": "dms:RefreshSchemas",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Endpoint": "${EndpointArn}",
          "ReplicationInstance": "${ReplicationInstanceArn}"
        }
      }
    ],
    "reload-replication-tables": [
      {
        "action": "dms:ReloadReplicationTables",
        "resource_mappings": {}
      }
    ],
    "reload-tables": [
      {
        "action": "dms:ReloadTables",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ReplicationTask": "${ReplicationTaskArn}"
        }
      }
    ],
    "remove-tags-from-resource": [
      {
        "action": "dms:RemoveTagsFromResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Certificate": "%%iftemplatematch%${ResourceArn}%%",
          "Endpoint": "%%iftemplatematch%${ResourceArn}%%",
          "EventSubscription": "%%iftemplatematch%${ResourceArn}%%",
          "ReplicationInstance": "%%iftemplatematch%${ResourceArn}%%",
          "ReplicationSubnetGroup": "%%iftemplatematch%${ResourceArn}%%",
          "ReplicationTask": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "run-fleet-advisor-lsa-analysis": [
      {
        "action": "dms:RunFleetAdvisorLsaAnalysis",
        "resource_mappings": {}
      }
    ],
    "start-extension-pack-association": [
      {
        "action": "dms:StartExtensionPackAssociation",
        "resource_mappings": {}
      },
      {
        "action": "dms:AssociateExtensionPack",
        "resource_mappings": {}
      }
    ],
    "start-metadata-model-assessment": [
      {
        "action": "dms:StartMetadataModelAssessment",
        "resource_mappings": {}
      }
    ],
    "start-metadata-model-conversion": [
      {
        "action": "dms:StartMetadataModelConversion",
        "resource_mappings": {}
      }
    ],
    "start-metadata-model-export-as-script": [
      {
        "action": "dms:StartMetadataModelExportAsScript",
        "resource_mappings": {}
      },
      {
        "action": "dms:StartMetadataModelExportAsScripts",
        "resource_mappings": {}
      }
    ],
    "start-metadata-model-export-to-target": [
      {
        "action": "dms:StartMetadataModelExportToTarget",
        "resource_mappings": {}
      }
    ],
    "start-metadata-model-import": [
      {
        "action": "dms:StartMetadataModelImport",
        "resource_mappings": {}
      }
    ],
    "start-recommendations": [
      {
        "action": "dms:StartRecommendations",
        "resource_mappings": {}
      }
    ],
    "start-replication": [
      {
        "action": "dms:StartReplication",
        "resource_mappings": {}
      }
    ],
    "start-replication-task": [
      {
        "action": "dms:StartReplicationTask",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ReplicationTask": "${ReplicationTaskArn}"
        }
      }
    ],
    "start-replication-task-assessment": [
      {
        "action": "dms:StartReplicationTaskAssessment",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ReplicationTask": "${ReplicationTaskArn}"
        }
      }
    ],
    "start-replication-task-assessment-run": [
      {
        "action": "dms:StartReplicationTaskAssessmentRun",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ReplicationTask": "${ReplicationTaskArn}"
        }
      }
    ],
    "stop-replication": [
      {
        "action": "dms:StopReplication",
        "resource_mappings": {}
      }
    ],
    "stop-replication-task": [
      {
        "action": "dms:StopReplicationTask",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ReplicationTask": "${ReplicationTaskArn}"
        }
      }
    ],
    "test-connection": [
      {
        "action": "dms:TestConnection",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Endpoint": "${EndpointArn}",
          "ReplicationInstance": "${ReplicationInstanceArn}"
        }
      }
    ],
    "update-subscriptions-to-event-bridge": [
      {
        "action": "dms:UpdateSubscriptionsToEventBridge",
        "resource_mappings": {}
      }
    ],
    "wait": [
      {
        "action": "dms:DescribeEndpoints",
        "resource_mappings": {}
      }
    ]
  },
  "docdb": {
    "add-source-identifier-to-subscription": [
      {
        "action": "rds:AddSourceIdentifierToSubscription",
        "resource_mappings": {
          "SubscriptionName": {
            "template": "${SubscriptionName}"
          }
        }
      }
    ],
    "add-tags-to-resource": [
      {
        "action": "rds:AddTagsToResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "db": "%%iftemplatematch%${ResourceName}%%",
          "es": "%%iftemplatematch%${ResourceName}%%",
          "og": "%%iftemplatematch%${ResourceName}%%",
          "pg": "%%iftemplatematch%${ResourceName}%%",
          "proxy": "%%iftemplatematch%${ResourceName}%%",
          "ri": "%%iftemplatematch%${ResourceName}%%",
          "secgrp": "%%iftemplatematch%${ResourceName}%%",
          "snapshot": "%%iftemplatematch%${ResourceName}%%",
          "subgrp": "%%iftemplatematch%${ResourceName}%%",
          "target-group": "%%iftemplatematch%${ResourceName}%%"
        }
      }
    ],
    "apply-pending-maintenance-action": [
      {
        "action": "rds:ApplyPendingMaintenanceAction",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "%%iftemplatematch%${ResourceIdentifier}%%",
          "db": "%%iftemplatematch%${ResourceIdentifier}%%"
        }
      }
    ],
    "copy-db-cluster-parameter-group": [
      {
        "action": "rds:CopyDBClusterParameterGroup",
        "resource_mappings": {
          "ClusterParameterGroupName": {
            "template": "%%many%${SourceDBClusterParameterGroupIdentifier}%${TargetDBClusterParameterGroupIdentifier}%%"
          }
        }
      },
      {
        "action": "rds:AddTagsToResource",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "copy-db-cluster-snapshot": [
      {
        "action": "rds:CopyDBClusterSnapshot",
        "resource_mappings": {
          "ClusterSnapshotName": {
            "template": "%%many%${SourceDBClusterSnapshotIdentifier}%${TargetDBClusterSnapshotIdentifier}%%"
          }
        }
      },
      {
        "action": "rds:AddTagsToResource",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "create-db-cluster": [
      {
        "action": "rds:CreateDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          },
          "ClusterParameterGroupName": {
            "template": "${DBClusterParameterGroupName}"
          },
          "OptionGroupName": {
            "template": "%%regex%%/.*/g%%"
          },
          "SubnetGroupName": {
            "template": "${DBSubnetGroupName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "rds:AddTagsToResource",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "create-db-cluster-parameter-group": [
      {
        "action": "rds:CreateDBClusterParameterGroup",
        "resource_mappings": {
          "ClusterParameterGroupName": {
            "template": "${DBClusterParameterGroupName}"
          }
        }
      }
    ],
    "create-db-cluster-snapshot": [
      {
        "action": "rds:CreateDBClusterSnapshot",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          },
          "ClusterSnapshotName": {
            "template": "${DBClusterSnapshotIdentifier}"
          }
        }
      }
    ],
    "create-db-instance": [
      {
        "action": "rds:CreateDBInstance",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          },
          "OptionGroupName": {
            "template": "%%regex%%/.*/g%%"
          },
          "ParameterGroupName": {
            "template": "*"
          },
          "SecurityGroupName": {
            "template": "*"
          },
          "SubnetGroupName": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "rds:AddTagsToResource",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "create-db-subnet-group": [
      {
        "action": "rds:CreateDBSubnetGroup",
        "resource_mappings": {
          "SubnetGroupName": {
            "template": "${DBSubnetGroupName}"
          }
        }
      }
    ],
    "create-event-subscription": [
      {
        "action": "rds:CreateEventSubscription",
        "resource_mappings": {
          "SubscriptionName": {
            "template": "${SubscriptionName}"
          }
        }
      },
      {
        "action": "rds:AddTagsToResource",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "*"
          },
          "SubscriptionName": {
            "template": "${SubscriptionName}"
          },
          "OptionGroupName": {
            "template": "*"
          },
          "ParameterGroupName": {
            "template": "*"
          },
          "DbProxyId": {
            "template": "*"
          },
          "DbProxyEndpointId": {
            "template": "*"
          },
          "ReservedDbInstanceName": {
            "template": "*"
          },
          "SecurityGroupName": {
            "template": "*"
          },
          "SnapshotName": {
            "template": "*"
          },
          "SubnetGroupName": {
            "template": "*"
          },
          "TargetGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "create-global-cluster": [
      {
        "action": "rds:CreateGlobalCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${SourceDBClusterIdentifier}"
          },
          "GlobalCluster": {
            "template": "${GlobalClusterIdentifier}"
          }
        }
      }
    ],
    "delete-db-cluster": [
      {
        "action": "rds:DeleteDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          },
          "ClusterSnapshotName": {
            "template": "${FinalDBSnapshotIdentifier}"
          }
        }
      }
    ],
    "delete-db-cluster-parameter-group": [
      {
        "action": "rds:DeleteDBClusterParameterGroup",
        "resource_mappings": {
          "ClusterParameterGroupName": {
            "template": "${DBClusterParameterGroupName}"
          }
        }
      }
    ],
    "delete-db-cluster-snapshot": [
      {
        "action": "rds:DeleteDBClusterSnapshot",
        "resource_mappings": {
          "ClusterSnapshotName": {
            "template": "${DBClusterSnapshotIdentifier}"
          }
        }
      }
    ],
    "delete-db-instance": [
      {
        "action": "rds:DeleteDBInstance",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          }
        }
      }
    ],
    "delete-db-subnet-group": [
      {
        "action": "rds:DeleteDBSubnetGroup",
        "resource_mappings": {
          "SubnetGroupName": {
            "template": "${DBSubnetGroupName}"
          }
        }
      }
    ],
    "delete-event-subscription": [
      {
        "action": "rds:DeleteEventSubscription",
        "resource_mappings": {
          "SubscriptionName": {
            "template": "${SubscriptionName}"
          }
        }
      }
    ],
    "delete-global-cluster": [
      {
        "action": "rds:DeleteGlobalCluster",
        "resource_mappings": {
          "GlobalCluster": {
            "template": "${GlobalClusterIdentifier}"
          }
        }
      }
    ],
    "describe-certificates": [
      {
        "action": "rds:DescribeCertificates",
        "resource_mappings": {}
      }
    ],
    "describe-db-cluster-parameter-groups": [
      {
        "action": "rds:DescribeDBClusterParameterGroups",
        "resource_mappings": {
          "ClusterParameterGroupName": {
            "template": "${DBClusterParameterGroupName}"
          }
        }
      }
    ],
    "describe-db-cluster-parameters": [
      {
        "action": "rds:DescribeDBClusterParameters",
        "resource_mappings": {
          "ClusterParameterGroupName": {
            "template": "${DBClusterParameterGroupName}"
          }
        }
      }
    ],
    "describe-db-cluster-snapshot-attributes": [
      {
        "action": "rds:DescribeDBClusterSnapshotAttributes",
        "resource_mappings": {
          "ClusterSnapshotName": {
            "template": "${DBClusterSnapshotIdentifier}"
          }
        }
      }
    ],
    "describe-db-cluster-snapshots": [
      {
        "action": "rds:DescribeDBClusterSnapshots",
        "resource_mappings": {
          "ClusterSnapshotName": {
            "template": "${DBClusterSnapshotIdentifier}"
          }
        }
      }
    ],
    "describe-db-clusters": [
      {
        "action": "rds:DescribeDBClusters",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          }
        }
      }
    ],
    "describe-db-engine-versions": [
      {
        "action": "rds:DescribeDBEngineVersions",
        "resource_mappings": {}
      }
    ],
    "describe-db-instances": [
      {
        "action": "rds:DescribeDBInstances",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          }
        }
      }
    ],
    "describe-db-subnet-groups": [
      {
        "action": "rds:DescribeDBSubnetGroups",
        "resource_mappings": {
          "SubnetGroupName": {
            "template": "${DBSubnetGroupName}"
          }
        }
      }
    ],
    "describe-engine-default-cluster-parameters": [
      {
        "action": "rds:DescribeEngineDefaultClusterParameters",
        "resource_mappings": {}
      }
    ],
    "describe-event-categories": [
      {
        "action": "rds:DescribeEventCategories",
        "resource_mappings": {}
      }
    ],
    "describe-event-subscriptions": [
      {
        "action": "rds:DescribeEventSubscriptions",
        "resource_mappings": {
          "SubscriptionName": {
            "template": "${SubscriptionName}"
          }
        }
      }
    ],
    "describe-events": [
      {
        "action": "rds:DescribeEvents",
        "resource_mappings": {}
      }
    ],
    "describe-global-clusters": [
      {
        "action": "rds:DescribeGlobalClusters",
        "resource_mappings": {
          "GlobalCluster": {
            "template": "${GlobalClusterIdentifier}"
          }
        }
      }
    ],
    "describe-orderable-db-instance-options": [
      {
        "action": "rds:DescribeOrderableDBInstanceOptions",
        "resource_mappings": {}
      }
    ],
    "describe-pending-maintenance-actions": [
      {
        "action": "rds:DescribePendingMaintenanceActions",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "%%iftemplatematch%${ResourceIdentifier}%%",
          "db": "%%iftemplatematch%${ResourceIdentifier}%%"
        }
      }
    ],
    "failover-db-cluster": [
      {
        "action": "rds:FailoverDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "rds:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "db": "%%iftemplatematch%${ResourceName}%%",
          "es": "%%iftemplatematch%${ResourceName}%%",
          "og": "%%iftemplatematch%${ResourceName}%%",
          "pg": "%%iftemplatematch%${ResourceName}%%",
          "proxy": "%%iftemplatematch%${ResourceName}%%",
          "ri": "%%iftemplatematch%${ResourceName}%%",
          "secgrp": "%%iftemplatematch%${ResourceName}%%",
          "snapshot": "%%iftemplatematch%${ResourceName}%%",
          "subgrp": "%%iftemplatematch%${ResourceName}%%",
          "target-group": "%%iftemplatematch%${ResourceName}%%"
        }
      }
    ],
    "modify-db-cluster": [
      {
        "action": "rds:ModifyDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "%%many%${DBClusterIdentifier}%${NewDBClusterIdentifier}%%"
          },
          "ClusterParameterGroupName": {
            "template": "${DBClusterParameterGroupName}"
          },
          "OptionGroupName": {
            "template": "%%regex%%/.*/g%%"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "modify-db-cluster-parameter-group": [
      {
        "action": "rds:ModifyDBClusterParameterGroup",
        "resource_mappings": {
          "ClusterParameterGroupName": {
            "template": "${DBClusterParameterGroupName}"
          }
        }
      }
    ],
    "modify-db-cluster-snapshot-attribute": [
      {
        "action": "rds:ModifyDBClusterSnapshotAttribute",
        "resource_mappings": {
          "ClusterSnapshotName": {
            "template": "${DBClusterSnapshotIdentifier}"
          }
        }
      }
    ],
    "modify-db-instance": [
      {
        "action": "rds:ModifyDBInstance",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "%%many%${DBInstanceIdentifier}%${NewDBInstanceIdentifier}%%"
          },
          "OptionGroupName": {
            "template": "%%regex%%/.*/g%%"
          },
          "ParameterGroupName": {
            "template": "*"
          },
          "SecurityGroupName": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "modify-db-subnet-group": [
      {
        "action": "rds:ModifyDBSubnetGroup",
        "resource_mappings": {
          "SubnetGroupName": {
            "template": "${DBSubnetGroupName}"
          }
        }
      }
    ],
    "modify-event-subscription": [
      {
        "action": "rds:ModifyEventSubscription",
        "resource_mappings": {
          "SubscriptionName": {
            "template": "${SubscriptionName}"
          }
        }
      }
    ],
    "modify-global-cluster": [
      {
        "action": "rds:ModifyGlobalCluster",
        "resource_mappings": {
          "GlobalCluster": {
            "template": "%%many%${GlobalClusterIdentifier}%${NewGlobalClusterIdentifier}%%"
          }
        }
      }
    ],
    "reboot-db-instance": [
      {
        "action": "rds:RebootDBInstance",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          }
        }
      }
    ],
    "remove-from-global-cluster": [
      {
        "action": "rds:RemoveFromGlobalCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DbClusterIdentifier}"
          },
          "GlobalCluster": {
            "template": "${GlobalClusterIdentifier}"
          }
        }
      }
    ],
    "remove-source-identifier-from-subscription": [
      {
        "action": "rds:RemoveSourceIdentifierFromSubscription",
        "resource_mappings": {
          "SubscriptionName": {
            "template": "${SubscriptionName}"
          }
        }
      }
    ],
    "remove-tags-from-resource": [
      {
        "action": "rds:RemoveTagsFromResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "db": "%%iftemplatematch%${ResourceName}%%",
          "es": "%%iftemplatematch%${ResourceName}%%",
          "og": "%%iftemplatematch%${ResourceName}%%",
          "pg": "%%iftemplatematch%${ResourceName}%%",
          "proxy": "%%iftemplatematch%${ResourceName}%%",
          "ri": "%%iftemplatematch%${ResourceName}%%",
          "secgrp": "%%iftemplatematch%${ResourceName}%%",
          "snapshot": "%%iftemplatematch%${ResourceName}%%",
          "subgrp": "%%iftemplatematch%${ResourceName}%%",
          "target-group": "%%iftemplatematch%${ResourceName}%%"
        }
      }
    ],
    "reset-db-cluster-parameter-group": [
      {
        "action": "rds:ResetDBClusterParameterGroup",
        "resource_mappings": {
          "ClusterParameterGroupName": {
            "template": "${DBClusterParameterGroupName}"
          }
        }
      }
    ],
    "restore-db-cluster-from-snapshot": [
      {
        "action": "rds:RestoreDBClusterFromSnapshot",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          },
          "ClusterSnapshotName": {
            "template": "${SnapshotIdentifier}"
          },
          "OptionGroupName": {
            "template": "%%regex%%/.*/g%%"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "rds:AddTagsToResource",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "restore-db-cluster-to-point-in-time": [
      {
        "action": "rds:RestoreDBClusterToPointInTime",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "%%many%${DBClusterIdentifier}%${SourceDBClusterIdentifier}%%"
          },
          "OptionGroupName": {
            "template": "%%regex%%/.*/g%%"
          },
          "SubnetGroupName": {
            "template": "${DBSubnetGroupName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "rds:AddTagsToResource",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "start-db-cluster": [
      {
        "action": "rds:StartDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          }
        }
      }
    ],
    "stop-db-cluster": [
      {
        "action": "rds:StopDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "rds:DescribeDBInstances",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          }
        }
      }
    ]
  },
  "docdb-elastic": {
    "create-cluster": [
      {
        "note": "NotFound",
        "action": "DocDB Elastic:CreateCluster",
        "resource_mappings": {}
      }
    ],
    "create-cluster-snapshot": [
      {
        "action": "docdb-elastic:CreateClusterSnapshot",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "${clusterArn}"
        }
      },
      {
        "action": "ec2:CreateVpcEndpoint",
        "resource_mappings": {
          "VpcId": {
            "template": "*"
          },
          "VpcEndpointId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DeleteVpcEndpoints",
        "resource_mappings": {
          "VpcEndpointId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeAvailabilityZones",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSecurityGroups",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSubnets",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeVpcAttribute",
        "resource_mappings": {
          "VpcId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeVpcEndpoints",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      },
      {
        "action": "ec2:ModifyVpcEndpoint",
        "resource_mappings": {
          "VpcEndpointId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "kms:CreateGrant",
        "resource_mappings": {
          "KeyId": {
            "template": "*"
          }
        }
      },
      {
        "action": "kms:Decrypt",
        "resource_mappings": {
          "KeyId": {
            "template": "*"
          }
        }
      },
      {
        "action": "kms:DescribeKey",
        "resource_mappings": {
          "KeyId": {
            "template": "*"
          }
        }
      },
      {
        "action": "kms:GenerateDataKey",
        "resource_mappings": {
          "KeyId": {
            "template": "*"
          }
        }
      },
      {
        "action": "secretsmanager:DescribeSecret",
        "resource_mappings": {
          "SecretId": {
            "template": "*"
          }
        }
      },
      {
        "action": "secretsmanager:GetResourcePolicy",
        "resource_mappings": {
          "SecretId": {
            "template": "*"
          }
        }
      },
      {
        "action": "secretsmanager:GetSecretValue",
        "resource_mappings": {
          "SecretId": {
            "template": "*"
          }
        }
      },
      {
        "action": "secretsmanager:ListSecretVersionIds",
        "resource_mappings": {
          "SecretId": {
            "template": "*"
          }
        }
      },
      {
        "action": "secretsmanager:ListSecrets",
        "resource_mappings": {}
      }
    ],
    "delete-cluster": [
      {
        "action": "docdb-elastic:DeleteCluster",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "${clusterArn}"
        }
      },
      {
        "action": "ec2:DeleteVpcEndpoints",
        "resource_mappings": {
          "VpcEndpointId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeAvailabilityZones",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSecurityGroups",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSubnets",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeVpcAttribute",
        "resource_mappings": {
          "VpcId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeVpcEndpoints",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      },
      {
        "action": "ec2:ModifyVpcEndpoint",
        "resource_mappings": {
          "VpcEndpointId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-cluster-snapshot": [
      {
        "action": "docdb-elastic:DeleteClusterSnapshot",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster-snapshot": "${snapshotArn}"
        }
      },
      {
        "action": "ec2:DeleteVpcEndpoints",
        "resource_mappings": {
          "VpcEndpointId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeAvailabilityZones",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSecurityGroups",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSubnets",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeVpcAttribute",
        "resource_mappings": {
          "VpcId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeVpcEndpoints",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      },
      {
        "action": "ec2:ModifyVpcEndpoint",
        "resource_mappings": {
          "VpcEndpointId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          }
        }
      }
    ],
    "get-cluster": [
      {
        "action": "docdb-elastic:GetCluster",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "${clusterArn}"
        }
      }
    ],
    "get-cluster-snapshot": [
      {
        "action": "docdb-elastic:GetClusterSnapshot",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster-snapshot": "${snapshotArn}"
        }
      }
    ],
    "list-cluster-snapshots": [
      {
        "action": "docdb-elastic:ListClusterSnapshots",
        "resource_mappings": {}
      }
    ],
    "list-clusters": [
      {
        "action": "docdb-elastic:ListClusters",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "docdb-elastic:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "%%iftemplatematch%${resourceArn}%%",
          "cluster-snapshot": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "restore-cluster-from-snapshot": [
      {
        "note": "NotFound",
        "action": "DocDB Elastic:RestoreClusterFromSnapshot",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "docdb-elastic:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "%%iftemplatematch%${resourceArn}%%",
          "cluster-snapshot": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "docdb-elastic:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "%%iftemplatematch%${resourceArn}%%",
          "cluster-snapshot": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-cluster": [
      {
        "note": "NotFound",
        "action": "DocDB Elastic:UpdateCluster",
        "resource_mappings": {}
      }
    ]
  },
  "drs": {
    "associate-source-network-stack": [
      {
        "action": "drs:AssociateSourceNetworkStack",
        "resource_mappings": {
          "SourceNetworkID": {
            "template": "${sourceNetworkID}"
          }
        }
      },
      {
        "action": "cloudformation:DescribeStackResource",
        "resource_mappings": {
          "StackName": {
            "template": "${cfnStackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      },
      {
        "action": "cloudformation:DescribeStacks",
        "resource_mappings": {
          "StackName": {
            "template": "${cfnStackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      },
      {
        "action": "drs:GetLaunchConfiguration",
        "resource_mappings": {
          "SourceServerID": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateLaunchTemplateVersion",
        "resource_mappings": {
          "LaunchTemplateId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeLaunchTemplateVersions",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeLaunchTemplates",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSecurityGroups",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSubnets",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      },
      {
        "action": "ec2:ModifyLaunchTemplate",
        "resource_mappings": {
          "LaunchTemplateId": {
            "template": "*"
          }
        }
      }
    ],
    "create-extended-source-server": [
      {
        "action": "drs:CreateExtendedSourceServer",
        "resource_mappings": {}
      }
    ],
    "create-launch-configuration-template": [
      {
        "action": "drs:CreateLaunchConfigurationTemplate",
        "resource_mappings": {}
      }
    ],
    "create-replication-configuration-template": [
      {
        "action": "drs:CreateReplicationConfigurationTemplate",
        "resource_mappings": {}
      }
    ],
    "create-source-network": [
      {
        "action": "drs:CreateSourceNetwork",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeInstances",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      }
    ],
    "delete-job": [
      {
        "action": "drs:DeleteJob",
        "resource_mappings": {
          "JobID": {
            "template": "${jobID}"
          }
        }
      }
    ],
    "delete-launch-action": [
      {
        "note": "NotFound",
        "action": "drs:DeleteLaunchAction",
        "resource_mappings": {}
      }
    ],
    "delete-launch-configuration-template": [
      {
        "action": "drs:DeleteLaunchConfigurationTemplate",
        "resource_mappings": {
          "LaunchConfigurationTemplateID": {
            "template": "${launchConfigurationTemplateID}"
          }
        }
      }
    ],
    "delete-recovery-instance": [
      {
        "action": "drs:DeleteRecoveryInstance",
        "resource_mappings": {
          "RecoveryInstanceID": {
            "template": "${recoveryInstanceID}"
          }
        }
      }
    ],
    "delete-replication-configuration-template": [
      {
        "action": "drs:DeleteReplicationConfigurationTemplate",
        "resource_mappings": {
          "ReplicationConfigurationTemplateID": {
            "template": "${replicationConfigurationTemplateID}"
          }
        }
      }
    ],
    "delete-source-network": [
      {
        "action": "drs:DeleteSourceNetwork",
        "resource_mappings": {
          "SourceNetworkID": {
            "template": "${sourceNetworkID}"
          }
        }
      }
    ],
    "delete-source-server": [
      {
        "action": "drs:DeleteSourceServer",
        "resource_mappings": {
          "SourceServerID": {
            "template": "${sourceServerID}"
          }
        }
      }
    ],
    "describe-job-log-items": [
      {
        "action": "drs:DescribeJobLogItems",
        "resource_mappings": {
          "JobID": {
            "template": "${jobID}"
          }
        }
      }
    ],
    "describe-jobs": [
      {
        "action": "drs:DescribeJobs",
        "resource_mappings": {}
      }
    ],
    "describe-launch-configuration-templates": [
      {
        "action": "drs:DescribeLaunchConfigurationTemplates",
        "resource_mappings": {}
      }
    ],
    "describe-recovery-instances": [
      {
        "action": "drs:DescribeRecoveryInstances",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeInstances",
        "resource_mappings": {}
      }
    ],
    "describe-recovery-snapshots": [
      {
        "action": "drs:DescribeRecoverySnapshots",
        "resource_mappings": {
          "SourceServerID": {
            "template": "${sourceServerID}"
          }
        }
      }
    ],
    "describe-replication-configuration-templates": [
      {
        "action": "drs:DescribeReplicationConfigurationTemplates",
        "resource_mappings": {}
      }
    ],
    "describe-source-networks": [
      {
        "action": "drs:DescribeSourceNetworks",
        "resource_mappings": {}
      }
    ],
    "describe-source-servers": [
      {
        "action": "drs:DescribeSourceServers",
        "resource_mappings": {}
      }
    ],
    "disconnect-recovery-instance": [
      {
        "action": "drs:DisconnectRecoveryInstance",
        "resource_mappings": {
          "RecoveryInstanceID": {
            "template": "${recoveryInstanceID}"
          }
        }
      }
    ],
    "disconnect-source-server": [
      {
        "action": "drs:DisconnectSourceServer",
        "resource_mappings": {
          "SourceServerID": {
            "template": "${sourceServerID}"
          }
        }
      }
    ],
    "export-source-network-cfn-template": [
      {
        "action": "drs:ExportSourceNetworkCfnTemplate",
        "resource_mappings": {
          "SourceNetworkID": {
            "template": "${sourceNetworkID}"
          }
        }
      },
      {
        "action": "s3:GetBucketLocation",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          }
        }
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      },
      {
        "action": "s3:PutObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      }
    ],
    "get-failback-replication-configuration": [
      {
        "action": "drs:GetFailbackReplicationConfiguration",
        "resource_mappings": {
          "RecoveryInstanceID": {
            "template": "${recoveryInstanceID}"
          }
        }
      }
    ],
    "get-launch-configuration": [
      {
        "action": "drs:GetLaunchConfiguration",
        "resource_mappings": {
          "SourceServerID": {
            "template": "${sourceServerID}"
          }
        }
      }
    ],
    "get-replication-configuration": [
      {
        "action": "drs:GetReplicationConfiguration",
        "resource_mappings": {
          "SourceServerID": {
            "template": "${sourceServerID}"
          }
        }
      }
    ],
    "initialize-service": [
      {
        "action": "drs:InitializeService",
        "resource_mappings": {}
      },
      {
        "action": "iam:AddRoleToInstanceProfile",
        "resource_mappings": {
          "InstanceProfileNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:CreateInstanceProfile",
        "resource_mappings": {
          "InstanceProfileNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:GetInstanceProfile",
        "resource_mappings": {
          "InstanceProfileNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "list-extensible-source-servers": [
      {
        "action": "drs:ListExtensibleSourceServers",
        "resource_mappings": {}
      }
    ],
    "list-launch-actions": [
      {
        "note": "NotFound",
        "action": "drs:ListLaunchActions",
        "resource_mappings": {}
      }
    ],
    "list-staging-accounts": [
      {
        "action": "drs:ListStagingAccounts",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "drs:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "put-launch-action": [
      {
        "note": "NotFound",
        "action": "drs:PutLaunchAction",
        "resource_mappings": {}
      }
    ],
    "retry-data-replication": [
      {
        "action": "drs:RetryDataReplication",
        "resource_mappings": {
          "SourceServerID": {
            "template": "${sourceServerID}"
          }
        }
      }
    ],
    "reverse-replication": [
      {
        "action": "drs:ReverseReplication",
        "resource_mappings": {
          "RecoveryInstanceID": {
            "template": "${recoveryInstanceID}"
          }
        }
      },
      {
        "action": "drs:DescribeReplicationConfigurationTemplates",
        "resource_mappings": {}
      },
      {
        "action": "drs:DescribeSourceServers",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeInstances",
        "resource_mappings": {}
      }
    ],
    "start-failback-launch": [
      {
        "action": "drs:StartFailbackLaunch",
        "resource_mappings": {
          "RecoveryInstanceID": {
            "template": "${recoveryInstanceIDs[]}"
          }
        }
      }
    ],
    "start-recovery": [
      {
        "action": "drs:StartRecovery",
        "resource_mappings": {
          "SourceServerID": {
            "template": "${sourceServers[].sourceServerID}"
          }
        }
      },
      {
        "action": "drs:CreateRecoveryInstanceForDrs",
        "resource_mappings": {
          "SourceServerID": {
            "template": "${sourceServers[].sourceServerID}"
          }
        }
      },
      {
        "action": "drs:ListTagsForResource",
        "resource_mappings": {}
      },
      {
        "action": "ec2:AttachVolume",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:AuthorizeSecurityGroupEgress",
        "resource_mappings": {
          "SecurityGroupId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:AuthorizeSecurityGroupIngress",
        "resource_mappings": {
          "SecurityGroupId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateLaunchTemplate",
        "resource_mappings": {
          "LaunchTemplateId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateLaunchTemplateVersion",
        "resource_mappings": {
          "LaunchTemplateId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateSnapshot",
        "resource_mappings": {
          "SnapshotId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "*"
          },
          "CapacityReservationFleetId": {
            "template": "*"
          },
          "ClientVpnEndpointId": {
            "template": "*"
          },
          "CustomerGatewayId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "DhcpOptionsId": {
            "template": "*"
          },
          "EgressOnlyInternetGatewayId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "AllocationId": {
            "template": "*"
          },
          "ExportImageTaskId": {
            "template": "*"
          },
          "ExportTaskId": {
            "template": "*"
          },
          "FleetId": {
            "template": "*"
          },
          "FpgaImageId": {
            "template": "*"
          },
          "HostReservationId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "ImportImageTaskId": {
            "template": "*"
          },
          "ImportSnapshotTaskId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "InstanceEventWindowId": {
            "template": "*"
          },
          "InternetGatewayId": {
            "template": "*"
          },
          "Ipv4PoolEc2Id": {
            "template": "*"
          },
          "Ipv6PoolEc2Id": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "LocalGatewayId": {
            "template": "*"
          },
          "LocalGatewayRoutetableId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVpcAssociationId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "template": "*"
          },
          "NatGatewayId": {
            "template": "*"
          },
          "NaclId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "PrefixListId": {
            "template": "*"
          },
          "ReplaceRootVolumeTaskId": {
            "template": "*"
          },
          "ReservationId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SecurityGroupRuleId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SpotFleetRequestId": {
            "template": "*"
          },
          "SpotInstanceRequestId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "TrafficMirrorFilterId": {
            "template": "*"
          },
          "TrafficMirrorSessionId": {
            "template": "*"
          },
          "TrafficMirrorTargetId": {
            "template": "*"
          },
          "TransitGatewayId": {
            "template": "*"
          },
          "TransitGatewayAttachmentId": {
            "template": "*"
          },
          "TransitGatewayConnectPeerId": {
            "template": "*"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "*"
          },
          "TransitGatewayRouteTableId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "VpcId": {
            "template": "*"
          },
          "VpcEndpointId": {
            "template": "*"
          },
          "VpcEndpointServiceId": {
            "template": "*"
          },
          "VpcFlowLogId": {
            "template": "*"
          },
          "VpcPeeringConnectionId": {
            "template": "*"
          },
          "VpnConnectionId": {
            "template": "*"
          },
          "VpnGatewayId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateVolume",
        "resource_mappings": {
          "VolumeId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DeleteLaunchTemplateVersions",
        "resource_mappings": {
          "LaunchTemplateId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DeleteSnapshot",
        "resource_mappings": {
          "SnapshotId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DeleteVolume",
        "resource_mappings": {
          "VolumeId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeAccountAttributes",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeAvailabilityZones",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeImages",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeInstanceAttribute",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeInstanceStatus",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeInstanceTypes",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeInstances",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeLaunchTemplateVersions",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeLaunchTemplates",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSecurityGroups",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSnapshots",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSubnets",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeVolumes",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DetachVolume",
        "resource_mappings": {
          "VolumeId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:ModifyInstanceAttribute",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:ModifyLaunchTemplate",
        "resource_mappings": {
          "LaunchTemplateId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:RevokeSecurityGroupEgress",
        "resource_mappings": {
          "SecurityGroupId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:RunInstances",
        "resource_mappings": {
          "ImageId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "CapacityReservationId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "ElasticInferenceAcceleratorId": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:StartInstances",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:StopInstances",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:TerminateInstances",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "start-replication": [
      {
        "action": "drs:StartReplication",
        "resource_mappings": {
          "SourceServerID": {
            "template": "${sourceServerID}"
          }
        }
      }
    ],
    "start-source-network-recovery": [
      {
        "action": "drs:StartSourceNetworkRecovery",
        "resource_mappings": {
          "SourceNetworkID": {
            "template": "${sourceNetworks[].sourceNetworkID}"
          }
        }
      },
      {
        "action": "cloudformation:CreateStack",
        "resource_mappings": {
          "StackName": {
            "template": "${sourceNetworks[].cfnStackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      },
      {
        "action": "cloudformation:DescribeStackResource",
        "resource_mappings": {
          "StackName": {
            "template": "${sourceNetworks[].cfnStackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      },
      {
        "action": "cloudformation:DescribeStacks",
        "resource_mappings": {
          "StackName": {
            "template": "${sourceNetworks[].cfnStackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      },
      {
        "action": "cloudformation:UpdateStack",
        "resource_mappings": {
          "StackName": {
            "template": "${sourceNetworks[].cfnStackName}"
          },
          "Id": {
            "template": "*"
          }
        }
      },
      {
        "action": "drs:GetLaunchConfiguration",
        "resource_mappings": {
          "SourceServerID": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateLaunchTemplateVersion",
        "resource_mappings": {
          "LaunchTemplateId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeLaunchTemplateVersions",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeLaunchTemplates",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSecurityGroups",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSubnets",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      },
      {
        "action": "ec2:ModifyLaunchTemplate",
        "resource_mappings": {
          "LaunchTemplateId": {
            "template": "*"
          }
        }
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      },
      {
        "action": "s3:PutObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      }
    ],
    "start-source-network-replication": [
      {
        "action": "drs:StartSourceNetworkReplication",
        "resource_mappings": {
          "SourceNetworkID": {
            "template": "${sourceNetworkID}"
          }
        }
      }
    ],
    "stop-failback": [
      {
        "action": "drs:StopFailback",
        "resource_mappings": {
          "RecoveryInstanceID": {
            "template": "${recoveryInstanceID}"
          }
        }
      }
    ],
    "stop-replication": [
      {
        "action": "drs:StopReplication",
        "resource_mappings": {
          "SourceServerID": {
            "template": "${sourceServerID}"
          }
        }
      }
    ],
    "stop-source-network-replication": [
      {
        "action": "drs:StopSourceNetworkReplication",
        "resource_mappings": {
          "SourceNetworkID": {
            "template": "${sourceNetworkID}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "drs:TagResource",
        "resource_mappings": {}
      }
    ],
    "terminate-recovery-instances": [
      {
        "action": "drs:TerminateRecoveryInstances",
        "resource_mappings": {
          "RecoveryInstanceID": {
            "template": "${recoveryInstanceIDs[]}"
          }
        }
      },
      {
        "action": "ec2:DeleteVolume",
        "resource_mappings": {
          "VolumeId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeInstances",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeVolumes",
        "resource_mappings": {}
      },
      {
        "action": "ec2:TerminateInstances",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          }
        }
      }
    ],
    "untag-resource": [
      {
        "action": "drs:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-failback-replication-configuration": [
      {
        "action": "drs:UpdateFailbackReplicationConfiguration",
        "resource_mappings": {
          "RecoveryInstanceID": {
            "template": "${recoveryInstanceID}"
          }
        }
      }
    ],
    "update-launch-configuration": [
      {
        "action": "drs:UpdateLaunchConfiguration",
        "resource_mappings": {
          "SourceServerID": {
            "template": "${sourceServerID}"
          }
        }
      }
    ],
    "update-launch-configuration-template": [
      {
        "action": "drs:UpdateLaunchConfigurationTemplate",
        "resource_mappings": {
          "LaunchConfigurationTemplateID": {
            "template": "${launchConfigurationTemplateID}"
          }
        }
      }
    ],
    "update-replication-configuration": [
      {
        "action": "drs:UpdateReplicationConfiguration",
        "resource_mappings": {
          "SourceServerID": {
            "template": "${sourceServerID}"
          }
        }
      }
    ],
    "update-replication-configuration-template": [
      {
        "action": "drs:UpdateReplicationConfigurationTemplate",
        "resource_mappings": {
          "ReplicationConfigurationTemplateID": {
            "template": "${replicationConfigurationTemplateID}"
          }
        }
      }
    ]
  },
  "ds": {
    "accept-shared-directory": [
      {
        "action": "ds:AcceptSharedDirectory",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${SharedDirectoryId}"
          }
        }
      }
    ],
    "add-ip-routes": [
      {
        "action": "ds:AddIpRoutes",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      },
      {
        "action": "ec2:AuthorizeSecurityGroupEgress",
        "resource_mappings": {
          "SecurityGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "add-region": [
      {
        "action": "ds:AddRegion",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "add-tags-to-resource": [
      {
        "action": "ds:AddTagsToResource",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${ResourceId}"
          }
        }
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "capacity-reservation": "%%iftemplatematch%${ResourceId}%%",
          "client-vpn-endpoint": "%%iftemplatematch%${ResourceId}%%",
          "customer-gateway": "%%iftemplatematch%${ResourceId}%%",
          "dedicated-host": "%%iftemplatematch%${ResourceId}%%",
          "dhcp-options": "%%iftemplatematch%${ResourceId}%%",
          "egress-only-internet-gateway": "%%iftemplatematch%${ResourceId}%%",
          "elastic-gpu": "%%iftemplatematch%${ResourceId}%%",
          "elastic-ip": "%%iftemplatematch%${ResourceId}%%",
          "export-image-task": "%%iftemplatematch%${ResourceId}%%",
          "export-instance-task": "%%iftemplatematch%${ResourceId}%%",
          "fleet": "%%iftemplatematch%${ResourceId}%%",
          "fpga-image": "%%iftemplatematch%${ResourceId}%%",
          "host-reservation": "%%iftemplatematch%${ResourceId}%%",
          "image": "%%iftemplatematch%${ResourceId}%%",
          "import-image-task": "%%iftemplatematch%${ResourceId}%%",
          "import-snapshot-task": "%%iftemplatematch%${ResourceId}%%",
          "instance": "%%iftemplatematch%${ResourceId}%%",
          "internet-gateway": "%%iftemplatematch%${ResourceId}%%",
          "ipv4pool-ec2": "%%iftemplatematch%${ResourceId}%%",
          "ipv6pool-ec2": "%%iftemplatematch%${ResourceId}%%",
          "key-pair": "%%iftemplatematch%${ResourceId}%%",
          "launch-template": "%%iftemplatematch%${ResourceId}%%",
          "local-gateway": "%%iftemplatematch%${ResourceId}%%",
          "local-gateway-route-table": "%%iftemplatematch%${ResourceId}%%",
          "local-gateway-route-table-virtual-interface-group-association": "%%iftemplatematch%${ResourceId}%%",
          "local-gateway-route-table-vpc-association": "%%iftemplatematch%${ResourceId}%%",
          "local-gateway-virtual-interface": "%%iftemplatematch%${ResourceId}%%",
          "local-gateway-virtual-interface-group": "%%iftemplatematch%${ResourceId}%%",
          "natgateway": "%%iftemplatematch%${ResourceId}%%",
          "network-acl": "%%iftemplatematch%${ResourceId}%%",
          "network-interface": "%%iftemplatematch%${ResourceId}%%",
          "placement-group": "%%iftemplatematch%${ResourceId}%%",
          "prefix-list": "%%iftemplatematch%${ResourceId}%%",
          "reserved-instances": "%%iftemplatematch%${ResourceId}%%",
          "route-table": "%%iftemplatematch%${ResourceId}%%",
          "security-group": "%%iftemplatematch%${ResourceId}%%",
          "snapshot": "%%iftemplatematch%${ResourceId}%%",
          "spot-fleet-request": "%%iftemplatematch%${ResourceId}%%",
          "spot-instances-request": "%%iftemplatematch%${ResourceId}%%",
          "subnet": "%%iftemplatematch%${ResourceId}%%",
          "traffic-mirror-filter": "%%iftemplatematch%${ResourceId}%%",
          "traffic-mirror-session": "%%iftemplatematch%${ResourceId}%%",
          "traffic-mirror-target": "%%iftemplatematch%${ResourceId}%%",
          "transit-gateway": "%%iftemplatematch%${ResourceId}%%",
          "transit-gateway-attachment": "%%iftemplatematch%${ResourceId}%%",
          "transit-gateway-connect-peer": "%%iftemplatematch%${ResourceId}%%",
          "transit-gateway-multicast-domain": "%%iftemplatematch%${ResourceId}%%",
          "transit-gateway-route-table": "%%iftemplatematch%${ResourceId}%%",
          "volume": "%%iftemplatematch%${ResourceId}%%",
          "vpc": "%%iftemplatematch%${ResourceId}%%",
          "vpc-endpoint": "%%iftemplatematch%${ResourceId}%%",
          "vpc-endpoint-service": "%%iftemplatematch%${ResourceId}%%",
          "vpc-flow-log": "%%iftemplatematch%${ResourceId}%%",
          "vpc-peering-connection": "%%iftemplatematch%${ResourceId}%%",
          "vpn-connection": "%%iftemplatematch%${ResourceId}%%",
          "vpn-gateway": "%%iftemplatematch%${ResourceId}%%"
        }
      }
    ],
    "cancel-schema-extension": [
      {
        "action": "ds:CancelSchemaExtension",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "connect-directory": [
      {
        "action": "ds:ConnectDirectory",
        "resource_mappings": {}
      },
      {
        "action": "ec2:AuthorizeSecurityGroupEgress",
        "resource_mappings": {
          "SecurityGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "create-alias": [
      {
        "action": "ds:CreateAlias",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "create-computer": [
      {
        "action": "ds:CreateComputer",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "create-conditional-forwarder": [
      {
        "action": "ds:CreateConditionalForwarder",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "create-directory": [
      {
        "action": "ds:CreateDirectory",
        "resource_mappings": {}
      },
      {
        "action": "ec2:AuthorizeSecurityGroupEgress",
        "resource_mappings": {
          "SecurityGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "create-log-subscription": [
      {
        "action": "ds:CreateLogSubscription",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "create-microsoft-ad": [
      {
        "action": "ds:CreateMicrosoftAD",
        "resource_mappings": {}
      },
      {
        "action": "ec2:AuthorizeSecurityGroupEgress",
        "resource_mappings": {
          "SecurityGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "create-snapshot": [
      {
        "action": "ds:CreateSnapshot",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "create-trust": [
      {
        "action": "ds:CreateTrust",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "delete-conditional-forwarder": [
      {
        "action": "ds:DeleteConditionalForwarder",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "delete-directory": [
      {
        "action": "ds:DeleteDirectory",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      },
      {
        "action": "ec2:DeleteNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-log-subscription": [
      {
        "action": "ds:DeleteLogSubscription",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "delete-snapshot": [
      {
        "action": "ds:DeleteSnapshot",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${SnapshotId}"
          }
        }
      }
    ],
    "delete-trust": [
      {
        "action": "ds:DeleteTrust",
        "resource_mappings": {
          "DirectoryId": {
            "template": "*"
          }
        }
      }
    ],
    "deregister-certificate": [
      {
        "action": "ds:DeregisterCertificate",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "deregister-event-topic": [
      {
        "action": "ds:DeregisterEventTopic",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "describe-certificate": [
      {
        "action": "ds:DescribeCertificate",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "describe-client-authentication-settings": [
      {
        "action": "ds:DescribeClientAuthenticationSettings",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "describe-conditional-forwarders": [
      {
        "action": "ds:DescribeConditionalForwarders",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "describe-directories": [
      {
        "action": "ds:DescribeDirectories",
        "resource_mappings": {}
      }
    ],
    "describe-domain-controllers": [
      {
        "action": "ds:DescribeDomainControllers",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "describe-event-topics": [
      {
        "action": "ds:DescribeEventTopics",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "describe-ldaps-settings": [
      {
        "action": "ds:DescribeLDAPSSettings",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "describe-regions": [
      {
        "action": "ds:DescribeRegions",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "describe-settings": [
      {
        "action": "ds:DescribeSettings",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "describe-shared-directories": [
      {
        "action": "ds:DescribeSharedDirectories",
        "resource_mappings": {
          "DirectoryId": {
            "template": "%%many%${OwnerDirectoryId}%${SharedDirectoryIds[]}%%"
          }
        }
      }
    ],
    "describe-snapshots": [
      {
        "action": "ds:DescribeSnapshots",
        "resource_mappings": {}
      }
    ],
    "describe-trusts": [
      {
        "action": "ds:DescribeTrusts",
        "resource_mappings": {}
      }
    ],
    "describe-update-directory": [
      {
        "action": "ds:DescribeUpdateDirectory",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "disable-client-authentication": [
      {
        "action": "ds:DisableClientAuthentication",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "disable-ldaps": [
      {
        "action": "ds:DisableLDAPS",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "disable-radius": [
      {
        "action": "ds:DisableRadius",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "disable-sso": [
      {
        "action": "ds:DisableSso",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "enable-client-authentication": [
      {
        "action": "ds:EnableClientAuthentication",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "enable-ldaps": [
      {
        "action": "ds:EnableLDAPS",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "enable-radius": [
      {
        "action": "ds:EnableRadius",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "enable-sso": [
      {
        "action": "ds:EnableSso",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "get-directory-limits": [
      {
        "action": "ds:GetDirectoryLimits",
        "resource_mappings": {}
      }
    ],
    "get-snapshot-limits": [
      {
        "action": "ds:GetSnapshotLimits",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "list-certificates": [
      {
        "action": "ds:ListCertificates",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "list-ip-routes": [
      {
        "action": "ds:ListIpRoutes",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "list-log-subscriptions": [
      {
        "action": "ds:ListLogSubscriptions",
        "resource_mappings": {}
      }
    ],
    "list-schema-extensions": [
      {
        "action": "ds:ListSchemaExtensions",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "ds:ListTagsForResource",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${ResourceId}"
          }
        }
      }
    ],
    "register-certificate": [
      {
        "action": "ds:RegisterCertificate",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "register-event-topic": [
      {
        "action": "ds:RegisterEventTopic",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      },
      {
        "action": "sns:GetTopicAttributes",
        "resource_mappings": {
          "TopicName": {
            "template": "${TopicName}"
          }
        }
      }
    ],
    "reject-shared-directory": [
      {
        "action": "ds:RejectSharedDirectory",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${SharedDirectoryId}"
          }
        }
      }
    ],
    "remove-ip-routes": [
      {
        "action": "ds:RemoveIpRoutes",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "remove-region": [
      {
        "action": "ds:RemoveRegion",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "remove-tags-from-resource": [
      {
        "action": "ds:RemoveTagsFromResource",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${ResourceId}"
          }
        }
      },
      {
        "action": "ec2:DeleteTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "capacity-reservation": "%%iftemplatematch%${ResourceId}%%",
          "client-vpn-endpoint": "%%iftemplatematch%${ResourceId}%%",
          "customer-gateway": "%%iftemplatematch%${ResourceId}%%",
          "dedicated-host": "%%iftemplatematch%${ResourceId}%%",
          "dhcp-options": "%%iftemplatematch%${ResourceId}%%",
          "egress-only-internet-gateway": "%%iftemplatematch%${ResourceId}%%",
          "elastic-gpu": "%%iftemplatematch%${ResourceId}%%",
          "elastic-ip": "%%iftemplatematch%${ResourceId}%%",
          "export-image-task": "%%iftemplatematch%${ResourceId}%%",
          "export-instance-task": "%%iftemplatematch%${ResourceId}%%",
          "fleet": "%%iftemplatematch%${ResourceId}%%",
          "fpga-image": "%%iftemplatematch%${ResourceId}%%",
          "host-reservation": "%%iftemplatematch%${ResourceId}%%",
          "image": "%%iftemplatematch%${ResourceId}%%",
          "import-image-task": "%%iftemplatematch%${ResourceId}%%",
          "import-snapshot-task": "%%iftemplatematch%${ResourceId}%%",
          "instance": "%%iftemplatematch%${ResourceId}%%",
          "internet-gateway": "%%iftemplatematch%${ResourceId}%%",
          "ipv4pool-ec2": "%%iftemplatematch%${ResourceId}%%",
          "ipv6pool-ec2": "%%iftemplatematch%${ResourceId}%%",
          "key-pair": "%%iftemplatematch%${ResourceId}%%",
          "launch-template": "%%iftemplatematch%${ResourceId}%%",
          "local-gateway": "%%iftemplatematch%${ResourceId}%%",
          "local-gateway-route-table": "%%iftemplatematch%${ResourceId}%%",
          "local-gateway-route-table-virtual-interface-group-association": "%%iftemplatematch%${ResourceId}%%",
          "local-gateway-route-table-vpc-association": "%%iftemplatematch%${ResourceId}%%",
          "local-gateway-virtual-interface": "%%iftemplatematch%${ResourceId}%%",
          "local-gateway-virtual-interface-group": "%%iftemplatematch%${ResourceId}%%",
          "natgateway": "%%iftemplatematch%${ResourceId}%%",
          "network-acl": "%%iftemplatematch%${ResourceId}%%",
          "network-interface": "%%iftemplatematch%${ResourceId}%%",
          "placement-group": "%%iftemplatematch%${ResourceId}%%",
          "prefix-list": "%%iftemplatematch%${ResourceId}%%",
          "reserved-instances": "%%iftemplatematch%${ResourceId}%%",
          "route-table": "%%iftemplatematch%${ResourceId}%%",
          "security-group": "%%iftemplatematch%${ResourceId}%%",
          "snapshot": "%%iftemplatematch%${ResourceId}%%",
          "spot-fleet-request": "%%iftemplatematch%${ResourceId}%%",
          "spot-instances-request": "%%iftemplatematch%${ResourceId}%%",
          "subnet": "%%iftemplatematch%${ResourceId}%%",
          "traffic-mirror-filter": "%%iftemplatematch%${ResourceId}%%",
          "traffic-mirror-session": "%%iftemplatematch%${ResourceId}%%",
          "traffic-mirror-target": "%%iftemplatematch%${ResourceId}%%",
          "transit-gateway": "%%iftemplatematch%${ResourceId}%%",
          "transit-gateway-attachment": "%%iftemplatematch%${ResourceId}%%",
          "transit-gateway-connect-peer": "%%iftemplatematch%${ResourceId}%%",
          "transit-gateway-multicast-domain": "%%iftemplatematch%${ResourceId}%%",
          "transit-gateway-route-table": "%%iftemplatematch%${ResourceId}%%",
          "volume": "%%iftemplatematch%${ResourceId}%%",
          "vpc": "%%iftemplatematch%${ResourceId}%%",
          "vpc-endpoint": "%%iftemplatematch%${ResourceId}%%",
          "vpc-endpoint-service": "%%iftemplatematch%${ResourceId}%%",
          "vpc-flow-log": "%%iftemplatematch%${ResourceId}%%",
          "vpc-peering-connection": "%%iftemplatematch%${ResourceId}%%",
          "vpn-connection": "%%iftemplatematch%${ResourceId}%%",
          "vpn-gateway": "%%iftemplatematch%${ResourceId}%%"
        }
      }
    ],
    "reset-user-password": [
      {
        "action": "ds:ResetUserPassword",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "restore-from-snapshot": [
      {
        "action": "ds:RestoreFromSnapshot",
        "resource_mappings": {
          "DirectoryId": {
            "template": "*"
          }
        }
      }
    ],
    "share-directory": [
      {
        "action": "ds:ShareDirectory",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "start-schema-extension": [
      {
        "action": "ds:StartSchemaExtension",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "unshare-directory": [
      {
        "action": "ds:UnshareDirectory",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "update-conditional-forwarder": [
      {
        "action": "ds:UpdateConditionalForwarder",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "update-directory-setup": [
      {
        "action": "ds:UpdateDirectorySetup",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "update-number-of-domain-controllers": [
      {
        "action": "ds:UpdateNumberOfDomainControllers",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "update-radius": [
      {
        "action": "ds:UpdateRadius",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "update-settings": [
      {
        "action": "ds:UpdateSettings",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "update-trust": [
      {
        "action": "ds:UpdateTrust",
        "resource_mappings": {
          "DirectoryId": {
            "template": "*"
          }
        }
      }
    ],
    "verify-trust": [
      {
        "action": "ds:VerifyTrust",
        "resource_mappings": {
          "DirectoryId": {
            "template": "*"
          }
        }
      }
    ]
  },
  "dynamodb": {
    "batch-execute-statement": [
      {
        "action": "dynamodb:PartiQLSelect",
        "resource_mappings": {},
        "conditions": {
          "lhs": "Statements[].Statement",
          "op": "IContains",
          "rhs": "SELECT "
        }
      },
      {
        "action": "dynamodb:PartiQLInsert",
        "resource_mappings": {},
        "conditions": {
          "lhs": "Statements[].Statement",
          "op": "IContains",
          "rhs": "INSERT "
        }
      },
      {
        "action": "dynamodb:PartiQLUpdate",
        "resource_mappings": {},
        "conditions": {
          "lhs": "Statements[].Statement",
          "op": "IContains",
          "rhs": "UPDATE "
        }
      },
      {
        "action": "dynamodb:PartiQLDelete",
        "resource_mappings": {},
        "conditions": {
          "lhs": "Statements[].Statement",
          "op": "IContains",
          "rhs": "DELETE "
        }
      }
    ],
    "batch-get-item": [
      {
        "action": "dynamodb:BatchGetItem",
        "resource_mappings": {
          "TableName": {
            "template": "*"
          }
        }
      }
    ],
    "batch-write-item": [
      {
        "action": "dynamodb:BatchWriteItem",
        "resource_mappings": {
          "TableName": {
            "template": "*"
          }
        }
      }
    ],
    "create-backup": [
      {
        "action": "dynamodb:CreateBackup",
        "resource_mappings": {
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "create-global-table": [
      {
        "action": "dynamodb:CreateGlobalTable",
        "resource_mappings": {
          "GlobalTableName": {
            "template": "${GlobalTableName}"
          },
          "TableName": {
            "template": "${GlobalTableName}"
          }
        }
      }
    ],
    "create-table": [
      {
        "action": "dynamodb:CreateTable",
        "resource_mappings": {
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "delete-backup": [
      {
        "action": "dynamodb:DeleteBackup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "backup": "${BackupArn}"
        }
      }
    ],
    "delete-item": [
      {
        "action": "dynamodb:DeleteItem",
        "resource_mappings": {
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "delete-table": [
      {
        "action": "dynamodb:DeleteTable",
        "resource_mappings": {
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "describe-backup": [
      {
        "action": "dynamodb:DescribeBackup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "backup": "${BackupArn}"
        }
      }
    ],
    "describe-continuous-backups": [
      {
        "action": "dynamodb:DescribeContinuousBackups",
        "resource_mappings": {
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "describe-contributor-insights": [
      {
        "action": "dynamodb:DescribeContributorInsights",
        "resource_mappings": {
          "TableName": {
            "template": "${TableName}"
          },
          "IndexName": {
            "template": "${IndexName}"
          }
        }
      }
    ],
    "describe-endpoints": [
      {
        "action": "dynamodb:DescribeEndpoints",
        "resource_mappings": {}
      }
    ],
    "describe-export": [
      {
        "action": "dynamodb:DescribeExport",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "export": "${ExportArn}"
        }
      }
    ],
    "describe-global-table": [
      {
        "action": "dynamodb:DescribeGlobalTable",
        "resource_mappings": {
          "GlobalTableName": {
            "template": "${GlobalTableName}"
          }
        }
      }
    ],
    "describe-global-table-settings": [
      {
        "action": "dynamodb:DescribeGlobalTableSettings",
        "resource_mappings": {
          "GlobalTableName": {
            "template": "${GlobalTableName}"
          }
        }
      }
    ],
    "describe-import": [
      {
        "action": "dynamodb:DescribeImport",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "import": "${ImportArn}"
        }
      }
    ],
    "describe-kinesis-streaming-destination": [
      {
        "action": "dynamodb:DescribeKinesisStreamingDestination",
        "resource_mappings": {
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "describe-limits": [
      {
        "action": "dynamodb:DescribeLimits",
        "resource_mappings": {}
      }
    ],
    "describe-table": [
      {
        "action": "dynamodb:DescribeTable",
        "resource_mappings": {
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "describe-table-replica-auto-scaling": [
      {
        "action": "dynamodb:DescribeTableReplicaAutoScaling",
        "resource_mappings": {
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "describe-time-to-live": [
      {
        "action": "dynamodb:DescribeTimeToLive",
        "resource_mappings": {
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "disable-kinesis-streaming-destination": [
      {
        "action": "dynamodb:DisableKinesisStreamingDestination",
        "resource_mappings": {
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "enable-kinesis-streaming-destination": [
      {
        "action": "dynamodb:EnableKinesisStreamingDestination",
        "resource_mappings": {
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "execute-statement": [
      {
        "action": "dynamodb:PartiQLSelect",
        "resource_mappings": {},
        "conditions": {
          "lhs": "Statement",
          "op": "IContains",
          "rhs": "SELECT "
        }
      },
      {
        "action": "dynamodb:PartiQLInsert",
        "resource_mappings": {},
        "conditions": {
          "lhs": "Statement",
          "op": "IContains",
          "rhs": "INSERT "
        }
      },
      {
        "action": "dynamodb:PartiQLUpdate",
        "resource_mappings": {},
        "conditions": {
          "lhs": "Statement",
          "op": "IContains",
          "rhs": "UPDATE "
        }
      },
      {
        "action": "dynamodb:PartiQLDelete",
        "resource_mappings": {},
        "conditions": {
          "lhs": "Statement",
          "op": "IContains",
          "rhs": "DELETE "
        }
      }
    ],
    "execute-transaction": [
      {
        "action": "dynamodb:PartiQLSelect",
        "resource_mappings": {},
        "conditions": {
          "lhs": "TransactStatements[].Statement",
          "op": "IContains",
          "rhs": "SELECT "
        }
      },
      {
        "action": "dynamodb:PartiQLInsert",
        "resource_mappings": {},
        "conditions": {
          "lhs": "TransactStatements[].Statement",
          "op": "IContains",
          "rhs": "INSERT "
        }
      },
      {
        "action": "dynamodb:PartiQLUpdate",
        "resource_mappings": {},
        "conditions": {
          "lhs": "TransactStatements[].Statement",
          "op": "IContains",
          "rhs": "UPDATE "
        }
      },
      {
        "action": "dynamodb:PartiQLDelete",
        "resource_mappings": {},
        "conditions": {
          "lhs": "TransactStatements[].Statement",
          "op": "IContains",
          "rhs": "DELETE "
        }
      }
    ],
    "export-table-to-point-in-time": [
      {
        "action": "dynamodb:ExportTableToPointInTime",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "table": "${TableArn}"
        }
      }
    ],
    "get-item": [
      {
        "action": "dynamodb:GetItem",
        "resource_mappings": {
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "import-table": [
      {
        "action": "dynamodb:ImportTable",
        "resource_mappings": {
          "TableName": {
            "template": "${TableCreationParameters.TableName}"
          }
        }
      }
    ],
    "list-backups": [
      {
        "action": "dynamodb:ListBackups",
        "resource_mappings": {}
      }
    ],
    "list-contributor-insights": [
      {
        "action": "dynamodb:ListContributorInsights",
        "resource_mappings": {}
      }
    ],
    "list-exports": [
      {
        "action": "dynamodb:ListExports",
        "resource_mappings": {}
      }
    ],
    "list-global-tables": [
      {
        "action": "dynamodb:ListGlobalTables",
        "resource_mappings": {}
      }
    ],
    "list-imports": [
      {
        "action": "dynamodb:ListImports",
        "resource_mappings": {}
      }
    ],
    "list-tables": [
      {
        "action": "dynamodb:ListTables",
        "resource_mappings": {}
      }
    ],
    "list-tags-of-resource": [
      {
        "action": "dynamodb:ListTagsOfResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "table": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "put-item": [
      {
        "action": "dynamodb:PutItem",
        "resource_mappings": {
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "query": [
      {
        "action": "dynamodb:Query",
        "resource_mappings": {
          "TableName": {
            "template": "${TableName}"
          },
          "IndexName": {
            "template": "${IndexName}"
          }
        }
      }
    ],
    "restore-table-from-backup": [
      {
        "action": "dynamodb:RestoreTableFromBackup",
        "resource_mappings": {
          "TableName": {
            "template": "${TargetTableName}"
          }
        },
        "resourcearn_mappings": {
          "backup": "${BackupArn}"
        }
      }
    ],
    "restore-table-to-point-in-time": [
      {
        "action": "dynamodb:RestoreTableToPointInTime",
        "resource_mappings": {
          "TableName": {
            "template": "%%many%${SourceTableName}%${TargetTableName}%%"
          }
        }
      },
      {
        "action": "dynamodb:RestoreTableToPointInTime",
        "arn_override": {
          "template": "${SourceTableArn}"
        }
      }
    ],
    "scan": [
      {
        "action": "dynamodb:Scan",
        "resource_mappings": {
          "TableName": {
            "template": "${TableName}"
          },
          "IndexName": {
            "template": "${IndexName}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "dynamodb:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "table": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "transact-get-items": [
      {
        "action": "dynamodb:GetItem",
        "resource_mappings": {
          "TableName": {
            "template": "${TransactItems[].Get.TableName}"
          }
        }
      }
    ],
    "transact-write-items": [
      {
        "action": "dynamodb:ConditionCheckItem",
        "resource_mappings": {
          "TableName": {
            "template": "${TransactItems[].ConditionCheck.TableName}"
          }
        },
        "conditions": {
          "lhs": "TransactItems[].ConditionCheck",
          "op": "Exists"
        }
      },
      {
        "action": "dynamodb:PutItem",
        "resource_mappings": {
          "TableName": {
            "template": "${TransactItems[].Put.TableName}"
          }
        },
        "conditions": {
          "lhs": "TransactItems[].Put",
          "op": "Exists"
        }
      },
      {
        "action": "dynamodb:UpdateItem",
        "resource_mappings": {
          "TableName": {
            "template": "${TransactItems[].Update.TableName}"
          }
        },
        "conditions": {
          "lhs": "TransactItems[].Update",
          "op": "Exists"
        }
      },
      {
        "action": "dynamodb:DeleteItem",
        "resource_mappings": {
          "TableName": {
            "template": "${TransactItems[].Delete.TableName}"
          }
        },
        "conditions": {
          "lhs": "TransactItems[].Delete",
          "op": "Exists"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "dynamodb:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "table": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-continuous-backups": [
      {
        "action": "dynamodb:UpdateContinuousBackups",
        "resource_mappings": {
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "update-contributor-insights": [
      {
        "action": "dynamodb:UpdateContributorInsights",
        "resource_mappings": {
          "TableName": {
            "template": "${TableName}"
          },
          "IndexName": {
            "template": "${IndexName}"
          }
        }
      }
    ],
    "update-global-table": [
      {
        "action": "dynamodb:UpdateGlobalTable",
        "resource_mappings": {
          "GlobalTableName": {
            "template": "${GlobalTableName}"
          },
          "TableName": {
            "template": "${GlobalTableName}"
          }
        }
      }
    ],
    "update-global-table-settings": [
      {
        "action": "dynamodb:UpdateGlobalTableSettings",
        "resource_mappings": {
          "GlobalTableName": {
            "template": "${GlobalTableName}"
          },
          "TableName": {
            "template": "${GlobalTableName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate.AutoScalingRoleArn}"
        }
      }
    ],
    "update-item": [
      {
        "action": "dynamodb:UpdateItem",
        "resource_mappings": {
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "update-table": [
      {
        "action": "dynamodb:UpdateTable",
        "resource_mappings": {
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "update-table-replica-auto-scaling": [
      {
        "action": "dynamodb:UpdateTableReplicaAutoScaling",
        "resource_mappings": {
          "TableName": {
            "template": "${TableName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${ProvisionedWriteCapacityAutoScalingUpdate.AutoScalingRoleArn}"
        }
      }
    ],
    "update-time-to-live": [
      {
        "action": "dynamodb:UpdateTimeToLive",
        "resource_mappings": {
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "dynamodb:DescribeTable",
        "resource_mappings": {
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ]
  },
  "dynamodbstreams": {
    "describe-stream": [
      {
        "action": "dynamodb:DescribeStream",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stream": "${StreamArn}"
        }
      }
    ],
    "get-records": [
      {
        "action": "dynamodb:GetRecords",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stream": "%%regex%${ShardIterator}%/^(.+)\\|/g%%"
        }
      }
    ],
    "get-shard-iterator": [
      {
        "action": "dynamodb:GetShardIterator",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stream": "${StreamArn}"
        }
      }
    ],
    "list-streams": [
      {
        "action": "dynamodb:ListStreams",
        "resource_mappings": {}
      }
    ]
  },
  "ebs": {
    "complete-snapshot": [
      {
        "action": "ebs:CompleteSnapshot",
        "resource_mappings": {
          "SnapshotId": {
            "template": "${SnapshotId}"
          }
        }
      }
    ],
    "get-snapshot-block": [
      {
        "action": "ebs:GetSnapshotBlock",
        "resource_mappings": {
          "SnapshotId": {
            "template": "${SnapshotId}"
          }
        }
      }
    ],
    "list-changed-blocks": [
      {
        "action": "ebs:ListChangedBlocks",
        "resource_mappings": {
          "SnapshotId": {
            "template": "%%many%${FirstSnapshotId}%${SecondSnapshotId}%%"
          }
        }
      }
    ],
    "list-snapshot-blocks": [
      {
        "action": "ebs:ListSnapshotBlocks",
        "resource_mappings": {
          "SnapshotId": {
            "template": "${SnapshotId}"
          }
        }
      }
    ],
    "put-snapshot-block": [
      {
        "action": "ebs:PutSnapshotBlock",
        "resource_mappings": {
          "SnapshotId": {
            "template": "${SnapshotId}"
          }
        }
      }
    ],
    "start-snapshot": [
      {
        "action": "ebs:StartSnapshot",
        "resource_mappings": {
          "SnapshotId": {
            "template": "*"
          }
        }
      }
    ]
  },
  "ec2": {
    "accept-address-transfer": [
      {
        "action": "ec2:AcceptAddressTransfer",
        "resource_mappings": {
          "AllocationId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "*"
          },
          "CapacityReservationFleetId": {
            "template": "*"
          },
          "CarrierGatewayId": {
            "template": "*"
          },
          "ClientVpnEndpointId": {
            "template": "*"
          },
          "Ipv4PoolCoipId": {
            "template": "*"
          },
          "CustomerGatewayId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "DhcpOptionsId": {
            "template": "*"
          },
          "EgressOnlyInternetGatewayId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "AllocationId": {
            "template": "*"
          },
          "ExportImageTaskId": {
            "template": "*"
          },
          "ExportTaskId": {
            "template": "*"
          },
          "FleetId": {
            "template": "*"
          },
          "FpgaImageId": {
            "template": "*"
          },
          "HostReservationId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "ImportImageTaskId": {
            "template": "*"
          },
          "ImportSnapshotTaskId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "InstanceEventWindowId": {
            "template": "*"
          },
          "InternetGatewayId": {
            "template": "*"
          },
          "IpamId": {
            "template": "*"
          },
          "IpamPoolId": {
            "template": "*"
          },
          "IpamScopeId": {
            "template": "*"
          },
          "Ipv4PoolEc2Id": {
            "template": "*"
          },
          "Ipv6PoolEc2Id": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "LocalGatewayId": {
            "template": "*"
          },
          "LocalGatewayRoutetableId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVpcAssociationId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "template": "*"
          },
          "NatGatewayId": {
            "template": "*"
          },
          "NaclId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeAnalysisId": {
            "template": "*"
          },
          "NetworkInsightsAnalysisId": {
            "template": "*"
          },
          "NetworkInsightsPathId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "PrefixListId": {
            "template": "*"
          },
          "ReplaceRootVolumeTaskId": {
            "template": "*"
          },
          "ReservationId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SecurityGroupRuleId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SpotFleetRequestId": {
            "template": "*"
          },
          "SpotInstanceRequestId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SubnetCidrReservationId": {
            "template": "*"
          },
          "TrafficMirrorFilterId": {
            "template": "*"
          },
          "TrafficMirrorSessionId": {
            "template": "*"
          },
          "TrafficMirrorTargetId": {
            "template": "*"
          },
          "TransitGatewayId": {
            "template": "*"
          },
          "TransitGatewayAttachmentId": {
            "template": "*"
          },
          "TransitGatewayConnectPeerId": {
            "template": "*"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "*"
          },
          "TransitGatewayPolicyTableId": {
            "template": "*"
          },
          "TransitGatewayRouteTableId": {
            "template": "*"
          },
          "TransitGatewayRouteTableAnnouncementId": {
            "template": "*"
          },
          "VerifiedAccessEndpointId": {
            "template": "*"
          },
          "VerifiedAccessGroupId": {
            "template": "*"
          },
          "VerifiedAccessInstanceId": {
            "template": "*"
          },
          "VerifiedAccessPolicyId": {
            "template": "*"
          },
          "VerifiedAccessTrustProviderId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "VpcId": {
            "template": "*"
          },
          "VpcEndpointId": {
            "template": "*"
          },
          "VpcEndpointConnectionId": {
            "template": "*"
          },
          "VpcEndpointServiceId": {
            "template": "*"
          },
          "VpcEndpointServicePermissionId": {
            "template": "*"
          },
          "VpcFlowLogId": {
            "template": "*"
          },
          "VpcPeeringConnectionId": {
            "template": "*"
          },
          "VpnConnectionId": {
            "template": "*"
          },
          "VpnGatewayId": {
            "template": "*"
          }
        }
      }
    ],
    "accept-reserved-instances-exchange-quote": [
      {
        "action": "ec2:AcceptReservedInstancesExchangeQuote",
        "resource_mappings": {
          "ReservationId": {
            "template": "${ReservedInstanceIds[]}"
          }
        }
      }
    ],
    "accept-transit-gateway-multicast-domain-associations": [
      {
        "action": "ec2:AcceptTransitGatewayMulticastDomainAssociations",
        "resource_mappings": {
          "SubnetId": {
            "template": "${SubnetIds[]}"
          },
          "TransitGatewayAttachmentId": {
            "template": "${TransitGatewayAttachmentId}"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "${TransitGatewayMulticastDomainId}"
          }
        }
      }
    ],
    "accept-transit-gateway-peering-attachment": [
      {
        "action": "ec2:AcceptTransitGatewayPeeringAttachment",
        "resource_mappings": {
          "TransitGatewayAttachmentId": {
            "template": "${TransitGatewayAttachmentId}"
          }
        }
      }
    ],
    "accept-transit-gateway-vpc-attachment": [
      {
        "action": "ec2:AcceptTransitGatewayVpcAttachment",
        "resource_mappings": {
          "TransitGatewayAttachmentId": {
            "template": "${TransitGatewayAttachmentId}"
          }
        }
      }
    ],
    "accept-vpc-endpoint-connections": [
      {
        "action": "ec2:AcceptVpcEndpointConnections",
        "resource_mappings": {
          "VpcEndpointId": {
            "template": "${VpcEndpointIds[]}"
          },
          "VpcEndpointServiceId": {
            "template": "${ServiceId}"
          }
        }
      }
    ],
    "accept-vpc-peering-connection": [
      {
        "action": "ec2:AcceptVpcPeeringConnection",
        "resource_mappings": {
          "VpcId": {
            "template": "*"
          },
          "VpcPeeringConnectionId": {
            "template": "${VpcPeeringConnectionId}"
          }
        }
      }
    ],
    "advertise-byoip-cidr": [
      {
        "action": "ec2:AdvertiseByoipCidr",
        "resource_mappings": {}
      }
    ],
    "allocate-address": [
      {
        "action": "ec2:AllocateAddress",
        "resource_mappings": {
          "Ipv4PoolEc2Id": {
            "template": "${CustomerOwnedIpv4Pool}"
          }
        }
      }
    ],
    "allocate-hosts": [
      {
        "action": "ec2:AllocateHosts",
        "resource_mappings": {
          "DedicatedHostId": {
            "template": "*"
          }
        }
      }
    ],
    "allocate-ipam-pool-cidr": [
      {
        "action": "ec2:AllocateIpamPoolCidr",
        "resource_mappings": {
          "IpamPoolId": {
            "template": "${IpamPoolId}"
          }
        }
      }
    ],
    "apply-security-groups-to-client-vpn-target-network": [
      {
        "action": "ec2:ApplySecurityGroupsToClientVpnTargetNetwork",
        "resource_mappings": {
          "ClientVpnEndpointId": {
            "template": "${ClientVpnEndpointId}"
          },
          "SecurityGroupId": {
            "template": "${SecurityGroupIds[]}"
          },
          "VpcId": {
            "template": "${VpcId}"
          }
        }
      }
    ],
    "assign-ipv6-addresses": [
      {
        "action": "ec2:AssignIpv6Addresses",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "${NetworkInterfaceId}"
          }
        }
      }
    ],
    "assign-private-ip-addresses": [
      {
        "action": "ec2:AssignPrivateIpAddresses",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "${NetworkInterfaceId}"
          }
        }
      }
    ],
    "assign-private-nat-gateway-address": [
      {
        "action": "ec2:AssignPrivateNatGatewayAddress",
        "resource_mappings": {
          "NatGatewayId": {
            "template": "${NatGatewayId}"
          }
        }
      }
    ],
    "associate-address": [
      {
        "action": "ec2:AssociateAddress",
        "resource_mappings": {
          "AllocationId": {
            "template": "${AllocationId}"
          },
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "NetworkInterfaceId": {
            "template": "${NetworkInterfaceId}"
          }
        }
      }
    ],
    "associate-client-vpn-target-network": [
      {
        "action": "ec2:AssociateClientVpnTargetNetwork",
        "resource_mappings": {
          "ClientVpnEndpointId": {
            "template": "${ClientVpnEndpointId}"
          },
          "SubnetId": {
            "template": "${SubnetId}"
          }
        }
      }
    ],
    "associate-dhcp-options": [
      {
        "action": "ec2:AssociateDhcpOptions",
        "resource_mappings": {
          "VpcId": {
            "template": "${VpcId}"
          }
        }
      }
    ],
    "associate-enclave-certificate-iam-role": [
      {
        "action": "ec2:AssociateEnclaveCertificateIamRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate": "${CertificateArn}",
          "role": "${RoleArn}"
        }
      }
    ],
    "associate-iam-instance-profile": [
      {
        "action": "ec2:AssociateIamInstanceProfile",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${IamInstanceProfile.Arn}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${IamInstanceProfile.Name}%*%%%"
        }
      }
    ],
    "associate-instance-event-window": [
      {
        "action": "ec2:AssociateInstanceEventWindow",
        "resource_mappings": {
          "InstanceEventWindowId": {
            "template": "${InstanceEventWindowId}"
          },
          "DedicatedHostId": {
            "template": "${AssociationTarget.DedicatedHostIds[]}"
          },
          "InstanceId": {
            "template": "${AssociationTarget.InstanceIds[]}"
          }
        }
      }
    ],
    "associate-ipam-resource-discovery": [
      {
        "action": "ec2:AssociateIpamResourceDiscovery",
        "resource_mappings": {
          "IpamId": {
            "template": "${IpamId}"
          },
          "IpamResourceDiscoveryId": {
            "template": "${IpamResourceDiscoveryId}"
          },
          "IpamResourceDiscoveryAssociationId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "*"
          },
          "CapacityReservationFleetId": {
            "template": "*"
          },
          "CarrierGatewayId": {
            "template": "*"
          },
          "ClientVpnEndpointId": {
            "template": "*"
          },
          "Ipv4PoolCoipId": {
            "template": "*"
          },
          "CustomerGatewayId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "DhcpOptionsId": {
            "template": "*"
          },
          "EgressOnlyInternetGatewayId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "AllocationId": {
            "template": "*"
          },
          "ExportImageTaskId": {
            "template": "*"
          },
          "ExportTaskId": {
            "template": "*"
          },
          "FleetId": {
            "template": "*"
          },
          "FpgaImageId": {
            "template": "*"
          },
          "HostReservationId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "ImportImageTaskId": {
            "template": "*"
          },
          "ImportSnapshotTaskId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "InstanceEventWindowId": {
            "template": "*"
          },
          "InternetGatewayId": {
            "template": "*"
          },
          "IpamId": {
            "template": "*"
          },
          "IpamPoolId": {
            "template": "*"
          },
          "IpamResourceDiscoveryId": {
            "template": "*"
          },
          "IpamResourceDiscoveryAssociationId": {
            "template": "*"
          },
          "IpamScopeId": {
            "template": "*"
          },
          "Ipv4PoolEc2Id": {
            "template": "*"
          },
          "Ipv6PoolEc2Id": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "LocalGatewayId": {
            "template": "*"
          },
          "LocalGatewayRoutetableId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVpcAssociationId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "template": "*"
          },
          "NatGatewayId": {
            "template": "*"
          },
          "NaclId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeAnalysisId": {
            "template": "*"
          },
          "NetworkInsightsAnalysisId": {
            "template": "*"
          },
          "NetworkInsightsPathId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "PrefixListId": {
            "template": "*"
          },
          "ReplaceRootVolumeTaskId": {
            "template": "*"
          },
          "ReservationId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SecurityGroupRuleId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SpotFleetRequestId": {
            "template": "*"
          },
          "SpotInstanceRequestId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SubnetCidrReservationId": {
            "template": "*"
          },
          "TrafficMirrorFilterId": {
            "template": "*"
          },
          "TrafficMirrorSessionId": {
            "template": "*"
          },
          "TrafficMirrorTargetId": {
            "template": "*"
          },
          "TransitGatewayId": {
            "template": "*"
          },
          "TransitGatewayAttachmentId": {
            "template": "*"
          },
          "TransitGatewayConnectPeerId": {
            "template": "*"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "*"
          },
          "TransitGatewayPolicyTableId": {
            "template": "*"
          },
          "TransitGatewayRouteTableId": {
            "template": "*"
          },
          "TransitGatewayRouteTableAnnouncementId": {
            "template": "*"
          },
          "VerifiedAccessEndpointId": {
            "template": "*"
          },
          "VerifiedAccessGroupId": {
            "template": "*"
          },
          "VerifiedAccessInstanceId": {
            "template": "*"
          },
          "VerifiedAccessPolicyId": {
            "template": "*"
          },
          "VerifiedAccessTrustProviderId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "VpcId": {
            "template": "*"
          },
          "VpcEndpointId": {
            "template": "*"
          },
          "VpcEndpointConnectionId": {
            "template": "*"
          },
          "VpcEndpointServiceId": {
            "template": "*"
          },
          "VpcEndpointServicePermissionId": {
            "template": "*"
          },
          "VpcFlowLogId": {
            "template": "*"
          },
          "VpcPeeringConnectionId": {
            "template": "*"
          },
          "VpnConnectionId": {
            "template": "*"
          },
          "VpnGatewayId": {
            "template": "*"
          }
        }
      }
    ],
    "associate-nat-gateway-address": [
      {
        "action": "ec2:AssociateNatGatewayAddress",
        "resource_mappings": {
          "AllocationId": {
            "template": "${AllocationIds[]}"
          },
          "NatGatewayId": {
            "template": "${NatGatewayId}"
          }
        }
      }
    ],
    "associate-route-table": [
      {
        "action": "ec2:AssociateRouteTable",
        "resource_mappings": {
          "RouteTableId": {
            "template": "${RouteTableId}"
          },
          "InternetGatewayId": {
            "template": "%%regex%${GatewayId}%/^(igw.+)$/g%%"
          },
          "SubnetId": {
            "template": "${SubnetId}"
          },
          "VpnGatewayId": {
            "template": "%%regex%${GatewayId}%/^(vgw.+)$/g%%"
          }
        }
      }
    ],
    "associate-subnet-cidr-block": [
      {
        "action": "ec2:AssociateSubnetCidrBlock",
        "resource_mappings": {
          "SubnetId": {
            "template": "${SubnetId}"
          }
        }
      }
    ],
    "associate-transit-gateway-multicast-domain": [
      {
        "action": "ec2:AssociateTransitGatewayMulticastDomain",
        "resource_mappings": {
          "SubnetId": {
            "template": "${SubnetIds[]}"
          },
          "TransitGatewayAttachmentId": {
            "template": "${TransitGatewayAttachmentId}"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "${TransitGatewayMulticastDomainId}"
          }
        }
      }
    ],
    "associate-transit-gateway-policy-table": [
      {
        "action": "ec2:AssociateTransitGatewayPolicyTable",
        "resource_mappings": {
          "TransitGatewayAttachmentId": {
            "template": "${TransitGatewayAttachmentId}"
          },
          "TransitGatewayPolicyTableId": {
            "template": "${TransitGatewayPolicyTableId}"
          }
        }
      }
    ],
    "associate-transit-gateway-route-table": [
      {
        "action": "ec2:AssociateTransitGatewayRouteTable",
        "resource_mappings": {
          "TransitGatewayAttachmentId": {
            "template": "${TransitGatewayAttachmentId}"
          },
          "TransitGatewayRouteTableId": {
            "template": "${TransitGatewayRouteTableId}"
          }
        }
      }
    ],
    "associate-trunk-interface": [
      {
        "action": "ec2:AssociateTrunkInterface",
        "resource_mappings": {}
      }
    ],
    "associate-vpc-cidr-block": [
      {
        "action": "ec2:AssociateVpcCidrBlock",
        "resource_mappings": {
          "VpcId": {
            "template": "${VpcId}"
          },
          "Ipv6PoolEc2Id": {
            "template": "${Ipv6Pool}"
          }
        }
      }
    ],
    "attach-classic-link-vpc": [
      {
        "action": "ec2:AttachClassicLinkVpc",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "SecurityGroupId": {
            "template": "${Groups[]}"
          },
          "VpcId": {
            "template": "${VpcId}"
          }
        }
      }
    ],
    "attach-internet-gateway": [
      {
        "action": "ec2:AttachInternetGateway",
        "resource_mappings": {
          "InternetGatewayId": {
            "template": "${InternetGatewayId}"
          },
          "VpcId": {
            "template": "${VpcId}"
          }
        }
      }
    ],
    "attach-network-interface": [
      {
        "action": "ec2:AttachNetworkInterface",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "NetworkInterfaceId": {
            "template": "${NetworkInterfaceId}"
          }
        }
      }
    ],
    "attach-verified-access-trust-provider": [
      {
        "action": "ec2:AttachVerifiedAccessTrustProvider",
        "resource_mappings": {
          "VerifiedAccessInstanceId": {
            "template": "${VerifiedAccessInstanceId}"
          },
          "VerifiedAccessTrustProviderId": {
            "template": "${VerifiedAccessTrustProviderId}"
          }
        }
      }
    ],
    "attach-volume": [
      {
        "action": "ec2:AttachVolume",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "VolumeId": {
            "template": "${VolumeId}"
          }
        }
      }
    ],
    "attach-vpn-gateway": [
      {
        "action": "ec2:AttachVpnGateway",
        "resource_mappings": {
          "VpcId": {
            "template": "${VpcId}"
          },
          "VpnGatewayId": {
            "template": "${VpnGatewayId}"
          }
        }
      }
    ],
    "authorize-client-vpn-ingress": [
      {
        "action": "ec2:AuthorizeClientVpnIngress",
        "resource_mappings": {
          "ClientVpnEndpointId": {
            "template": "${ClientVpnEndpointId}"
          }
        }
      }
    ],
    "authorize-security-group-egress": [
      {
        "action": "ec2:AuthorizeSecurityGroupEgress",
        "resource_mappings": {
          "SecurityGroupId": {
            "template": "${GroupId}"
          }
        }
      }
    ],
    "authorize-security-group-ingress": [
      {
        "action": "ec2:AuthorizeSecurityGroupIngress",
        "resource_mappings": {
          "SecurityGroupId": {
            "template": "${GroupId}"
          }
        }
      }
    ],
    "bundle-instance": [
      {
        "action": "ec2:BundleInstance",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "cancel-bundle-task": [
      {
        "action": "ec2:CancelBundleTask",
        "resource_mappings": {}
      }
    ],
    "cancel-capacity-reservation": [
      {
        "action": "ec2:CancelCapacityReservation",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "${CapacityReservationId}"
          }
        }
      }
    ],
    "cancel-capacity-reservation-fleets": [
      {
        "action": "ec2:CancelCapacityReservationFleets",
        "resource_mappings": {
          "CapacityReservationFleetId": {
            "template": "${CapacityReservationFleetIds[]}"
          }
        }
      }
    ],
    "cancel-conversion-task": [
      {
        "action": "ec2:CancelConversionTask",
        "resource_mappings": {}
      }
    ],
    "cancel-export-task": [
      {
        "action": "ec2:CancelExportTask",
        "resource_mappings": {
          "ExportImageTaskId": {
            "template": "%%regex%${ExportTaskId}%/^(export-ami-.+)$/g%%"
          },
          "ExportTaskId": {
            "template": "%%regex%${ExportTaskId}%/^(export-i-.+)$/g%%"
          }
        }
      }
    ],
    "cancel-image-launch-permission": [
      {
        "action": "ec2:CancelImageLaunchPermission",
        "resource_mappings": {
          "ImageId": {
            "template": "${ImageId}"
          }
        }
      }
    ],
    "cancel-import-task": [
      {
        "action": "ec2:CancelImportTask",
        "resource_mappings": {
          "ImportImageTaskId": {
            "template": "%%regex%${ExportTaskId}%/^(export-ami-.+)$/g%%"
          },
          "ImportSnapshotTaskId": {
            "template": "%%regex%${ExportTaskId}%/^(export-i-.+)$/g%%"
          }
        }
      }
    ],
    "cancel-reserved-instances-listing": [
      {
        "action": "ec2:CancelReservedInstancesListing",
        "resource_mappings": {}
      }
    ],
    "cancel-spot-fleet-requests": [
      {
        "action": "ec2:CancelSpotFleetRequests",
        "resource_mappings": {
          "SpotFleetRequestId": {
            "template": "${SpotFleetRequestIds[]}"
          }
        }
      }
    ],
    "cancel-spot-instance-requests": [
      {
        "action": "ec2:CancelSpotInstanceRequests",
        "resource_mappings": {
          "SpotInstanceRequestId": {
            "template": "${SpotInstanceRequestIds[]}"
          }
        }
      }
    ],
    "confirm-product-instance": [
      {
        "action": "ec2:ConfirmProductInstance",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "copy-fpga-image": [
      {
        "action": "ec2:CopyFpgaImage",
        "resource_mappings": {
          "FpgaImageId": {
            "template": "*"
          }
        }
      }
    ],
    "copy-image": [
      {
        "action": "ec2:CopyImage",
        "resource_mappings": {
          "ImageId": {
            "template": "*"
          }
        }
      }
    ],
    "copy-snapshot": [
      {
        "action": "ec2:CopySnapshot",
        "resource_mappings": {
          "SnapshotId": {
            "template": "${SourceSnapshotId}"
          }
        }
      }
    ],
    "create-capacity-reservation": [
      {
        "action": "ec2:CreateCapacityReservation",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "*"
          }
        }
      }
    ],
    "create-capacity-reservation-fleet": [
      {
        "action": "ec2:CreateCapacityReservationFleet",
        "resource_mappings": {
          "CapacityReservationFleetId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "*"
          },
          "CapacityReservationFleetId": {
            "template": "*"
          },
          "ClientVpnEndpointId": {
            "template": "*"
          },
          "CustomerGatewayId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "DhcpOptionsId": {
            "template": "*"
          },
          "EgressOnlyInternetGatewayId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "AllocationId": {
            "template": "*"
          },
          "ExportImageTaskId": {
            "template": "*"
          },
          "ExportTaskId": {
            "template": "*"
          },
          "FleetId": {
            "template": "*"
          },
          "FpgaImageId": {
            "template": "*"
          },
          "HostReservationId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "ImportImageTaskId": {
            "template": "*"
          },
          "ImportSnapshotTaskId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "InstanceEventWindowId": {
            "template": "*"
          },
          "InternetGatewayId": {
            "template": "*"
          },
          "Ipv4PoolEc2Id": {
            "template": "*"
          },
          "Ipv6PoolEc2Id": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "LocalGatewayId": {
            "template": "*"
          },
          "LocalGatewayRoutetableId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVpcAssociationId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "template": "*"
          },
          "NatGatewayId": {
            "template": "*"
          },
          "NaclId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "PrefixListId": {
            "template": "*"
          },
          "ReplaceRootVolumeTaskId": {
            "template": "*"
          },
          "ReservationId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SecurityGroupRuleId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SpotFleetRequestId": {
            "template": "*"
          },
          "SpotInstanceRequestId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "TrafficMirrorFilterId": {
            "template": "*"
          },
          "TrafficMirrorSessionId": {
            "template": "*"
          },
          "TrafficMirrorTargetId": {
            "template": "*"
          },
          "TransitGatewayId": {
            "template": "*"
          },
          "TransitGatewayAttachmentId": {
            "template": "*"
          },
          "TransitGatewayConnectPeerId": {
            "template": "*"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "*"
          },
          "TransitGatewayRouteTableId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "VpcId": {
            "template": "*"
          },
          "VpcEndpointId": {
            "template": "*"
          },
          "VpcEndpointServiceId": {
            "template": "*"
          },
          "VpcFlowLogId": {
            "template": "*"
          },
          "VpcPeeringConnectionId": {
            "template": "*"
          },
          "VpnConnectionId": {
            "template": "*"
          },
          "VpnGatewayId": {
            "template": "*"
          }
        }
      }
    ],
    "create-carrier-gateway": [
      {
        "action": "ec2:CreateCarrierGateway",
        "resource_mappings": {
          "CarrierGatewayId": {
            "template": "*"
          },
          "VpcId": {
            "template": "${VpcId}"
          }
        }
      }
    ],
    "create-client-vpn-endpoint": [
      {
        "action": "ec2:CreateClientVpnEndpoint",
        "resource_mappings": {
          "ClientVpnEndpointId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "${SecurityGroupIds[]}"
          },
          "VpcId": {
            "template": "${VpcId}"
          }
        }
      }
    ],
    "create-client-vpn-route": [
      {
        "action": "ec2:CreateClientVpnRoute",
        "resource_mappings": {
          "ClientVpnEndpointId": {
            "template": "${ClientVpnEndpointId}"
          },
          "SubnetId": {
            "template": "${TargetVpcSubnetId}"
          }
        }
      }
    ],
    "create-coip-cidr": [
      {
        "action": "ec2:CreateCoipCidr",
        "resource_mappings": {
          "Ipv4PoolCoipId": {
            "template": "${CoipPoolId}"
          }
        }
      }
    ],
    "create-coip-pool": [
      {
        "action": "ec2:CreateCoipPool",
        "resource_mappings": {
          "LocalGatewayRoutetableId": {
            "template": "${LocalGatewayRouteTableId}"
          }
        }
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "*"
          },
          "CapacityReservationFleetId": {
            "template": "*"
          },
          "CarrierGatewayId": {
            "template": "*"
          },
          "ClientVpnEndpointId": {
            "template": "*"
          },
          "Ipv4PoolCoipId": {
            "template": "*"
          },
          "CustomerGatewayId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "DhcpOptionsId": {
            "template": "*"
          },
          "EgressOnlyInternetGatewayId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "AllocationId": {
            "template": "*"
          },
          "ExportImageTaskId": {
            "template": "*"
          },
          "ExportTaskId": {
            "template": "*"
          },
          "FleetId": {
            "template": "*"
          },
          "FpgaImageId": {
            "template": "*"
          },
          "HostReservationId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "ImportImageTaskId": {
            "template": "*"
          },
          "ImportSnapshotTaskId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "InstanceEventWindowId": {
            "template": "*"
          },
          "InternetGatewayId": {
            "template": "*"
          },
          "IpamId": {
            "template": "*"
          },
          "IpamPoolId": {
            "template": "*"
          },
          "IpamScopeId": {
            "template": "*"
          },
          "Ipv4PoolEc2Id": {
            "template": "*"
          },
          "Ipv6PoolEc2Id": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "LocalGatewayId": {
            "template": "*"
          },
          "LocalGatewayRoutetableId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVpcAssociationId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "template": "*"
          },
          "NatGatewayId": {
            "template": "*"
          },
          "NaclId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeAnalysisId": {
            "template": "*"
          },
          "NetworkInsightsAnalysisId": {
            "template": "*"
          },
          "NetworkInsightsPathId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "PrefixListId": {
            "template": "*"
          },
          "ReplaceRootVolumeTaskId": {
            "template": "*"
          },
          "ReservationId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SecurityGroupRuleId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SpotFleetRequestId": {
            "template": "*"
          },
          "SpotInstanceRequestId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SubnetCidrReservationId": {
            "template": "*"
          },
          "TrafficMirrorFilterId": {
            "template": "*"
          },
          "TrafficMirrorSessionId": {
            "template": "*"
          },
          "TrafficMirrorTargetId": {
            "template": "*"
          },
          "TransitGatewayId": {
            "template": "*"
          },
          "TransitGatewayAttachmentId": {
            "template": "*"
          },
          "TransitGatewayConnectPeerId": {
            "template": "*"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "*"
          },
          "TransitGatewayPolicyTableId": {
            "template": "*"
          },
          "TransitGatewayRouteTableId": {
            "template": "*"
          },
          "TransitGatewayRouteTableAnnouncementId": {
            "template": "*"
          },
          "VerifiedAccessEndpointId": {
            "template": "*"
          },
          "VerifiedAccessGroupId": {
            "template": "*"
          },
          "VerifiedAccessInstanceId": {
            "template": "*"
          },
          "VerifiedAccessPolicyId": {
            "template": "*"
          },
          "VerifiedAccessTrustProviderId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "VpcId": {
            "template": "*"
          },
          "VpcEndpointId": {
            "template": "*"
          },
          "VpcEndpointConnectionId": {
            "template": "*"
          },
          "VpcEndpointServiceId": {
            "template": "*"
          },
          "VpcEndpointServicePermissionId": {
            "template": "*"
          },
          "VpcFlowLogId": {
            "template": "*"
          },
          "VpcPeeringConnectionId": {
            "template": "*"
          },
          "VpnConnectionId": {
            "template": "*"
          },
          "VpnGatewayId": {
            "template": "*"
          }
        }
      }
    ],
    "create-customer-gateway": [
      {
        "action": "ec2:CreateCustomerGateway",
        "resource_mappings": {
          "CustomerGatewayId": {
            "template": "*"
          }
        }
      }
    ],
    "create-default-subnet": [
      {
        "action": "ec2:CreateDefaultSubnet",
        "resource_mappings": {}
      }
    ],
    "create-default-vpc": [
      {
        "action": "ec2:CreateDefaultVpc",
        "resource_mappings": {}
      }
    ],
    "create-dhcp-options": [
      {
        "action": "ec2:CreateDhcpOptions",
        "resource_mappings": {
          "DhcpOptionsId": {
            "template": "*"
          }
        }
      }
    ],
    "create-egress-only-internet-gateway": [
      {
        "action": "ec2:CreateEgressOnlyInternetGateway",
        "resource_mappings": {
          "EgressOnlyInternetGatewayId": {
            "template": "*"
          },
          "VpcId": {
            "template": "${VpcId}"
          }
        }
      }
    ],
    "create-fleet": [
      {
        "action": "ec2:CreateFleet",
        "resource_mappings": {
          "FleetId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "${LaunchTemplateConfigs[].LaunchTemplateSpecification.LaunchTemplateId}"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "${LaunchTemplateConfigs[].Overrides[].SubnetId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${LaunchTemplateConfigs[].LaunchTemplateSpecification.LaunchTemplateId}%*%%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${LaunchTemplateConfigs[].LaunchTemplateSpecification.LaunchTemplateName}%*%%%"
        }
      }
    ],
    "create-flow-logs": [
      {
        "action": "ec2:CreateFlowLogs",
        "resource_mappings": {
          "VpcFlowLogId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "VpcId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${DeliverLogsPermissionArn}"
        }
      },
      {
        "action": "logs:CreateLogDelivery",
        "resource_mappings": {}
      }
    ],
    "create-fpga-image": [
      {
        "action": "ec2:CreateFpgaImage",
        "resource_mappings": {
          "FpgaImageId": {
            "template": "*"
          }
        }
      }
    ],
    "create-image": [
      {
        "action": "ec2:CreateImage",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "create-instance-connect-endpoint": [
      {
        "action": "ec2:CreateInstanceConnectEndpoint",
        "resource_mappings": {
          "InstanceConnectEndpointId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "${SubnetId}"
          },
          "SecurityGroupId": {
            "template": "${SecurityGroupIds[]}"
          }
        }
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "*"
          },
          "CapacityReservationFleetId": {
            "template": "*"
          },
          "CarrierGatewayId": {
            "template": "*"
          },
          "ClientVpnEndpointId": {
            "template": "*"
          },
          "Ipv4PoolCoipId": {
            "template": "*"
          },
          "CustomerGatewayId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "DhcpOptionsId": {
            "template": "*"
          },
          "EgressOnlyInternetGatewayId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "AllocationId": {
            "template": "*"
          },
          "ExportImageTaskId": {
            "template": "*"
          },
          "ExportTaskId": {
            "template": "*"
          },
          "FleetId": {
            "template": "*"
          },
          "FpgaImageId": {
            "template": "*"
          },
          "HostReservationId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "ImportImageTaskId": {
            "template": "*"
          },
          "ImportSnapshotTaskId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "InstanceConnectEndpointId": {
            "template": "*"
          },
          "InstanceEventWindowId": {
            "template": "*"
          },
          "InternetGatewayId": {
            "template": "*"
          },
          "IpamId": {
            "template": "*"
          },
          "IpamPoolId": {
            "template": "*"
          },
          "IpamResourceDiscoveryId": {
            "template": "*"
          },
          "IpamResourceDiscoveryAssociationId": {
            "template": "*"
          },
          "IpamScopeId": {
            "template": "*"
          },
          "Ipv4PoolEc2Id": {
            "template": "*"
          },
          "Ipv6PoolEc2Id": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "LocalGatewayId": {
            "template": "*"
          },
          "LocalGatewayRoutetableId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVpcAssociationId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "template": "*"
          },
          "NatGatewayId": {
            "template": "*"
          },
          "NaclId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeAnalysisId": {
            "template": "*"
          },
          "NetworkInsightsAnalysisId": {
            "template": "*"
          },
          "NetworkInsightsPathId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "PrefixListId": {
            "template": "*"
          },
          "ReplaceRootVolumeTaskId": {
            "template": "*"
          },
          "ReservationId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SecurityGroupRuleId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SpotFleetRequestId": {
            "template": "*"
          },
          "SpotInstanceRequestId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SubnetCidrReservationId": {
            "template": "*"
          },
          "TrafficMirrorFilterId": {
            "template": "*"
          },
          "TrafficMirrorSessionId": {
            "template": "*"
          },
          "TrafficMirrorTargetId": {
            "template": "*"
          },
          "TransitGatewayId": {
            "template": "*"
          },
          "TransitGatewayAttachmentId": {
            "template": "*"
          },
          "TransitGatewayConnectPeerId": {
            "template": "*"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "*"
          },
          "TransitGatewayPolicyTableId": {
            "template": "*"
          },
          "TransitGatewayRouteTableId": {
            "template": "*"
          },
          "TransitGatewayRouteTableAnnouncementId": {
            "template": "*"
          },
          "VerifiedAccessEndpointId": {
            "template": "*"
          },
          "VerifiedAccessGroupId": {
            "template": "*"
          },
          "VerifiedAccessInstanceId": {
            "template": "*"
          },
          "VerifiedAccessPolicyId": {
            "template": "*"
          },
          "VerifiedAccessTrustProviderId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "VpcId": {
            "template": "*"
          },
          "VpcEndpointId": {
            "template": "*"
          },
          "VpcEndpointConnectionId": {
            "template": "*"
          },
          "VpcEndpointServiceId": {
            "template": "*"
          },
          "VpcEndpointServicePermissionId": {
            "template": "*"
          },
          "VpcFlowLogId": {
            "template": "*"
          },
          "VpcPeeringConnectionId": {
            "template": "*"
          },
          "VpnConnectionId": {
            "template": "*"
          },
          "VpnGatewayId": {
            "template": "*"
          }
        }
      }
    ],
    "create-instance-event-window": [
      {
        "action": "ec2:CreateInstanceEventWindow",
        "resource_mappings": {
          "InstanceEventWindowId": {
            "template": "*"
          }
        }
      }
    ],
    "create-instance-export-task": [
      {
        "action": "ec2:CreateInstanceExportTask",
        "resource_mappings": {
          "ExportTaskId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "create-internet-gateway": [
      {
        "action": "ec2:CreateInternetGateway",
        "resource_mappings": {
          "InternetGatewayId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "vpc": "%%iftruthy%${TagSpecifications[].ResourceType}%arn:${Partition}:ec2:${Region}:${Account}:internet-gateway/*%%%"
        }
      }
    ],
    "create-ipam": [
      {
        "action": "ec2:CreateIpam",
        "resource_mappings": {
          "IpamId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "*"
          },
          "CapacityReservationFleetId": {
            "template": "*"
          },
          "ClientVpnEndpointId": {
            "template": "*"
          },
          "CustomerGatewayId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "DhcpOptionsId": {
            "template": "*"
          },
          "EgressOnlyInternetGatewayId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "AllocationId": {
            "template": "*"
          },
          "ExportImageTaskId": {
            "template": "*"
          },
          "ExportTaskId": {
            "template": "*"
          },
          "FleetId": {
            "template": "*"
          },
          "FpgaImageId": {
            "template": "*"
          },
          "HostReservationId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "ImportImageTaskId": {
            "template": "*"
          },
          "ImportSnapshotTaskId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "InstanceEventWindowId": {
            "template": "*"
          },
          "InternetGatewayId": {
            "template": "*"
          },
          "IpamId": {
            "template": "*"
          },
          "IpamPoolId": {
            "template": "*"
          },
          "IpamScopeId": {
            "template": "*"
          },
          "Ipv4PoolEc2Id": {
            "template": "*"
          },
          "Ipv6PoolEc2Id": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "LocalGatewayId": {
            "template": "*"
          },
          "LocalGatewayRoutetableId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVpcAssociationId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "template": "*"
          },
          "NatGatewayId": {
            "template": "*"
          },
          "NaclId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeAnalysisId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "PrefixListId": {
            "template": "*"
          },
          "ReplaceRootVolumeTaskId": {
            "template": "*"
          },
          "ReservationId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SecurityGroupRuleId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SpotFleetRequestId": {
            "template": "*"
          },
          "SpotInstanceRequestId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "TrafficMirrorFilterId": {
            "template": "*"
          },
          "TrafficMirrorSessionId": {
            "template": "*"
          },
          "TrafficMirrorTargetId": {
            "template": "*"
          },
          "TransitGatewayId": {
            "template": "*"
          },
          "TransitGatewayAttachmentId": {
            "template": "*"
          },
          "TransitGatewayConnectPeerId": {
            "template": "*"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "*"
          },
          "TransitGatewayRouteTableId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "VpcId": {
            "template": "*"
          },
          "VpcEndpointId": {
            "template": "*"
          },
          "VpcEndpointServiceId": {
            "template": "*"
          },
          "VpcFlowLogId": {
            "template": "*"
          },
          "VpcPeeringConnectionId": {
            "template": "*"
          },
          "VpnConnectionId": {
            "template": "*"
          },
          "VpnGatewayId": {
            "template": "*"
          }
        }
      }
    ],
    "create-ipam-pool": [
      {
        "action": "ec2:CreateIpamPool",
        "resource_mappings": {
          "IpamPoolId": {
            "template": "*"
          },
          "IpamScopeId": {
            "template": "${IpamScopeId}"
          }
        }
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "*"
          },
          "CapacityReservationFleetId": {
            "template": "*"
          },
          "ClientVpnEndpointId": {
            "template": "*"
          },
          "CustomerGatewayId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "DhcpOptionsId": {
            "template": "*"
          },
          "EgressOnlyInternetGatewayId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "AllocationId": {
            "template": "*"
          },
          "ExportImageTaskId": {
            "template": "*"
          },
          "ExportTaskId": {
            "template": "*"
          },
          "FleetId": {
            "template": "*"
          },
          "FpgaImageId": {
            "template": "*"
          },
          "HostReservationId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "ImportImageTaskId": {
            "template": "*"
          },
          "ImportSnapshotTaskId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "InstanceEventWindowId": {
            "template": "*"
          },
          "InternetGatewayId": {
            "template": "*"
          },
          "IpamId": {
            "template": "*"
          },
          "IpamPoolId": {
            "template": "*"
          },
          "IpamScopeId": {
            "template": "*"
          },
          "Ipv4PoolEc2Id": {
            "template": "*"
          },
          "Ipv6PoolEc2Id": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "LocalGatewayId": {
            "template": "*"
          },
          "LocalGatewayRoutetableId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVpcAssociationId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "template": "*"
          },
          "NatGatewayId": {
            "template": "*"
          },
          "NaclId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeAnalysisId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "PrefixListId": {
            "template": "*"
          },
          "ReplaceRootVolumeTaskId": {
            "template": "*"
          },
          "ReservationId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SecurityGroupRuleId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SpotFleetRequestId": {
            "template": "*"
          },
          "SpotInstanceRequestId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "TrafficMirrorFilterId": {
            "template": "*"
          },
          "TrafficMirrorSessionId": {
            "template": "*"
          },
          "TrafficMirrorTargetId": {
            "template": "*"
          },
          "TransitGatewayId": {
            "template": "*"
          },
          "TransitGatewayAttachmentId": {
            "template": "*"
          },
          "TransitGatewayConnectPeerId": {
            "template": "*"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "*"
          },
          "TransitGatewayRouteTableId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "VpcId": {
            "template": "*"
          },
          "VpcEndpointId": {
            "template": "*"
          },
          "VpcEndpointServiceId": {
            "template": "*"
          },
          "VpcFlowLogId": {
            "template": "*"
          },
          "VpcPeeringConnectionId": {
            "template": "*"
          },
          "VpnConnectionId": {
            "template": "*"
          },
          "VpnGatewayId": {
            "template": "*"
          }
        }
      }
    ],
    "create-ipam-resource-discovery": [
      {
        "action": "ec2:CreateIpamResourceDiscovery",
        "resource_mappings": {
          "IpamResourceDiscoveryId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "*"
          },
          "CapacityReservationFleetId": {
            "template": "*"
          },
          "CarrierGatewayId": {
            "template": "*"
          },
          "ClientVpnEndpointId": {
            "template": "*"
          },
          "Ipv4PoolCoipId": {
            "template": "*"
          },
          "CustomerGatewayId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "DhcpOptionsId": {
            "template": "*"
          },
          "EgressOnlyInternetGatewayId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "AllocationId": {
            "template": "*"
          },
          "ExportImageTaskId": {
            "template": "*"
          },
          "ExportTaskId": {
            "template": "*"
          },
          "FleetId": {
            "template": "*"
          },
          "FpgaImageId": {
            "template": "*"
          },
          "HostReservationId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "ImportImageTaskId": {
            "template": "*"
          },
          "ImportSnapshotTaskId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "InstanceEventWindowId": {
            "template": "*"
          },
          "InternetGatewayId": {
            "template": "*"
          },
          "IpamId": {
            "template": "*"
          },
          "IpamPoolId": {
            "template": "*"
          },
          "IpamResourceDiscoveryId": {
            "template": "*"
          },
          "IpamResourceDiscoveryAssociationId": {
            "template": "*"
          },
          "IpamScopeId": {
            "template": "*"
          },
          "Ipv4PoolEc2Id": {
            "template": "*"
          },
          "Ipv6PoolEc2Id": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "LocalGatewayId": {
            "template": "*"
          },
          "LocalGatewayRoutetableId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVpcAssociationId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "template": "*"
          },
          "NatGatewayId": {
            "template": "*"
          },
          "NaclId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeAnalysisId": {
            "template": "*"
          },
          "NetworkInsightsAnalysisId": {
            "template": "*"
          },
          "NetworkInsightsPathId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "PrefixListId": {
            "template": "*"
          },
          "ReplaceRootVolumeTaskId": {
            "template": "*"
          },
          "ReservationId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SecurityGroupRuleId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SpotFleetRequestId": {
            "template": "*"
          },
          "SpotInstanceRequestId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SubnetCidrReservationId": {
            "template": "*"
          },
          "TrafficMirrorFilterId": {
            "template": "*"
          },
          "TrafficMirrorSessionId": {
            "template": "*"
          },
          "TrafficMirrorTargetId": {
            "template": "*"
          },
          "TransitGatewayId": {
            "template": "*"
          },
          "TransitGatewayAttachmentId": {
            "template": "*"
          },
          "TransitGatewayConnectPeerId": {
            "template": "*"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "*"
          },
          "TransitGatewayPolicyTableId": {
            "template": "*"
          },
          "TransitGatewayRouteTableId": {
            "template": "*"
          },
          "TransitGatewayRouteTableAnnouncementId": {
            "template": "*"
          },
          "VerifiedAccessEndpointId": {
            "template": "*"
          },
          "VerifiedAccessGroupId": {
            "template": "*"
          },
          "VerifiedAccessInstanceId": {
            "template": "*"
          },
          "VerifiedAccessPolicyId": {
            "template": "*"
          },
          "VerifiedAccessTrustProviderId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "VpcId": {
            "template": "*"
          },
          "VpcEndpointId": {
            "template": "*"
          },
          "VpcEndpointConnectionId": {
            "template": "*"
          },
          "VpcEndpointServiceId": {
            "template": "*"
          },
          "VpcEndpointServicePermissionId": {
            "template": "*"
          },
          "VpcFlowLogId": {
            "template": "*"
          },
          "VpcPeeringConnectionId": {
            "template": "*"
          },
          "VpnConnectionId": {
            "template": "*"
          },
          "VpnGatewayId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "create-ipam-scope": [
      {
        "action": "ec2:CreateIpamScope",
        "resource_mappings": {
          "IpamId": {
            "template": "${IpamId}"
          },
          "IpamScopeId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "*"
          },
          "CapacityReservationFleetId": {
            "template": "*"
          },
          "ClientVpnEndpointId": {
            "template": "*"
          },
          "CustomerGatewayId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "DhcpOptionsId": {
            "template": "*"
          },
          "EgressOnlyInternetGatewayId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "AllocationId": {
            "template": "*"
          },
          "ExportImageTaskId": {
            "template": "*"
          },
          "ExportTaskId": {
            "template": "*"
          },
          "FleetId": {
            "template": "*"
          },
          "FpgaImageId": {
            "template": "*"
          },
          "HostReservationId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "ImportImageTaskId": {
            "template": "*"
          },
          "ImportSnapshotTaskId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "InstanceEventWindowId": {
            "template": "*"
          },
          "InternetGatewayId": {
            "template": "*"
          },
          "IpamId": {
            "template": "*"
          },
          "IpamPoolId": {
            "template": "*"
          },
          "IpamScopeId": {
            "template": "*"
          },
          "Ipv4PoolEc2Id": {
            "template": "*"
          },
          "Ipv6PoolEc2Id": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "LocalGatewayId": {
            "template": "*"
          },
          "LocalGatewayRoutetableId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVpcAssociationId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "template": "*"
          },
          "NatGatewayId": {
            "template": "*"
          },
          "NaclId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeAnalysisId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "PrefixListId": {
            "template": "*"
          },
          "ReplaceRootVolumeTaskId": {
            "template": "*"
          },
          "ReservationId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SecurityGroupRuleId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SpotFleetRequestId": {
            "template": "*"
          },
          "SpotInstanceRequestId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "TrafficMirrorFilterId": {
            "template": "*"
          },
          "TrafficMirrorSessionId": {
            "template": "*"
          },
          "TrafficMirrorTargetId": {
            "template": "*"
          },
          "TransitGatewayId": {
            "template": "*"
          },
          "TransitGatewayAttachmentId": {
            "template": "*"
          },
          "TransitGatewayConnectPeerId": {
            "template": "*"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "*"
          },
          "TransitGatewayRouteTableId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "VpcId": {
            "template": "*"
          },
          "VpcEndpointId": {
            "template": "*"
          },
          "VpcEndpointServiceId": {
            "template": "*"
          },
          "VpcFlowLogId": {
            "template": "*"
          },
          "VpcPeeringConnectionId": {
            "template": "*"
          },
          "VpnConnectionId": {
            "template": "*"
          },
          "VpnGatewayId": {
            "template": "*"
          }
        }
      }
    ],
    "create-key-pair": [
      {
        "action": "ec2:CreateKeyPair",
        "resource_mappings": {
          "KeyPairName": {
            "template": "${KeyName}"
          }
        }
      }
    ],
    "create-launch-template": [
      {
        "action": "ec2:CreateLaunchTemplate",
        "resource_mappings": {
          "LaunchTemplateId": {
            "template": "*"
          },
          "CapacityReservationId": {
            "template": "${LaunchTemplateData.CapacityReservationSpecification.CapacityReservationTarget.CapacityReservationId}"
          },
          "DedicatedHostId": {
            "template": "${LaunchTemplateData.Placement.HostId}"
          },
          "ImageId": {
            "template": "${LaunchTemplateData.ImageId}"
          },
          "KeyPairName": {
            "template": "${LaunchTemplateData.KeyName}"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "${LaunchTemplateData.Placement.GroupName}"
          },
          "SecurityGroupId": {
            "template": "%%many%${LaunchTemplateData.NetworkInterfaces[].Groups[]}%${LaunchTemplateData.SecurityGroupIds[]}%%"
          },
          "SnapshotId": {
            "template": "${LaunchTemplateData.BlockDeviceMappings[].Ebs.SnapshotId}"
          },
          "SubnetId": {
            "template": "${LaunchTemplateData.NetworkInterfaces[].SubnetId}"
          }
        }
      }
    ],
    "create-launch-template-version": [
      {
        "action": "ec2:CreateLaunchTemplateVersion",
        "resource_mappings": {
          "LaunchTemplateId": {
            "template": "${LaunchTemplateId}"
          },
          "CapacityReservationId": {
            "template": "${LaunchTemplateData.CapacityReservationSpecification.CapacityReservationTarget.CapacityReservationId}"
          },
          "DedicatedHostId": {
            "template": "${LaunchTemplateData.Placement.HostId}"
          },
          "ImageId": {
            "template": "${LaunchTemplateData.ImageId}"
          },
          "KeyPairName": {
            "template": "${LaunchTemplateData.KeyName}"
          },
          "NetworkInterfaceId": {
            "template": "${LaunchTemplateData.NetworkInterfaces[].NetworkInterfaceId}"
          },
          "PlacementGroupName": {
            "template": "${LaunchTemplateData.Placement.GroupName}"
          },
          "SecurityGroupId": {
            "template": "%%many%${LaunchTemplateData.NetworkInterfaces[].Groups[]}%${LaunchTemplateData.SecurityGroupIds[]}%%"
          },
          "SnapshotId": {
            "template": "${LaunchTemplateData.BlockDeviceMappings[].Ebs.SnapshotId}"
          },
          "SubnetId": {
            "template": "${LaunchTemplateData.NetworkInterfaces[].SubnetId}"
          }
        }
      }
    ],
    "create-local-gateway-route": [
      {
        "action": "ec2:CreateLocalGatewayRoute",
        "resource_mappings": {
          "LocalGatewayRoutetableId": {
            "template": "${LocalGatewayRouteTableId}"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "template": "${LocalGatewayVirtualInterfaceGroupId}"
          }
        }
      }
    ],
    "create-local-gateway-route-table": [
      {
        "action": "ec2:CreateLocalGatewayRouteTable",
        "resource_mappings": {
          "LocalGatewayId": {
            "template": "${LocalGatewayId}"
          },
          "LocalGatewayRoutetableId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "*"
          },
          "CapacityReservationFleetId": {
            "template": "*"
          },
          "CarrierGatewayId": {
            "template": "*"
          },
          "ClientVpnEndpointId": {
            "template": "*"
          },
          "Ipv4PoolCoipId": {
            "template": "*"
          },
          "CustomerGatewayId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "DhcpOptionsId": {
            "template": "*"
          },
          "EgressOnlyInternetGatewayId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "AllocationId": {
            "template": "*"
          },
          "ExportImageTaskId": {
            "template": "*"
          },
          "ExportTaskId": {
            "template": "*"
          },
          "FleetId": {
            "template": "*"
          },
          "FpgaImageId": {
            "template": "*"
          },
          "HostReservationId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "ImportImageTaskId": {
            "template": "*"
          },
          "ImportSnapshotTaskId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "InstanceEventWindowId": {
            "template": "*"
          },
          "InternetGatewayId": {
            "template": "*"
          },
          "IpamId": {
            "template": "*"
          },
          "IpamPoolId": {
            "template": "*"
          },
          "IpamScopeId": {
            "template": "*"
          },
          "Ipv4PoolEc2Id": {
            "template": "*"
          },
          "Ipv6PoolEc2Id": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "LocalGatewayId": {
            "template": "*"
          },
          "LocalGatewayRoutetableId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVpcAssociationId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "template": "*"
          },
          "NatGatewayId": {
            "template": "*"
          },
          "NaclId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeAnalysisId": {
            "template": "*"
          },
          "NetworkInsightsAnalysisId": {
            "template": "*"
          },
          "NetworkInsightsPathId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "PrefixListId": {
            "template": "*"
          },
          "ReplaceRootVolumeTaskId": {
            "template": "*"
          },
          "ReservationId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SecurityGroupRuleId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SpotFleetRequestId": {
            "template": "*"
          },
          "SpotInstanceRequestId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SubnetCidrReservationId": {
            "template": "*"
          },
          "TrafficMirrorFilterId": {
            "template": "*"
          },
          "TrafficMirrorSessionId": {
            "template": "*"
          },
          "TrafficMirrorTargetId": {
            "template": "*"
          },
          "TransitGatewayId": {
            "template": "*"
          },
          "TransitGatewayAttachmentId": {
            "template": "*"
          },
          "TransitGatewayConnectPeerId": {
            "template": "*"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "*"
          },
          "TransitGatewayPolicyTableId": {
            "template": "*"
          },
          "TransitGatewayRouteTableId": {
            "template": "*"
          },
          "TransitGatewayRouteTableAnnouncementId": {
            "template": "*"
          },
          "VerifiedAccessEndpointId": {
            "template": "*"
          },
          "VerifiedAccessGroupId": {
            "template": "*"
          },
          "VerifiedAccessInstanceId": {
            "template": "*"
          },
          "VerifiedAccessPolicyId": {
            "template": "*"
          },
          "VerifiedAccessTrustProviderId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "VpcId": {
            "template": "*"
          },
          "VpcEndpointId": {
            "template": "*"
          },
          "VpcEndpointConnectionId": {
            "template": "*"
          },
          "VpcEndpointServiceId": {
            "template": "*"
          },
          "VpcEndpointServicePermissionId": {
            "template": "*"
          },
          "VpcFlowLogId": {
            "template": "*"
          },
          "VpcPeeringConnectionId": {
            "template": "*"
          },
          "VpnConnectionId": {
            "template": "*"
          },
          "VpnGatewayId": {
            "template": "*"
          }
        }
      }
    ],
    "create-local-gateway-route-table-virtual-interface-group-association": [
      {
        "action": "ec2:CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
        "resource_mappings": {
          "LocalGatewayRoutetableId": {
            "template": "${LocalGatewayRouteTableId}"
          },
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "template": "${LocalGatewayVirtualInterfaceGroupId}"
          }
        }
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "*"
          },
          "CapacityReservationFleetId": {
            "template": "*"
          },
          "CarrierGatewayId": {
            "template": "*"
          },
          "ClientVpnEndpointId": {
            "template": "*"
          },
          "Ipv4PoolCoipId": {
            "template": "*"
          },
          "CustomerGatewayId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "DhcpOptionsId": {
            "template": "*"
          },
          "EgressOnlyInternetGatewayId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "AllocationId": {
            "template": "*"
          },
          "ExportImageTaskId": {
            "template": "*"
          },
          "ExportTaskId": {
            "template": "*"
          },
          "FleetId": {
            "template": "*"
          },
          "FpgaImageId": {
            "template": "*"
          },
          "HostReservationId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "ImportImageTaskId": {
            "template": "*"
          },
          "ImportSnapshotTaskId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "InstanceEventWindowId": {
            "template": "*"
          },
          "InternetGatewayId": {
            "template": "*"
          },
          "IpamId": {
            "template": "*"
          },
          "IpamPoolId": {
            "template": "*"
          },
          "IpamScopeId": {
            "template": "*"
          },
          "Ipv4PoolEc2Id": {
            "template": "*"
          },
          "Ipv6PoolEc2Id": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "LocalGatewayId": {
            "template": "*"
          },
          "LocalGatewayRoutetableId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVpcAssociationId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "template": "*"
          },
          "NatGatewayId": {
            "template": "*"
          },
          "NaclId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeAnalysisId": {
            "template": "*"
          },
          "NetworkInsightsAnalysisId": {
            "template": "*"
          },
          "NetworkInsightsPathId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "PrefixListId": {
            "template": "*"
          },
          "ReplaceRootVolumeTaskId": {
            "template": "*"
          },
          "ReservationId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SecurityGroupRuleId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SpotFleetRequestId": {
            "template": "*"
          },
          "SpotInstanceRequestId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SubnetCidrReservationId": {
            "template": "*"
          },
          "TrafficMirrorFilterId": {
            "template": "*"
          },
          "TrafficMirrorSessionId": {
            "template": "*"
          },
          "TrafficMirrorTargetId": {
            "template": "*"
          },
          "TransitGatewayId": {
            "template": "*"
          },
          "TransitGatewayAttachmentId": {
            "template": "*"
          },
          "TransitGatewayConnectPeerId": {
            "template": "*"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "*"
          },
          "TransitGatewayPolicyTableId": {
            "template": "*"
          },
          "TransitGatewayRouteTableId": {
            "template": "*"
          },
          "TransitGatewayRouteTableAnnouncementId": {
            "template": "*"
          },
          "VerifiedAccessEndpointId": {
            "template": "*"
          },
          "VerifiedAccessGroupId": {
            "template": "*"
          },
          "VerifiedAccessInstanceId": {
            "template": "*"
          },
          "VerifiedAccessPolicyId": {
            "template": "*"
          },
          "VerifiedAccessTrustProviderId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "VpcId": {
            "template": "*"
          },
          "VpcEndpointId": {
            "template": "*"
          },
          "VpcEndpointConnectionId": {
            "template": "*"
          },
          "VpcEndpointServiceId": {
            "template": "*"
          },
          "VpcEndpointServicePermissionId": {
            "template": "*"
          },
          "VpcFlowLogId": {
            "template": "*"
          },
          "VpcPeeringConnectionId": {
            "template": "*"
          },
          "VpnConnectionId": {
            "template": "*"
          },
          "VpnGatewayId": {
            "template": "*"
          }
        }
      }
    ],
    "create-local-gateway-route-table-vpc-association": [
      {
        "action": "ec2:CreateLocalGatewayRouteTableVpcAssociation",
        "resource_mappings": {
          "LocalGatewayRoutetableId": {
            "template": "${LocalGatewayRouteTableId}"
          },
          "LocalGatewayRouteTableVpcAssociationId": {
            "template": "*"
          },
          "VpcId": {
            "template": "${VpcId}"
          }
        }
      }
    ],
    "create-managed-prefix-list": [
      {
        "action": "ec2:CreateManagedPrefixList",
        "resource_mappings": {
          "PrefixListId": {
            "template": "*"
          }
        }
      }
    ],
    "create-nat-gateway": [
      {
        "action": "ec2:CreateNatGateway",
        "resource_mappings": {
          "AllocationId": {
            "template": "${AllocationId}"
          },
          "NatGatewayId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "${SubnetId}"
          }
        }
      }
    ],
    "create-network-acl": [
      {
        "action": "ec2:CreateNetworkAcl",
        "resource_mappings": {
          "NaclId": {
            "template": "*"
          },
          "VpcId": {
            "template": "${VpcId}"
          }
        }
      }
    ],
    "create-network-acl-entry": [
      {
        "action": "ec2:CreateNetworkAclEntry",
        "resource_mappings": {
          "NaclId": {
            "template": "${NetworkAclId}"
          }
        }
      }
    ],
    "create-network-insights-access-scope": [
      {
        "action": "ec2:CreateNetworkInsightsAccessScope",
        "resource_mappings": {
          "NetworkInsightsAccessScopeId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "*"
          },
          "CapacityReservationFleetId": {
            "template": "*"
          },
          "ClientVpnEndpointId": {
            "template": "*"
          },
          "CustomerGatewayId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "DhcpOptionsId": {
            "template": "*"
          },
          "EgressOnlyInternetGatewayId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "AllocationId": {
            "template": "*"
          },
          "ExportImageTaskId": {
            "template": "*"
          },
          "ExportTaskId": {
            "template": "*"
          },
          "FleetId": {
            "template": "*"
          },
          "FpgaImageId": {
            "template": "*"
          },
          "HostReservationId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "ImportImageTaskId": {
            "template": "*"
          },
          "ImportSnapshotTaskId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "InstanceEventWindowId": {
            "template": "*"
          },
          "InternetGatewayId": {
            "template": "*"
          },
          "IpamId": {
            "template": "*"
          },
          "IpamPoolId": {
            "template": "*"
          },
          "IpamScopeId": {
            "template": "*"
          },
          "Ipv4PoolEc2Id": {
            "template": "*"
          },
          "Ipv6PoolEc2Id": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "LocalGatewayId": {
            "template": "*"
          },
          "LocalGatewayRoutetableId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVpcAssociationId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "template": "*"
          },
          "NatGatewayId": {
            "template": "*"
          },
          "NaclId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeAnalysisId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "PrefixListId": {
            "template": "*"
          },
          "ReplaceRootVolumeTaskId": {
            "template": "*"
          },
          "ReservationId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SecurityGroupRuleId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SpotFleetRequestId": {
            "template": "*"
          },
          "SpotInstanceRequestId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "TrafficMirrorFilterId": {
            "template": "*"
          },
          "TrafficMirrorSessionId": {
            "template": "*"
          },
          "TrafficMirrorTargetId": {
            "template": "*"
          },
          "TransitGatewayId": {
            "template": "*"
          },
          "TransitGatewayAttachmentId": {
            "template": "*"
          },
          "TransitGatewayConnectPeerId": {
            "template": "*"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "*"
          },
          "TransitGatewayRouteTableId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "VpcId": {
            "template": "*"
          },
          "VpcEndpointId": {
            "template": "*"
          },
          "VpcEndpointServiceId": {
            "template": "*"
          },
          "VpcFlowLogId": {
            "template": "*"
          },
          "VpcPeeringConnectionId": {
            "template": "*"
          },
          "VpnConnectionId": {
            "template": "*"
          },
          "VpnGatewayId": {
            "template": "*"
          }
        }
      }
    ],
    "create-network-insights-path": [
      {
        "action": "ec2:CreateNetworkInsightsPath",
        "resource_mappings": {
          "NetworkInsightsPathId": {
            "template": "*"
          }
        }
      }
    ],
    "create-network-interface": [
      {
        "action": "ec2:CreateNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "${SubnetId}"
          },
          "SecurityGroupId": {
            "template": "${Groups[]}"
          }
        }
      }
    ],
    "create-network-interface-permission": [
      {
        "action": "ec2:CreateNetworkInterfacePermission",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "${NetworkInterfaceId}"
          }
        }
      }
    ],
    "create-placement-group": [
      {
        "action": "ec2:CreatePlacementGroup",
        "resource_mappings": {
          "PlacementGroupName": {
            "template": "${GroupName}"
          }
        }
      }
    ],
    "create-public-ipv4-pool": [
      {
        "action": "ec2:CreatePublicIpv4Pool",
        "resource_mappings": {
          "NetworkInsightsAccessScopeId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "*"
          },
          "CapacityReservationFleetId": {
            "template": "*"
          },
          "ClientVpnEndpointId": {
            "template": "*"
          },
          "CustomerGatewayId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "DhcpOptionsId": {
            "template": "*"
          },
          "EgressOnlyInternetGatewayId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "AllocationId": {
            "template": "*"
          },
          "ExportImageTaskId": {
            "template": "*"
          },
          "ExportTaskId": {
            "template": "*"
          },
          "FleetId": {
            "template": "*"
          },
          "FpgaImageId": {
            "template": "*"
          },
          "HostReservationId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "ImportImageTaskId": {
            "template": "*"
          },
          "ImportSnapshotTaskId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "InstanceEventWindowId": {
            "template": "*"
          },
          "InternetGatewayId": {
            "template": "*"
          },
          "IpamId": {
            "template": "*"
          },
          "IpamPoolId": {
            "template": "*"
          },
          "IpamScopeId": {
            "template": "*"
          },
          "Ipv4PoolEc2Id": {
            "template": "*"
          },
          "Ipv6PoolEc2Id": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "LocalGatewayId": {
            "template": "*"
          },
          "LocalGatewayRoutetableId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVpcAssociationId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "template": "*"
          },
          "NatGatewayId": {
            "template": "*"
          },
          "NaclId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeAnalysisId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "PrefixListId": {
            "template": "*"
          },
          "ReplaceRootVolumeTaskId": {
            "template": "*"
          },
          "ReservationId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SecurityGroupRuleId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SpotFleetRequestId": {
            "template": "*"
          },
          "SpotInstanceRequestId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "TrafficMirrorFilterId": {
            "template": "*"
          },
          "TrafficMirrorSessionId": {
            "template": "*"
          },
          "TrafficMirrorTargetId": {
            "template": "*"
          },
          "TransitGatewayId": {
            "template": "*"
          },
          "TransitGatewayAttachmentId": {
            "template": "*"
          },
          "TransitGatewayConnectPeerId": {
            "template": "*"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "*"
          },
          "TransitGatewayRouteTableId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "VpcId": {
            "template": "*"
          },
          "VpcEndpointId": {
            "template": "*"
          },
          "VpcEndpointServiceId": {
            "template": "*"
          },
          "VpcFlowLogId": {
            "template": "*"
          },
          "VpcPeeringConnectionId": {
            "template": "*"
          },
          "VpnConnectionId": {
            "template": "*"
          },
          "VpnGatewayId": {
            "template": "*"
          }
        }
      }
    ],
    "create-replace-root-volume-task": [
      {
        "action": "ec2:CreateReplaceRootVolumeTask",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "SnapshotId": {
            "template": "${SnapshotId}"
          }
        }
      }
    ],
    "create-reserved-instances-listing": [
      {
        "action": "ec2:CreateReservedInstancesListing",
        "resource_mappings": {
          "ReservationId": {
            "template": "*"
          }
        }
      }
    ],
    "create-restore-image-task": [
      {
        "action": "ec2:CreateRestoreImageTask",
        "resource_mappings": {
          "ImageId": {
            "template": "*"
          }
        }
      }
    ],
    "create-route": [
      {
        "action": "ec2:CreateRoute",
        "resource_mappings": {
          "RouteTableId": {
            "template": "${RouteTableId}"
          },
          "CarrierGatewayId": {
            "template": "${CarrierGatewayId}"
          },
          "EgressOnlyInternetGatewayId": {
            "template": "${EgressOnlyInternetGatewayId}"
          },
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "InternetGatewayId": {
            "template": "%%regex%${GatewayId}%/^(igw.+)$/g%%"
          },
          "LocalGatewayId": {
            "template": "${LocalGatewayId}"
          },
          "NatGatewayId": {
            "template": "${NatGatewayId}"
          },
          "NetworkInterfaceId": {
            "template": "${NetworkInterfaceId}"
          },
          "PrefixListId": {
            "template": "${DestinationPrefixListId}"
          },
          "TransitGatewayId": {
            "template": "${TransitGatewayId}"
          },
          "VpcPeeringConnectionId": {
            "template": "${VpcPeeringConnectionId}"
          },
          "VpnGatewayId": {
            "template": "%%regex%${GatewayId}%/^(vgw.+)$/g%%"
          }
        }
      }
    ],
    "create-route-table": [
      {
        "action": "ec2:CreateRouteTable",
        "resource_mappings": {
          "VpcId": {
            "template": "${VpcId}"
          }
        }
      }
    ],
    "create-security-group": [
      {
        "action": "ec2:CreateSecurityGroup",
        "resource_mappings": {
          "SecurityGroupId": {
            "template": "*"
          },
          "VpcId": {
            "template": "${VpcId}"
          }
        }
      }
    ],
    "create-snapshot": [
      {
        "action": "ec2:CreateSnapshot",
        "resource_mappings": {
          "SnapshotId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "${VolumeId}"
          }
        }
      }
    ],
    "create-snapshots": [
      {
        "action": "ec2:CreateSnapshots",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceSpecification.InstanceId}"
          },
          "SnapshotId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          }
        }
      }
    ],
    "create-spot-datafeed-subscription": [
      {
        "action": "ec2:CreateSpotDatafeedSubscription",
        "resource_mappings": {}
      }
    ],
    "create-store-image-task": [
      {
        "action": "ec2:CreateStoreImageTask",
        "resource_mappings": {
          "ImageId": {
            "template": "${ImageId}"
          }
        }
      }
    ],
    "create-subnet": [
      {
        "action": "ec2:CreateSubnet",
        "resource_mappings": {
          "SubnetId": {
            "template": "*"
          },
          "VpcId": {
            "template": "${VpcId}"
          }
        }
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "vpc": "%%iftruthy%${TagSpecifications[].ResourceType}%arn:${Partition}:ec2:${Region}:${Account}:subnet/*%%%"
        }
      }
    ],
    "create-subnet-cidr-reservation": [
      {
        "action": "ec2:CreateSubnetCidrReservation",
        "resource_mappings": {}
      }
    ],
    "create-tags": [
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "capacity-reservation": "%%iftemplatematch%${Resources[]}%%",
          "client-vpn-endpoint": "%%iftemplatematch%${Resources[]}%%",
          "customer-gateway": "%%iftemplatematch%${Resources[]}%%",
          "dedicated-host": "%%iftemplatematch%${Resources[]}%%",
          "dhcp-options": "%%iftemplatematch%${Resources[]}%%",
          "egress-only-internet-gateway": "%%iftemplatematch%${Resources[]}%%",
          "elastic-gpu": "%%iftemplatematch%${Resources[]}%%",
          "elastic-ip": "%%iftemplatematch%${Resources[]}%%",
          "export-image-task": "%%iftemplatematch%${Resources[]}%%",
          "export-instance-task": "%%iftemplatematch%${Resources[]}%%",
          "fleet": "%%iftemplatematch%${Resources[]}%%",
          "fpga-image": "%%iftemplatematch%${Resources[]}%%",
          "host-reservation": "%%iftemplatematch%${Resources[]}%%",
          "image": "%%iftemplatematch%${Resources[]}%%",
          "import-image-task": "%%iftemplatematch%${Resources[]}%%",
          "import-snapshot-task": "%%iftemplatematch%${Resources[]}%%",
          "instance": "%%iftemplatematch%${Resources[]}%%",
          "internet-gateway": "%%iftemplatematch%${Resources[]}%%",
          "ipv4pool-ec2": "%%iftemplatematch%${Resources[]}%%",
          "ipv6pool-ec2": "%%iftemplatematch%${Resources[]}%%",
          "key-pair": "%%iftemplatematch%${Resources[]}%%",
          "launch-template": "%%iftemplatematch%${Resources[]}%%",
          "local-gateway": "%%iftemplatematch%${Resources[]}%%",
          "local-gateway-route-table": "%%iftemplatematch%${Resources[]}%%",
          "local-gateway-route-table-virtual-interface-group-association": "%%iftemplatematch%${Resources[]}%%",
          "local-gateway-route-table-vpc-association": "%%iftemplatematch%${Resources[]}%%",
          "local-gateway-virtual-interface": "%%iftemplatematch%${Resources[]}%%",
          "local-gateway-virtual-interface-group": "%%iftemplatematch%${Resources[]}%%",
          "natgateway": "%%iftemplatematch%${Resources[]}%%",
          "network-acl": "%%iftemplatematch%${Resources[]}%%",
          "network-interface": "%%iftemplatematch%${Resources[]}%%",
          "placement-group": "%%iftemplatematch%${Resources[]}%%",
          "prefix-list": "%%iftemplatematch%${Resources[]}%%",
          "reserved-instances": "%%iftemplatematch%${Resources[]}%%",
          "route-table": "%%iftemplatematch%${Resources[]}%%",
          "security-group": "%%iftemplatematch%${Resources[]}%%",
          "snapshot": "%%iftemplatematch%${Resources[]}%%",
          "spot-fleet-request": "%%iftemplatematch%${Resources[]}%%",
          "spot-instances-request": "%%iftemplatematch%${Resources[]}%%",
          "subnet": "%%iftemplatematch%${Resources[]}%%",
          "traffic-mirror-filter": "%%iftemplatematch%${Resources[]}%%",
          "traffic-mirror-session": "%%iftemplatematch%${Resources[]}%%",
          "traffic-mirror-target": "%%iftemplatematch%${Resources[]}%%",
          "transit-gateway": "%%iftemplatematch%${Resources[]}%%",
          "transit-gateway-attachment": "%%iftemplatematch%${Resources[]}%%",
          "transit-gateway-connect-peer": "%%iftemplatematch%${Resources[]}%%",
          "transit-gateway-multicast-domain": "%%iftemplatematch%${Resources[]}%%",
          "transit-gateway-route-table": "%%iftemplatematch%${Resources[]}%%",
          "volume": "%%iftemplatematch%${Resources[]}%%",
          "vpc": "%%iftemplatematch%${Resources[]}%%",
          "vpc-endpoint": "%%iftemplatematch%${Resources[]}%%",
          "vpc-endpoint-service": "%%iftemplatematch%${Resources[]}%%",
          "vpc-flow-log": "%%iftemplatematch%${Resources[]}%%",
          "vpc-peering-connection": "%%iftemplatematch%${Resources[]}%%",
          "vpn-connection": "%%iftemplatematch%${Resources[]}%%",
          "vpn-gateway": "%%iftemplatematch%${Resources[]}%%"
        }
      }
    ],
    "create-traffic-mirror-filter": [
      {
        "action": "ec2:CreateTrafficMirrorFilter",
        "resource_mappings": {
          "TrafficMirrorFilterId": {
            "template": "*"
          }
        }
      }
    ],
    "create-traffic-mirror-filter-rule": [
      {
        "action": "ec2:CreateTrafficMirrorFilterRule",
        "resource_mappings": {
          "TrafficMirrorFilterId": {
            "template": "${TrafficMirrorFilterId}"
          },
          "TrafficMirrorFilterRuleId": {
            "template": "*"
          }
        }
      }
    ],
    "create-traffic-mirror-session": [
      {
        "action": "ec2:CreateTrafficMirrorSession",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "${NetworkInterfaceId}"
          },
          "TrafficMirrorFilterId": {
            "template": "${TrafficMirrorFilterId}"
          },
          "TrafficMirrorSessionId": {
            "template": "*"
          },
          "TrafficMirrorTargetId": {
            "template": "${TrafficMirrorTargetId}"
          }
        }
      }
    ],
    "create-traffic-mirror-target": [
      {
        "action": "ec2:CreateTrafficMirrorTarget",
        "resource_mappings": {
          "TrafficMirrorTargetId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "${NetworkInterfaceId}"
          }
        }
      }
    ],
    "create-transit-gateway": [
      {
        "action": "ec2:CreateTransitGateway",
        "resource_mappings": {
          "TransitGatewayId": {
            "template": "*"
          }
        }
      }
    ],
    "create-transit-gateway-connect": [
      {
        "action": "ec2:CreateTransitGatewayConnect",
        "resource_mappings": {
          "TransitGatewayAttachmentId": {
            "template": "${TransportTransitGatewayAttachmentId}"
          }
        }
      }
    ],
    "create-transit-gateway-connect-peer": [
      {
        "action": "ec2:CreateTransitGatewayConnectPeer",
        "resource_mappings": {
          "TransitGatewayAttachmentId": {
            "template": "${TransitGatewayAttachmentId}"
          }
        }
      }
    ],
    "create-transit-gateway-multicast-domain": [
      {
        "action": "ec2:CreateTransitGatewayMulticastDomain",
        "resource_mappings": {
          "TransitGatewayId": {
            "template": "${TransitGatewayId}"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "*"
          }
        }
      }
    ],
    "create-transit-gateway-peering-attachment": [
      {
        "action": "ec2:CreateTransitGatewayPeeringAttachment",
        "resource_mappings": {
          "TransitGatewayId": {
            "template": "${TransitGatewayId}"
          },
          "TransitGatewayAttachmentId": {
            "template": "*"
          }
        }
      }
    ],
    "create-transit-gateway-policy-table": [
      {
        "action": "ec2:CreateTransitGatewayPolicyTable",
        "resource_mappings": {
          "TransitGatewayId": {
            "template": "${TransitGatewayId}"
          },
          "TransitGatewayPolicyTableId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "*"
          },
          "CapacityReservationFleetId": {
            "template": "*"
          },
          "CarrierGatewayId": {
            "template": "*"
          },
          "ClientVpnEndpointId": {
            "template": "*"
          },
          "CustomerGatewayId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "DhcpOptionsId": {
            "template": "*"
          },
          "EgressOnlyInternetGatewayId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "AllocationId": {
            "template": "*"
          },
          "ExportImageTaskId": {
            "template": "*"
          },
          "ExportTaskId": {
            "template": "*"
          },
          "FleetId": {
            "template": "*"
          },
          "FpgaImageId": {
            "template": "*"
          },
          "HostReservationId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "ImportImageTaskId": {
            "template": "*"
          },
          "ImportSnapshotTaskId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "InstanceEventWindowId": {
            "template": "*"
          },
          "InternetGatewayId": {
            "template": "*"
          },
          "IpamId": {
            "template": "*"
          },
          "IpamPoolId": {
            "template": "*"
          },
          "IpamScopeId": {
            "template": "*"
          },
          "Ipv4PoolEc2Id": {
            "template": "*"
          },
          "Ipv6PoolEc2Id": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "LocalGatewayId": {
            "template": "*"
          },
          "LocalGatewayRoutetableId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVpcAssociationId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "template": "*"
          },
          "NatGatewayId": {
            "template": "*"
          },
          "NaclId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeAnalysisId": {
            "template": "*"
          },
          "NetworkInsightsAnalysisId": {
            "template": "*"
          },
          "NetworkInsightsPathId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "PrefixListId": {
            "template": "*"
          },
          "ReplaceRootVolumeTaskId": {
            "template": "*"
          },
          "ReservationId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SecurityGroupRuleId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SpotFleetRequestId": {
            "template": "*"
          },
          "SpotInstanceRequestId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SubnetCidrReservationId": {
            "template": "*"
          },
          "TrafficMirrorFilterId": {
            "template": "*"
          },
          "TrafficMirrorSessionId": {
            "template": "*"
          },
          "TrafficMirrorTargetId": {
            "template": "*"
          },
          "TransitGatewayId": {
            "template": "*"
          },
          "TransitGatewayAttachmentId": {
            "template": "*"
          },
          "TransitGatewayConnectPeerId": {
            "template": "*"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "*"
          },
          "TransitGatewayPolicyTableId": {
            "template": "*"
          },
          "TransitGatewayRouteTableId": {
            "template": "*"
          },
          "TransitGatewayRouteTableAnnouncementId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "VpcId": {
            "template": "*"
          },
          "VpcEndpointId": {
            "template": "*"
          },
          "VpcEndpointServiceId": {
            "template": "*"
          },
          "VpcFlowLogId": {
            "template": "*"
          },
          "VpcPeeringConnectionId": {
            "template": "*"
          },
          "VpnConnectionId": {
            "template": "*"
          },
          "VpnGatewayId": {
            "template": "*"
          }
        }
      }
    ],
    "create-transit-gateway-prefix-list-reference": [
      {
        "action": "ec2:CreateTransitGatewayPrefixListReference",
        "resource_mappings": {
          "PrefixListId": {
            "template": "${PrefixListId}"
          },
          "TransitGatewayRouteTableId": {
            "template": "${TransitGatewayRouteTableId}"
          },
          "TransitGatewayAttachmentId": {
            "template": "${TransitGatewayAttachmentId}"
          }
        }
      }
    ],
    "create-transit-gateway-route": [
      {
        "action": "ec2:CreateTransitGatewayRoute",
        "resource_mappings": {
          "TransitGatewayRouteTableId": {
            "template": "${TransitGatewayRouteTableId}"
          },
          "TransitGatewayAttachmentId": {
            "template": "${TransitGatewayAttachmentId}"
          }
        }
      }
    ],
    "create-transit-gateway-route-table": [
      {
        "action": "ec2:CreateTransitGatewayRouteTable",
        "resource_mappings": {
          "TransitGatewayId": {
            "template": "${TransitGatewayId}"
          },
          "TransitGatewayRouteTableId": {
            "template": "*"
          }
        }
      }
    ],
    "create-transit-gateway-route-table-announcement": [
      {
        "action": "ec2:CreateTransitGatewayRouteTableAnnouncement",
        "resource_mappings": {
          "TransitGatewayAttachmentId": {
            "template": "${PeeringAttachmentId}"
          },
          "TransitGatewayRouteTableId": {
            "template": "${TransitGatewayRouteTableId}"
          },
          "TransitGatewayRouteTableAnnouncementId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "*"
          },
          "CapacityReservationFleetId": {
            "template": "*"
          },
          "CarrierGatewayId": {
            "template": "*"
          },
          "ClientVpnEndpointId": {
            "template": "*"
          },
          "CustomerGatewayId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "DhcpOptionsId": {
            "template": "*"
          },
          "EgressOnlyInternetGatewayId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "AllocationId": {
            "template": "*"
          },
          "ExportImageTaskId": {
            "template": "*"
          },
          "ExportTaskId": {
            "template": "*"
          },
          "FleetId": {
            "template": "*"
          },
          "FpgaImageId": {
            "template": "*"
          },
          "HostReservationId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "ImportImageTaskId": {
            "template": "*"
          },
          "ImportSnapshotTaskId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "InstanceEventWindowId": {
            "template": "*"
          },
          "InternetGatewayId": {
            "template": "*"
          },
          "IpamId": {
            "template": "*"
          },
          "IpamPoolId": {
            "template": "*"
          },
          "IpamScopeId": {
            "template": "*"
          },
          "Ipv4PoolEc2Id": {
            "template": "*"
          },
          "Ipv6PoolEc2Id": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "LocalGatewayId": {
            "template": "*"
          },
          "LocalGatewayRoutetableId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVpcAssociationId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "template": "*"
          },
          "NatGatewayId": {
            "template": "*"
          },
          "NaclId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeAnalysisId": {
            "template": "*"
          },
          "NetworkInsightsAnalysisId": {
            "template": "*"
          },
          "NetworkInsightsPathId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "PrefixListId": {
            "template": "*"
          },
          "ReplaceRootVolumeTaskId": {
            "template": "*"
          },
          "ReservationId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SecurityGroupRuleId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SpotFleetRequestId": {
            "template": "*"
          },
          "SpotInstanceRequestId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SubnetCidrReservationId": {
            "template": "*"
          },
          "TrafficMirrorFilterId": {
            "template": "*"
          },
          "TrafficMirrorSessionId": {
            "template": "*"
          },
          "TrafficMirrorTargetId": {
            "template": "*"
          },
          "TransitGatewayId": {
            "template": "*"
          },
          "TransitGatewayAttachmentId": {
            "template": "*"
          },
          "TransitGatewayConnectPeerId": {
            "template": "*"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "*"
          },
          "TransitGatewayPolicyTableId": {
            "template": "*"
          },
          "TransitGatewayRouteTableId": {
            "template": "*"
          },
          "TransitGatewayRouteTableAnnouncementId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "VpcId": {
            "template": "*"
          },
          "VpcEndpointId": {
            "template": "*"
          },
          "VpcEndpointServiceId": {
            "template": "*"
          },
          "VpcFlowLogId": {
            "template": "*"
          },
          "VpcPeeringConnectionId": {
            "template": "*"
          },
          "VpnConnectionId": {
            "template": "*"
          },
          "VpnGatewayId": {
            "template": "*"
          }
        }
      }
    ],
    "create-transit-gateway-vpc-attachment": [
      {
        "action": "ec2:CreateTransitGatewayVpcAttachment",
        "resource_mappings": {
          "TransitGatewayId": {
            "template": "${TransitGatewayId}"
          },
          "TransitGatewayAttachmentId": {
            "template": "*"
          },
          "VpcId": {
            "template": "${VpcId}"
          },
          "SubnetId": {
            "template": "${SubnetIds[]}"
          }
        }
      }
    ],
    "create-verified-access-endpoint": [
      {
        "action": "ec2:CreateVerifiedAccessEndpoint",
        "resource_mappings": {
          "VerifiedAccessEndpointId": {
            "template": "*"
          },
          "VerifiedAccessGroupId": {
            "template": "${VerifiedAccessGroupId}"
          },
          "NetworkInterfaceId": {
            "template": "${NetworkInterfaceOptions.NetworkInterfaceId}"
          },
          "SecurityGroupId": {
            "template": "${SecurityGroupIds[]}"
          },
          "SubnetId": {
            "template": "${LoadBalancerOptions.SubnetIds[]}"
          }
        }
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "*"
          },
          "CapacityReservationFleetId": {
            "template": "*"
          },
          "CarrierGatewayId": {
            "template": "*"
          },
          "ClientVpnEndpointId": {
            "template": "*"
          },
          "Ipv4PoolCoipId": {
            "template": "*"
          },
          "CustomerGatewayId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "DhcpOptionsId": {
            "template": "*"
          },
          "EgressOnlyInternetGatewayId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "AllocationId": {
            "template": "*"
          },
          "ExportImageTaskId": {
            "template": "*"
          },
          "ExportTaskId": {
            "template": "*"
          },
          "FleetId": {
            "template": "*"
          },
          "FpgaImageId": {
            "template": "*"
          },
          "HostReservationId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "ImportImageTaskId": {
            "template": "*"
          },
          "ImportSnapshotTaskId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "InstanceEventWindowId": {
            "template": "*"
          },
          "InternetGatewayId": {
            "template": "*"
          },
          "IpamId": {
            "template": "*"
          },
          "IpamPoolId": {
            "template": "*"
          },
          "IpamScopeId": {
            "template": "*"
          },
          "Ipv4PoolEc2Id": {
            "template": "*"
          },
          "Ipv6PoolEc2Id": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "LocalGatewayId": {
            "template": "*"
          },
          "LocalGatewayRoutetableId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVpcAssociationId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "template": "*"
          },
          "NatGatewayId": {
            "template": "*"
          },
          "NaclId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeAnalysisId": {
            "template": "*"
          },
          "NetworkInsightsAnalysisId": {
            "template": "*"
          },
          "NetworkInsightsPathId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "PrefixListId": {
            "template": "*"
          },
          "ReplaceRootVolumeTaskId": {
            "template": "*"
          },
          "ReservationId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SecurityGroupRuleId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SpotFleetRequestId": {
            "template": "*"
          },
          "SpotInstanceRequestId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SubnetCidrReservationId": {
            "template": "*"
          },
          "TrafficMirrorFilterId": {
            "template": "*"
          },
          "TrafficMirrorSessionId": {
            "template": "*"
          },
          "TrafficMirrorTargetId": {
            "template": "*"
          },
          "TransitGatewayId": {
            "template": "*"
          },
          "TransitGatewayAttachmentId": {
            "template": "*"
          },
          "TransitGatewayConnectPeerId": {
            "template": "*"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "*"
          },
          "TransitGatewayPolicyTableId": {
            "template": "*"
          },
          "TransitGatewayRouteTableId": {
            "template": "*"
          },
          "TransitGatewayRouteTableAnnouncementId": {
            "template": "*"
          },
          "VerifiedAccessEndpointId": {
            "template": "*"
          },
          "VerifiedAccessGroupId": {
            "template": "*"
          },
          "VerifiedAccessInstanceId": {
            "template": "*"
          },
          "VerifiedAccessPolicyId": {
            "template": "*"
          },
          "VerifiedAccessTrustProviderId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "VpcId": {
            "template": "*"
          },
          "VpcEndpointId": {
            "template": "*"
          },
          "VpcEndpointConnectionId": {
            "template": "*"
          },
          "VpcEndpointServiceId": {
            "template": "*"
          },
          "VpcEndpointServicePermissionId": {
            "template": "*"
          },
          "VpcFlowLogId": {
            "template": "*"
          },
          "VpcPeeringConnectionId": {
            "template": "*"
          },
          "VpnConnectionId": {
            "template": "*"
          },
          "VpnGatewayId": {
            "template": "*"
          }
        }
      }
    ],
    "create-verified-access-group": [
      {
        "action": "ec2:CreateVerifiedAccessGroup",
        "resource_mappings": {
          "VerifiedAccessGroupId": {
            "template": "*"
          },
          "VerifiedAccessInstanceId": {
            "template": "${VerifiedAccessInstanceId}"
          }
        }
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "*"
          },
          "CapacityReservationFleetId": {
            "template": "*"
          },
          "CarrierGatewayId": {
            "template": "*"
          },
          "ClientVpnEndpointId": {
            "template": "*"
          },
          "Ipv4PoolCoipId": {
            "template": "*"
          },
          "CustomerGatewayId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "DhcpOptionsId": {
            "template": "*"
          },
          "EgressOnlyInternetGatewayId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "AllocationId": {
            "template": "*"
          },
          "ExportImageTaskId": {
            "template": "*"
          },
          "ExportTaskId": {
            "template": "*"
          },
          "FleetId": {
            "template": "*"
          },
          "FpgaImageId": {
            "template": "*"
          },
          "HostReservationId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "ImportImageTaskId": {
            "template": "*"
          },
          "ImportSnapshotTaskId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "InstanceEventWindowId": {
            "template": "*"
          },
          "InternetGatewayId": {
            "template": "*"
          },
          "IpamId": {
            "template": "*"
          },
          "IpamPoolId": {
            "template": "*"
          },
          "IpamScopeId": {
            "template": "*"
          },
          "Ipv4PoolEc2Id": {
            "template": "*"
          },
          "Ipv6PoolEc2Id": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "LocalGatewayId": {
            "template": "*"
          },
          "LocalGatewayRoutetableId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVpcAssociationId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "template": "*"
          },
          "NatGatewayId": {
            "template": "*"
          },
          "NaclId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeAnalysisId": {
            "template": "*"
          },
          "NetworkInsightsAnalysisId": {
            "template": "*"
          },
          "NetworkInsightsPathId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "PrefixListId": {
            "template": "*"
          },
          "ReplaceRootVolumeTaskId": {
            "template": "*"
          },
          "ReservationId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SecurityGroupRuleId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SpotFleetRequestId": {
            "template": "*"
          },
          "SpotInstanceRequestId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SubnetCidrReservationId": {
            "template": "*"
          },
          "TrafficMirrorFilterId": {
            "template": "*"
          },
          "TrafficMirrorSessionId": {
            "template": "*"
          },
          "TrafficMirrorTargetId": {
            "template": "*"
          },
          "TransitGatewayId": {
            "template": "*"
          },
          "TransitGatewayAttachmentId": {
            "template": "*"
          },
          "TransitGatewayConnectPeerId": {
            "template": "*"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "*"
          },
          "TransitGatewayPolicyTableId": {
            "template": "*"
          },
          "TransitGatewayRouteTableId": {
            "template": "*"
          },
          "TransitGatewayRouteTableAnnouncementId": {
            "template": "*"
          },
          "VerifiedAccessEndpointId": {
            "template": "*"
          },
          "VerifiedAccessGroupId": {
            "template": "*"
          },
          "VerifiedAccessInstanceId": {
            "template": "*"
          },
          "VerifiedAccessPolicyId": {
            "template": "*"
          },
          "VerifiedAccessTrustProviderId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "VpcId": {
            "template": "*"
          },
          "VpcEndpointId": {
            "template": "*"
          },
          "VpcEndpointConnectionId": {
            "template": "*"
          },
          "VpcEndpointServiceId": {
            "template": "*"
          },
          "VpcEndpointServicePermissionId": {
            "template": "*"
          },
          "VpcFlowLogId": {
            "template": "*"
          },
          "VpcPeeringConnectionId": {
            "template": "*"
          },
          "VpnConnectionId": {
            "template": "*"
          },
          "VpnGatewayId": {
            "template": "*"
          }
        }
      }
    ],
    "create-verified-access-instance": [
      {
        "action": "ec2:CreateVerifiedAccessInstance",
        "resource_mappings": {
          "VerifiedAccessInstanceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "*"
          },
          "CapacityReservationFleetId": {
            "template": "*"
          },
          "CarrierGatewayId": {
            "template": "*"
          },
          "ClientVpnEndpointId": {
            "template": "*"
          },
          "Ipv4PoolCoipId": {
            "template": "*"
          },
          "CustomerGatewayId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "DhcpOptionsId": {
            "template": "*"
          },
          "EgressOnlyInternetGatewayId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "AllocationId": {
            "template": "*"
          },
          "ExportImageTaskId": {
            "template": "*"
          },
          "ExportTaskId": {
            "template": "*"
          },
          "FleetId": {
            "template": "*"
          },
          "FpgaImageId": {
            "template": "*"
          },
          "HostReservationId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "ImportImageTaskId": {
            "template": "*"
          },
          "ImportSnapshotTaskId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "InstanceEventWindowId": {
            "template": "*"
          },
          "InternetGatewayId": {
            "template": "*"
          },
          "IpamId": {
            "template": "*"
          },
          "IpamPoolId": {
            "template": "*"
          },
          "IpamScopeId": {
            "template": "*"
          },
          "Ipv4PoolEc2Id": {
            "template": "*"
          },
          "Ipv6PoolEc2Id": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "LocalGatewayId": {
            "template": "*"
          },
          "LocalGatewayRoutetableId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVpcAssociationId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "template": "*"
          },
          "NatGatewayId": {
            "template": "*"
          },
          "NaclId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeAnalysisId": {
            "template": "*"
          },
          "NetworkInsightsAnalysisId": {
            "template": "*"
          },
          "NetworkInsightsPathId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "PrefixListId": {
            "template": "*"
          },
          "ReplaceRootVolumeTaskId": {
            "template": "*"
          },
          "ReservationId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SecurityGroupRuleId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SpotFleetRequestId": {
            "template": "*"
          },
          "SpotInstanceRequestId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SubnetCidrReservationId": {
            "template": "*"
          },
          "TrafficMirrorFilterId": {
            "template": "*"
          },
          "TrafficMirrorSessionId": {
            "template": "*"
          },
          "TrafficMirrorTargetId": {
            "template": "*"
          },
          "TransitGatewayId": {
            "template": "*"
          },
          "TransitGatewayAttachmentId": {
            "template": "*"
          },
          "TransitGatewayConnectPeerId": {
            "template": "*"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "*"
          },
          "TransitGatewayPolicyTableId": {
            "template": "*"
          },
          "TransitGatewayRouteTableId": {
            "template": "*"
          },
          "TransitGatewayRouteTableAnnouncementId": {
            "template": "*"
          },
          "VerifiedAccessEndpointId": {
            "template": "*"
          },
          "VerifiedAccessGroupId": {
            "template": "*"
          },
          "VerifiedAccessInstanceId": {
            "template": "*"
          },
          "VerifiedAccessPolicyId": {
            "template": "*"
          },
          "VerifiedAccessTrustProviderId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "VpcId": {
            "template": "*"
          },
          "VpcEndpointId": {
            "template": "*"
          },
          "VpcEndpointConnectionId": {
            "template": "*"
          },
          "VpcEndpointServiceId": {
            "template": "*"
          },
          "VpcEndpointServicePermissionId": {
            "template": "*"
          },
          "VpcFlowLogId": {
            "template": "*"
          },
          "VpcPeeringConnectionId": {
            "template": "*"
          },
          "VpnConnectionId": {
            "template": "*"
          },
          "VpnGatewayId": {
            "template": "*"
          }
        }
      }
    ],
    "create-verified-access-trust-provider": [
      {
        "action": "ec2:CreateVerifiedAccessTrustProvider",
        "resource_mappings": {
          "VerifiedAccessTrustProviderId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "*"
          },
          "CapacityReservationFleetId": {
            "template": "*"
          },
          "CarrierGatewayId": {
            "template": "*"
          },
          "ClientVpnEndpointId": {
            "template": "*"
          },
          "Ipv4PoolCoipId": {
            "template": "*"
          },
          "CustomerGatewayId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "DhcpOptionsId": {
            "template": "*"
          },
          "EgressOnlyInternetGatewayId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "AllocationId": {
            "template": "*"
          },
          "ExportImageTaskId": {
            "template": "*"
          },
          "ExportTaskId": {
            "template": "*"
          },
          "FleetId": {
            "template": "*"
          },
          "FpgaImageId": {
            "template": "*"
          },
          "HostReservationId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "ImportImageTaskId": {
            "template": "*"
          },
          "ImportSnapshotTaskId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "InstanceEventWindowId": {
            "template": "*"
          },
          "InternetGatewayId": {
            "template": "*"
          },
          "IpamId": {
            "template": "*"
          },
          "IpamPoolId": {
            "template": "*"
          },
          "IpamScopeId": {
            "template": "*"
          },
          "Ipv4PoolEc2Id": {
            "template": "*"
          },
          "Ipv6PoolEc2Id": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "LocalGatewayId": {
            "template": "*"
          },
          "LocalGatewayRoutetableId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVpcAssociationId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "template": "*"
          },
          "NatGatewayId": {
            "template": "*"
          },
          "NaclId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeAnalysisId": {
            "template": "*"
          },
          "NetworkInsightsAnalysisId": {
            "template": "*"
          },
          "NetworkInsightsPathId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "PrefixListId": {
            "template": "*"
          },
          "ReplaceRootVolumeTaskId": {
            "template": "*"
          },
          "ReservationId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SecurityGroupRuleId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SpotFleetRequestId": {
            "template": "*"
          },
          "SpotInstanceRequestId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SubnetCidrReservationId": {
            "template": "*"
          },
          "TrafficMirrorFilterId": {
            "template": "*"
          },
          "TrafficMirrorSessionId": {
            "template": "*"
          },
          "TrafficMirrorTargetId": {
            "template": "*"
          },
          "TransitGatewayId": {
            "template": "*"
          },
          "TransitGatewayAttachmentId": {
            "template": "*"
          },
          "TransitGatewayConnectPeerId": {
            "template": "*"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "*"
          },
          "TransitGatewayPolicyTableId": {
            "template": "*"
          },
          "TransitGatewayRouteTableId": {
            "template": "*"
          },
          "TransitGatewayRouteTableAnnouncementId": {
            "template": "*"
          },
          "VerifiedAccessEndpointId": {
            "template": "*"
          },
          "VerifiedAccessGroupId": {
            "template": "*"
          },
          "VerifiedAccessInstanceId": {
            "template": "*"
          },
          "VerifiedAccessPolicyId": {
            "template": "*"
          },
          "VerifiedAccessTrustProviderId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "VpcId": {
            "template": "*"
          },
          "VpcEndpointId": {
            "template": "*"
          },
          "VpcEndpointConnectionId": {
            "template": "*"
          },
          "VpcEndpointServiceId": {
            "template": "*"
          },
          "VpcEndpointServicePermissionId": {
            "template": "*"
          },
          "VpcFlowLogId": {
            "template": "*"
          },
          "VpcPeeringConnectionId": {
            "template": "*"
          },
          "VpnConnectionId": {
            "template": "*"
          },
          "VpnGatewayId": {
            "template": "*"
          }
        }
      }
    ],
    "create-volume": [
      {
        "action": "ec2:CreateVolume",
        "resource_mappings": {
          "VolumeId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "${SnapshotId}"
          }
        }
      }
    ],
    "create-vpc": [
      {
        "action": "ec2:CreateVpc",
        "resource_mappings": {
          "VpcId": {
            "template": "*"
          },
          "Ipv6PoolEc2Id": {
            "template": "${Ipv6Pool}"
          }
        }
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "vpc": "%%iftruthy%${TagSpecifications[].ResourceType}%arn:${Partition}:ec2:${Region}:${Account}:vpc/*%%%"
        }
      }
    ],
    "create-vpc-endpoint": [
      {
        "action": "ec2:CreateVpcEndpoint",
        "resource_mappings": {
          "VpcId": {
            "template": "${VpcId}"
          },
          "VpcEndpointId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "${RouteTableIds[]}"
          },
          "SecurityGroupId": {
            "template": "${SecurityGroupIds[]}"
          },
          "SubnetId": {
            "template": "${SubnetIds[]}"
          }
        }
      },
      {
        "action": "route53:AssociateVPCWithHostedZone",
        "resource_mappings": {
          "VpcId": {
            "template": "${VpcId}"
          },
          "Id": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      }
    ],
    "create-vpc-endpoint-connection-notification": [
      {
        "action": "ec2:CreateVpcEndpointConnectionNotification",
        "resource_mappings": {
          "VpcEndpointId": {
            "template": "${VpcEndpointId}"
          },
          "VpcEndpointServiceId": {
            "template": "${ServiceId}"
          }
        }
      }
    ],
    "create-vpc-endpoint-service-configuration": [
      {
        "action": "ec2:CreateVpcEndpointServiceConfiguration",
        "resource_mappings": {
          "VpcEndpointServiceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-vpc-peering-connection": [
      {
        "action": "ec2:CreateVpcPeeringConnection",
        "resource_mappings": {
          "VpcId": {
            "template": "${VpcId}"
          },
          "VpcPeeringConnectionId": {
            "template": "*"
          }
        }
      }
    ],
    "create-vpn-connection": [
      {
        "action": "ec2:CreateVpnConnection",
        "resource_mappings": {
          "CustomerGatewayId": {
            "template": "${CustomerGatewayId}"
          },
          "VpnConnectionId": {
            "template": "*"
          },
          "TransitGatewayId": {
            "template": "${TransitGatewayId}"
          },
          "VpnGatewayId": {
            "template": "${VpnGatewayId}"
          }
        }
      }
    ],
    "create-vpn-connection-route": [
      {
        "action": "ec2:CreateVpnConnectionRoute",
        "resource_mappings": {
          "VpnConnectionId": {
            "template": "${VpnConnectionId}"
          }
        }
      }
    ],
    "create-vpn-gateway": [
      {
        "action": "ec2:CreateVpnGateway",
        "resource_mappings": {
          "VpnGatewayId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-carrier-gateway": [
      {
        "action": "ec2:DeleteCarrierGateway",
        "resource_mappings": {
          "CarrierGatewayId": {
            "template": "${CarrierGatewayId}"
          }
        }
      }
    ],
    "delete-client-vpn-endpoint": [
      {
        "action": "ec2:DeleteClientVpnEndpoint",
        "resource_mappings": {
          "ClientVpnEndpointId": {
            "template": "${ClientVpnEndpointId}"
          }
        }
      }
    ],
    "delete-client-vpn-route": [
      {
        "action": "ec2:DeleteClientVpnRoute",
        "resource_mappings": {
          "ClientVpnEndpointId": {
            "template": "${ClientVpnEndpointId}"
          },
          "SubnetId": {
            "template": "${TargetVpcSubnetId}"
          }
        }
      }
    ],
    "delete-coip-cidr": [
      {
        "action": "ec2:DeleteCoipCidr",
        "resource_mappings": {
          "Ipv4PoolCoipId": {
            "template": "${CoipPoolId}"
          }
        }
      }
    ],
    "delete-coip-pool": [
      {
        "action": "ec2:DeleteCoipPool",
        "resource_mappings": {
          "Ipv4PoolCoipId": {
            "template": "${CoipPoolId}"
          }
        }
      }
    ],
    "delete-customer-gateway": [
      {
        "action": "ec2:DeleteCustomerGateway",
        "resource_mappings": {
          "CustomerGatewayId": {
            "template": "${CustomerGatewayId}"
          }
        }
      }
    ],
    "delete-dhcp-options": [
      {
        "action": "ec2:DeleteDhcpOptions",
        "resource_mappings": {
          "DhcpOptionsId": {
            "template": "${DhcpOptionsId}"
          }
        }
      }
    ],
    "delete-egress-only-internet-gateway": [
      {
        "action": "ec2:DeleteEgressOnlyInternetGateway",
        "resource_mappings": {
          "EgressOnlyInternetGatewayId": {
            "template": "${EgressOnlyInternetGatewayId}"
          }
        }
      }
    ],
    "delete-fleets": [
      {
        "action": "ec2:DeleteFleets",
        "resource_mappings": {
          "FleetId": {
            "template": "${FleetIds[]}"
          }
        }
      }
    ],
    "delete-flow-logs": [
      {
        "action": "ec2:DeleteFlowLogs",
        "resource_mappings": {
          "VpcFlowLogId": {
            "template": "${FlowLogIds[]}"
          }
        }
      }
    ],
    "delete-fpga-image": [
      {
        "action": "ec2:DeleteFpgaImage",
        "resource_mappings": {
          "FpgaImageId": {
            "template": "${FpgaImageId}"
          }
        }
      }
    ],
    "delete-instance-connect-endpoint": [
      {
        "action": "ec2:DeleteInstanceConnectEndpoint",
        "resource_mappings": {
          "InstanceConnectEndpointId": {
            "template": "${InstanceConnectEndpointId}"
          }
        }
      }
    ],
    "delete-instance-event-window": [
      {
        "action": "ec2:DeleteInstanceEventWindow",
        "resource_mappings": {
          "InstanceEventWindowId": {
            "template": "${InstanceEventWindowId}"
          }
        }
      }
    ],
    "delete-internet-gateway": [
      {
        "action": "ec2:DeleteInternetGateway",
        "resource_mappings": {
          "InternetGatewayId": {
            "template": "${InternetGatewayId}"
          }
        }
      }
    ],
    "delete-ipam": [
      {
        "action": "ec2:DeleteIpam",
        "resource_mappings": {
          "IpamId": {
            "template": "${IpamId}"
          }
        }
      }
    ],
    "delete-ipam-pool": [
      {
        "action": "ec2:DeleteIpamPool",
        "resource_mappings": {
          "IpamPoolId": {
            "template": "${IpamPoolId}"
          }
        }
      }
    ],
    "delete-ipam-resource-discovery": [
      {
        "action": "ec2:DeleteIpamResourceDiscovery",
        "resource_mappings": {
          "IpamResourceDiscoveryId": {
            "template": "${IpamResourceDiscoveryId}"
          }
        }
      }
    ],
    "delete-ipam-scope": [
      {
        "action": "ec2:DeleteIpamScope",
        "resource_mappings": {
          "IpamScopeId": {
            "template": "${IpamScopeId}"
          }
        }
      }
    ],
    "delete-key-pair": [
      {
        "action": "ec2:DeleteKeyPair",
        "resource_mappings": {
          "KeyPairName": {
            "template": "${KeyName}"
          }
        }
      }
    ],
    "delete-launch-template": [
      {
        "action": "ec2:DeleteLaunchTemplate",
        "resource_mappings": {
          "LaunchTemplateId": {
            "template": "${LaunchTemplateId}"
          }
        }
      }
    ],
    "delete-launch-template-versions": [
      {
        "action": "ec2:DeleteLaunchTemplateVersions",
        "resource_mappings": {
          "LaunchTemplateId": {
            "template": "${LaunchTemplateId}"
          }
        }
      }
    ],
    "delete-local-gateway-route": [
      {
        "action": "ec2:DeleteLocalGatewayRoute",
        "resource_mappings": {
          "LocalGatewayRoutetableId": {
            "template": "${LocalGatewayRouteTableId}"
          }
        }
      }
    ],
    "delete-local-gateway-route-table": [
      {
        "action": "ec2:DeleteLocalGatewayRouteTable",
        "resource_mappings": {
          "LocalGatewayRoutetableId": {
            "template": "${LocalGatewayRouteTableId}"
          }
        }
      }
    ],
    "delete-local-gateway-route-table-virtual-interface-group-association": [
      {
        "action": "ec2:DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
        "resource_mappings": {
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "template": "${LocalGatewayRouteTableVirtualInterfaceGroupAssociationId}"
          }
        }
      }
    ],
    "delete-local-gateway-route-table-vpc-association": [
      {
        "action": "ec2:DeleteLocalGatewayRouteTableVpcAssociation",
        "resource_mappings": {
          "LocalGatewayRouteTableVpcAssociationId": {
            "template": "${LocalGatewayRouteTableVpcAssociationId}"
          }
        }
      }
    ],
    "delete-managed-prefix-list": [
      {
        "action": "ec2:DeleteManagedPrefixList",
        "resource_mappings": {
          "PrefixListId": {
            "template": "${PrefixListId}"
          }
        }
      }
    ],
    "delete-nat-gateway": [
      {
        "action": "ec2:DeleteNatGateway",
        "resource_mappings": {
          "NatGatewayId": {
            "template": "${NatGatewayId}"
          }
        }
      }
    ],
    "delete-network-acl": [
      {
        "action": "ec2:DeleteNetworkAcl",
        "resource_mappings": {
          "NaclId": {
            "template": "${NetworkAclId}"
          }
        }
      }
    ],
    "delete-network-acl-entry": [
      {
        "action": "ec2:DeleteNetworkAclEntry",
        "resource_mappings": {
          "NaclId": {
            "template": "${NetworkAclId}"
          }
        }
      }
    ],
    "delete-network-insights-access-scope": [
      {
        "action": "ec2:DeleteNetworkInsightsAccessScope",
        "resource_mappings": {
          "NetworkInsightsAccessScopeId": {
            "template": "${NetworkInsightsAccessScopeId}"
          }
        }
      }
    ],
    "delete-network-insights-access-scope-analysis": [
      {
        "action": "ec2:DeleteNetworkInsightsAccessScopeAnalysis",
        "resource_mappings": {
          "NetworkInsightsAccessScopeAnalysisId": {
            "template": "${NetworkInsightsAccessScopeAnalysisId}"
          }
        }
      }
    ],
    "delete-network-insights-analysis": [
      {
        "action": "ec2:DeleteNetworkInsightsAnalysis",
        "resource_mappings": {
          "NetworkInsightsAnalysisId": {
            "template": "${NetworkInsightsAnalysisId}"
          }
        }
      }
    ],
    "delete-network-insights-path": [
      {
        "action": "ec2:DeleteNetworkInsightsPath",
        "resource_mappings": {
          "NetworkInsightsPathId": {
            "template": "${NetworkInsightsPathId}"
          }
        }
      }
    ],
    "delete-network-interface": [
      {
        "action": "ec2:DeleteNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "${NetworkInterfaceId}"
          }
        }
      }
    ],
    "delete-network-interface-permission": [
      {
        "action": "ec2:DeleteNetworkInterfacePermission",
        "resource_mappings": {}
      }
    ],
    "delete-placement-group": [
      {
        "action": "ec2:DeletePlacementGroup",
        "resource_mappings": {}
      }
    ],
    "delete-public-ipv4-pool": [
      {
        "action": "ec2:DeletePublicIpv4Pool",
        "resource_mappings": {
          "Ipv4PoolEc2Id": {
            "template": "${PoolId}"
          }
        }
      }
    ],
    "delete-queued-reserved-instances": [
      {
        "action": "ec2:DeleteQueuedReservedInstances",
        "resource_mappings": {
          "ReservationId": {
            "template": "${ReservedInstancesIds[]}"
          }
        }
      }
    ],
    "delete-route": [
      {
        "action": "ec2:DeleteRoute",
        "resource_mappings": {
          "RouteTableId": {
            "template": "${RouteTableId}"
          },
          "PrefixListId": {
            "template": "${DestinationPrefixListId}"
          }
        }
      }
    ],
    "delete-route-table": [
      {
        "action": "ec2:DeleteRouteTable",
        "resource_mappings": {
          "RouteTableId": {
            "template": "${RouteTableId}"
          }
        }
      }
    ],
    "delete-security-group": [
      {
        "action": "ec2:DeleteSecurityGroup",
        "resource_mappings": {
          "SecurityGroupId": {
            "template": "${GroupId}"
          }
        }
      }
    ],
    "delete-snapshot": [
      {
        "action": "ec2:DeleteSnapshot",
        "resource_mappings": {
          "SnapshotId": {
            "template": "${SnapshotId}"
          }
        }
      }
    ],
    "delete-spot-datafeed-subscription": [
      {
        "action": "ec2:DeleteSpotDatafeedSubscription",
        "resource_mappings": {}
      }
    ],
    "delete-subnet": [
      {
        "action": "ec2:DeleteSubnet",
        "resource_mappings": {
          "SubnetId": {
            "template": "${SubnetId}"
          }
        }
      }
    ],
    "delete-subnet-cidr-reservation": [
      {
        "action": "ec2:DeleteSubnetCidrReservation",
        "resource_mappings": {}
      }
    ],
    "delete-tags": [
      {
        "action": "ec2:DeleteTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "capacity-reservation": "%%iftemplatematch%${Resources[]}%%",
          "client-vpn-endpoint": "%%iftemplatematch%${Resources[]}%%",
          "customer-gateway": "%%iftemplatematch%${Resources[]}%%",
          "dedicated-host": "%%iftemplatematch%${Resources[]}%%",
          "dhcp-options": "%%iftemplatematch%${Resources[]}%%",
          "egress-only-internet-gateway": "%%iftemplatematch%${Resources[]}%%",
          "elastic-gpu": "%%iftemplatematch%${Resources[]}%%",
          "elastic-ip": "%%iftemplatematch%${Resources[]}%%",
          "export-image-task": "%%iftemplatematch%${Resources[]}%%",
          "export-instance-task": "%%iftemplatematch%${Resources[]}%%",
          "fleet": "%%iftemplatematch%${Resources[]}%%",
          "fpga-image": "%%iftemplatematch%${Resources[]}%%",
          "host-reservation": "%%iftemplatematch%${Resources[]}%%",
          "image": "%%iftemplatematch%${Resources[]}%%",
          "import-image-task": "%%iftemplatematch%${Resources[]}%%",
          "import-snapshot-task": "%%iftemplatematch%${Resources[]}%%",
          "instance": "%%iftemplatematch%${Resources[]}%%",
          "internet-gateway": "%%iftemplatematch%${Resources[]}%%",
          "ipv4pool-ec2": "%%iftemplatematch%${Resources[]}%%",
          "ipv6pool-ec2": "%%iftemplatematch%${Resources[]}%%",
          "key-pair": "%%iftemplatematch%${Resources[]}%%",
          "launch-template": "%%iftemplatematch%${Resources[]}%%",
          "local-gateway": "%%iftemplatematch%${Resources[]}%%",
          "local-gateway-route-table": "%%iftemplatematch%${Resources[]}%%",
          "local-gateway-route-table-virtual-interface-group-association": "%%iftemplatematch%${Resources[]}%%",
          "local-gateway-route-table-vpc-association": "%%iftemplatematch%${Resources[]}%%",
          "local-gateway-virtual-interface": "%%iftemplatematch%${Resources[]}%%",
          "local-gateway-virtual-interface-group": "%%iftemplatematch%${Resources[]}%%",
          "natgateway": "%%iftemplatematch%${Resources[]}%%",
          "network-acl": "%%iftemplatematch%${Resources[]}%%",
          "network-interface": "%%iftemplatematch%${Resources[]}%%",
          "placement-group": "%%iftemplatematch%${Resources[]}%%",
          "prefix-list": "%%iftemplatematch%${Resources[]}%%",
          "reserved-instances": "%%iftemplatematch%${Resources[]}%%",
          "route-table": "%%iftemplatematch%${Resources[]}%%",
          "security-group": "%%iftemplatematch%${Resources[]}%%",
          "snapshot": "%%iftemplatematch%${Resources[]}%%",
          "spot-fleet-request": "%%iftemplatematch%${Resources[]}%%",
          "spot-instances-request": "%%iftemplatematch%${Resources[]}%%",
          "subnet": "%%iftemplatematch%${Resources[]}%%",
          "traffic-mirror-filter": "%%iftemplatematch%${Resources[]}%%",
          "traffic-mirror-session": "%%iftemplatematch%${Resources[]}%%",
          "traffic-mirror-target": "%%iftemplatematch%${Resources[]}%%",
          "transit-gateway": "%%iftemplatematch%${Resources[]}%%",
          "transit-gateway-attachment": "%%iftemplatematch%${Resources[]}%%",
          "transit-gateway-connect-peer": "%%iftemplatematch%${Resources[]}%%",
          "transit-gateway-multicast-domain": "%%iftemplatematch%${Resources[]}%%",
          "transit-gateway-route-table": "%%iftemplatematch%${Resources[]}%%",
          "volume": "%%iftemplatematch%${Resources[]}%%",
          "vpc": "%%iftemplatematch%${Resources[]}%%",
          "vpc-endpoint": "%%iftemplatematch%${Resources[]}%%",
          "vpc-endpoint-service": "%%iftemplatematch%${Resources[]}%%",
          "vpc-flow-log": "%%iftemplatematch%${Resources[]}%%",
          "vpc-peering-connection": "%%iftemplatematch%${Resources[]}%%",
          "vpn-connection": "%%iftemplatematch%${Resources[]}%%",
          "vpn-gateway": "%%iftemplatematch%${Resources[]}%%"
        }
      }
    ],
    "delete-traffic-mirror-filter": [
      {
        "action": "ec2:DeleteTrafficMirrorFilter",
        "resource_mappings": {
          "TrafficMirrorFilterId": {
            "template": "${TrafficMirrorFilterId}"
          }
        }
      }
    ],
    "delete-traffic-mirror-filter-rule": [
      {
        "action": "ec2:DeleteTrafficMirrorFilterRule",
        "resource_mappings": {
          "TrafficMirrorFilterRuleId": {
            "template": "${TrafficMirrorFilterRuleId}"
          }
        }
      }
    ],
    "delete-traffic-mirror-session": [
      {
        "action": "ec2:DeleteTrafficMirrorSession",
        "resource_mappings": {
          "TrafficMirrorSessionId": {
            "template": "${TrafficMirrorSessionId}"
          }
        }
      }
    ],
    "delete-traffic-mirror-target": [
      {
        "action": "ec2:DeleteTrafficMirrorTarget",
        "resource_mappings": {
          "TrafficMirrorTargetId": {
            "template": "${TrafficMirrorTargetId}"
          }
        }
      }
    ],
    "delete-transit-gateway": [
      {
        "action": "ec2:DeleteTransitGateway",
        "resource_mappings": {
          "TransitGatewayId": {
            "template": "${TransitGatewayId}"
          }
        }
      }
    ],
    "delete-transit-gateway-connect": [
      {
        "action": "ec2:DeleteTransitGatewayConnect",
        "resource_mappings": {
          "TransitGatewayAttachmentId": {
            "template": "${TransitGatewayAttachmentId}"
          }
        }
      }
    ],
    "delete-transit-gateway-connect-peer": [
      {
        "action": "ec2:DeleteTransitGatewayConnectPeer",
        "resource_mappings": {
          "TransitGatewayConnectPeerId": {
            "template": "${TransitGatewayConnectPeerId}"
          }
        }
      }
    ],
    "delete-transit-gateway-multicast-domain": [
      {
        "action": "ec2:DeleteTransitGatewayMulticastDomain",
        "resource_mappings": {
          "TransitGatewayMulticastDomainId": {
            "template": "${TransitGatewayMulticastDomainId}"
          }
        }
      }
    ],
    "delete-transit-gateway-peering-attachment": [
      {
        "action": "ec2:DeleteTransitGatewayPeeringAttachment",
        "resource_mappings": {
          "TransitGatewayAttachmentId": {
            "template": "${TransitGatewayAttachmentId}"
          }
        }
      }
    ],
    "delete-transit-gateway-policy-table": [
      {
        "action": "ec2:DeleteTransitGatewayPolicyTable",
        "resource_mappings": {
          "TransitGatewayPolicyTableId": {
            "template": "${TransitGatewayPolicyTableId}"
          }
        }
      }
    ],
    "delete-transit-gateway-prefix-list-reference": [
      {
        "action": "ec2:DeleteTransitGatewayPrefixListReference",
        "resource_mappings": {
          "PrefixListId": {
            "template": "${PrefixListId}"
          },
          "TransitGatewayRouteTableId": {
            "template": "${TransitGatewayRouteTableId}"
          }
        }
      }
    ],
    "delete-transit-gateway-route": [
      {
        "action": "ec2:DeleteTransitGatewayRoute",
        "resource_mappings": {
          "TransitGatewayRouteTableId": {
            "template": "${TransitGatewayRouteTableId}"
          }
        }
      }
    ],
    "delete-transit-gateway-route-table": [
      {
        "action": "ec2:DeleteTransitGatewayRouteTable",
        "resource_mappings": {
          "TransitGatewayRouteTableId": {
            "template": "${TransitGatewayRouteTableId}"
          }
        }
      }
    ],
    "delete-transit-gateway-route-table-announcement": [
      {
        "action": "ec2:DeleteTransitGatewayRouteTableAnnouncement",
        "resource_mappings": {
          "TransitGatewayRouteTableAnnouncementId": {
            "template": "${TransitGatewayRouteTableAnnouncementId}"
          }
        }
      }
    ],
    "delete-transit-gateway-vpc-attachment": [
      {
        "action": "ec2:DeleteTransitGatewayVpcAttachment",
        "resource_mappings": {
          "TransitGatewayAttachmentId": {
            "template": "${TransitGatewayAttachmentId}"
          }
        }
      }
    ],
    "delete-verified-access-endpoint": [
      {
        "action": "ec2:DeleteVerifiedAccessEndpoint",
        "resource_mappings": {
          "VerifiedAccessEndpointId": {
            "template": "${VerifiedAccessEndpointId}"
          }
        }
      }
    ],
    "delete-verified-access-group": [
      {
        "action": "ec2:DeleteVerifiedAccessGroup",
        "resource_mappings": {
          "VerifiedAccessGroupId": {
            "template": "${VerifiedAccessGroupId}"
          }
        }
      }
    ],
    "delete-verified-access-instance": [
      {
        "action": "ec2:DeleteVerifiedAccessInstance",
        "resource_mappings": {
          "VerifiedAccessInstanceId": {
            "template": "${VerifiedAccessInstanceId}"
          }
        }
      }
    ],
    "delete-verified-access-trust-provider": [
      {
        "action": "ec2:DeleteVerifiedAccessTrustProvider",
        "resource_mappings": {
          "VerifiedAccessTrustProviderId": {
            "template": "${VerifiedAccessTrustProviderId}"
          }
        }
      }
    ],
    "delete-volume": [
      {
        "action": "ec2:DeleteVolume",
        "resource_mappings": {
          "VolumeId": {
            "template": "${VolumeId}"
          }
        }
      }
    ],
    "delete-vpc": [
      {
        "action": "ec2:DeleteVpc",
        "resource_mappings": {
          "VpcId": {
            "template": "${VpcId}"
          }
        }
      }
    ],
    "delete-vpc-endpoint-connection-notifications": [
      {
        "action": "ec2:DeleteVpcEndpointConnectionNotifications",
        "resource_mappings": {
          "VpcEndpointId": {
            "template": "*"
          },
          "VpcEndpointServiceId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-vpc-endpoint-service-configurations": [
      {
        "action": "ec2:DeleteVpcEndpointServiceConfigurations",
        "resource_mappings": {
          "VpcEndpointServiceId": {
            "template": "${ServiceIds[]}"
          }
        }
      }
    ],
    "delete-vpc-endpoints": [
      {
        "action": "ec2:DeleteVpcEndpoints",
        "resource_mappings": {
          "VpcEndpointId": {
            "template": "${VpcEndpointIds[]}"
          }
        }
      }
    ],
    "delete-vpc-peering-connection": [
      {
        "action": "ec2:DeleteVpcPeeringConnection",
        "resource_mappings": {
          "VpcPeeringConnectionId": {
            "template": "${VpcPeeringConnectionId}"
          }
        }
      }
    ],
    "delete-vpn-connection": [
      {
        "action": "ec2:DeleteVpnConnection",
        "resource_mappings": {
          "VpnConnectionId": {
            "template": "${VpnConnectionId}"
          }
        }
      }
    ],
    "delete-vpn-connection-route": [
      {
        "action": "ec2:DeleteVpnConnectionRoute",
        "resource_mappings": {
          "VpnConnectionId": {
            "template": "${VpnConnectionId}"
          }
        }
      }
    ],
    "delete-vpn-gateway": [
      {
        "action": "ec2:DeleteVpnGateway",
        "resource_mappings": {
          "VpnGatewayId": {
            "template": "${VpnGatewayId}"
          }
        }
      }
    ],
    "deprovision-byoip-cidr": [
      {
        "action": "ec2:DeprovisionByoipCidr",
        "resource_mappings": {}
      }
    ],
    "deprovision-ipam-pool-cidr": [
      {
        "action": "ec2:DeprovisionIpamPoolCidr",
        "resource_mappings": {
          "IpamPoolId": {
            "template": "${IpamPoolId}"
          }
        }
      }
    ],
    "deprovision-public-ipv4-pool-cidr": [
      {
        "action": "ec2:DeprovisionPublicIpv4PoolCidr",
        "resource_mappings": {
          "Ipv4PoolEc2Id": {
            "template": "${PoolId}"
          }
        }
      }
    ],
    "deregister-image": [
      {
        "action": "ec2:DeregisterImage",
        "resource_mappings": {
          "ImageId": {
            "template": "${ImageId}"
          }
        }
      }
    ],
    "deregister-instance-event-notification-attributes": [
      {
        "action": "ec2:DeregisterInstanceEventNotificationAttributes",
        "resource_mappings": {}
      }
    ],
    "deregister-transit-gateway-multicast-group-members": [
      {
        "action": "ec2:DeregisterTransitGatewayMulticastGroupMembers",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "${NetworkInterfaceIds[]}"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "${TransitGatewayMulticastDomainId}"
          }
        }
      }
    ],
    "deregister-transit-gateway-multicast-group-sources": [
      {
        "action": "ec2:DeregisterTransitGatewayMulticastGroupSources",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "${NetworkInterfaceIds[]}"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "${TransitGatewayMulticastDomainId}"
          }
        }
      }
    ],
    "describe-account-attributes": [
      {
        "action": "ec2:DescribeAccountAttributes",
        "resource_mappings": {}
      }
    ],
    "describe-address-transfers": [
      {
        "action": "ec2:DescribeAddressTransfers",
        "resource_mappings": {}
      }
    ],
    "describe-addresses": [
      {
        "action": "ec2:DescribeAddresses",
        "resource_mappings": {}
      }
    ],
    "describe-addresses-attribute": [
      {
        "action": "ec2:DescribeAddressesAttribute",
        "resource_mappings": {}
      }
    ],
    "describe-aggregate-id-format": [
      {
        "action": "ec2:DescribeAggregateIdFormat",
        "resource_mappings": {}
      }
    ],
    "describe-availability-zones": [
      {
        "action": "ec2:DescribeAvailabilityZones",
        "resource_mappings": {}
      }
    ],
    "describe-aws-network-performance-metric-subscriptions": [
      {
        "action": "ec2:DescribeAwsNetworkPerformanceMetricSubscriptions",
        "resource_mappings": {}
      }
    ],
    "describe-bundle-tasks": [
      {
        "action": "ec2:DescribeBundleTasks",
        "resource_mappings": {}
      }
    ],
    "describe-byoip-cidrs": [
      {
        "action": "ec2:DescribeByoipCidrs",
        "resource_mappings": {}
      }
    ],
    "describe-capacity-reservation-fleets": [
      {
        "action": "ec2:DescribeCapacityReservationFleets",
        "resource_mappings": {}
      }
    ],
    "describe-capacity-reservations": [
      {
        "action": "ec2:DescribeCapacityReservations",
        "resource_mappings": {}
      }
    ],
    "describe-carrier-gateways": [
      {
        "action": "ec2:DescribeCarrierGateways",
        "resource_mappings": {}
      }
    ],
    "describe-classic-link-instances": [
      {
        "action": "ec2:DescribeClassicLinkInstances",
        "resource_mappings": {}
      }
    ],
    "describe-client-vpn-authorization-rules": [
      {
        "action": "ec2:DescribeClientVpnAuthorizationRules",
        "resource_mappings": {}
      }
    ],
    "describe-client-vpn-connections": [
      {
        "action": "ec2:DescribeClientVpnConnections",
        "resource_mappings": {}
      }
    ],
    "describe-client-vpn-endpoints": [
      {
        "action": "ec2:DescribeClientVpnEndpoints",
        "resource_mappings": {}
      }
    ],
    "describe-client-vpn-routes": [
      {
        "action": "ec2:DescribeClientVpnRoutes",
        "resource_mappings": {}
      }
    ],
    "describe-client-vpn-target-networks": [
      {
        "action": "ec2:DescribeClientVpnTargetNetworks",
        "resource_mappings": {}
      }
    ],
    "describe-coip-pools": [
      {
        "action": "ec2:DescribeCoipPools",
        "resource_mappings": {}
      }
    ],
    "describe-conversion-tasks": [
      {
        "action": "ec2:DescribeConversionTasks",
        "resource_mappings": {}
      }
    ],
    "describe-customer-gateways": [
      {
        "action": "ec2:DescribeCustomerGateways",
        "resource_mappings": {}
      }
    ],
    "describe-dhcp-options": [
      {
        "action": "ec2:DescribeDhcpOptions",
        "resource_mappings": {}
      }
    ],
    "describe-egress-only-internet-gateways": [
      {
        "action": "ec2:DescribeEgressOnlyInternetGateways",
        "resource_mappings": {}
      }
    ],
    "describe-elastic-gpus": [
      {
        "action": "ec2:DescribeElasticGpus",
        "resource_mappings": {}
      }
    ],
    "describe-export-image-tasks": [
      {
        "action": "ec2:DescribeExportImageTasks",
        "resource_mappings": {}
      }
    ],
    "describe-export-tasks": [
      {
        "action": "ec2:DescribeExportTasks",
        "resource_mappings": {}
      }
    ],
    "describe-fast-launch-images": [
      {
        "action": "ec2:DescribeFastLaunchImages",
        "resource_mappings": {
          "ImageId": {
            "template": "${ImageIds[]}"
          }
        }
      }
    ],
    "describe-fast-snapshot-restores": [
      {
        "action": "ec2:DescribeFastSnapshotRestores",
        "resource_mappings": {}
      }
    ],
    "describe-fleet-history": [
      {
        "action": "ec2:DescribeFleetHistory",
        "resource_mappings": {}
      }
    ],
    "describe-fleet-instances": [
      {
        "action": "ec2:DescribeFleetInstances",
        "resource_mappings": {}
      }
    ],
    "describe-fleets": [
      {
        "action": "ec2:DescribeFleets",
        "resource_mappings": {}
      }
    ],
    "describe-flow-logs": [
      {
        "action": "ec2:DescribeFlowLogs",
        "resource_mappings": {}
      }
    ],
    "describe-fpga-image-attribute": [
      {
        "action": "ec2:DescribeFpgaImageAttribute",
        "resource_mappings": {}
      }
    ],
    "describe-fpga-images": [
      {
        "action": "ec2:DescribeFpgaImages",
        "resource_mappings": {}
      }
    ],
    "describe-host-reservation-offerings": [
      {
        "action": "ec2:DescribeHostReservationOfferings",
        "resource_mappings": {}
      }
    ],
    "describe-host-reservations": [
      {
        "action": "ec2:DescribeHostReservations",
        "resource_mappings": {}
      }
    ],
    "describe-hosts": [
      {
        "action": "ec2:DescribeHosts",
        "resource_mappings": {}
      }
    ],
    "describe-iam-instance-profile-associations": [
      {
        "action": "ec2:DescribeIamInstanceProfileAssociations",
        "resource_mappings": {}
      }
    ],
    "describe-id-format": [
      {
        "action": "ec2:DescribeIdFormat",
        "resource_mappings": {}
      }
    ],
    "describe-identity-id-format": [
      {
        "action": "ec2:DescribeIdentityIdFormat",
        "resource_mappings": {}
      }
    ],
    "describe-image-attribute": [
      {
        "action": "ec2:DescribeImageAttribute",
        "resource_mappings": {}
      }
    ],
    "describe-images": [
      {
        "action": "ec2:DescribeImages",
        "resource_mappings": {}
      }
    ],
    "describe-import-image-tasks": [
      {
        "action": "ec2:DescribeImportImageTasks",
        "resource_mappings": {}
      }
    ],
    "describe-import-snapshot-tasks": [
      {
        "action": "ec2:DescribeImportSnapshotTasks",
        "resource_mappings": {}
      }
    ],
    "describe-instance-attribute": [
      {
        "action": "ec2:DescribeInstanceAttribute",
        "resource_mappings": {}
      }
    ],
    "describe-instance-connect-endpoints": [
      {
        "action": "ec2:DescribeInstanceConnectEndpoints",
        "resource_mappings": {}
      }
    ],
    "describe-instance-credit-specifications": [
      {
        "action": "ec2:DescribeInstanceCreditSpecifications",
        "resource_mappings": {}
      }
    ],
    "describe-instance-event-notification-attributes": [
      {
        "action": "ec2:DescribeInstanceEventNotificationAttributes",
        "resource_mappings": {}
      }
    ],
    "describe-instance-event-windows": [
      {
        "action": "ec2:DescribeInstanceEventWindows",
        "resource_mappings": {}
      }
    ],
    "describe-instance-status": [
      {
        "action": "ec2:DescribeInstanceStatus",
        "resource_mappings": {}
      }
    ],
    "describe-instance-type-offerings": [
      {
        "action": "ec2:DescribeInstanceTypeOfferings",
        "resource_mappings": {}
      }
    ],
    "describe-instance-types": [
      {
        "action": "ec2:DescribeInstanceTypes",
        "resource_mappings": {}
      }
    ],
    "describe-instances": [
      {
        "action": "ec2:DescribeInstances",
        "resource_mappings": {}
      }
    ],
    "describe-internet-gateways": [
      {
        "action": "ec2:DescribeInternetGateways",
        "resource_mappings": {}
      }
    ],
    "describe-ipam-pools": [
      {
        "action": "ec2:DescribeIpamPools",
        "resource_mappings": {}
      }
    ],
    "describe-ipam-resource-discoveries": [
      {
        "action": "ec2:DescribeIpamResourceDiscoveries",
        "resource_mappings": {}
      }
    ],
    "describe-ipam-resource-discovery-associations": [
      {
        "action": "ec2:DescribeIpamResourceDiscoveryAssociations",
        "resource_mappings": {}
      }
    ],
    "describe-ipam-scopes": [
      {
        "action": "ec2:DescribeIpamScopes",
        "resource_mappings": {}
      }
    ],
    "describe-ipams": [
      {
        "action": "ec2:DescribeIpams",
        "resource_mappings": {}
      }
    ],
    "describe-ipv6-pools": [
      {
        "action": "ec2:DescribeIpv6Pools",
        "resource_mappings": {}
      }
    ],
    "describe-key-pairs": [
      {
        "action": "ec2:DescribeKeyPairs",
        "resource_mappings": {}
      }
    ],
    "describe-launch-template-versions": [
      {
        "action": "ec2:DescribeLaunchTemplateVersions",
        "resource_mappings": {}
      }
    ],
    "describe-launch-templates": [
      {
        "action": "ec2:DescribeLaunchTemplates",
        "resource_mappings": {}
      }
    ],
    "describe-local-gateway-route-table-virtual-interface-group-associations": [
      {
        "action": "ec2:DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
        "resource_mappings": {}
      }
    ],
    "describe-local-gateway-route-table-vpc-associations": [
      {
        "action": "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
        "resource_mappings": {}
      }
    ],
    "describe-local-gateway-route-tables": [
      {
        "action": "ec2:DescribeLocalGatewayRouteTables",
        "resource_mappings": {}
      }
    ],
    "describe-local-gateway-virtual-interface-groups": [
      {
        "action": "ec2:DescribeLocalGatewayVirtualInterfaceGroups",
        "resource_mappings": {}
      }
    ],
    "describe-local-gateway-virtual-interfaces": [
      {
        "action": "ec2:DescribeLocalGatewayVirtualInterfaces",
        "resource_mappings": {}
      }
    ],
    "describe-local-gateways": [
      {
        "action": "ec2:DescribeLocalGateways",
        "resource_mappings": {}
      }
    ],
    "describe-managed-prefix-lists": [
      {
        "action": "ec2:DescribeManagedPrefixLists",
        "resource_mappings": {}
      }
    ],
    "describe-moving-addresses": [
      {
        "action": "ec2:DescribeMovingAddresses",
        "resource_mappings": {}
      }
    ],
    "describe-nat-gateways": [
      {
        "action": "ec2:DescribeNatGateways",
        "resource_mappings": {}
      }
    ],
    "describe-network-acls": [
      {
        "action": "ec2:DescribeNetworkAcls",
        "resource_mappings": {}
      }
    ],
    "describe-network-insights-access-scope-analyses": [
      {
        "action": "ec2:DescribeNetworkInsightsAccessScopeAnalyses",
        "resource_mappings": {}
      }
    ],
    "describe-network-insights-access-scopes": [
      {
        "action": "ec2:DescribeNetworkInsightsAccessScopes",
        "resource_mappings": {}
      }
    ],
    "describe-network-insights-analyses": [
      {
        "action": "ec2:DescribeNetworkInsightsAnalyses",
        "resource_mappings": {}
      }
    ],
    "describe-network-insights-paths": [
      {
        "action": "ec2:DescribeNetworkInsightsPaths",
        "resource_mappings": {}
      }
    ],
    "describe-network-interface-attribute": [
      {
        "action": "ec2:DescribeNetworkInterfaceAttribute",
        "resource_mappings": {}
      }
    ],
    "describe-network-interface-permissions": [
      {
        "action": "ec2:DescribeNetworkInterfacePermissions",
        "resource_mappings": {}
      }
    ],
    "describe-network-interfaces": [
      {
        "action": "ec2:DescribeNetworkInterfaces",
        "resource_mappings": {}
      }
    ],
    "describe-placement-groups": [
      {
        "action": "ec2:DescribePlacementGroups",
        "resource_mappings": {}
      }
    ],
    "describe-prefix-lists": [
      {
        "action": "ec2:DescribePrefixLists",
        "resource_mappings": {}
      }
    ],
    "describe-principal-id-format": [
      {
        "action": "ec2:DescribePrincipalIdFormat",
        "resource_mappings": {}
      }
    ],
    "describe-public-ipv4-pools": [
      {
        "action": "ec2:DescribePublicIpv4Pools",
        "resource_mappings": {}
      }
    ],
    "describe-regions": [
      {
        "action": "ec2:DescribeRegions",
        "resource_mappings": {}
      }
    ],
    "describe-replace-root-volume-tasks": [
      {
        "action": "ec2:DescribeReplaceRootVolumeTasks",
        "resource_mappings": {}
      }
    ],
    "describe-reserved-instances": [
      {
        "action": "ec2:DescribeReservedInstances",
        "resource_mappings": {}
      }
    ],
    "describe-reserved-instances-listings": [
      {
        "action": "ec2:DescribeReservedInstancesListings",
        "resource_mappings": {}
      }
    ],
    "describe-reserved-instances-modifications": [
      {
        "action": "ec2:DescribeReservedInstancesModifications",
        "resource_mappings": {}
      }
    ],
    "describe-reserved-instances-offerings": [
      {
        "action": "ec2:DescribeReservedInstancesOfferings",
        "resource_mappings": {}
      }
    ],
    "describe-route-tables": [
      {
        "action": "ec2:DescribeRouteTables",
        "resource_mappings": {}
      }
    ],
    "describe-scheduled-instance-availability": [
      {
        "action": "ec2:DescribeScheduledInstanceAvailability",
        "resource_mappings": {}
      }
    ],
    "describe-scheduled-instances": [
      {
        "action": "ec2:DescribeScheduledInstances",
        "resource_mappings": {}
      }
    ],
    "describe-security-group-references": [
      {
        "action": "ec2:DescribeSecurityGroupReferences",
        "resource_mappings": {}
      }
    ],
    "describe-security-group-rules": [
      {
        "action": "ec2:DescribeSecurityGroupRules",
        "resource_mappings": {}
      }
    ],
    "describe-security-groups": [
      {
        "action": "ec2:DescribeSecurityGroups",
        "resource_mappings": {}
      }
    ],
    "describe-snapshot-attribute": [
      {
        "action": "ec2:DescribeSnapshotAttribute",
        "resource_mappings": {}
      }
    ],
    "describe-snapshot-tier-status": [
      {
        "action": "ec2:DescribeSnapshotTierStatus",
        "resource_mappings": {}
      }
    ],
    "describe-snapshots": [
      {
        "action": "ec2:DescribeSnapshots",
        "resource_mappings": {}
      }
    ],
    "describe-spot-datafeed-subscription": [
      {
        "action": "ec2:DescribeSpotDatafeedSubscription",
        "resource_mappings": {}
      }
    ],
    "describe-spot-fleet-instances": [
      {
        "action": "ec2:DescribeSpotFleetInstances",
        "resource_mappings": {}
      }
    ],
    "describe-spot-fleet-request-history": [
      {
        "action": "ec2:DescribeSpotFleetRequestHistory",
        "resource_mappings": {}
      }
    ],
    "describe-spot-fleet-requests": [
      {
        "action": "ec2:DescribeSpotFleetRequests",
        "resource_mappings": {}
      }
    ],
    "describe-spot-instance-requests": [
      {
        "action": "ec2:DescribeSpotInstanceRequests",
        "resource_mappings": {}
      }
    ],
    "describe-spot-price-history": [
      {
        "action": "ec2:DescribeSpotPriceHistory",
        "resource_mappings": {}
      }
    ],
    "describe-stale-security-groups": [
      {
        "action": "ec2:DescribeStaleSecurityGroups",
        "resource_mappings": {}
      }
    ],
    "describe-store-image-tasks": [
      {
        "action": "ec2:DescribeStoreImageTasks",
        "resource_mappings": {}
      }
    ],
    "describe-subnets": [
      {
        "action": "ec2:DescribeSubnets",
        "resource_mappings": {}
      }
    ],
    "describe-tags": [
      {
        "action": "ec2:DescribeTags",
        "resource_mappings": {}
      }
    ],
    "describe-traffic-mirror-filters": [
      {
        "action": "ec2:DescribeTrafficMirrorFilters",
        "resource_mappings": {}
      }
    ],
    "describe-traffic-mirror-sessions": [
      {
        "action": "ec2:DescribeTrafficMirrorSessions",
        "resource_mappings": {}
      }
    ],
    "describe-traffic-mirror-targets": [
      {
        "action": "ec2:DescribeTrafficMirrorTargets",
        "resource_mappings": {}
      }
    ],
    "describe-transit-gateway-attachments": [
      {
        "action": "ec2:DescribeTransitGatewayAttachments",
        "resource_mappings": {}
      }
    ],
    "describe-transit-gateway-connect-peers": [
      {
        "action": "ec2:DescribeTransitGatewayConnectPeers",
        "resource_mappings": {}
      }
    ],
    "describe-transit-gateway-connects": [
      {
        "action": "ec2:DescribeTransitGatewayConnects",
        "resource_mappings": {}
      }
    ],
    "describe-transit-gateway-multicast-domains": [
      {
        "action": "ec2:DescribeTransitGatewayMulticastDomains",
        "resource_mappings": {}
      }
    ],
    "describe-transit-gateway-peering-attachments": [
      {
        "action": "ec2:DescribeTransitGatewayPeeringAttachments",
        "resource_mappings": {}
      }
    ],
    "describe-transit-gateway-policy-tables": [
      {
        "action": "ec2:DescribeTransitGatewayPolicyTables",
        "resource_mappings": {}
      }
    ],
    "describe-transit-gateway-route-table-announcements": [
      {
        "action": "ec2:DescribeTransitGatewayRouteTableAnnouncements",
        "resource_mappings": {}
      }
    ],
    "describe-transit-gateway-route-tables": [
      {
        "action": "ec2:DescribeTransitGatewayRouteTables",
        "resource_mappings": {}
      }
    ],
    "describe-transit-gateway-vpc-attachments": [
      {
        "action": "ec2:DescribeTransitGatewayVpcAttachments",
        "resource_mappings": {}
      }
    ],
    "describe-transit-gateways": [
      {
        "action": "ec2:DescribeTransitGateways",
        "resource_mappings": {}
      }
    ],
    "describe-trunk-interface-associations": [
      {
        "action": "ec2:DescribeTrunkInterfaceAssociations",
        "resource_mappings": {}
      }
    ],
    "describe-verified-access-endpoints": [
      {
        "action": "ec2:DescribeVerifiedAccessEndpoints",
        "resource_mappings": {}
      }
    ],
    "describe-verified-access-groups": [
      {
        "action": "ec2:DescribeVerifiedAccessGroups",
        "resource_mappings": {}
      }
    ],
    "describe-verified-access-instance-logging-configurations": [
      {
        "action": "ec2:DescribeVerifiedAccessInstanceLoggingConfigurations",
        "resource_mappings": {}
      }
    ],
    "describe-verified-access-instances": [
      {
        "action": "ec2:DescribeVerifiedAccessInstances",
        "resource_mappings": {}
      }
    ],
    "describe-verified-access-trust-providers": [
      {
        "action": "ec2:DescribeVerifiedAccessTrustProviders",
        "resource_mappings": {}
      }
    ],
    "describe-volume-attribute": [
      {
        "action": "ec2:DescribeVolumeAttribute",
        "resource_mappings": {}
      }
    ],
    "describe-volume-status": [
      {
        "action": "ec2:DescribeVolumeStatus",
        "resource_mappings": {}
      }
    ],
    "describe-volumes": [
      {
        "action": "ec2:DescribeVolumes",
        "resource_mappings": {}
      }
    ],
    "describe-volumes-modifications": [
      {
        "action": "ec2:DescribeVolumesModifications",
        "resource_mappings": {}
      }
    ],
    "describe-vpc-attribute": [
      {
        "action": "ec2:DescribeVpcAttribute",
        "resource_mappings": {}
      }
    ],
    "describe-vpc-classic-link": [
      {
        "action": "ec2:DescribeVpcClassicLink",
        "resource_mappings": {}
      }
    ],
    "describe-vpc-classic-link-dns-support": [
      {
        "action": "ec2:DescribeVpcClassicLinkDnsSupport",
        "resource_mappings": {}
      }
    ],
    "describe-vpc-endpoint-connection-notifications": [
      {
        "action": "ec2:DescribeVpcEndpointConnectionNotifications",
        "resource_mappings": {}
      }
    ],
    "describe-vpc-endpoint-connections": [
      {
        "action": "ec2:DescribeVpcEndpointConnections",
        "resource_mappings": {}
      }
    ],
    "describe-vpc-endpoint-service-configurations": [
      {
        "action": "ec2:DescribeVpcEndpointServiceConfigurations",
        "resource_mappings": {}
      }
    ],
    "describe-vpc-endpoint-service-permissions": [
      {
        "action": "ec2:DescribeVpcEndpointServicePermissions",
        "resource_mappings": {}
      }
    ],
    "describe-vpc-endpoint-services": [
      {
        "action": "ec2:DescribeVpcEndpointServices",
        "resource_mappings": {}
      }
    ],
    "describe-vpc-endpoints": [
      {
        "action": "ec2:DescribeVpcEndpoints",
        "resource_mappings": {}
      }
    ],
    "describe-vpc-peering-connections": [
      {
        "action": "ec2:DescribeVpcPeeringConnections",
        "resource_mappings": {}
      }
    ],
    "describe-vpcs": [
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      }
    ],
    "describe-vpn-connections": [
      {
        "action": "ec2:DescribeVpnConnections",
        "resource_mappings": {}
      }
    ],
    "describe-vpn-gateways": [
      {
        "action": "ec2:DescribeVpnGateways",
        "resource_mappings": {}
      }
    ],
    "detach-classic-link-vpc": [
      {
        "action": "ec2:DetachClassicLinkVpc",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "VpcId": {
            "template": "${VpcId}"
          }
        }
      }
    ],
    "detach-internet-gateway": [
      {
        "action": "ec2:DetachInternetGateway",
        "resource_mappings": {
          "InternetGatewayId": {
            "template": "${InternetGatewayId}"
          },
          "VpcId": {
            "template": "${VpcId}"
          }
        }
      }
    ],
    "detach-network-interface": [
      {
        "action": "ec2:DetachNetworkInterface",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          }
        }
      }
    ],
    "detach-verified-access-trust-provider": [
      {
        "action": "ec2:DetachVerifiedAccessTrustProvider",
        "resource_mappings": {
          "VerifiedAccessInstanceId": {
            "template": "${VerifiedAccessInstanceId}"
          },
          "VerifiedAccessTrustProviderId": {
            "template": "${VerifiedAccessTrustProviderId}"
          }
        }
      }
    ],
    "detach-volume": [
      {
        "action": "ec2:DetachVolume",
        "resource_mappings": {
          "VolumeId": {
            "template": "${VolumeId}"
          },
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "detach-vpn-gateway": [
      {
        "action": "ec2:DetachVpnGateway",
        "resource_mappings": {
          "VpcId": {
            "template": "${VpcId}"
          },
          "VpnGatewayId": {
            "template": "${VpnGatewayId}"
          }
        }
      }
    ],
    "disable-address-transfer": [
      {
        "action": "ec2:DisableAddressTransfer",
        "resource_mappings": {
          "AllocationId": {
            "template": "${AllocationId}"
          }
        }
      }
    ],
    "disable-aws-network-performance-metric-subscription": [
      {
        "action": "ec2:DisableAwsNetworkPerformanceMetricSubscription",
        "resource_mappings": {}
      }
    ],
    "disable-ebs-encryption-by-default": [
      {
        "action": "ec2:DisableEbsEncryptionByDefault",
        "resource_mappings": {}
      }
    ],
    "disable-fast-launch": [
      {
        "action": "ec2:DisableFastLaunch",
        "resource_mappings": {
          "ImageId": {
            "template": "${ImageId}"
          }
        }
      }
    ],
    "disable-fast-snapshot-restores": [
      {
        "action": "ec2:DisableFastSnapshotRestores",
        "resource_mappings": {
          "SnapshotId": {
            "template": "${SourceSnapshotIds[]}"
          }
        }
      }
    ],
    "disable-image": [
      {
        "note": "NotFound",
        "action": "EC2:DisableImage",
        "resource_mappings": {}
      }
    ],
    "disable-image-block-public-access": [
      {
        "note": "NotFound",
        "action": "EC2:DisableImageBlockPublicAccess",
        "resource_mappings": {}
      }
    ],
    "disable-image-deprecation": [
      {
        "action": "ec2:DisableImageDeprecation",
        "resource_mappings": {
          "ImageId": {
            "template": "${ImageId}"
          }
        }
      }
    ],
    "disable-ipam-organization-admin-account": [
      {
        "action": "ec2:DisableIpamOrganizationAdminAccount",
        "resource_mappings": {}
      },
      {
        "action": "organizations:DeregisterDelegatedAdministrator",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "AccountId": {
            "template": "*"
          }
        }
      }
    ],
    "disable-serial-console-access": [
      {
        "action": "ec2:DisableSerialConsoleAccess",
        "resource_mappings": {}
      }
    ],
    "disable-transit-gateway-route-table-propagation": [
      {
        "action": "ec2:DisableTransitGatewayRouteTablePropagation",
        "resource_mappings": {
          "TransitGatewayAttachmentId": {
            "template": "${TransitGatewayAttachmentId}"
          },
          "TransitGatewayRouteTableId": {
            "template": "${TransitGatewayRouteTableId}"
          }
        }
      }
    ],
    "disable-vgw-route-propagation": [
      {
        "action": "ec2:DisableVgwRoutePropagation",
        "resource_mappings": {
          "RouteTableId": {
            "template": "${RouteTableId}"
          },
          "VpnGatewayId": {
            "template": "${GatewayId}"
          }
        }
      }
    ],
    "disable-vpc-classic-link": [
      {
        "action": "ec2:DisableVpcClassicLink",
        "resource_mappings": {
          "VpcId": {
            "template": "${VpcId}"
          }
        }
      }
    ],
    "disable-vpc-classic-link-dns-support": [
      {
        "action": "ec2:DisableVpcClassicLinkDnsSupport",
        "resource_mappings": {
          "VpcId": {
            "template": "${VpcId}"
          }
        }
      }
    ],
    "disassociate-address": [
      {
        "action": "ec2:DisassociateAddress",
        "resource_mappings": {
          "AllocationId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          }
        }
      }
    ],
    "disassociate-client-vpn-target-network": [
      {
        "action": "ec2:DisassociateClientVpnTargetNetwork",
        "resource_mappings": {
          "ClientVpnEndpointId": {
            "template": "${ClientVpnEndpointId}"
          }
        }
      }
    ],
    "disassociate-enclave-certificate-iam-role": [
      {
        "action": "ec2:DisassociateEnclaveCertificateIamRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate": "${CertificateArn}",
          "role": "${RoleArn}"
        }
      }
    ],
    "disassociate-iam-instance-profile": [
      {
        "action": "ec2:DisassociateIamInstanceProfile",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          }
        }
      }
    ],
    "disassociate-instance-event-window": [
      {
        "action": "ec2:DisassociateInstanceEventWindow",
        "resource_mappings": {
          "InstanceEventWindowId": {
            "template": "${InstanceEventWindowId}"
          },
          "DedicatedHostId": {
            "template": "${AssociationTarget.DedicatedHostIds[]}"
          },
          "InstanceId": {
            "template": "${AssociationTarget.InstanceIds[]}"
          }
        }
      }
    ],
    "disassociate-ipam-resource-discovery": [
      {
        "action": "ec2:DisassociateIpamResourceDiscovery",
        "resource_mappings": {
          "IpamResourceDiscoveryAssociationId": {
            "template": "${IpamResourceDiscoveryAssociationId}"
          }
        }
      }
    ],
    "disassociate-nat-gateway-address": [
      {
        "action": "ec2:DisassociateNatGatewayAddress",
        "resource_mappings": {
          "AllocationId": {
            "template": "${AssociationIds[]}"
          },
          "NatGatewayId": {
            "template": "${NatGatewayId}"
          },
          "NetworkInterfaceId": {
            "template": "*"
          }
        }
      }
    ],
    "disassociate-route-table": [
      {
        "action": "ec2:DisassociateRouteTable",
        "resource_mappings": {
          "RouteTableId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          }
        }
      }
    ],
    "disassociate-subnet-cidr-block": [
      {
        "action": "ec2:DisassociateSubnetCidrBlock",
        "resource_mappings": {
          "SubnetId": {
            "template": "*"
          }
        }
      }
    ],
    "disassociate-transit-gateway-multicast-domain": [
      {
        "action": "ec2:DisassociateTransitGatewayMulticastDomain",
        "resource_mappings": {
          "SubnetId": {
            "template": "${SubnetIds[]}"
          },
          "TransitGatewayAttachmentId": {
            "template": "${TransitGatewayAttachmentId}"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "${TransitGatewayMulticastDomainId}"
          }
        }
      }
    ],
    "disassociate-transit-gateway-policy-table": [
      {
        "action": "ec2:DisassociateTransitGatewayPolicyTable",
        "resource_mappings": {
          "TransitGatewayAttachmentId": {
            "template": "${TransitGatewayAttachmentId}"
          },
          "TransitGatewayPolicyTableId": {
            "template": "${TransitGatewayPolicyTableId}"
          }
        }
      }
    ],
    "disassociate-transit-gateway-route-table": [
      {
        "action": "ec2:DisassociateTransitGatewayRouteTable",
        "resource_mappings": {
          "TransitGatewayAttachmentId": {
            "template": "${TransitGatewayAttachmentId}"
          },
          "TransitGatewayRouteTableId": {
            "template": "${TransitGatewayRouteTableId}"
          }
        }
      }
    ],
    "disassociate-trunk-interface": [
      {
        "action": "ec2:DisassociateTrunkInterface",
        "resource_mappings": {}
      }
    ],
    "disassociate-vpc-cidr-block": [
      {
        "action": "ec2:DisassociateVpcCidrBlock",
        "resource_mappings": {}
      }
    ],
    "enable-address-transfer": [
      {
        "action": "ec2:EnableAddressTransfer",
        "resource_mappings": {
          "AllocationId": {
            "template": "${AllocationId}"
          }
        }
      }
    ],
    "enable-aws-network-performance-metric-subscription": [
      {
        "action": "ec2:EnableAwsNetworkPerformanceMetricSubscription",
        "resource_mappings": {}
      }
    ],
    "enable-ebs-encryption-by-default": [
      {
        "action": "ec2:EnableEbsEncryptionByDefault",
        "resource_mappings": {}
      }
    ],
    "enable-fast-launch": [
      {
        "action": "ec2:EnableFastLaunch",
        "resource_mappings": {
          "ImageId": {
            "template": "${ImageId}"
          },
          "LaunchTemplateId": {
            "template": "${LaunchTemplate.LaunchTemplateId}"
          }
        }
      }
    ],
    "enable-fast-snapshot-restores": [
      {
        "action": "ec2:EnableFastSnapshotRestores",
        "resource_mappings": {
          "SnapshotId": {
            "template": "${SourceSnapshotIds[]}"
          }
        }
      }
    ],
    "enable-image": [
      {
        "note": "NotFound",
        "action": "EC2:EnableImage",
        "resource_mappings": {}
      }
    ],
    "enable-image-block-public-access": [
      {
        "note": "NotFound",
        "action": "EC2:EnableImageBlockPublicAccess",
        "resource_mappings": {}
      }
    ],
    "enable-image-deprecation": [
      {
        "action": "ec2:EnableImageDeprecation",
        "resource_mappings": {
          "ImageId": {
            "template": "${ImageId}"
          }
        }
      }
    ],
    "enable-ipam-organization-admin-account": [
      {
        "action": "ec2:EnableIpamOrganizationAdminAccount",
        "resource_mappings": {}
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "organizations:EnableAWSServiceAccess",
        "resource_mappings": {}
      },
      {
        "action": "organizations:RegisterDelegatedAdministrator",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "AccountId": {
            "template": "*"
          }
        }
      }
    ],
    "enable-reachability-analyzer-organization-sharing": [
      {
        "action": "ec2:EnableReachabilityAnalyzerOrganizationSharing",
        "resource_mappings": {}
      }
    ],
    "enable-serial-console-access": [
      {
        "action": "ec2:EnableSerialConsoleAccess",
        "resource_mappings": {}
      }
    ],
    "enable-transit-gateway-route-table-propagation": [
      {
        "action": "ec2:EnableTransitGatewayRouteTablePropagation",
        "resource_mappings": {
          "TransitGatewayAttachmentId": {
            "template": "${TransitGatewayAttachmentId}"
          },
          "TransitGatewayRouteTableId": {
            "template": "${TransitGatewayRouteTableId}"
          }
        }
      }
    ],
    "enable-vgw-route-propagation": [
      {
        "action": "ec2:EnableVgwRoutePropagation",
        "resource_mappings": {
          "RouteTableId": {
            "template": "${RouteTableId}"
          },
          "VpnGatewayId": {
            "template": "${GatewayId}"
          }
        }
      }
    ],
    "enable-volume-io": [
      {
        "action": "ec2:EnableVolumeIO",
        "resource_mappings": {
          "VolumeId": {
            "template": "${VolumeId}"
          }
        }
      }
    ],
    "enable-vpc-classic-link": [
      {
        "action": "ec2:EnableVpcClassicLink",
        "resource_mappings": {
          "VpcId": {
            "template": "${VpcId}"
          }
        }
      }
    ],
    "enable-vpc-classic-link-dns-support": [
      {
        "action": "ec2:EnableVpcClassicLinkDnsSupport",
        "resource_mappings": {
          "VpcId": {
            "template": "${VpcId}"
          }
        }
      }
    ],
    "export-client-vpn-client-certificate-revocation-list": [
      {
        "action": "ec2:ExportClientVpnClientCertificateRevocationList",
        "resource_mappings": {
          "ClientVpnEndpointId": {
            "template": "${ClientVpnEndpointId}"
          }
        }
      }
    ],
    "export-client-vpn-client-configuration": [
      {
        "action": "ec2:ExportClientVpnClientConfiguration",
        "resource_mappings": {
          "ClientVpnEndpointId": {
            "template": "${ClientVpnEndpointId}"
          }
        }
      }
    ],
    "export-image": [
      {
        "action": "ec2:ExportImage",
        "resource_mappings": {
          "ImageId": {
            "template": "${ImageId}"
          }
        }
      }
    ],
    "export-transit-gateway-routes": [
      {
        "action": "ec2:ExportTransitGatewayRoutes",
        "resource_mappings": {
          "TransitGatewayRouteTableId": {
            "template": "${TransitGatewayRouteTableId}"
          }
        }
      }
    ],
    "get-associated-enclave-certificate-iam-roles": [
      {
        "action": "ec2:GetAssociatedEnclaveCertificateIamRoles",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate": "${CertificateArn}"
        }
      }
    ],
    "get-associated-ipv6-pool-cidrs": [
      {
        "action": "ec2:GetAssociatedIpv6PoolCidrs",
        "resource_mappings": {
          "Ipv6PoolEc2Id": {
            "template": "${PoolId}"
          }
        }
      }
    ],
    "get-aws-network-performance-data": [
      {
        "action": "ec2:GetAwsNetworkPerformanceData",
        "resource_mappings": {}
      }
    ],
    "get-capacity-reservation-usage": [
      {
        "action": "ec2:GetCapacityReservationUsage",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "${CapacityReservationId}"
          }
        }
      }
    ],
    "get-coip-pool-usage": [
      {
        "action": "ec2:GetCoipPoolUsage",
        "resource_mappings": {}
      }
    ],
    "get-console-output": [
      {
        "action": "ec2:GetConsoleOutput",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "get-console-screenshot": [
      {
        "action": "ec2:GetConsoleScreenshot",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "get-default-credit-specification": [
      {
        "action": "ec2:GetDefaultCreditSpecification",
        "resource_mappings": {}
      }
    ],
    "get-ebs-default-kms-key-id": [
      {
        "action": "ec2:GetEbsDefaultKmsKeyId",
        "resource_mappings": {}
      }
    ],
    "get-ebs-encryption-by-default": [
      {
        "action": "ec2:GetEbsEncryptionByDefault",
        "resource_mappings": {}
      }
    ],
    "get-flow-logs-integration-template": [
      {
        "action": "ec2:GetFlowLogsIntegrationTemplate",
        "resource_mappings": {
          "VpcFlowLogId": {
            "template": "${FlowLogId}"
          }
        }
      }
    ],
    "get-groups-for-capacity-reservation": [
      {
        "action": "ec2:GetGroupsForCapacityReservation",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "${CapacityReservationId}"
          }
        }
      }
    ],
    "get-host-reservation-purchase-preview": [
      {
        "action": "ec2:GetHostReservationPurchasePreview",
        "resource_mappings": {
          "DedicatedHostId": {
            "template": "${HostIdSet[]}"
          }
        }
      }
    ],
    "get-image-block-public-access-state": [
      {
        "note": "NotFound",
        "action": "EC2:GetImageBlockPublicAccessState",
        "resource_mappings": {}
      }
    ],
    "get-instance-types-from-instance-requirements": [
      {
        "action": "ec2:GetInstanceTypesFromInstanceRequirements",
        "resource_mappings": {}
      }
    ],
    "get-instance-uefi-data": [
      {
        "action": "ec2:GetInstanceUefiData",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "get-ipam-address-history": [
      {
        "action": "ec2:GetIpamAddressHistory",
        "resource_mappings": {
          "IpamScopeId": {
            "template": "${IpamScopeId}"
          }
        }
      }
    ],
    "get-ipam-discovered-accounts": [
      {
        "action": "ec2:GetIpamDiscoveredAccounts",
        "resource_mappings": {
          "IpamResourceDiscoveryId": {
            "template": "${IpamResourceDiscoveryId}"
          }
        }
      }
    ],
    "get-ipam-discovered-resource-cidrs": [
      {
        "action": "ec2:GetIpamDiscoveredResourceCidrs",
        "resource_mappings": {
          "IpamResourceDiscoveryId": {
            "template": "${IpamResourceDiscoveryId}"
          }
        }
      }
    ],
    "get-ipam-pool-allocations": [
      {
        "action": "ec2:GetIpamPoolAllocations",
        "resource_mappings": {
          "IpamPoolId": {
            "template": "${IpamPoolId}"
          }
        }
      }
    ],
    "get-ipam-pool-cidrs": [
      {
        "action": "ec2:GetIpamPoolCidrs",
        "resource_mappings": {
          "IpamPoolId": {
            "template": "${IpamPoolId}"
          }
        }
      }
    ],
    "get-ipam-resource-cidrs": [
      {
        "action": "ec2:GetIpamResourceCidrs",
        "resource_mappings": {
          "IpamPoolId": {
            "template": "${IpamPoolId}"
          },
          "IpamScopeId": {
            "template": "${IpamScopeId}"
          }
        }
      }
    ],
    "get-launch-template-data": [
      {
        "action": "ec2:GetLaunchTemplateData",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "get-managed-prefix-list-associations": [
      {
        "action": "ec2:GetManagedPrefixListAssociations",
        "resource_mappings": {
          "PrefixListId": {
            "template": "${PrefixListId}"
          }
        }
      }
    ],
    "get-managed-prefix-list-entries": [
      {
        "action": "ec2:GetManagedPrefixListEntries",
        "resource_mappings": {
          "PrefixListId": {
            "template": "${PrefixListId}"
          }
        }
      }
    ],
    "get-network-insights-access-scope-analysis-findings": [
      {
        "action": "ec2:GetNetworkInsightsAccessScopeAnalysisFindings",
        "resource_mappings": {}
      }
    ],
    "get-network-insights-access-scope-content": [
      {
        "action": "ec2:GetNetworkInsightsAccessScopeContent",
        "resource_mappings": {}
      }
    ],
    "get-password-data": [
      {
        "action": "ec2:GetPasswordData",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "get-reserved-instances-exchange-quote": [
      {
        "action": "ec2:GetReservedInstancesExchangeQuote",
        "resource_mappings": {
          "ReservationId": {
            "template": "${ReservedInstanceIds[]}"
          }
        }
      }
    ],
    "get-security-groups-for-vpc": [
      {
        "note": "NotFound",
        "action": "EC2:GetSecurityGroupsForVpc",
        "resource_mappings": {}
      }
    ],
    "get-serial-console-access-status": [
      {
        "action": "ec2:GetSerialConsoleAccessStatus",
        "resource_mappings": {}
      }
    ],
    "get-spot-placement-scores": [
      {
        "action": "ec2:GetSpotPlacementScores",
        "resource_mappings": {}
      }
    ],
    "get-subnet-cidr-reservations": [
      {
        "action": "ec2:GetSubnetCidrReservations",
        "resource_mappings": {}
      }
    ],
    "get-transit-gateway-attachment-propagations": [
      {
        "action": "ec2:GetTransitGatewayAttachmentPropagations",
        "resource_mappings": {
          "TransitGatewayAttachmentId": {
            "template": "${TransitGatewayAttachmentId}"
          }
        }
      }
    ],
    "get-transit-gateway-multicast-domain-associations": [
      {
        "action": "ec2:GetTransitGatewayMulticastDomainAssociations",
        "resource_mappings": {
          "TransitGatewayMulticastDomainId": {
            "template": "${TransitGatewayMulticastDomainId}"
          }
        }
      }
    ],
    "get-transit-gateway-policy-table-associations": [
      {
        "action": "ec2:GetTransitGatewayPolicyTableAssociations",
        "resource_mappings": {
          "TransitGatewayPolicyTableId": {
            "template": "${TransitGatewayPolicyTableId}"
          }
        }
      }
    ],
    "get-transit-gateway-policy-table-entries": [
      {
        "action": "ec2:GetTransitGatewayPolicyTableEntries",
        "resource_mappings": {
          "TransitGatewayPolicyTableId": {
            "template": "${TransitGatewayPolicyTableId}"
          }
        }
      }
    ],
    "get-transit-gateway-prefix-list-references": [
      {
        "action": "ec2:GetTransitGatewayPrefixListReferences",
        "resource_mappings": {
          "TransitGatewayRouteTableId": {
            "template": "${TransitGatewayRouteTableId}"
          }
        }
      }
    ],
    "get-transit-gateway-route-table-associations": [
      {
        "action": "ec2:GetTransitGatewayRouteTableAssociations",
        "resource_mappings": {
          "TransitGatewayRouteTableId": {
            "template": "${TransitGatewayRouteTableId}"
          }
        }
      }
    ],
    "get-transit-gateway-route-table-propagations": [
      {
        "action": "ec2:GetTransitGatewayRouteTablePropagations",
        "resource_mappings": {
          "TransitGatewayRouteTableId": {
            "template": "${TransitGatewayRouteTableId}"
          }
        }
      }
    ],
    "get-verified-access-endpoint-policy": [
      {
        "action": "ec2:GetVerifiedAccessEndpointPolicy",
        "resource_mappings": {
          "VerifiedAccessEndpointId": {
            "template": "${VerifiedAccessEndpointId}"
          }
        }
      }
    ],
    "get-verified-access-group-policy": [
      {
        "action": "ec2:GetVerifiedAccessGroupPolicy",
        "resource_mappings": {
          "VerifiedAccessGroupId": {
            "template": "${VerifiedAccessGroupId}"
          }
        }
      }
    ],
    "get-vpn-connection-device-sample-configuration": [
      {
        "action": "ec2:GetVpnConnectionDeviceSampleConfiguration",
        "resource_mappings": {
          "VpnConnectionId": {
            "template": "${VpnConnectionId}"
          },
          "VpnConnectionDeviceTypeId": {
            "template": "${VpnConnectionDeviceTypeId}"
          }
        }
      }
    ],
    "get-vpn-connection-device-types": [
      {
        "action": "ec2:GetVpnConnectionDeviceTypes",
        "resource_mappings": {}
      }
    ],
    "get-vpn-tunnel-replacement-status": [
      {
        "action": "ec2:GetVpnTunnelReplacementStatus",
        "resource_mappings": {
          "VpnConnectionId": {
            "template": "${VpnConnectionId}"
          }
        }
      }
    ],
    "import-client-vpn-client-certificate-revocation-list": [
      {
        "action": "ec2:ImportClientVpnClientCertificateRevocationList",
        "resource_mappings": {
          "ClientVpnEndpointId": {
            "template": "${ClientVpnEndpointId}"
          }
        }
      }
    ],
    "import-image": [
      {
        "action": "ec2:ImportImage",
        "resource_mappings": {
          "SnapshotId": {
            "template": "${DiskContainers[].SnapshotId}"
          }
        }
      }
    ],
    "import-key-pair": [
      {
        "action": "ec2:ImportKeyPair",
        "resource_mappings": {
          "KeyPairName": {
            "template": "${KeyName}"
          }
        }
      }
    ],
    "import-snapshot": [
      {
        "action": "ec2:ImportSnapshot",
        "resource_mappings": {
          "SnapshotId": {
            "template": "*"
          }
        }
      }
    ],
    "list-images-in-recycle-bin": [
      {
        "action": "ec2:ListImagesInRecycleBin",
        "resource_mappings": {
          "ImageId": {
            "template": "${ImageIds[]}"
          }
        }
      }
    ],
    "list-snapshots-in-recycle-bin": [
      {
        "action": "ec2:ListSnapshotsInRecycleBin",
        "resource_mappings": {
          "SnapshotId": {
            "template": "${SnapshotIds[]}"
          }
        }
      }
    ],
    "modify-address-attribute": [
      {
        "action": "ec2:ModifyAddressAttribute",
        "resource_mappings": {}
      }
    ],
    "modify-availability-zone-group": [
      {
        "action": "ec2:ModifyAvailabilityZoneGroup",
        "resource_mappings": {}
      }
    ],
    "modify-capacity-reservation": [
      {
        "action": "ec2:ModifyCapacityReservation",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "${CapacityReservationId}"
          }
        }
      }
    ],
    "modify-capacity-reservation-fleet": [
      {
        "action": "ec2:ModifyCapacityReservationFleet",
        "resource_mappings": {
          "CapacityReservationFleetId": {
            "template": "${CapacityReservationFleetId}"
          }
        }
      }
    ],
    "modify-client-vpn-endpoint": [
      {
        "action": "ec2:ModifyClientVpnEndpoint",
        "resource_mappings": {
          "ClientVpnEndpointId": {
            "template": "${ClientVpnEndpointId}"
          },
          "SecurityGroupId": {
            "template": "${SecurityGroupIds[]}"
          },
          "VpcId": {
            "template": "${VpcId}"
          }
        }
      }
    ],
    "modify-default-credit-specification": [
      {
        "action": "ec2:ModifyDefaultCreditSpecification",
        "resource_mappings": {}
      }
    ],
    "modify-ebs-default-kms-key-id": [
      {
        "action": "ec2:ModifyEbsDefaultKmsKeyId",
        "resource_mappings": {}
      }
    ],
    "modify-fleet": [
      {
        "action": "ec2:ModifyFleet",
        "resource_mappings": {
          "FleetId": {
            "template": "${FleetId}"
          },
          "ImageId": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${LaunchTemplateConfigs[].LaunchTemplateSpecification.LaunchTemplateId}%*%%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${LaunchTemplateConfigs[].LaunchTemplateSpecification.LaunchTemplateName}%*%%%"
        }
      }
    ],
    "modify-fpga-image-attribute": [
      {
        "action": "ec2:ModifyFpgaImageAttribute",
        "resource_mappings": {
          "FpgaImageId": {
            "template": "${FpgaImageId}"
          }
        }
      }
    ],
    "modify-hosts": [
      {
        "action": "ec2:ModifyHosts",
        "resource_mappings": {
          "DedicatedHostId": {
            "template": "${HostIds[]}"
          }
        }
      }
    ],
    "modify-id-format": [
      {
        "action": "ec2:ModifyIdFormat",
        "resource_mappings": {}
      }
    ],
    "modify-identity-id-format": [
      {
        "action": "ec2:ModifyIdentityIdFormat",
        "resource_mappings": {}
      }
    ],
    "modify-image-attribute": [
      {
        "action": "ec2:ModifyImageAttribute",
        "resource_mappings": {
          "ImageId": {
            "template": "${ImageId}"
          }
        }
      }
    ],
    "modify-instance-attribute": [
      {
        "action": "ec2:ModifyInstanceAttribute",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "SecurityGroupId": {
            "template": "${Groups[]}"
          },
          "VolumeId": {
            "template": "${BlockDeviceMappings[].Ebs.VolumeId}"
          }
        }
      }
    ],
    "modify-instance-capacity-reservation-attributes": [
      {
        "action": "ec2:ModifyInstanceCapacityReservationAttributes",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "CapacityReservationId": {
            "template": "${CapacityReservationSpecification.CapacityReservationTarget.CapacityReservationId}"
          }
        }
      }
    ],
    "modify-instance-credit-specification": [
      {
        "action": "ec2:ModifyInstanceCreditSpecification",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceCreditSpecifications[].InstanceId}"
          }
        }
      }
    ],
    "modify-instance-event-start-time": [
      {
        "action": "ec2:ModifyInstanceEventStartTime",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "modify-instance-event-window": [
      {
        "action": "ec2:ModifyInstanceEventWindow",
        "resource_mappings": {
          "InstanceEventWindowId": {
            "template": "${InstanceEventWindowId}"
          }
        }
      }
    ],
    "modify-instance-maintenance-options": [
      {
        "action": "ec2:ModifyInstanceMaintenanceOptions",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "modify-instance-metadata-options": [
      {
        "action": "ec2:ModifyInstanceMetadataOptions",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "modify-instance-placement": [
      {
        "action": "ec2:ModifyInstancePlacement",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "DedicatedHostId": {
            "template": "${HostId}"
          },
          "PlacementGroupName": {
            "template": "${GroupName}"
          }
        }
      }
    ],
    "modify-ipam": [
      {
        "action": "ec2:ModifyIpam",
        "resource_mappings": {
          "IpamId": {
            "template": "${IpamId}"
          }
        }
      }
    ],
    "modify-ipam-pool": [
      {
        "action": "ec2:ModifyIpamPool",
        "resource_mappings": {
          "IpamPoolId": {
            "template": "${IpamPoolId}"
          }
        }
      }
    ],
    "modify-ipam-resource-cidr": [
      {
        "action": "ec2:ModifyIpamResourceCidr",
        "resource_mappings": {
          "IpamScopeId": {
            "template": "%%many%${CurrentIpamScopeId}%${DestinationIpamScopeId}%%"
          }
        }
      }
    ],
    "modify-ipam-resource-discovery": [
      {
        "action": "ec2:ModifyIpamResourceDiscovery",
        "resource_mappings": {
          "IpamResourceDiscoveryId": {
            "template": "${IpamResourceDiscoveryId}"
          }
        }
      }
    ],
    "modify-ipam-scope": [
      {
        "action": "ec2:ModifyIpamScope",
        "resource_mappings": {
          "IpamScopeId": {
            "template": "${IpamScopeId}"
          }
        }
      }
    ],
    "modify-launch-template": [
      {
        "action": "ec2:ModifyLaunchTemplate",
        "resource_mappings": {
          "LaunchTemplateId": {
            "template": "${LaunchTemplateId}"
          }
        }
      }
    ],
    "modify-local-gateway-route": [
      {
        "action": "ec2:ModifyLocalGatewayRoute",
        "resource_mappings": {
          "LocalGatewayRoutetableId": {
            "template": "${LocalGatewayRouteTableId}"
          },
          "NetworkInterfaceId": {
            "template": "${NetworkInterfaceId}"
          }
        }
      }
    ],
    "modify-managed-prefix-list": [
      {
        "action": "ec2:ModifyManagedPrefixList",
        "resource_mappings": {
          "PrefixListId": {
            "template": "${PrefixListId}"
          }
        }
      }
    ],
    "modify-network-interface-attribute": [
      {
        "action": "ec2:ModifyNetworkInterfaceAttribute",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "${NetworkInterfaceId}"
          },
          "InstanceId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "${Groups[]}"
          }
        }
      }
    ],
    "modify-private-dns-name-options": [
      {
        "action": "ec2:ModifyPrivateDnsNameOptions",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "modify-reserved-instances": [
      {
        "action": "ec2:ModifyReservedInstances",
        "resource_mappings": {
          "ReservationId": {
            "template": "${ReservedInstancesIds[]}"
          }
        }
      }
    ],
    "modify-security-group-rules": [
      {
        "action": "ec2:ModifySecurityGroupRules",
        "resource_mappings": {
          "SecurityGroupId": {
            "template": "${GroupId}"
          },
          "PrefixListId": {
            "template": "${SecurityGroupRules[].SecurityGroupRule.PrefixListId}"
          },
          "SecurityGroupRuleId": {
            "template": "${SecurityGroupRules[].SecurityGroupRuleId}"
          }
        }
      }
    ],
    "modify-snapshot-attribute": [
      {
        "action": "ec2:ModifySnapshotAttribute",
        "resource_mappings": {
          "SnapshotId": {
            "template": "${SnapshotId}"
          }
        }
      }
    ],
    "modify-snapshot-tier": [
      {
        "action": "ec2:ModifySnapshotTier",
        "resource_mappings": {
          "SnapshotId": {
            "template": "${SnapshotId}"
          }
        }
      }
    ],
    "modify-spot-fleet-request": [
      {
        "action": "ec2:ModifySpotFleetRequest",
        "resource_mappings": {
          "SpotFleetRequestId": {
            "template": "${SpotFleetRequestId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${LaunchTemplateConfigs[].LaunchTemplateSpecification.LaunchTemplateId}%*%%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${LaunchTemplateConfigs[].LaunchTemplateSpecification.LaunchTemplateName}%*%%%"
        }
      }
    ],
    "modify-subnet-attribute": [
      {
        "action": "ec2:ModifySubnetAttribute",
        "resource_mappings": {
          "SubnetId": {
            "template": "${SubnetId}"
          }
        }
      }
    ],
    "modify-traffic-mirror-filter-network-services": [
      {
        "action": "ec2:ModifyTrafficMirrorFilterNetworkServices",
        "resource_mappings": {
          "TrafficMirrorFilterId": {
            "template": "${TrafficMirrorFilterId}"
          }
        }
      }
    ],
    "modify-traffic-mirror-filter-rule": [
      {
        "action": "ec2:ModifyTrafficMirrorFilterRule",
        "resource_mappings": {
          "TrafficMirrorFilterId": {
            "template": "*"
          },
          "TrafficMirrorFilterRuleId": {
            "template": "${TrafficMirrorFilterRuleId}"
          }
        }
      }
    ],
    "modify-traffic-mirror-session": [
      {
        "action": "ec2:ModifyTrafficMirrorSession",
        "resource_mappings": {
          "TrafficMirrorSessionId": {
            "template": "${TrafficMirrorSessionId}"
          },
          "TrafficMirrorFilterId": {
            "template": "${TrafficMirrorTargetId}"
          },
          "TrafficMirrorTargetId": {
            "template": "${TrafficMirrorFilterId}"
          }
        }
      }
    ],
    "modify-transit-gateway": [
      {
        "action": "ec2:ModifyTransitGateway",
        "resource_mappings": {
          "TransitGatewayId": {
            "template": "${TransitGatewayId}"
          },
          "TransitGatewayRouteTableId": {
            "template": "%%many%${Options.AssociationDefaultRouteTableId}%${Options.PropagationDefaultRouteTableId}%%"
          }
        }
      }
    ],
    "modify-transit-gateway-prefix-list-reference": [
      {
        "action": "ec2:ModifyTransitGatewayPrefixListReference",
        "resource_mappings": {
          "PrefixListId": {
            "template": "${PrefixListId}"
          },
          "TransitGatewayRouteTableId": {
            "template": "${TransitGatewayRouteTableId}"
          },
          "TransitGatewayAttachmentId": {
            "template": "${TransitGatewayAttachmentId}"
          }
        }
      }
    ],
    "modify-transit-gateway-vpc-attachment": [
      {
        "action": "ec2:ModifyTransitGatewayVpcAttachment",
        "resource_mappings": {
          "TransitGatewayAttachmentId": {
            "template": "${TransitGatewayAttachmentId}"
          },
          "SubnetId": {
            "template": "%%many%${AddSubnetIds[]}%${RemoveSubnetIds[]}%%"
          }
        }
      }
    ],
    "modify-verified-access-endpoint": [
      {
        "action": "ec2:ModifyVerifiedAccessEndpoint",
        "resource_mappings": {
          "VerifiedAccessEndpointId": {
            "template": "${VerifiedAccessEndpointId}"
          },
          "SubnetId": {
            "template": "${LoadBalancerOptions.SubnetIds[]}"
          },
          "VerifiedAccessGroupId": {
            "template": "${VerifiedAccessGroupId}"
          }
        }
      }
    ],
    "modify-verified-access-endpoint-policy": [
      {
        "action": "ec2:ModifyVerifiedAccessEndpointPolicy",
        "resource_mappings": {
          "VerifiedAccessEndpointId": {
            "template": "${VerifiedAccessEndpointId}"
          }
        }
      }
    ],
    "modify-verified-access-group": [
      {
        "action": "ec2:ModifyVerifiedAccessGroup",
        "resource_mappings": {
          "VerifiedAccessGroupId": {
            "template": "${VerifiedAccessGroupId}"
          },
          "VerifiedAccessInstanceId": {
            "template": "${VerifiedAccessInstanceId}"
          }
        }
      }
    ],
    "modify-verified-access-group-policy": [
      {
        "action": "ec2:ModifyVerifiedAccessGroupPolicy",
        "resource_mappings": {
          "VerifiedAccessGroupId": {
            "template": "${VerifiedAccessGroupId}"
          }
        }
      }
    ],
    "modify-verified-access-instance": [
      {
        "action": "ec2:ModifyVerifiedAccessInstance",
        "resource_mappings": {
          "VerifiedAccessInstanceId": {
            "template": "${VerifiedAccessInstanceId}"
          }
        }
      }
    ],
    "modify-verified-access-instance-logging-configuration": [
      {
        "action": "ec2:ModifyVerifiedAccessInstanceLoggingConfiguration",
        "resource_mappings": {
          "VerifiedAccessInstanceId": {
            "template": "${VerifiedAccessInstanceId}"
          }
        }
      }
    ],
    "modify-verified-access-trust-provider": [
      {
        "action": "ec2:ModifyVerifiedAccessTrustProvider",
        "resource_mappings": {
          "VerifiedAccessTrustProviderId": {
            "template": "${VerifiedAccessTrustProviderId}"
          }
        }
      }
    ],
    "modify-volume": [
      {
        "action": "ec2:ModifyVolume",
        "resource_mappings": {
          "VolumeId": {
            "template": "${VolumeId}"
          }
        }
      }
    ],
    "modify-volume-attribute": [
      {
        "action": "ec2:ModifyVolumeAttribute",
        "resource_mappings": {
          "VolumeId": {
            "template": "${VolumeId}"
          }
        }
      }
    ],
    "modify-vpc-attribute": [
      {
        "action": "ec2:ModifyVpcAttribute",
        "resource_mappings": {
          "VpcId": {
            "template": "${VpcId}"
          }
        }
      }
    ],
    "modify-vpc-endpoint": [
      {
        "action": "ec2:ModifyVpcEndpoint",
        "resource_mappings": {
          "VpcEndpointId": {
            "template": "${VpcEndpointId}"
          },
          "RouteTableId": {
            "template": "%%many%${AddRouteTableIds[]}%${RemoveRouteTableIds[]}%%"
          },
          "SecurityGroupId": {
            "template": "%%many%${AddSecurityGroupIds[]}%${RemoveSecurityGroupIds[]}%%"
          },
          "SubnetId": {
            "template": "%%many%${AddSubnetIds[]}%${RemoveSubnetIds}%%"
          }
        }
      }
    ],
    "modify-vpc-endpoint-connection-notification": [
      {
        "action": "ec2:ModifyVpcEndpointConnectionNotification",
        "resource_mappings": {
          "VpcEndpointId": {
            "template": "*"
          },
          "VpcEndpointServiceId": {
            "template": "*"
          }
        }
      }
    ],
    "modify-vpc-endpoint-service-configuration": [
      {
        "action": "ec2:ModifyVpcEndpointServiceConfiguration",
        "resource_mappings": {
          "VpcEndpointServiceId": {
            "template": "${ServiceId}"
          }
        }
      }
    ],
    "modify-vpc-endpoint-service-payer-responsibility": [
      {
        "action": "ec2:ModifyVpcEndpointServicePayerResponsibility",
        "resource_mappings": {
          "VpcEndpointServiceId": {
            "template": "${ServiceId}"
          }
        }
      }
    ],
    "modify-vpc-endpoint-service-permissions": [
      {
        "action": "ec2:ModifyVpcEndpointServicePermissions",
        "resource_mappings": {
          "VpcEndpointServiceId": {
            "template": "${ServiceId}"
          }
        }
      }
    ],
    "modify-vpc-peering-connection-options": [
      {
        "action": "ec2:ModifyVpcPeeringConnectionOptions",
        "resource_mappings": {
          "VpcPeeringConnectionId": {
            "template": "${VpcPeeringConnectionId}"
          }
        }
      }
    ],
    "modify-vpc-tenancy": [
      {
        "action": "ec2:ModifyVpcTenancy",
        "resource_mappings": {
          "VpcId": {
            "template": "${VpcId}"
          }
        }
      }
    ],
    "modify-vpn-connection": [
      {
        "action": "ec2:ModifyVpnConnection",
        "resource_mappings": {
          "VpnConnectionId": {
            "template": "${VpnConnectionId}"
          },
          "CustomerGatewayId": {
            "template": "${CustomerGatewayId}"
          },
          "TransitGatewayId": {
            "template": "${TransitGatewayId}"
          },
          "VpnGatewayId": {
            "template": "${VpnGatewayId}"
          }
        }
      }
    ],
    "modify-vpn-connection-options": [
      {
        "action": "ec2:ModifyVpnConnectionOptions",
        "resource_mappings": {
          "VpnConnectionId": {
            "template": "${VpnConnectionId}"
          }
        }
      }
    ],
    "modify-vpn-tunnel-certificate": [
      {
        "action": "ec2:ModifyVpnTunnelCertificate",
        "resource_mappings": {
          "VpnConnectionId": {
            "template": "${VpnConnectionId}"
          }
        }
      }
    ],
    "modify-vpn-tunnel-options": [
      {
        "action": "ec2:ModifyVpnTunnelOptions",
        "resource_mappings": {
          "VpnConnectionId": {
            "template": "${VpnConnectionId}"
          }
        }
      }
    ],
    "monitor-instances": [
      {
        "action": "ec2:MonitorInstances",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceIds[]}"
          }
        }
      }
    ],
    "move-address-to-vpc": [
      {
        "action": "ec2:MoveAddressToVpc",
        "resource_mappings": {}
      }
    ],
    "move-byoip-cidr-to-ipam": [
      {
        "action": "ec2:MoveByoipCidrToIpam",
        "resource_mappings": {
          "IpamPoolId": {
            "template": "${IpamPoolId}"
          }
        }
      }
    ],
    "provision-byoip-cidr": [
      {
        "action": "ec2:ProvisionByoipCidr",
        "resource_mappings": {}
      }
    ],
    "provision-ipam-pool-cidr": [
      {
        "action": "ec2:ProvisionIpamPoolCidr",
        "resource_mappings": {
          "IpamPoolId": {
            "template": "${IpamPoolId}"
          }
        }
      }
    ],
    "provision-public-ipv4-pool-cidr": [
      {
        "action": "ec2:ProvisionPublicIpv4PoolCidr",
        "resource_mappings": {
          "IpamPoolId": {
            "template": "${IpamPoolId}"
          },
          "Ipv4PoolEc2Id": {
            "template": "${PoolId}"
          }
        }
      }
    ],
    "purchase-host-reservation": [
      {
        "action": "ec2:PurchaseHostReservation",
        "resource_mappings": {
          "DedicatedHostId": {
            "template": "${HostIdSet[]}"
          }
        }
      }
    ],
    "purchase-reserved-instances-offering": [
      {
        "action": "ec2:PurchaseReservedInstancesOffering",
        "resource_mappings": {
          "ReservationId": {
            "template": "*"
          }
        }
      }
    ],
    "purchase-scheduled-instances": [
      {
        "action": "ec2:PurchaseScheduledInstances",
        "resource_mappings": {}
      }
    ],
    "reboot-instances": [
      {
        "action": "ec2:RebootInstances",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceIds[]}"
          }
        }
      }
    ],
    "register-image": [
      {
        "action": "ec2:RegisterImage",
        "resource_mappings": {}
      }
    ],
    "register-instance-event-notification-attributes": [
      {
        "action": "ec2:RegisterInstanceEventNotificationAttributes",
        "resource_mappings": {}
      }
    ],
    "register-transit-gateway-multicast-group-members": [
      {
        "action": "ec2:RegisterTransitGatewayMulticastGroupMembers",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "${NetworkInterfaceIds[]}"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "${TransitGatewayMulticastDomainId}"
          }
        }
      }
    ],
    "register-transit-gateway-multicast-group-sources": [
      {
        "action": "ec2:RegisterTransitGatewayMulticastGroupSources",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "${NetworkInterfaceIds[]}"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "${TransitGatewayMulticastDomainId}"
          }
        }
      }
    ],
    "reject-transit-gateway-multicast-domain-associations": [
      {
        "action": "ec2:RejectTransitGatewayMulticastDomainAssociations",
        "resource_mappings": {
          "SubnetId": {
            "template": "${SubnetIds[]}"
          },
          "TransitGatewayAttachmentId": {
            "template": "${TransitGatewayAttachmentId}"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "${TransitGatewayMulticastDomainId}"
          }
        }
      }
    ],
    "reject-transit-gateway-peering-attachment": [
      {
        "action": "ec2:RejectTransitGatewayPeeringAttachment",
        "resource_mappings": {
          "TransitGatewayAttachmentId": {
            "template": "${TransitGatewayAttachmentId}"
          }
        }
      }
    ],
    "reject-transit-gateway-vpc-attachment": [
      {
        "action": "ec2:RejectTransitGatewayVpcAttachment",
        "resource_mappings": {
          "TransitGatewayAttachmentId": {
            "template": "${TransitGatewayAttachmentId}"
          }
        }
      }
    ],
    "reject-vpc-endpoint-connections": [
      {
        "action": "ec2:RejectVpcEndpointConnections",
        "resource_mappings": {
          "VpcEndpointId": {
            "template": "${VpcEndpointIds[]}"
          },
          "VpcEndpointServiceId": {
            "template": "${ServiceId}"
          }
        }
      }
    ],
    "reject-vpc-peering-connection": [
      {
        "action": "ec2:RejectVpcPeeringConnection",
        "resource_mappings": {
          "VpcPeeringConnectionId": {
            "template": "${VpcPeeringConnectionId}"
          }
        }
      }
    ],
    "release-address": [
      {
        "action": "ec2:ReleaseAddress",
        "resource_mappings": {
          "AllocationId": {
            "template": "${AllocationId}"
          }
        }
      }
    ],
    "release-hosts": [
      {
        "action": "ec2:ReleaseHosts",
        "resource_mappings": {
          "DedicatedHostId": {
            "template": "${HostIds[]}"
          }
        }
      }
    ],
    "release-ipam-pool-allocation": [
      {
        "action": "ec2:ReleaseIpamPoolAllocation",
        "resource_mappings": {
          "IpamPoolId": {
            "template": "${IpamPoolId}"
          }
        }
      }
    ],
    "replace-iam-instance-profile-association": [
      {
        "action": "ec2:ReplaceIamInstanceProfileAssociation",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${IamInstanceProfile.Arn}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${IamInstanceProfile.Name}%*%%%"
        }
      }
    ],
    "replace-network-acl-association": [
      {
        "action": "ec2:ReplaceNetworkAclAssociation",
        "resource_mappings": {
          "NaclId": {
            "template": "${NetworkAclId}"
          }
        }
      }
    ],
    "replace-network-acl-entry": [
      {
        "action": "ec2:ReplaceNetworkAclEntry",
        "resource_mappings": {
          "NaclId": {
            "template": "${NetworkAclId}"
          }
        }
      }
    ],
    "replace-route": [
      {
        "action": "ec2:ReplaceRoute",
        "resource_mappings": {
          "RouteTableId": {
            "template": "${RouteTableId}"
          },
          "CarrierGatewayId": {
            "template": "${CarrierGatewayId}"
          },
          "EgressOnlyInternetGatewayId": {
            "template": "${EgressOnlyInternetGatewayId}"
          },
          "InstanceId": {
            "template": "${InstanceId}"
          },
          "InternetGatewayId": {
            "template": "%%iftemplatematch%${GatewayId}%%"
          },
          "LocalGatewayId": {
            "template": "${LocalGatewayId}"
          },
          "NatGatewayId": {
            "template": "${NatGatewayId}"
          },
          "NetworkInterfaceId": {
            "template": "${NetworkInterfaceId}"
          },
          "PrefixListId": {
            "template": "${DestinationPrefixListId}"
          },
          "TransitGatewayId": {
            "template": "${TransitGatewayId}"
          },
          "VpcPeeringConnectionId": {
            "template": "${VpcPeeringConnectionId}"
          },
          "VpnGatewayId": {
            "template": "%%iftemplatematch%${GatewayId}%%"
          }
        }
      }
    ],
    "replace-route-table-association": [
      {
        "action": "ec2:ReplaceRouteTableAssociation",
        "resource_mappings": {
          "RouteTableId": {
            "template": "${RouteTableId}"
          }
        }
      }
    ],
    "replace-transit-gateway-route": [
      {
        "action": "ec2:ReplaceTransitGatewayRoute",
        "resource_mappings": {
          "TransitGatewayRouteTableId": {
            "template": "${TransitGatewayRouteTableId}"
          },
          "TransitGatewayAttachmentId": {
            "template": "${TransitGatewayAttachmentId}"
          }
        }
      }
    ],
    "replace-vpn-tunnel": [
      {
        "action": "ec2:ReplaceVpnTunnel",
        "resource_mappings": {
          "VpnConnectionId": {
            "template": "${VpnConnectionId}"
          }
        }
      }
    ],
    "report-instance-status": [
      {
        "action": "ec2:ReportInstanceStatus",
        "resource_mappings": {
          "InstanceId": {
            "template": "${Instances[]}"
          }
        }
      }
    ],
    "request-spot-fleet": [
      {
        "action": "ec2:RequestSpotFleet",
        "resource_mappings": {
          "SecurityGroupId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${SpotFleetRequestConfig.IamFleetRole}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${SpotFleetRequestConfig.LaunchTemplateConfigs[].LaunchTemplateSpecification.LaunchTemplateId}%*%%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${SpotFleetRequestConfig.LaunchTemplateConfigs[].LaunchTemplateSpecification.LaunchTemplateName}%*%%%"
        }
      }
    ],
    "request-spot-instances": [
      {
        "action": "ec2:RequestSpotInstances",
        "resource_mappings": {
          "ImageId": {
            "template": "${LaunchSpecification.ImageId}"
          },
          "KeyPairName": {
            "template": "${LaunchSpecification.KeyName}"
          },
          "SecurityGroupId": {
            "template": "%%many%${LaunchSpecification.NetworkInterfaces[].Groups[]}%${LaunchSpecification.SecurityGroupIds[]}%%"
          },
          "SubnetId": {
            "template": "%%many%${LaunchSpecification.NetworkInterfaces[].SubnetId}%${LaunchSpecification.SubnetId}%%"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${LaunchSpecification.IamInstanceProfile.Arn}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${LaunchSpecification.IamInstanceProfile.Name}%*%%%"
        }
      }
    ],
    "reset-address-attribute": [
      {
        "action": "ec2:ResetAddressAttribute",
        "resource_mappings": {}
      }
    ],
    "reset-ebs-default-kms-key-id": [
      {
        "action": "ec2:ResetEbsDefaultKmsKeyId",
        "resource_mappings": {}
      }
    ],
    "reset-fpga-image-attribute": [
      {
        "action": "ec2:ResetFpgaImageAttribute",
        "resource_mappings": {
          "FpgaImageId": {
            "template": "${FpgaImageId}"
          }
        }
      }
    ],
    "reset-image-attribute": [
      {
        "action": "ec2:ResetImageAttribute",
        "resource_mappings": {
          "ImageId": {
            "template": "${ImageId}"
          }
        }
      }
    ],
    "reset-instance-attribute": [
      {
        "action": "ec2:ResetInstanceAttribute",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "reset-network-interface-attribute": [
      {
        "action": "ec2:ResetNetworkInterfaceAttribute",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "${NetworkInterfaceId}"
          }
        }
      }
    ],
    "reset-snapshot-attribute": [
      {
        "action": "ec2:ResetSnapshotAttribute",
        "resource_mappings": {
          "SnapshotId": {
            "template": "${SnapshotId}"
          }
        }
      }
    ],
    "restore-address-to-classic": [
      {
        "action": "ec2:RestoreAddressToClassic",
        "resource_mappings": {}
      }
    ],
    "restore-image-from-recycle-bin": [
      {
        "action": "ec2:RestoreImageFromRecycleBin",
        "resource_mappings": {
          "ImageId": {
            "template": "${ImageId}"
          }
        }
      }
    ],
    "restore-managed-prefix-list-version": [
      {
        "action": "ec2:RestoreManagedPrefixListVersion",
        "resource_mappings": {
          "PrefixListId": {
            "template": "${PrefixListId}"
          }
        }
      }
    ],
    "restore-snapshot-from-recycle-bin": [
      {
        "action": "ec2:RestoreSnapshotFromRecycleBin",
        "resource_mappings": {
          "SnapshotId": {
            "template": "${SnapshotId}"
          }
        }
      }
    ],
    "restore-snapshot-tier": [
      {
        "action": "ec2:RestoreSnapshotTier",
        "resource_mappings": {
          "SnapshotId": {
            "template": "${SnapshotId}"
          }
        }
      }
    ],
    "revoke-client-vpn-ingress": [
      {
        "action": "ec2:RevokeClientVpnIngress",
        "resource_mappings": {
          "ClientVpnEndpointId": {
            "template": "${ClientVpnEndpointId}"
          }
        }
      }
    ],
    "revoke-security-group-egress": [
      {
        "action": "ec2:RevokeSecurityGroupEgress",
        "resource_mappings": {
          "SecurityGroupId": {
            "template": "${GroupId}"
          }
        }
      }
    ],
    "revoke-security-group-ingress": [
      {
        "action": "ec2:RevokeSecurityGroupIngress",
        "resource_mappings": {
          "SecurityGroupId": {
            "template": "${GroupId}"
          }
        }
      }
    ],
    "run-instances": [
      {
        "action": "ec2:RunInstances",
        "resource_mappings": {
          "ImageId": {
            "template": "${ImageId}"
          },
          "InstanceId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "${NetworkInterfaces[].NetworkInterfaceId}"
          },
          "SecurityGroupId": {
            "template": "${SecurityGroupIds[]}"
          },
          "SubnetId": {
            "template": "${SubnetId}"
          },
          "VolumeId": {
            "template": "*"
          },
          "CapacityReservationId": {
            "template": "${CapacityReservationSpecification.CapacityReservationTarget.CapacityReservationId}"
          },
          "ElasticGpuId": {
            "template": "%%iftruthy%${ElasticGpuSpecification[].Type}%*%%%"
          },
          "ElasticInferenceAcceleratorId": {
            "template": "%%iftruthy%${ElasticInferenceAccelerators[].Type}%*%%%"
          },
          "KeyPairName": {
            "template": "${KeyName}"
          },
          "LaunchTemplateId": {
            "template": "${LaunchTemplate.LaunchTemplateId}"
          },
          "PlacementGroupName": {
            "template": "${Placement.GroupName}"
          },
          "SnapshotId": {
            "template": "${BlockDeviceMappings[].Ebs.SnapshotId}"
          }
        }
      },
      {
        "action": "ec2:RunInstances",
        "arn_override": {
          "template": "%%iftruthy%${SecurityGroups[]}%arn:${Partition}:ec2:${Region}:${Account}:security-group/*%%%"
        }
      },
      {
        "action": "ec2:RunInstances",
        "arn_override": {
          "template": "%%iftruthy%${LaunchTemplate.LaunchTemplateId}%arn:${Partition}:ec2:${Region}::image/*%%%"
        }
      },
      {
        "action": "ec2:RunInstances",
        "arn_override": {
          "template": "%%iftruthy%${LaunchTemplate.LaunchTemplateId}%arn:${Partition}:ec2:${Region}::instance/*%%%"
        }
      },
      {
        "action": "ec2:RunInstances",
        "arn_override": {
          "template": "%%iftruthy%${LaunchTemplate.LaunchTemplateId}%arn:${Partition}:ec2:${Region}::network-interface/*%%%"
        }
      },
      {
        "action": "ec2:RunInstances",
        "arn_override": {
          "template": "%%iftruthy%${LaunchTemplate.LaunchTemplateId}%arn:${Partition}:ec2:${Region}::security-group/*%%%"
        }
      },
      {
        "action": "ec2:RunInstances",
        "arn_override": {
          "template": "%%iftruthy%${LaunchTemplate.LaunchTemplateId}%arn:${Partition}:ec2:${Region}::subnet/*%%%"
        }
      },
      {
        "action": "ec2:RunInstances",
        "arn_override": {
          "template": "%%iftruthy%${LaunchTemplate.LaunchTemplateId}%arn:${Partition}:ec2:${Region}::volume/*%%%"
        }
      },
      {
        "action": "ec2:RunInstances",
        "arn_override": {
          "template": "%%iftruthy%${LaunchTemplate.LaunchTemplateId}%arn:${Partition}:ec2:${Region}::capacity-reservation/*%%%"
        }
      },
      {
        "action": "ec2:RunInstances",
        "arn_override": {
          "template": "%%iftruthy%${LaunchTemplate.LaunchTemplateId}%arn:${Partition}:ec2:${Region}::elastic-gpu/*%%%"
        }
      },
      {
        "action": "ec2:RunInstances",
        "arn_override": {
          "template": "%%iftruthy%${LaunchTemplate.LaunchTemplateId}%arn:${Partition}:elastic-inference:${Region}::elastic-inference-accelerator/*%%%"
        }
      },
      {
        "action": "ec2:RunInstances",
        "arn_override": {
          "template": "%%iftruthy%${LaunchTemplate.LaunchTemplateId}%arn:${Partition}:ec2:${Region}::key-pair/*%%%"
        }
      },
      {
        "action": "ec2:RunInstances",
        "arn_override": {
          "template": "%%iftruthy%${LaunchTemplate.LaunchTemplateId}%arn:${Partition}:ec2:${Region}::launch-template/*%%%"
        }
      },
      {
        "action": "ec2:RunInstances",
        "arn_override": {
          "template": "%%iftruthy%${LaunchTemplate.LaunchTemplateId}%arn:${Partition}:ec2:${Region}::placement-group/*%%%"
        }
      },
      {
        "action": "ec2:RunInstances",
        "arn_override": {
          "template": "%%iftruthy%${LaunchTemplate.LaunchTemplateId}%arn:${Partition}:ec2:${Region}::snapshot/*%%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${IamInstanceProfile.Arn}%*%%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${IamInstanceProfile.Name}%*%%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${LaunchTemplate.LaunchTemplateId}%*%%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${LaunchTemplate.LaunchTemplateName}%*%%%"
        }
      }
    ],
    "run-scheduled-instances": [
      {
        "action": "ec2:RunScheduledInstances",
        "resource_mappings": {
          "ImageId": {
            "template": "${LaunchSpecification.ImageId}"
          },
          "KeyPairName": {
            "template": "${LaunchSpecification.KeyName}"
          },
          "NetworkInterfaceId": {
            "template": "%%iftruthy%${LaunchSpecification.NetworkInterfaces[].NetworkInterfaceId}%${LaunchSpecification.NetworkInterfaces[].NetworkInterfaceId}%*%%"
          },
          "PlacementGroupName": {
            "template": "${LaunchSpecification.Placement.GroupName}"
          },
          "SecurityGroupId": {
            "template": "%%many%${LaunchSpecification.SecurityGroupIds[]}%${LaunchSpecification.NetworkInterfaces[].Groups[]}%%"
          },
          "SnapshotId": {
            "template": "${LaunchSpecification.BlockDeviceMappings[].Ebs.SnapshotId}"
          },
          "SubnetId": {
            "template": "%%many%${LaunchSpecification.SubnetId}%${LaunchSpecification.NetworkInterfaces[].SubnetId}%%"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${LaunchSpecification.IamInstanceProfile.Arn}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${LaunchSpecification.IamInstanceProfile.Name}%*%%%"
        }
      }
    ],
    "search-local-gateway-routes": [
      {
        "action": "ec2:SearchLocalGatewayRoutes",
        "resource_mappings": {
          "LocalGatewayRoutetableId": {
            "template": "${LocalGatewayRouteTableId}"
          }
        }
      }
    ],
    "search-transit-gateway-multicast-groups": [
      {
        "action": "ec2:SearchTransitGatewayMulticastGroups",
        "resource_mappings": {
          "TransitGatewayMulticastDomainId": {
            "template": "${TransitGatewayMulticastDomainId}"
          }
        }
      }
    ],
    "search-transit-gateway-routes": [
      {
        "action": "ec2:SearchTransitGatewayRoutes",
        "resource_mappings": {
          "TransitGatewayRouteTableId": {
            "template": "${TransitGatewayRouteTableId}"
          }
        }
      }
    ],
    "send-diagnostic-interrupt": [
      {
        "action": "ec2:SendDiagnosticInterrupt",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "start-instances": [
      {
        "action": "ec2:StartInstances",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceIds[]}"
          }
        }
      }
    ],
    "start-network-insights-access-scope-analysis": [
      {
        "action": "ec2:StartNetworkInsightsAccessScopeAnalysis",
        "resource_mappings": {
          "NetworkInsightsAccessScopeId": {
            "template": "${NetworkInsightsAccessScopeId}"
          }
        }
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "*"
          },
          "CapacityReservationFleetId": {
            "template": "*"
          },
          "ClientVpnEndpointId": {
            "template": "*"
          },
          "CustomerGatewayId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "DhcpOptionsId": {
            "template": "*"
          },
          "EgressOnlyInternetGatewayId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "AllocationId": {
            "template": "*"
          },
          "ExportImageTaskId": {
            "template": "*"
          },
          "ExportTaskId": {
            "template": "*"
          },
          "FleetId": {
            "template": "*"
          },
          "FpgaImageId": {
            "template": "*"
          },
          "HostReservationId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "ImportImageTaskId": {
            "template": "*"
          },
          "ImportSnapshotTaskId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "InstanceEventWindowId": {
            "template": "*"
          },
          "InternetGatewayId": {
            "template": "*"
          },
          "IpamId": {
            "template": "*"
          },
          "IpamPoolId": {
            "template": "*"
          },
          "IpamScopeId": {
            "template": "*"
          },
          "Ipv4PoolEc2Id": {
            "template": "*"
          },
          "Ipv6PoolEc2Id": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "LocalGatewayId": {
            "template": "*"
          },
          "LocalGatewayRoutetableId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVpcAssociationId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "template": "*"
          },
          "NatGatewayId": {
            "template": "*"
          },
          "NaclId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeAnalysisId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "PrefixListId": {
            "template": "*"
          },
          "ReplaceRootVolumeTaskId": {
            "template": "*"
          },
          "ReservationId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SecurityGroupRuleId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SpotFleetRequestId": {
            "template": "*"
          },
          "SpotInstanceRequestId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "TrafficMirrorFilterId": {
            "template": "*"
          },
          "TrafficMirrorSessionId": {
            "template": "*"
          },
          "TrafficMirrorTargetId": {
            "template": "*"
          },
          "TransitGatewayId": {
            "template": "*"
          },
          "TransitGatewayAttachmentId": {
            "template": "*"
          },
          "TransitGatewayConnectPeerId": {
            "template": "*"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "*"
          },
          "TransitGatewayRouteTableId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "VpcId": {
            "template": "*"
          },
          "VpcEndpointId": {
            "template": "*"
          },
          "VpcEndpointServiceId": {
            "template": "*"
          },
          "VpcFlowLogId": {
            "template": "*"
          },
          "VpcPeeringConnectionId": {
            "template": "*"
          },
          "VpnConnectionId": {
            "template": "*"
          },
          "VpnGatewayId": {
            "template": "*"
          }
        }
      }
    ],
    "start-network-insights-analysis": [
      {
        "action": "ec2:StartNetworkInsightsAnalysis",
        "resource_mappings": {
          "NetworkInsightsPathId": {
            "template": "${NetworkInsightsPathId}"
          }
        }
      }
    ],
    "start-vpc-endpoint-service-private-dns-verification": [
      {
        "action": "ec2:StartVpcEndpointServicePrivateDnsVerification",
        "resource_mappings": {
          "VpcEndpointServiceId": {
            "template": "${ServiceId}"
          }
        }
      }
    ],
    "stop-instances": [
      {
        "action": "ec2:StopInstances",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceIds[]}"
          }
        }
      }
    ],
    "terminate-client-vpn-connections": [
      {
        "action": "ec2:TerminateClientVpnConnections",
        "resource_mappings": {
          "ClientVpnEndpointId": {
            "template": "${ClientVpnEndpointId}"
          },
          "VpnConnectionId": {
            "template": "${ConnectionId}"
          }
        }
      }
    ],
    "terminate-instances": [
      {
        "action": "ec2:TerminateInstances",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceIds[]}"
          }
        }
      }
    ],
    "unassign-ipv6-addresses": [
      {
        "action": "ec2:UnassignIpv6Addresses",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "${NetworkInterfaceId}"
          }
        }
      }
    ],
    "unassign-private-ip-addresses": [
      {
        "action": "ec2:UnassignPrivateIpAddresses",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "${NetworkInterfaceId}"
          }
        }
      }
    ],
    "unassign-private-nat-gateway-address": [
      {
        "action": "ec2:UnassignPrivateNatGatewayAddress",
        "resource_mappings": {
          "NatGatewayId": {
            "template": "${NatGatewayId}"
          }
        }
      }
    ],
    "unmonitor-instances": [
      {
        "action": "ec2:UnmonitorInstances",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceIds[]}"
          }
        }
      }
    ],
    "update-security-group-rule-descriptions-egress": [
      {
        "action": "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
        "resource_mappings": {
          "SecurityGroupId": {
            "template": "${GroupId}"
          }
        }
      }
    ],
    "update-security-group-rule-descriptions-ingress": [
      {
        "action": "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
        "resource_mappings": {
          "SecurityGroupId": {
            "template": "${GroupId}"
          }
        }
      }
    ],
    "withdraw-byoip-cidr": [
      {
        "action": "ec2:WithdrawByoipCidr",
        "resource_mappings": {}
      }
    ],
    "wait": [
      {
        "action": "ec2:DescribeBundleTasks",
        "resource_mappings": {}
      }
    ]
  },
  "ec2-instance-connect": {
    "send-ssh-public-key": [
      {
        "action": "ec2-instance-connect:SendSSHPublicKey",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "send-serial-console-ssh-public-key": [
      {
        "action": "ec2-instance-connect:SendSerialConsoleSSHPublicKey",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ]
  },
  "ecr": {
    "batch-check-layer-availability": [
      {
        "action": "ecr:BatchCheckLayerAvailability",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "batch-delete-image": [
      {
        "action": "ecr:BatchDeleteImage",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "batch-get-image": [
      {
        "action": "ecr:BatchGetImage",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "batch-get-repository-scanning-configuration": [
      {
        "action": "ecr:BatchGetRepositoryScanningConfiguration",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryNames[]}"
          }
        }
      }
    ],
    "complete-layer-upload": [
      {
        "action": "ecr:CompleteLayerUpload",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "create-pull-through-cache-rule": [
      {
        "action": "ecr:CreatePullThroughCacheRule",
        "resource_mappings": {}
      }
    ],
    "create-repository": [
      {
        "action": "ecr:CreateRepository",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "delete-lifecycle-policy": [
      {
        "action": "ecr:DeleteLifecyclePolicy",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "delete-pull-through-cache-rule": [
      {
        "action": "ecr:DeletePullThroughCacheRule",
        "resource_mappings": {}
      }
    ],
    "delete-registry-policy": [
      {
        "action": "ecr:DeleteRegistryPolicy",
        "resource_mappings": {}
      }
    ],
    "delete-repository": [
      {
        "action": "ecr:DeleteRepository",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "delete-repository-policy": [
      {
        "action": "ecr:DeleteRepositoryPolicy",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "describe-image-replication-status": [
      {
        "action": "ecr:DescribeImageReplicationStatus",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "describe-image-scan-findings": [
      {
        "action": "ecr:DescribeImageScanFindings",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "describe-images": [
      {
        "action": "ecr:DescribeImages",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "describe-pull-through-cache-rules": [
      {
        "action": "ecr:DescribePullThroughCacheRules",
        "resource_mappings": {}
      }
    ],
    "describe-registry": [
      {
        "action": "ecr:DescribeRegistry",
        "resource_mappings": {}
      }
    ],
    "describe-repositories": [
      {
        "action": "ecr:DescribeRepositories",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryNames[]}"
          }
        }
      }
    ],
    "get-authorization-token": [
      {
        "action": "ecr:GetAuthorizationToken",
        "resource_mappings": {}
      }
    ],
    "get-download-url-for-layer": [
      {
        "action": "ecr:GetDownloadUrlForLayer",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "get-lifecycle-policy": [
      {
        "action": "ecr:GetLifecyclePolicy",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "get-lifecycle-policy-preview": [
      {
        "action": "ecr:GetLifecyclePolicyPreview",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "get-registry-policy": [
      {
        "action": "ecr:GetRegistryPolicy",
        "resource_mappings": {}
      }
    ],
    "get-registry-scanning-configuration": [
      {
        "action": "ecr:GetRegistryScanningConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-repository-policy": [
      {
        "action": "ecr:GetRepositoryPolicy",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "initiate-layer-upload": [
      {
        "action": "ecr:InitiateLayerUpload",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "list-images": [
      {
        "action": "ecr:ListImages",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "ecr:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "repository": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "put-image": [
      {
        "action": "ecr:PutImage",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "put-image-scanning-configuration": [
      {
        "action": "ecr:PutImageScanningConfiguration",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "put-image-tag-mutability": [
      {
        "action": "ecr:PutImageTagMutability",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "put-lifecycle-policy": [
      {
        "action": "ecr:PutLifecyclePolicy",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "put-registry-policy": [
      {
        "action": "ecr:PutRegistryPolicy",
        "resource_mappings": {}
      }
    ],
    "put-registry-scanning-configuration": [
      {
        "action": "ecr:PutRegistryScanningConfiguration",
        "resource_mappings": {}
      }
    ],
    "put-replication-configuration": [
      {
        "action": "ecr:PutReplicationConfiguration",
        "resource_mappings": {}
      }
    ],
    "set-repository-policy": [
      {
        "action": "ecr:SetRepositoryPolicy",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "start-image-scan": [
      {
        "action": "ecr:StartImageScan",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "start-lifecycle-policy-preview": [
      {
        "action": "ecr:StartLifecyclePolicyPreview",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "ecr:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "repository": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "ecr:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "repository": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "upload-layer-part": [
      {
        "action": "ecr:UploadLayerPart",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "ecr:DescribeImageScanFindings",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ]
  },
  "ecr-public": {
    "batch-check-layer-availability": [
      {
        "action": "ecr-public:BatchCheckLayerAvailability",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "batch-delete-image": [
      {
        "action": "ecr-public:BatchDeleteImage",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "complete-layer-upload": [
      {
        "action": "ecr-public:CompleteLayerUpload",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "create-repository": [
      {
        "action": "ecr-public:CreateRepository",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "delete-repository": [
      {
        "action": "ecr-public:DeleteRepository",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "delete-repository-policy": [
      {
        "action": "ecr-public:DeleteRepositoryPolicy",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "describe-image-tags": [
      {
        "action": "ecr-public:DescribeImageTags",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "describe-images": [
      {
        "action": "ecr-public:DescribeImages",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "describe-registries": [
      {
        "action": "ecr-public:DescribeRegistries",
        "resource_mappings": {
          "RegistryId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-repositories": [
      {
        "action": "ecr-public:DescribeRepositories",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryNames[]}"
          }
        }
      }
    ],
    "get-authorization-token": [
      {
        "action": "ecr-public:GetAuthorizationToken",
        "resource_mappings": {}
      }
    ],
    "get-registry-catalog-data": [
      {
        "action": "ecr-public:GetRegistryCatalogData",
        "resource_mappings": {
          "RegistryId": {
            "template": "*"
          }
        }
      }
    ],
    "get-repository-catalog-data": [
      {
        "action": "ecr-public:GetRepositoryCatalogData",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "get-repository-policy": [
      {
        "action": "ecr-public:GetRepositoryPolicy",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "initiate-layer-upload": [
      {
        "action": "ecr-public:InitiateLayerUpload",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "ecr-public:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "repository": "%%iftruthy%${resourceArn}%%"
        }
      }
    ],
    "put-image": [
      {
        "action": "ecr-public:PutImage",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "put-registry-catalog-data": [
      {
        "action": "ecr-public:PutRegistryCatalogData",
        "resource_mappings": {
          "RegistryId": {
            "template": "*"
          }
        }
      }
    ],
    "put-repository-catalog-data": [
      {
        "action": "ecr-public:PutRepositoryCatalogData",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "set-repository-policy": [
      {
        "action": "ecr-public:SetRepositoryPolicy",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "ecr-public:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "repository": "%%iftruthy%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "ecr-public:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "repository": "%%iftruthy%${resourceArn}%%"
        }
      }
    ],
    "upload-layer-part": [
      {
        "action": "ecr-public:UploadLayerPart",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${repositoryName}"
          }
        }
      }
    ]
  },
  "ecs": {
    "create-capacity-provider": [
      {
        "action": "ecs:CreateCapacityProvider",
        "resource_mappings": {}
      }
    ],
    "create-cluster": [
      {
        "action": "ecs:CreateCluster",
        "resource_mappings": {}
      }
    ],
    "create-service": [
      {
        "action": "ecs:CreateService",
        "resource_mappings": {
          "ServiceName": {
            "template": "${serviceName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "create-task-set": [
      {
        "action": "ecs:CreateTaskSet",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "delete-account-setting": [
      {
        "action": "ecs:DeleteAccountSetting",
        "resource_mappings": {}
      }
    ],
    "delete-attributes": [
      {
        "action": "ecs:DeleteAttributes",
        "resource_mappings": {
          "ContainerInstanceId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-capacity-provider": [
      {
        "action": "ecs:DeleteCapacityProvider",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "capacity-provider": "%%iftemplatematch%${capacityProvider}%%"
        }
      }
    ],
    "delete-cluster": [
      {
        "action": "ecs:DeleteCluster",
        "resource_mappings": {
          "ClusterName": {
            "template": "%%regex%${cluster}%/^(?:.+?\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "delete-service": [
      {
        "action": "ecs:DeleteService",
        "resource_mappings": {
          "ServiceName": {
            "template": "${service}"
          }
        }
      }
    ],
    "delete-task-definitions": [
      {
        "action": "ecs:DeleteTaskDefinitions",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "task-definition": "arn:${Partition}:ecs:${Region}:${Account}:task-definition/%%regex%${taskDefinitions[]}%/(?:arn.*/)?([^/]+)/g%%"
        }
      }
    ],
    "delete-task-set": [
      {
        "action": "ecs:DeleteTaskSet",
        "resource_mappings": {
          "region": {
            "template": "${Region}"
          },
          "ClusterName": {
            "template": "%%regex%${cluster}%/^(?:.+\\/)?(.+)$/g%%"
          },
          "ServiceName": {
            "template": "%%regex%${service}%/^(?:.+\\/)?(.+)$/g%%"
          },
          "TaskSetId": {
            "template": "%%regex%${taskSet}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "deregister-container-instance": [
      {
        "action": "ecs:DeregisterContainerInstance",
        "resource_mappings": {
          "ClusterName": {
            "template": "%%regex%${cluster}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "deregister-task-definition": [
      {
        "action": "ecs:DeregisterTaskDefinition",
        "resource_mappings": {}
      }
    ],
    "describe-capacity-providers": [
      {
        "action": "ecs:DescribeCapacityProviders",
        "resource_mappings": {
          "CapacityProviderName": {
            "template": "%%regex%${capacityProviders[]}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "describe-clusters": [
      {
        "action": "ecs:DescribeClusters",
        "resource_mappings": {
          "ClusterName": {
            "template": "%%regex%${clusters[]}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "describe-container-instances": [
      {
        "action": "ecs:DescribeContainerInstances",
        "resource_mappings": {
          "ContainerInstanceId": {
            "template": "%%regex%${containerInstances[]}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "describe-services": [
      {
        "action": "ecs:DescribeServices",
        "resource_mappings": {
          "ServiceName": {
            "template": "%%regex%${services[]}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "describe-task-definition": [
      {
        "action": "ecs:DescribeTaskDefinition",
        "resource_mappings": {}
      }
    ],
    "describe-task-sets": [
      {
        "action": "ecs:DescribeTaskSets",
        "resource_mappings": {
          "region": {
            "template": "${Region}"
          },
          "ClusterName": {
            "template": "%%regex%${cluster}%/^(?:.+\\/)?(.+)$/g%%"
          },
          "ServiceName": {
            "template": "%%regex%${service}%/^(?:.+\\/)?(.+)$/g%%"
          },
          "TaskSetId": {
            "template": "%%regex%${taskSets[]}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "describe-tasks": [
      {
        "action": "ecs:DescribeTasks",
        "resource_mappings": {
          "TaskId": {
            "template": "%%regex%${tasks[]}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "discover-poll-endpoint": [
      {
        "action": "ecs:DiscoverPollEndpoint",
        "resource_mappings": {}
      }
    ],
    "execute-command": [
      {
        "action": "ecs:ExecuteCommand",
        "resource_mappings": {
          "ClusterName": {
            "template": "%%regex%${cluster}%/^(?:.+?\\/)?(.+)$/g%%"
          },
          "TaskId": {
            "template": "%%regex%${task}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "get-task-protection": [
      {
        "action": "ecs:GetTaskProtection",
        "resource_mappings": {
          "ClusterName": {
            "template": "%%regex%${cluster}%/(?:arn.*/)?(.+)/g%%"
          },
          "TaskId": {
            "template": "%%regex%${tasks[]}%/(?:arn.*/)?([^/]+)/g%%"
          }
        }
      }
    ],
    "list-account-settings": [
      {
        "action": "ecs:ListAccountSettings",
        "resource_mappings": {}
      }
    ],
    "list-attributes": [
      {
        "action": "ecs:ListAttributes",
        "resource_mappings": {
          "ClusterName": {
            "template": "%%regex%${cluster}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "list-clusters": [
      {
        "action": "ecs:ListClusters",
        "resource_mappings": {}
      }
    ],
    "list-container-instances": [
      {
        "action": "ecs:ListContainerInstances",
        "resource_mappings": {
          "ClusterName": {
            "template": "%%regex%${cluster}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "list-services": [
      {
        "action": "ecs:ListServices",
        "resource_mappings": {}
      }
    ],
    "list-services-by-namespace": [
      {
        "action": "ecs:ListServicesByNamespace",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "ecs:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "%%iftemplatematch%${resourceArn}%%",
          "container-instance": "%%iftemplatematch%${resourceArn}%%",
          "task": "%%iftemplatematch%${resourceArn}%%",
          "task-definition": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "list-task-definition-families": [
      {
        "action": "ecs:ListTaskDefinitionFamilies",
        "resource_mappings": {}
      }
    ],
    "list-task-definitions": [
      {
        "action": "ecs:ListTaskDefinitions",
        "resource_mappings": {}
      }
    ],
    "list-tasks": [
      {
        "action": "ecs:ListTasks",
        "resource_mappings": {
          "ContainerInstanceId": {
            "template": "%%regex%${containerInstance}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "put-account-setting": [
      {
        "action": "ecs:PutAccountSetting",
        "resource_mappings": {}
      }
    ],
    "put-account-setting-default": [
      {
        "action": "ecs:PutAccountSettingDefault",
        "resource_mappings": {}
      }
    ],
    "put-attributes": [
      {
        "action": "ecs:PutAttributes",
        "resource_mappings": {
          "ContainerInstanceId": {
            "template": "*"
          }
        }
      }
    ],
    "put-cluster-capacity-providers": [
      {
        "action": "ecs:PutClusterCapacityProviders",
        "resource_mappings": {
          "CapacityProviderName": {
            "template": "%%regex%${capacityProviders[]}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "register-container-instance": [
      {
        "action": "ecs:RegisterContainerInstance",
        "resource_mappings": {
          "ClusterName": {
            "template": "%%regex%${cluster}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "register-task-definition": [
      {
        "action": "ecs:RegisterTaskDefinition",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${taskRoleArn}%${executionRoleArn}%%"
        }
      }
    ],
    "run-task": [
      {
        "action": "ecs:RunTask",
        "resource_mappings": {
          "TaskDefinitionFamilyName": {
            "template": "%%regex%${taskDefinition}%/(?:.*\\/)?([^:]+)(?:\\:[^:]+)?$/g%%"
          },
          "TaskDefinitionRevisionNumber": {
            "template": "%%regex%${taskDefinition}%/\\:([^:]+)$/g%%"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${overrides.executionRoleArn}%${overrides.executionRoleArn}%*%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${overrides.taskRoleArn}%${overrides.taskRoleArn}%*%%"
        }
      }
    ],
    "start-task": [
      {
        "action": "ecs:StartTask",
        "resource_mappings": {
          "TaskDefinitionFamilyName": {
            "template": "%%regex%${taskDefinition}%/(?:.*\\/)?([^:]+)(?:\\:[^:]+)?$/g%%"
          },
          "TaskDefinitionRevisionNumber": {
            "template": "%%regex%${taskDefinition}%/\\:([^:]+)$/g%%"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${overrides.executionRoleArn}%${overrides.executionRoleArn}%*%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${overrides.taskRoleArn}%${overrides.taskRoleArn}%*%%"
        }
      }
    ],
    "stop-task": [
      {
        "action": "ecs:StopTask",
        "resource_mappings": {
          "TaskId": {
            "template": "%%regex%${task}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "submit-attachment-state-changes": [
      {
        "action": "ecs:SubmitAttachmentStateChanges",
        "resource_mappings": {
          "ClusterName": {
            "template": "%%regex%${cluster}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "submit-container-state-change": [
      {
        "action": "ecs:SubmitContainerStateChange",
        "resource_mappings": {
          "ClusterName": {
            "template": "%%regex%${cluster}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "submit-task-state-change": [
      {
        "action": "ecs:SubmitTaskStateChange",
        "resource_mappings": {
          "ClusterName": {
            "template": "%%regex%${cluster}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "ecs:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "%%iftemplatematch%${resourceArn}%%",
          "container-instance": "%%iftemplatematch%${resourceArn}%%",
          "service": "%%iftemplatematch%${resourceArn}%%",
          "task": "%%iftemplatematch%${resourceArn}%%",
          "task-definition": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "ecs:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "%%iftemplatematch%${resourceArn}%%",
          "container-instance": "%%iftemplatematch%${resourceArn}%%",
          "service": "%%iftemplatematch%${resourceArn}%%",
          "task": "%%iftemplatematch%${resourceArn}%%",
          "task-definition": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-capacity-provider": [
      {
        "action": "ecs:UpdateCapacityProvider",
        "resource_mappings": {
          "CapacityProviderName": {
            "template": "${name}"
          }
        }
      }
    ],
    "update-cluster": [
      {
        "action": "ecs:UpdateCluster",
        "resource_mappings": {
          "ClusterName": {
            "template": "%%regex%${cluster}%/^(?:.+?\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "update-cluster-settings": [
      {
        "action": "ecs:UpdateClusterSettings",
        "resource_mappings": {
          "ClusterName": {
            "template": "%%regex%${cluster}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "update-container-agent": [
      {
        "action": "ecs:UpdateContainerAgent",
        "resource_mappings": {
          "ContainerInstanceId": {
            "template": "%%regex%${containerInstance}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "update-container-instances-state": [
      {
        "action": "ecs:UpdateContainerInstancesState",
        "resource_mappings": {
          "ContainerInstanceId": {
            "template": "%%regex%${containerInstances[]}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "update-service": [
      {
        "action": "ecs:UpdateService",
        "resource_mappings": {
          "ServiceName": {
            "template": "%%regex%${service}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "update-service-primary-task-set": [
      {
        "action": "ecs:UpdateServicePrimaryTaskSet",
        "resource_mappings": {
          "ServiceName": {
            "template": "%%regex%${service}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "update-task-protection": [
      {
        "action": "ecs:UpdateTaskProtection",
        "resource_mappings": {
          "ClusterName": {
            "template": "%%regex%${cluster}%/(?:arn.*/)?(.+)/g%%"
          },
          "TaskId": {
            "template": "%%regex%${tasks[]}%/(?:arn.*/)?([^/]+)/g%%"
          }
        }
      }
    ],
    "update-task-set": [
      {
        "action": "ecs:UpdateTaskSet",
        "resource_mappings": {
          "region": {
            "template": "${Region}"
          },
          "ClusterName": {
            "template": "%%regex%${cluster}%/^(?:.+\\/)?(.+)$/g%%"
          },
          "ServiceName": {
            "template": "%%regex%${service}%/^(?:.+\\/)?(.+)$/g%%"
          },
          "TaskSetId": {
            "template": "%%regex%${taskSet}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "ecs:DescribeServices",
        "resource_mappings": {
          "ServiceName": {
            "template": "%%regex%${services[]}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ]
  },
  "efs": {
    "create-access-point": [
      {
        "action": "elasticfilesystem:CreateAccessPoint",
        "resource_mappings": {
          "FileSystemId": {
            "template": "${FileSystemId}"
          }
        }
      }
    ],
    "create-file-system": [
      {
        "action": "elasticfilesystem:CreateFileSystem",
        "resource_mappings": {}
      }
    ],
    "create-mount-target": [
      {
        "action": "elasticfilesystem:CreateMountTarget",
        "resource_mappings": {
          "FileSystemId": {
            "template": "${FileSystemId}"
          }
        }
      }
    ],
    "create-replication-configuration": [
      {
        "action": "elasticfilesystem:CreateReplicationConfiguration",
        "resource_mappings": {
          "FileSystemId": {
            "template": "${SourceFileSystemId}"
          }
        }
      }
    ],
    "create-tags": [
      {
        "action": "elasticfilesystem:CreateTags",
        "resource_mappings": {
          "FileSystemId": {
            "template": "${FileSystemId}"
          }
        }
      }
    ],
    "delete-access-point": [
      {
        "action": "elasticfilesystem:DeleteAccessPoint",
        "resource_mappings": {
          "AccessPointId": {
            "template": "${AccessPointId}"
          }
        }
      }
    ],
    "delete-file-system": [
      {
        "action": "elasticfilesystem:DeleteFileSystem",
        "resource_mappings": {
          "FileSystemId": {
            "template": "${FileSystemId}"
          }
        }
      }
    ],
    "delete-file-system-policy": [
      {
        "action": "elasticfilesystem:DeleteFileSystemPolicy",
        "resource_mappings": {
          "FileSystemId": {
            "template": "${FileSystemId}"
          }
        }
      }
    ],
    "delete-mount-target": [
      {
        "action": "elasticfilesystem:DeleteMountTarget",
        "resource_mappings": {
          "FileSystemId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-replication-configuration": [
      {
        "action": "elasticfilesystem:DeleteReplicationConfiguration",
        "resource_mappings": {
          "FileSystemId": {
            "template": "${SourceFileSystemId}"
          }
        }
      }
    ],
    "delete-tags": [
      {
        "action": "elasticfilesystem:DeleteTags",
        "resource_mappings": {
          "FileSystemId": {
            "template": "${FileSystemId}"
          }
        }
      }
    ],
    "describe-access-points": [
      {
        "action": "elasticfilesystem:DescribeAccessPoints",
        "resource_mappings": {
          "AccessPointId": {
            "template": "${AccessPointId}"
          },
          "FileSystemId": {
            "template": "${FileSystemId}"
          }
        }
      }
    ],
    "describe-account-preferences": [
      {
        "action": "elasticfilesystem:DescribeAccountPreferences",
        "resource_mappings": {}
      }
    ],
    "describe-backup-policy": [
      {
        "action": "elasticfilesystem:DescribeBackupPolicy",
        "resource_mappings": {
          "FileSystemId": {
            "template": "${FileSystemId}"
          }
        }
      }
    ],
    "describe-file-system-policy": [
      {
        "action": "elasticfilesystem:DescribeFileSystemPolicy",
        "resource_mappings": {
          "FileSystemId": {
            "template": "${FileSystemId}"
          }
        }
      }
    ],
    "describe-file-systems": [
      {
        "action": "elasticfilesystem:DescribeFileSystems",
        "resource_mappings": {
          "FileSystemId": {
            "template": "${FileSystemId}"
          }
        }
      }
    ],
    "describe-lifecycle-configuration": [
      {
        "action": "elasticfilesystem:DescribeLifecycleConfiguration",
        "resource_mappings": {
          "FileSystemId": {
            "template": "${FileSystemId}"
          }
        }
      }
    ],
    "describe-mount-target-security-groups": [
      {
        "action": "elasticfilesystem:DescribeMountTargetSecurityGroups",
        "resource_mappings": {}
      }
    ],
    "describe-mount-targets": [
      {
        "action": "elasticfilesystem:DescribeMountTargets",
        "resource_mappings": {
          "FileSystemId": {
            "template": "${FileSystemId}"
          },
          "AccessPointId": {
            "template": "${AccessPointId}"
          }
        }
      }
    ],
    "describe-replication-configurations": [
      {
        "action": "elasticfilesystem:DescribeReplicationConfigurations",
        "resource_mappings": {
          "FileSystemId": {
            "template": "${FileSystemId}"
          }
        }
      }
    ],
    "describe-tags": [
      {
        "action": "elasticfilesystem:DescribeTags",
        "resource_mappings": {
          "FileSystemId": {
            "template": "${FileSystemId}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "elasticfilesystem:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "access-point": "%%iftemplatematch%${ResourceId}%%",
          "file-system": "%%iftemplatematch%${ResourceId}%%"
        }
      }
    ],
    "modify-mount-target-security-groups": [
      {
        "action": "elasticfilesystem:ModifyMountTargetSecurityGroups",
        "resource_mappings": {}
      }
    ],
    "put-account-preferences": [
      {
        "action": "elasticfilesystem:PutAccountPreferences",
        "resource_mappings": {}
      }
    ],
    "put-backup-policy": [
      {
        "action": "elasticfilesystem:PutBackupPolicy",
        "resource_mappings": {
          "FileSystemId": {
            "template": "${FileSystemId}"
          }
        }
      }
    ],
    "put-file-system-policy": [
      {
        "action": "elasticfilesystem:PutFileSystemPolicy",
        "resource_mappings": {
          "FileSystemId": {
            "template": "${FileSystemId}"
          }
        }
      }
    ],
    "put-lifecycle-configuration": [
      {
        "action": "elasticfilesystem:PutLifecycleConfiguration",
        "resource_mappings": {
          "FileSystemId": {
            "template": "${FileSystemId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "elasticfilesystem:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "access-point": "%%iftemplatematch%${ResourceId}%%",
          "file-system": "%%iftemplatematch%${ResourceId}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "elasticfilesystem:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "access-point": "%%iftemplatematch%${ResourceId}%%",
          "file-system": "%%iftemplatematch%${ResourceId}%%"
        }
      }
    ],
    "update-file-system": [
      {
        "action": "elasticfilesystem:UpdateFileSystem",
        "resource_mappings": {
          "FileSystemId": {
            "template": "${FileSystemId}"
          }
        }
      }
    ]
  },
  "eks": {
    "associate-encryption-config": [
      {
        "action": "eks:AssociateEncryptionConfig",
        "resource_mappings": {
          "ClusterName": {
            "template": "${clusterName}"
          }
        }
      }
    ],
    "associate-identity-provider-config": [
      {
        "action": "eks:AssociateIdentityProviderConfig",
        "resource_mappings": {
          "ClusterName": {
            "template": "${clusterName}"
          }
        }
      }
    ],
    "create-addon": [
      {
        "action": "eks:CreateAddon",
        "resource_mappings": {
          "ClusterName": {
            "template": "${clusterName}"
          }
        }
      }
    ],
    "create-cluster": [
      {
        "action": "eks:CreateCluster",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${roleArn}"
        }
      }
    ],
    "create-fargate-profile": [
      {
        "action": "eks:CreateFargateProfile",
        "resource_mappings": {
          "ClusterName": {
            "template": "${clusterName}"
          }
        }
      }
    ],
    "create-nodegroup": [
      {
        "action": "eks:CreateNodegroup",
        "resource_mappings": {
          "ClusterName": {
            "template": "${clusterName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${nodeRole}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${launchTemplate.id}%*%%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${launchTemplate.name}%*%%%"
        }
      }
    ],
    "delete-addon": [
      {
        "action": "eks:DeleteAddon",
        "resource_mappings": {
          "ClusterName": {
            "template": "${clusterName}"
          },
          "AddonName": {
            "template": "${addonName}"
          },
          "UUID": {
            "template": "*"
          }
        }
      }
    ],
    "delete-cluster": [
      {
        "action": "eks:DeleteCluster",
        "resource_mappings": {
          "ClusterName": {
            "template": "${name}"
          }
        }
      }
    ],
    "delete-fargate-profile": [
      {
        "action": "eks:DeleteFargateProfile",
        "resource_mappings": {
          "ClusterName": {
            "template": "${clusterName}"
          },
          "FargateProfileName": {
            "template": "${fargateProfileName}"
          },
          "UUID": {
            "template": "*"
          }
        }
      }
    ],
    "delete-nodegroup": [
      {
        "action": "eks:DeleteNodegroup",
        "resource_mappings": {
          "ClusterName": {
            "template": "${clusterName}"
          },
          "NodegroupName": {
            "template": "${nodegroupName}"
          },
          "UUID": {
            "template": "*"
          }
        }
      }
    ],
    "deregister-cluster": [
      {
        "action": "eks:DeregisterCluster",
        "resource_mappings": {
          "ClusterName": {
            "template": "${name}"
          }
        }
      }
    ],
    "describe-addon": [
      {
        "action": "eks:DescribeAddon",
        "resource_mappings": {
          "ClusterName": {
            "template": "${clusterName}"
          },
          "AddonName": {
            "template": "${addonName}"
          },
          "UUID": {
            "template": "*"
          }
        }
      }
    ],
    "describe-addon-configuration": [
      {
        "action": "eks:DescribeAddonConfiguration",
        "resource_mappings": {}
      }
    ],
    "describe-addon-versions": [
      {
        "action": "eks:DescribeAddonVersions",
        "resource_mappings": {}
      }
    ],
    "describe-cluster": [
      {
        "action": "eks:DescribeCluster",
        "resource_mappings": {
          "ClusterName": {
            "template": "${name}"
          }
        }
      }
    ],
    "describe-fargate-profile": [
      {
        "action": "eks:DescribeFargateProfile",
        "resource_mappings": {
          "ClusterName": {
            "template": "${clusterName}"
          },
          "FargateProfileName": {
            "template": "${fargateProfileName}"
          },
          "UUID": {
            "template": "*"
          }
        }
      }
    ],
    "describe-identity-provider-config": [
      {
        "action": "eks:DescribeIdentityProviderConfig",
        "resource_mappings": {
          "ClusterName": {
            "template": "${clusterName}"
          },
          "IdentityProviderType": {
            "template": "${identityProviderConfig.type}"
          },
          "IdentityProviderConfigName": {
            "template": "${identityProviderConfig.name}"
          },
          "UUID": {
            "template": "*"
          }
        }
      }
    ],
    "describe-nodegroup": [
      {
        "action": "eks:DescribeNodegroup",
        "resource_mappings": {
          "ClusterName": {
            "template": "${clusterName}"
          },
          "NodegroupName": {
            "template": "${nodegroupName}"
          },
          "UUID": {
            "template": "*"
          }
        }
      }
    ],
    "describe-update": [
      {
        "action": "eks:DescribeUpdate",
        "resource_mappings": {
          "ClusterName": {
            "template": "${name}"
          },
          "AddonName": {
            "template": "${addonName}"
          },
          "UUID": {
            "template": "*"
          },
          "NodegroupName": {
            "template": "${nodegroupName}"
          }
        }
      }
    ],
    "disassociate-identity-provider-config": [
      {
        "action": "eks:DisassociateIdentityProviderConfig",
        "resource_mappings": {
          "ClusterName": {
            "template": "${clusterName}"
          },
          "IdentityProviderType": {
            "template": "${identityProviderConfig.type}"
          },
          "IdentityProviderConfigName": {
            "template": "${identityProviderConfig.name}"
          },
          "UUID": {
            "template": "*"
          }
        }
      }
    ],
    "list-addons": [
      {
        "action": "eks:ListAddons",
        "resource_mappings": {
          "ClusterName": {
            "template": "${clusterName}"
          }
        }
      }
    ],
    "list-clusters": [
      {
        "action": "eks:ListClusters",
        "resource_mappings": {}
      }
    ],
    "list-fargate-profiles": [
      {
        "action": "eks:ListFargateProfiles",
        "resource_mappings": {
          "ClusterName": {
            "template": "${clusterName}"
          }
        }
      }
    ],
    "list-identity-provider-configs": [
      {
        "action": "eks:ListIdentityProviderConfigs",
        "resource_mappings": {
          "ClusterName": {
            "template": "${clusterName}"
          }
        }
      }
    ],
    "list-nodegroups": [
      {
        "action": "eks:ListNodegroups",
        "resource_mappings": {
          "ClusterName": {
            "template": "${clusterName}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "eks:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "addon": "%%iftemplatematch%${resourceArn}%%",
          "cluster": "%%iftemplatematch%${resourceArn}%%",
          "fargateprofile": "%%iftemplatematch%${resourceArn}%%",
          "identityproviderconfig": "%%iftemplatematch%${resourceArn}%%",
          "nodegroup": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "list-updates": [
      {
        "action": "eks:ListUpdates",
        "resource_mappings": {
          "ClusterName": {
            "template": "${name}"
          },
          "AddonName": {
            "template": "${addonName}"
          },
          "UUID": {
            "template": "*"
          },
          "NodegroupName": {
            "template": "${nodegroupName}"
          }
        }
      }
    ],
    "register-cluster": [
      {
        "action": "eks:RegisterCluster",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "eks:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "addon": "%%iftemplatematch%${resourceArn}%%",
          "cluster": "%%iftemplatematch%${resourceArn}%%",
          "fargateprofile": "%%iftemplatematch%${resourceArn}%%",
          "identityproviderconfig": "%%iftemplatematch%${resourceArn}%%",
          "nodegroup": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "eks:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "addon": "%%iftemplatematch%${resourceArn}%%",
          "cluster": "%%iftemplatematch%${resourceArn}%%",
          "fargateprofile": "%%iftemplatematch%${resourceArn}%%",
          "identityproviderconfig": "%%iftemplatematch%${resourceArn}%%",
          "nodegroup": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-addon": [
      {
        "action": "eks:UpdateAddon",
        "resource_mappings": {
          "ClusterName": {
            "template": "${clusterName}"
          },
          "AddonName": {
            "template": "${addonName}"
          },
          "UUID": {
            "template": "*"
          }
        }
      }
    ],
    "update-cluster-config": [
      {
        "action": "eks:UpdateClusterConfig",
        "resource_mappings": {
          "ClusterName": {
            "template": "${name}"
          }
        }
      }
    ],
    "update-cluster-version": [
      {
        "action": "eks:UpdateClusterVersion",
        "resource_mappings": {
          "ClusterName": {
            "template": "${name}"
          }
        }
      }
    ],
    "update-nodegroup-config": [
      {
        "action": "eks:UpdateNodegroupConfig",
        "resource_mappings": {
          "ClusterName": {
            "template": "${clusterName}"
          },
          "NodegroupName": {
            "template": "${nodegroupName}"
          },
          "UUID": {
            "template": "*"
          }
        }
      }
    ],
    "update-nodegroup-version": [
      {
        "action": "eks:UpdateNodegroupVersion",
        "resource_mappings": {
          "ClusterName": {
            "template": "${clusterName}"
          },
          "NodegroupName": {
            "template": "${nodegroupName}"
          },
          "UUID": {
            "template": "*"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "eks:DescribeAddon",
        "resource_mappings": {
          "ClusterName": {
            "template": "${clusterName}"
          },
          "AddonName": {
            "template": "${addonName}"
          },
          "UUID": {
            "template": "*"
          }
        }
      }
    ]
  },
  "elastic-inference": {
    "describe-accelerator-offerings": [
      {
        "action": "elastic-inference:DescribeAcceleratorOfferings",
        "resource_mappings": {}
      }
    ],
    "describe-accelerator-types": [
      {
        "action": "elastic-inference:DescribeAcceleratorTypes",
        "resource_mappings": {}
      }
    ],
    "describe-accelerators": [
      {
        "action": "elastic-inference:DescribeAccelerators",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "elastic-inference:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "elastic-inference:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "elastic-inference:UntagResource",
        "resource_mappings": {}
      }
    ]
  },
  "elasticache": {
    "add-tags-to-resource": [
      {
        "action": "elasticache:AddTagsToResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "%%iftemplatematch%${ResourceName}%%",
          "snapshot": "%%iftemplatematch%${ResourceName}%%"
        }
      }
    ],
    "authorize-cache-security-group-ingress": [
      {
        "action": "elasticache:AuthorizeCacheSecurityGroupIngress",
        "resource_mappings": {
          "CacheSecurityGroupName": {
            "template": "${CacheSecurityGroupName}"
          }
        }
      },
      {
        "action": "ec2:AuthorizeSecurityGroupIngress",
        "resource_mappings": {
          "SecurityGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "batch-apply-update-action": [
      {
        "action": "elasticache:BatchApplyUpdateAction",
        "resource_mappings": {
          "CacheClusterId": {
            "template": "${CacheClusterIds[]}"
          },
          "ReplicationGroupId": {
            "template": "${ReplicationGroupIds[]}"
          }
        }
      },
      {
        "action": "ec2:CreateNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "batch-stop-update-action": [
      {
        "action": "elasticache:BatchStopUpdateAction",
        "resource_mappings": {
          "CacheClusterId": {
            "template": "${CacheClusterIds[]}"
          },
          "ReplicationGroupId": {
            "template": "${ReplicationGroupIds[]}"
          }
        }
      }
    ],
    "complete-migration": [
      {
        "action": "elasticache:CompleteMigration",
        "resource_mappings": {
          "CacheClusterId": {
            "template": "*"
          },
          "ReplicationGroupId": {
            "template": "${ReplicationGroupId}"
          }
        }
      }
    ],
    "copy-snapshot": [
      {
        "action": "elasticache:CopySnapshot",
        "resource_mappings": {
          "SnapshotName": {
            "template": "%%many%${SourceSnapshotName}%${TargetSnapshotName}%%"
          }
        }
      },
      {
        "action": "elasticache:AddTagsToResource",
        "resource_mappings": {
          "CacheClusterId": {
            "template": "*"
          },
          "SnapshotName": {
            "template": "%%many%${SourceSnapshotName}%${TargetSnapshotName}%%"
          }
        }
      }
    ],
    "create-cache-cluster": [
      {
        "action": "elasticache:CreateCacheCluster",
        "resource_mappings": {
          "CacheParameterGroupName": {
            "template": "${CacheParameterGroupName}"
          },
          "CacheClusterId": {
            "template": "${CacheClusterId}"
          },
          "ReplicationGroupId": {
            "template": "${ReplicationGroupId}"
          },
          "CacheSecurityGroupName": {
            "template": "${CacheSecurityGroupNames[]}"
          },
          "SnapshotName": {
            "template": "%%many%${SnapshotArns[]}%arn:${Partition}:elasticache:${Region}:${Account}:snapshot:${SnapshotName}%%"
          },
          "CacheSubnetGroupName": {
            "template": "${CacheSubnetGroupName}"
          }
        }
      },
      {
        "action": "ec2:CreateNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "${SecurityGroupIds[]}"
          }
        }
      }
    ],
    "create-cache-parameter-group": [
      {
        "action": "elasticache:CreateCacheParameterGroup",
        "resource_mappings": {
          "CacheParameterGroupName": {
            "template": "${CacheParameterGroupName}"
          }
        }
      },
      {
        "action": "elasticache:AddTagsToResource",
        "resource_mappings": {
          "CacheClusterId": {
            "template": "*"
          },
          "SnapshotName": {
            "template": "*"
          }
        }
      }
    ],
    "create-cache-security-group": [
      {
        "action": "elasticache:CreateCacheSecurityGroup",
        "resource_mappings": {
          "CacheSecurityGroupName": {
            "template": "${CacheSecurityGroupName}"
          }
        }
      },
      {
        "action": "elasticache:AddTagsToResource",
        "resource_mappings": {
          "CacheClusterId": {
            "template": "*"
          },
          "SnapshotName": {
            "template": "*"
          }
        }
      }
    ],
    "create-cache-subnet-group": [
      {
        "action": "elasticache:CreateCacheSubnetGroup",
        "resource_mappings": {
          "CacheSubnetGroupName": {
            "template": "${CacheSubnetGroupName}"
          }
        }
      },
      {
        "action": "elasticache:AddTagsToResource",
        "resource_mappings": {
          "CacheClusterId": {
            "template": "*"
          },
          "SnapshotName": {
            "template": "*"
          }
        }
      }
    ],
    "create-global-replication-group": [
      {
        "action": "elasticache:CreateGlobalReplicationGroup",
        "resource_mappings": {
          "GlobalReplicationGroupId": {
            "template": "*${GlobalReplicationGroupIdSuffix}"
          },
          "ReplicationGroupId": {
            "template": "${PrimaryReplicationGroupId}"
          }
        }
      }
    ],
    "create-replication-group": [
      {
        "action": "elasticache:CreateReplicationGroup",
        "resource_mappings": {
          "CacheParameterGroupName": {
            "template": "${CacheParameterGroupName}"
          },
          "CacheClusterId": {
            "template": "*"
          },
          "GlobalReplicationGroupId": {
            "template": "${GlobalReplicationGroupId}"
          },
          "ReplicationGroupId": {
            "template": "${ReplicationGroupId}"
          },
          "CacheSecurityGroupName": {
            "template": "${CacheSecurityGroupNames[]}"
          },
          "CacheSubnetGroupName": {
            "template": "${CacheSubnetGroupName}"
          },
          "UserGroupId": {
            "template": "${UserGroupIds[]}"
          }
        },
        "resourcearn_mappings": {
          "snapshot": "${SnapshotArns[]}"
        }
      },
      {
        "action": "ec2:CreateNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "${SecurityGroupIds[]}"
          }
        }
      }
    ],
    "create-snapshot": [
      {
        "action": "elasticache:CreateSnapshot",
        "resource_mappings": {
          "SnapshotName": {
            "template": "${SnapshotName}"
          },
          "CacheClusterId": {
            "template": "${CacheClusterId}"
          },
          "ReplicationGroupId": {
            "template": "${ReplicationGroupId}"
          }
        }
      },
      {
        "action": "elasticache:AddTagsToResource",
        "resource_mappings": {
          "CacheClusterId": {
            "template": "${CacheClusterId}"
          },
          "SnapshotName": {
            "template": "${SnapshotName}"
          }
        }
      }
    ],
    "create-user": [
      {
        "action": "elasticache:CreateUser",
        "resource_mappings": {
          "UserId": {
            "template": "${UserId}"
          }
        }
      }
    ],
    "create-user-group": [
      {
        "action": "elasticache:CreateUserGroup",
        "resource_mappings": {
          "UserId": {
            "template": "${UserIds[]}"
          },
          "UserGroupId": {
            "template": "${UserGroupId}"
          }
        }
      },
      {
        "action": "elasticache:AddTagsToResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "*",
          "parametergroup": "*",
          "replicationgroup": "*",
          "reserved-instance": "*",
          "securitygroup": "*",
          "snapshot": "*",
          "subnetgroup": "*",
          "user": "*",
          "usergroup": "*"
        }
      }
    ],
    "decrease-node-groups-in-global-replication-group": [
      {
        "action": "elasticache:DecreaseNodeGroupsInGlobalReplicationGroup",
        "resource_mappings": {
          "GlobalReplicationGroupId": {
            "template": "${GlobalReplicationGroupId}"
          }
        }
      }
    ],
    "decrease-replica-count": [
      {
        "action": "elasticache:DecreaseReplicaCount",
        "resource_mappings": {
          "ReplicationGroupId": {
            "template": "${ReplicationGroupId}"
          }
        }
      },
      {
        "action": "ec2:CreateNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-cache-cluster": [
      {
        "action": "elasticache:DeleteCacheCluster",
        "resource_mappings": {
          "CacheClusterId": {
            "template": "${CacheClusterId}"
          },
          "SnapshotName": {
            "template": "${FinalSnapshotIdentifier}"
          }
        }
      },
      {
        "action": "ec2:CreateNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-cache-parameter-group": [
      {
        "action": "elasticache:DeleteCacheParameterGroup",
        "resource_mappings": {
          "CacheParameterGroupName": {
            "template": "${CacheParameterGroupName}"
          }
        }
      }
    ],
    "delete-cache-security-group": [
      {
        "action": "elasticache:DeleteCacheSecurityGroup",
        "resource_mappings": {
          "CacheSecurityGroupName": {
            "template": "${CacheSecurityGroupName}"
          }
        }
      }
    ],
    "delete-cache-subnet-group": [
      {
        "action": "elasticache:DeleteCacheSubnetGroup",
        "resource_mappings": {
          "CacheSubnetGroupName": {
            "template": "${CacheSubnetGroupName}"
          }
        }
      },
      {
        "action": "ec2:CreateNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-global-replication-group": [
      {
        "action": "elasticache:DeleteGlobalReplicationGroup",
        "resource_mappings": {
          "GlobalReplicationGroupId": {
            "template": "${GlobalReplicationGroupId}"
          }
        }
      }
    ],
    "delete-replication-group": [
      {
        "action": "elasticache:DeleteReplicationGroup",
        "resource_mappings": {
          "ReplicationGroupId": {
            "template": "${ReplicationGroupId}"
          },
          "SnapshotName": {
            "template": "${FinalSnapshotIdentifier}"
          }
        }
      },
      {
        "action": "ec2:CreateNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-snapshot": [
      {
        "action": "elasticache:DeleteSnapshot",
        "resource_mappings": {
          "SnapshotName": {
            "template": "${SnapshotName}"
          }
        }
      }
    ],
    "delete-user": [
      {
        "action": "elasticache:DeleteUser",
        "resource_mappings": {
          "UserId": {
            "template": "${UserId}"
          }
        }
      }
    ],
    "delete-user-group": [
      {
        "action": "elasticache:DeleteUserGroup",
        "resource_mappings": {
          "UserGroupId": {
            "template": "${UserGroupId}"
          }
        }
      }
    ],
    "describe-cache-clusters": [
      {
        "action": "elasticache:DescribeCacheClusters",
        "resource_mappings": {
          "CacheClusterId": {
            "template": "${CacheClusterId}"
          }
        }
      }
    ],
    "describe-cache-engine-versions": [
      {
        "action": "elasticache:DescribeCacheEngineVersions",
        "resource_mappings": {}
      }
    ],
    "describe-cache-parameter-groups": [
      {
        "action": "elasticache:DescribeCacheParameterGroups",
        "resource_mappings": {
          "CacheParameterGroupName": {
            "template": "${CacheParameterGroupName}"
          }
        }
      }
    ],
    "describe-cache-parameters": [
      {
        "action": "elasticache:DescribeCacheParameters",
        "resource_mappings": {
          "CacheParameterGroupName": {
            "template": "${CacheParameterGroupName}"
          }
        }
      }
    ],
    "describe-cache-security-groups": [
      {
        "action": "elasticache:DescribeCacheSecurityGroups",
        "resource_mappings": {
          "CacheSecurityGroupName": {
            "template": "${CacheSecurityGroupName}"
          }
        }
      }
    ],
    "describe-cache-subnet-groups": [
      {
        "action": "elasticache:DescribeCacheSubnetGroups",
        "resource_mappings": {
          "CacheSubnetGroupName": {
            "template": "${CacheSubnetGroupName}"
          }
        }
      }
    ],
    "describe-engine-default-parameters": [
      {
        "action": "elasticache:DescribeEngineDefaultParameters",
        "resource_mappings": {}
      }
    ],
    "describe-events": [
      {
        "action": "elasticache:DescribeEvents",
        "resource_mappings": {}
      }
    ],
    "describe-global-replication-groups": [
      {
        "action": "elasticache:DescribeGlobalReplicationGroups",
        "resource_mappings": {
          "GlobalReplicationGroupId": {
            "template": "${GlobalReplicationGroupId}"
          }
        }
      }
    ],
    "describe-replication-groups": [
      {
        "action": "elasticache:DescribeReplicationGroups",
        "resource_mappings": {
          "ReplicationGroupId": {
            "template": "${ReplicationGroupId}"
          }
        }
      }
    ],
    "describe-reserved-cache-nodes": [
      {
        "action": "elasticache:DescribeReservedCacheNodes",
        "resource_mappings": {
          "ReservedCacheNodeId": {
            "template": "${ReservedCacheNodeId}"
          }
        }
      }
    ],
    "describe-reserved-cache-nodes-offerings": [
      {
        "action": "elasticache:DescribeReservedCacheNodesOfferings",
        "resource_mappings": {}
      }
    ],
    "describe-service-updates": [
      {
        "action": "elasticache:DescribeServiceUpdates",
        "resource_mappings": {}
      }
    ],
    "describe-snapshots": [
      {
        "action": "elasticache:DescribeSnapshots",
        "resource_mappings": {
          "SnapshotName": {
            "template": "${SnapshotName}"
          }
        }
      }
    ],
    "describe-update-actions": [
      {
        "action": "elasticache:DescribeUpdateActions",
        "resource_mappings": {
          "CacheClusterId": {
            "template": "${CacheClusterIds[]}"
          },
          "ReplicationGroupId": {
            "template": "${ReplicationGroupIds[]}"
          }
        }
      }
    ],
    "describe-user-groups": [
      {
        "action": "elasticache:DescribeUserGroups",
        "resource_mappings": {
          "UserGroupId": {
            "template": "${UserGroupId}"
          }
        }
      }
    ],
    "describe-users": [
      {
        "action": "elasticache:DescribeUsers",
        "resource_mappings": {
          "UserId": {
            "template": "${UserId}"
          }
        }
      }
    ],
    "disassociate-global-replication-group": [
      {
        "action": "elasticache:DisassociateGlobalReplicationGroup",
        "resource_mappings": {
          "GlobalReplicationGroupId": {
            "template": "${GlobalReplicationGroupId}"
          }
        }
      }
    ],
    "failover-global-replication-group": [
      {
        "action": "elasticache:FailoverGlobalReplicationGroup",
        "resource_mappings": {
          "GlobalReplicationGroupId": {
            "template": "${GlobalReplicationGroupId}"
          }
        }
      }
    ],
    "increase-node-groups-in-global-replication-group": [
      {
        "action": "elasticache:IncreaseNodeGroupsInGlobalReplicationGroup",
        "resource_mappings": {
          "GlobalReplicationGroupId": {
            "template": "${GlobalReplicationGroupId}"
          }
        }
      }
    ],
    "increase-replica-count": [
      {
        "action": "elasticache:IncreaseReplicaCount",
        "resource_mappings": {
          "ReplicationGroupId": {
            "template": "${ReplicationGroupId}"
          }
        }
      },
      {
        "action": "ec2:CreateNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "list-allowed-node-type-modifications": [
      {
        "action": "elasticache:ListAllowedNodeTypeModifications",
        "resource_mappings": {
          "CacheClusterId": {
            "template": "${CacheClusterId}"
          },
          "ReplicationGroupId": {
            "template": "${ReplicationGroupId}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "elasticache:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "%%iftemplatematch%${ResourceName}%%",
          "snapshot": "%%iftemplatematch%${ResourceName}%%"
        }
      }
    ],
    "modify-cache-cluster": [
      {
        "action": "elasticache:ModifyCacheCluster",
        "resource_mappings": {
          "CacheClusterId": {
            "template": "${CacheClusterId}"
          },
          "CacheParameterGroupName": {
            "template": "${CacheParameterGroupName}"
          },
          "CacheSecurityGroupName": {
            "template": "${CacheSecurityGroupNames[]}"
          }
        }
      }
    ],
    "modify-cache-parameter-group": [
      {
        "action": "elasticache:ModifyCacheParameterGroup",
        "resource_mappings": {
          "CacheParameterGroupName": {
            "template": "${CacheParameterGroupName}"
          }
        }
      }
    ],
    "modify-cache-subnet-group": [
      {
        "action": "elasticache:ModifyCacheSubnetGroup",
        "resource_mappings": {
          "CacheSubnetGroupName": {
            "template": "${CacheSubnetGroupName}"
          }
        }
      }
    ],
    "modify-global-replication-group": [
      {
        "action": "elasticache:ModifyGlobalReplicationGroup",
        "resource_mappings": {
          "GlobalReplicationGroupId": {
            "template": "${GlobalReplicationGroupId}"
          }
        }
      }
    ],
    "modify-replication-group": [
      {
        "action": "elasticache:ModifyReplicationGroup",
        "resource_mappings": {
          "ReplicationGroupId": {
            "template": "${ReplicationGroupId}"
          },
          "CacheParameterGroupName": {
            "template": "${CacheParameterGroupName}"
          },
          "CacheSecurityGroupName": {
            "template": "${CacheSecurityGroupNames[]}"
          },
          "UserGroupId": {
            "template": "%%many%${UserGroupIdsToAdd[]}%${UserGroupIdsToRemove[]}%%"
          }
        }
      },
      {
        "action": "ec2:CreateNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "${SecurityGroupIds[]}"
          }
        }
      }
    ],
    "modify-replication-group-shard-configuration": [
      {
        "action": "elasticache:ModifyReplicationGroupShardConfiguration",
        "resource_mappings": {
          "ReplicationGroupId": {
            "template": "${ReplicationGroupId}"
          }
        }
      },
      {
        "action": "ec2:CreateNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "modify-user": [
      {
        "action": "elasticache:ModifyUser",
        "resource_mappings": {
          "UserId": {
            "template": "${UserId}"
          }
        }
      }
    ],
    "modify-user-group": [
      {
        "action": "elasticache:ModifyUserGroup",
        "resource_mappings": {
          "UserId": {
            "template": "%%many%${UserIdsToAdd[]}%${UserIdsToRemove[]}%%"
          },
          "UserGroupId": {
            "template": "${UserGroupId}"
          }
        }
      }
    ],
    "purchase-reserved-cache-nodes-offering": [
      {
        "action": "elasticache:PurchaseReservedCacheNodesOffering",
        "resource_mappings": {
          "ReservedCacheNodeId": {
            "template": "${ReservedCacheNodeId}"
          }
        }
      },
      {
        "action": "elasticache:AddTagsToResource",
        "resource_mappings": {
          "CacheClusterId": {
            "template": "*"
          },
          "SnapshotName": {
            "template": "*"
          }
        }
      }
    ],
    "rebalance-slots-in-global-replication-group": [
      {
        "action": "elasticache:RebalanceSlotsInGlobalReplicationGroup",
        "resource_mappings": {
          "GlobalReplicationGroupId": {
            "template": "${GlobalReplicationGroupId}"
          }
        }
      }
    ],
    "reboot-cache-cluster": [
      {
        "action": "elasticache:RebootCacheCluster",
        "resource_mappings": {
          "CacheClusterId": {
            "template": "${CacheClusterId}"
          }
        }
      }
    ],
    "remove-tags-from-resource": [
      {
        "action": "elasticache:RemoveTagsFromResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "%%iftemplatematch%${ResourceName}%%",
          "snapshot": "%%iftemplatematch%${ResourceName}%%"
        }
      }
    ],
    "reset-cache-parameter-group": [
      {
        "action": "elasticache:ResetCacheParameterGroup",
        "resource_mappings": {
          "CacheParameterGroupName": {
            "template": "${CacheParameterGroupName}"
          }
        }
      }
    ],
    "revoke-cache-security-group-ingress": [
      {
        "action": "elasticache:RevokeCacheSecurityGroupIngress",
        "resource_mappings": {
          "CacheSecurityGroupName": {
            "template": "${CacheSecurityGroupName}"
          }
        }
      }
    ],
    "start-migration": [
      {
        "action": "elasticache:StartMigration",
        "resource_mappings": {
          "ReplicationGroupId": {
            "template": "${ReplicationGroupId}"
          }
        }
      }
    ],
    "test-failover": [
      {
        "action": "elasticache:TestFailover",
        "resource_mappings": {
          "ReplicationGroupId": {
            "template": "${ReplicationGroupId}"
          }
        }
      },
      {
        "action": "ec2:CreateNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "test-migration": [
      {
        "action": "elasticache:TestMigration",
        "resource_mappings": {
          "ReplicationGroupId": {
            "template": "${ReplicationGroupId}"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "elasticache:DescribeCacheClusters",
        "resource_mappings": {
          "CacheClusterId": {
            "template": "${CacheClusterId}"
          }
        }
      }
    ]
  },
  "elasticbeanstalk": {
    "abort-environment-update": [
      {
        "action": "elasticbeanstalk:AbortEnvironmentUpdate",
        "resource_mappings": {
          "ApplicationName": {
            "template": "*"
          },
          "EnvironmentName": {
            "template": "${EnvironmentName}"
          }
        }
      }
    ],
    "apply-environment-managed-action": [
      {
        "action": "elasticbeanstalk:ApplyEnvironmentManagedAction",
        "resource_mappings": {
          "ApplicationName": {
            "template": "*"
          },
          "EnvironmentName": {
            "template": "${EnvironmentName}"
          }
        }
      }
    ],
    "associate-environment-operations-role": [
      {
        "action": "elasticbeanstalk:AssociateEnvironmentOperationsRole",
        "resource_mappings": {
          "ApplicationName": {
            "template": "*"
          },
          "EnvironmentName": {
            "template": "${EnvironmentName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${OperationsRole}"
        }
      }
    ],
    "check-dns-availability": [
      {
        "action": "elasticbeanstalk:CheckDNSAvailability",
        "resource_mappings": {}
      }
    ],
    "compose-environments": [
      {
        "action": "elasticbeanstalk:ComposeEnvironments",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          },
          "VersionLabel": {
            "template": "${VersionLabels[]}"
          }
        }
      }
    ],
    "create-application": [
      {
        "action": "elasticbeanstalk:CreateApplication",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${ResourceLifecycleConfig.ServiceRole}"
        }
      }
    ],
    "create-application-version": [
      {
        "action": "elasticbeanstalk:CreateApplicationVersion",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          },
          "VersionLabel": {
            "template": "${VersionLabel}"
          }
        }
      }
    ],
    "create-configuration-template": [
      {
        "action": "elasticbeanstalk:CreateConfigurationTemplate",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          },
          "TemplateName": {
            "template": "${TemplateName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${BuildConfiguration.CodeBuildServiceRole}"
        }
      }
    ],
    "create-environment": [
      {
        "action": "elasticbeanstalk:CreateEnvironment",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          },
          "EnvironmentName": {
            "template": "${EnvironmentName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${OperationsRole}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${TemplateName}%*%%%"
        }
      }
    ],
    "create-platform-version": [
      {
        "action": "elasticbeanstalk:CreatePlatformVersion",
        "resource_mappings": {
          "PlatformNameWithVersion": {
            "template": "${PlatformName}/${PlatformVersion}"
          }
        }
      }
    ],
    "create-storage-location": [
      {
        "action": "elasticbeanstalk:CreateStorageLocation",
        "resource_mappings": {}
      }
    ],
    "delete-application": [
      {
        "action": "elasticbeanstalk:DeleteApplication",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "delete-application-version": [
      {
        "action": "elasticbeanstalk:DeleteApplicationVersion",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          },
          "VersionLabel": {
            "template": "${VersionLabel}"
          }
        }
      }
    ],
    "delete-configuration-template": [
      {
        "action": "elasticbeanstalk:DeleteConfigurationTemplate",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          },
          "TemplateName": {
            "template": "${TemplateName}"
          }
        }
      }
    ],
    "delete-environment-configuration": [
      {
        "action": "elasticbeanstalk:DeleteEnvironmentConfiguration",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          },
          "EnvironmentName": {
            "template": "${EnvironmentName}"
          }
        }
      }
    ],
    "delete-platform-version": [
      {
        "action": "elasticbeanstalk:DeletePlatformVersion",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "platform": "${PlatformArn}"
        }
      }
    ],
    "describe-account-attributes": [
      {
        "action": "elasticbeanstalk:DescribeAccountAttributes",
        "resource_mappings": {}
      }
    ],
    "describe-application-versions": [
      {
        "action": "elasticbeanstalk:DescribeApplicationVersions",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          },
          "VersionLabel": {
            "template": "${VersionLabels[]}"
          }
        }
      }
    ],
    "describe-applications": [
      {
        "action": "elasticbeanstalk:DescribeApplications",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationNames[]}"
          }
        }
      }
    ],
    "describe-configuration-options": [
      {
        "action": "elasticbeanstalk:DescribeConfigurationOptions",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          },
          "TemplateName": {
            "template": "${TemplateName}"
          },
          "EnvironmentName": {
            "template": "${EnvironmentName}"
          },
          "SolutionStackName": {
            "template": "${SolutionStackName}"
          }
        }
      }
    ],
    "describe-configuration-settings": [
      {
        "action": "elasticbeanstalk:DescribeConfigurationSettings",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          },
          "TemplateName": {
            "template": "${TemplateName}"
          },
          "EnvironmentName": {
            "template": "${EnvironmentName}"
          }
        }
      }
    ],
    "describe-environment-health": [
      {
        "action": "elasticbeanstalk:DescribeEnvironmentHealth",
        "resource_mappings": {
          "ApplicationName": {
            "template": "*"
          },
          "EnvironmentName": {
            "template": "${EnvironmentName}"
          }
        }
      }
    ],
    "describe-environment-managed-action-history": [
      {
        "action": "elasticbeanstalk:DescribeEnvironmentManagedActionHistory",
        "resource_mappings": {
          "ApplicationName": {
            "template": "*"
          },
          "EnvironmentName": {
            "template": "${EnvironmentName}"
          }
        }
      }
    ],
    "describe-environment-managed-actions": [
      {
        "action": "elasticbeanstalk:DescribeEnvironmentManagedActions",
        "resource_mappings": {
          "ApplicationName": {
            "template": "*"
          },
          "EnvironmentName": {
            "template": "${EnvironmentName}"
          }
        }
      }
    ],
    "describe-environment-resources": [
      {
        "action": "elasticbeanstalk:DescribeEnvironmentResources",
        "resource_mappings": {
          "ApplicationName": {
            "template": "*"
          },
          "EnvironmentName": {
            "template": "${EnvironmentName}"
          }
        }
      }
    ],
    "describe-environments": [
      {
        "action": "elasticbeanstalk:DescribeEnvironments",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          },
          "EnvironmentName": {
            "template": "${EnvironmentNames[]}"
          }
        }
      }
    ],
    "describe-events": [
      {
        "action": "elasticbeanstalk:DescribeEvents",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          },
          "VersionLabel": {
            "template": "${VersionLabel}"
          },
          "TemplateName": {
            "template": "${TemplateName}"
          },
          "EnvironmentName": {
            "template": "${EnvironmentName}"
          }
        }
      }
    ],
    "describe-instances-health": [
      {
        "action": "elasticbeanstalk:DescribeInstancesHealth",
        "resource_mappings": {
          "ApplicationName": {
            "template": "*"
          },
          "EnvironmentName": {
            "template": "${EnvironmentName}"
          }
        }
      }
    ],
    "describe-platform-version": [
      {
        "action": "elasticbeanstalk:DescribePlatformVersion",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "platform": "${PlatformArn}"
        }
      }
    ],
    "disassociate-environment-operations-role": [
      {
        "action": "elasticbeanstalk:DisassociateEnvironmentOperationsRole",
        "resource_mappings": {
          "ApplicationName": {
            "template": "*"
          },
          "EnvironmentName": {
            "template": "${EnvironmentName}"
          }
        }
      }
    ],
    "list-available-solution-stacks": [
      {
        "action": "elasticbeanstalk:ListAvailableSolutionStacks",
        "resource_mappings": {
          "SolutionStackName": {
            "template": "*"
          }
        }
      }
    ],
    "list-platform-branches": [
      {
        "action": "elasticbeanstalk:ListPlatformBranches",
        "resource_mappings": {}
      }
    ],
    "list-platform-versions": [
      {
        "action": "elasticbeanstalk:ListPlatformVersions",
        "resource_mappings": {
          "PlatformNameWithVersion": {
            "template": "*"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "elasticbeanstalk:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "%%iftemplatematch%${ResourceArn}%%",
          "applicationversion": "%%iftemplatematch%${ResourceArn}%%",
          "configurationtemplate": "%%iftemplatematch%${ResourceArn}%%",
          "environment": "%%iftemplatematch%${ResourceArn}%%",
          "platform": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "rebuild-environment": [
      {
        "action": "elasticbeanstalk:RebuildEnvironment",
        "resource_mappings": {
          "ApplicationName": {
            "template": "*"
          },
          "EnvironmentName": {
            "template": "${EnvironmentName}"
          }
        }
      }
    ],
    "request-environment-info": [
      {
        "action": "elasticbeanstalk:RequestEnvironmentInfo",
        "resource_mappings": {
          "ApplicationName": {
            "template": "*"
          },
          "EnvironmentName": {
            "template": "${EnvironmentName}"
          }
        }
      }
    ],
    "restart-app-server": [
      {
        "action": "elasticbeanstalk:RestartAppServer",
        "resource_mappings": {
          "ApplicationName": {
            "template": "*"
          },
          "EnvironmentName": {
            "template": "${EnvironmentName}"
          }
        }
      }
    ],
    "retrieve-environment-info": [
      {
        "action": "elasticbeanstalk:RetrieveEnvironmentInfo",
        "resource_mappings": {
          "ApplicationName": {
            "template": "*"
          },
          "EnvironmentName": {
            "template": "${EnvironmentName}"
          }
        }
      }
    ],
    "swap-environment-cnames": [
      {
        "action": "elasticbeanstalk:SwapEnvironmentCNAMEs",
        "resource_mappings": {
          "ApplicationName": {
            "template": "*"
          },
          "EnvironmentName": {
            "template": "%%many%${SourceEnvironmentName}%${DestinationEnvironmentName}%%"
          }
        }
      }
    ],
    "terminate-environment": [
      {
        "action": "elasticbeanstalk:TerminateEnvironment",
        "resource_mappings": {
          "ApplicationName": {
            "template": "*"
          },
          "EnvironmentName": {
            "template": "${EnvironmentName}"
          }
        }
      }
    ],
    "update-application": [
      {
        "action": "elasticbeanstalk:UpdateApplication",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "update-application-resource-lifecycle": [
      {
        "action": "elasticbeanstalk:UpdateApplicationResourceLifecycle",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${esourceLifecycleConfig.ServiceRole}"
        }
      }
    ],
    "update-application-version": [
      {
        "action": "elasticbeanstalk:UpdateApplicationVersion",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          },
          "VersionLabel": {
            "template": "${VersionLabel}"
          }
        }
      }
    ],
    "update-configuration-template": [
      {
        "action": "elasticbeanstalk:UpdateConfigurationTemplate",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          },
          "TemplateName": {
            "template": "${TemplateName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${TemplateName}%*%%%"
        }
      }
    ],
    "update-environment": [
      {
        "action": "elasticbeanstalk:UpdateEnvironment",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          },
          "EnvironmentName": {
            "template": "${EnvironmentName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${TemplateName}%*%%%"
        }
      }
    ],
    "update-tags-for-resource": [
      {
        "action": "elasticbeanstalk:UpdateTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "%%iftemplatematch%${ResourceArn}%%",
          "applicationversion": "%%iftemplatematch%${ResourceArn}%%",
          "configurationtemplate": "%%iftemplatematch%${ResourceArn}%%",
          "environment": "%%iftemplatematch%${ResourceArn}%%",
          "platform": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "validate-configuration-settings": [
      {
        "action": "elasticbeanstalk:ValidateConfigurationSettings",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          },
          "TemplateName": {
            "template": "${TemplateName}"
          },
          "EnvironmentName": {
            "template": "${EnvironmentName}"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "elasticbeanstalk:DescribeEnvironments",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          },
          "EnvironmentName": {
            "template": "${EnvironmentNames[]}"
          }
        }
      }
    ]
  },
  "elastictranscoder": {
    "cancel-job": [
      {
        "action": "elastictranscoder:CancelJob",
        "resource_mappings": {
          "JobId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "create-job": [
      {
        "action": "elastictranscoder:CreateJob",
        "resource_mappings": {
          "PipelineId": {
            "template": "${PipelineId}"
          },
          "PresetId": {
            "template": "%%many%${Output.PresetId}%${Outputs[].PresetId}%%"
          }
        }
      }
    ],
    "create-pipeline": [
      {
        "action": "elastictranscoder:CreatePipeline",
        "resource_mappings": {
          "PipelineId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${Role}"
        }
      }
    ],
    "create-preset": [
      {
        "action": "elastictranscoder:CreatePreset",
        "resource_mappings": {
          "PresetId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-pipeline": [
      {
        "action": "elastictranscoder:DeletePipeline",
        "resource_mappings": {
          "PipelineId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-preset": [
      {
        "action": "elastictranscoder:DeletePreset",
        "resource_mappings": {
          "PresetId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "list-jobs-by-pipeline": [
      {
        "action": "elastictranscoder:ListJobsByPipeline",
        "resource_mappings": {
          "PipelineId": {
            "template": "${PipelineId}"
          }
        }
      }
    ],
    "list-jobs-by-status": [
      {
        "action": "elastictranscoder:ListJobsByStatus",
        "resource_mappings": {}
      }
    ],
    "list-pipelines": [
      {
        "action": "elastictranscoder:ListPipelines",
        "resource_mappings": {}
      }
    ],
    "list-presets": [
      {
        "action": "elastictranscoder:ListPresets",
        "resource_mappings": {}
      }
    ],
    "read-job": [
      {
        "action": "elastictranscoder:ReadJob",
        "resource_mappings": {
          "JobId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "read-pipeline": [
      {
        "action": "elastictranscoder:ReadPipeline",
        "resource_mappings": {
          "PipelineId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "read-preset": [
      {
        "action": "elastictranscoder:ReadPreset",
        "resource_mappings": {
          "PresetId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "test-role": [
      {
        "action": "elastictranscoder:TestRole",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${Role}"
        }
      }
    ],
    "update-pipeline": [
      {
        "action": "elastictranscoder:UpdatePipeline",
        "resource_mappings": {
          "PipelineId": {
            "template": "${Id}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${Role}"
        }
      }
    ],
    "update-pipeline-notifications": [
      {
        "action": "elastictranscoder:UpdatePipelineNotifications",
        "resource_mappings": {
          "PipelineId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "update-pipeline-status": [
      {
        "action": "elastictranscoder:UpdatePipeline",
        "resource_mappings": {
          "PipelineId": {
            "template": "${Id}"
          }
        }
      },
      {
        "action": "elastictranscoder:UpdatePipelineNotifications",
        "resource_mappings": {
          "PipelineId": {
            "template": "${Id}"
          }
        }
      },
      {
        "action": "elastictranscoder:UpdatePipelineStatus",
        "resource_mappings": {
          "PipelineId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "elastictranscoder:ReadJob",
        "resource_mappings": {
          "JobId": {
            "template": "${Id}"
          }
        }
      }
    ]
  },
  "elb": {
    "add-tags": [
      {
        "action": "elasticloadbalancing:AddTags",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "${LoadBalancerNames[]}"
          },
          "LoadBalancerId": {
            "template": "*"
          },
          "ListenerId": {
            "template": "*"
          },
          "ListenerRuleId": {
            "template": "*"
          },
          "TargetGroupName": {
            "template": "${LoadBalancerNames[]}"
          },
          "TargetGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "apply-security-groups-to-load-balancer": [
      {
        "action": "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "${LoadBalancerName}"
          }
        }
      }
    ],
    "attach-load-balancer-to-subnets": [
      {
        "action": "elasticloadbalancing:AttachLoadBalancerToSubnets",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "${LoadBalancerName}"
          }
        }
      }
    ],
    "configure-health-check": [
      {
        "action": "elasticloadbalancing:ConfigureHealthCheck",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "${LoadBalancerName}"
          }
        }
      }
    ],
    "create-app-cookie-stickiness-policy": [
      {
        "action": "elasticloadbalancing:CreateAppCookieStickinessPolicy",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "${LoadBalancerName}"
          }
        }
      }
    ],
    "create-lb-cookie-stickiness-policy": [
      {
        "action": "elasticloadbalancing:CreateLBCookieStickinessPolicy",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "${LoadBalancerName}"
          }
        }
      }
    ],
    "create-load-balancer": [
      {
        "action": "elasticloadbalancing:CreateLoadBalancer",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "${LoadBalancerName}"
          },
          "LoadBalancerId": {
            "template": "*"
          }
        }
      }
    ],
    "create-load-balancer-listeners": [
      {
        "action": "elasticloadbalancing:CreateLoadBalancerListeners",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "${LoadBalancerName}"
          }
        }
      }
    ],
    "create-load-balancer-policy": [
      {
        "action": "elasticloadbalancing:CreateLoadBalancerPolicy",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "${LoadBalancerName}"
          }
        }
      }
    ],
    "delete-load-balancer": [
      {
        "action": "elasticloadbalancing:DeleteLoadBalancer",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "${LoadBalancerName}"
          },
          "LoadBalancerId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-load-balancer-listeners": [
      {
        "action": "elasticloadbalancing:DeleteLoadBalancerListeners",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "${LoadBalancerName}"
          }
        }
      }
    ],
    "delete-load-balancer-policy": [
      {
        "action": "elasticloadbalancing:DeleteLoadBalancerPolicy",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "${LoadBalancerName}"
          }
        }
      }
    ],
    "deregister-instances-from-load-balancer": [
      {
        "action": "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "${LoadBalancerName}"
          }
        }
      }
    ],
    "describe-account-limits": [
      {
        "action": "elasticloadbalancing:DescribeAccountLimits",
        "resource_mappings": {}
      }
    ],
    "describe-instance-health": [
      {
        "action": "elasticloadbalancing:DescribeInstanceHealth",
        "resource_mappings": {}
      }
    ],
    "describe-load-balancer-attributes": [
      {
        "action": "elasticloadbalancing:DescribeLoadBalancerAttributes",
        "resource_mappings": {}
      }
    ],
    "describe-load-balancer-policies": [
      {
        "action": "elasticloadbalancing:DescribeLoadBalancerPolicies",
        "resource_mappings": {}
      }
    ],
    "describe-load-balancer-policy-types": [
      {
        "action": "elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
        "resource_mappings": {}
      }
    ],
    "describe-load-balancers": [
      {
        "action": "elasticloadbalancing:DescribeLoadBalancers",
        "resource_mappings": {}
      }
    ],
    "describe-tags": [
      {
        "action": "elasticloadbalancing:DescribeTags",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "${LoadBalancerNames[]}"
          },
          "LoadBalancerId": {
            "template": "*"
          },
          "ListenerId": {
            "template": "*"
          },
          "ListenerRuleId": {
            "template": "*"
          },
          "TargetGroupName": {
            "template": "*"
          },
          "TargetGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "detach-load-balancer-from-subnets": [
      {
        "action": "elasticloadbalancing:DetachLoadBalancerFromSubnets",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "${LoadBalancerName}"
          }
        }
      }
    ],
    "disable-availability-zones-for-load-balancer": [
      {
        "action": "elasticloadbalancing:DisableAvailabilityZonesForLoadBalancer",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "${LoadBalancerName}"
          }
        }
      }
    ],
    "enable-availability-zones-for-load-balancer": [
      {
        "action": "elasticloadbalancing:EnableAvailabilityZonesForLoadBalancer",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "${LoadBalancerName}"
          }
        }
      }
    ],
    "modify-load-balancer-attributes": [
      {
        "action": "elasticloadbalancing:ModifyLoadBalancerAttributes",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "${LoadBalancerName}"
          },
          "LoadBalancerId": {
            "template": "*"
          }
        }
      }
    ],
    "register-instances-with-load-balancer": [
      {
        "action": "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "${LoadBalancerName}"
          }
        }
      }
    ],
    "remove-tags": [
      {
        "action": "elasticloadbalancing:RemoveTags",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "${LoadBalancerNames[]}"
          },
          "LoadBalancerId": {
            "template": "*"
          },
          "ListenerId": {
            "template": "*"
          },
          "ListenerRuleId": {
            "template": "*"
          },
          "TargetGroupName": {
            "template": "*"
          },
          "TargetGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "set-load-balancer-listener-ssl-certificate": [
      {
        "action": "elasticloadbalancing:SetLoadBalancerListenerSSLCertificate",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "${LoadBalancerName}"
          }
        }
      }
    ],
    "set-load-balancer-policies-for-backend-server": [
      {
        "action": "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "${LoadBalancerName}"
          }
        }
      }
    ],
    "set-load-balancer-policies-of-listener": [
      {
        "action": "elasticloadbalancing:SetLoadBalancerPoliciesOfListener",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "${LoadBalancerName}"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "elasticloadbalancing:DescribeInstanceHealth",
        "resource_mappings": {}
      }
    ]
  },
  "elbv2": {
    "add-listener-certificates": [
      {
        "action": "elasticloadbalancing:AddListenerCertificates",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "listener/app": "%%iftemplatematch%${ListenerArn}%%",
          "listener/net": "%%iftemplatematch%${ListenerArn}%%"
        }
      }
    ],
    "add-tags": [
      {
        "action": "elasticloadbalancing:AddTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "listener-rule/app": "%%iftemplatematch%${ResourceArns[]}%%",
          "listener-rule/net": "%%iftemplatematch%${ResourceArns[]}%%",
          "listener/app": "%%iftemplatematch%${ResourceArns[]}%%",
          "listener/net": "%%iftemplatematch%${ResourceArns[]}%%",
          "loadbalancer/app/": "%%iftemplatematch%${ResourceArns[]}%%",
          "loadbalancer/net/": "%%iftemplatematch%${ResourceArns[]}%%",
          "targetgroup": "%%iftemplatematch%${ResourceArns[]}%%",
          "loadbalancer": "%%iftemplatematch%${ResourceArns[]}%%"
        }
      }
    ],
    "create-listener": [
      {
        "action": "elasticloadbalancing:CreateListener",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "loadbalancer/app/": "%%iftemplatematch%${LoadBalancerArn}%%",
          "loadbalancer/net/": "%%iftemplatematch%${LoadBalancerArn}%%"
        }
      }
    ],
    "create-load-balancer": [
      {
        "action": "elasticloadbalancing:CreateLoadBalancer",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "${Name}"
          },
          "LoadBalancerId": {
            "template": "*"
          }
        }
      }
    ],
    "create-rule": [
      {
        "action": "elasticloadbalancing:CreateRule",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "listener/app": "%%iftemplatematch%${ListenerArn}%%",
          "listener/net": "%%iftemplatematch%${ListenerArn}%%"
        }
      }
    ],
    "create-target-group": [
      {
        "action": "elasticloadbalancing:CreateTargetGroup",
        "resource_mappings": {
          "TargetGroupName": {
            "template": "${Name}"
          },
          "TargetGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-listener": [
      {
        "action": "elasticloadbalancing:DeleteListener",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "listener/app": "%%iftemplatematch%${ListenerArn}%%",
          "listener/net": "%%iftemplatematch%${ListenerArn}%%"
        }
      }
    ],
    "delete-load-balancer": [
      {
        "action": "elasticloadbalancing:DeleteLoadBalancer",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "loadbalancer/app/": "%%iftemplatematch%${LoadBalancerArn}%%",
          "loadbalancer/net/": "%%iftemplatematch%${LoadBalancerArn}%%",
          "loadbalancer": "%%iftemplatematch%${LoadBalancerArn}%%"
        }
      }
    ],
    "delete-rule": [
      {
        "action": "elasticloadbalancing:DeleteRule",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "listener-rule/app": "%%iftemplatematch%${RuleArn}%%",
          "listener-rule/net": "%%iftemplatematch%${RuleArn}%%"
        }
      }
    ],
    "delete-target-group": [
      {
        "action": "elasticloadbalancing:DeleteTargetGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "targetgroup": "${TargetGroupArn}"
        }
      }
    ],
    "deregister-targets": [
      {
        "action": "elasticloadbalancing:DeregisterTargets",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "targetgroup": "${TargetGroupArn}"
        }
      }
    ],
    "describe-account-limits": [
      {
        "action": "elasticloadbalancing:DescribeAccountLimits",
        "resource_mappings": {}
      }
    ],
    "describe-listener-certificates": [
      {
        "action": "elasticloadbalancing:DescribeListenerCertificates",
        "resource_mappings": {}
      }
    ],
    "describe-listeners": [
      {
        "action": "elasticloadbalancing:DescribeListeners",
        "resource_mappings": {}
      }
    ],
    "describe-load-balancer-attributes": [
      {
        "action": "elasticloadbalancing:DescribeLoadBalancerAttributes",
        "resource_mappings": {}
      }
    ],
    "describe-load-balancers": [
      {
        "action": "elasticloadbalancing:DescribeLoadBalancers",
        "resource_mappings": {}
      }
    ],
    "describe-rules": [
      {
        "action": "elasticloadbalancing:DescribeRules",
        "resource_mappings": {}
      }
    ],
    "describe-ssl-policies": [
      {
        "action": "elasticloadbalancing:DescribeSSLPolicies",
        "resource_mappings": {}
      }
    ],
    "describe-tags": [
      {
        "action": "elasticloadbalancing:DescribeTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "listener-rule/app": "%%iftemplatematch%${ResourceArns[]}%%",
          "listener-rule/net": "%%iftemplatematch%${ResourceArns[]}%%",
          "listener/app": "%%iftemplatematch%${ResourceArns[]}%%",
          "listener/net": "%%iftemplatematch%${ResourceArns[]}%%",
          "loadbalancer/app/": "%%iftemplatematch%${ResourceArns[]}%%",
          "loadbalancer/net/": "%%iftemplatematch%${ResourceArns[]}%%",
          "targetgroup": "%%iftemplatematch%${ResourceArns[]}%%",
          "loadbalancer": "%%iftemplatematch%${ResourceArns[]}%%"
        }
      }
    ],
    "describe-target-group-attributes": [
      {
        "action": "elasticloadbalancing:DescribeTargetGroupAttributes",
        "resource_mappings": {}
      }
    ],
    "describe-target-groups": [
      {
        "action": "elasticloadbalancing:DescribeTargetGroups",
        "resource_mappings": {}
      }
    ],
    "describe-target-health": [
      {
        "action": "elasticloadbalancing:DescribeTargetHealth",
        "resource_mappings": {}
      }
    ],
    "modify-listener": [
      {
        "action": "elasticloadbalancing:ModifyListener",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "listener/app": "%%iftemplatematch%${ListenerArn}%%",
          "listener/net": "%%iftemplatematch%${ListenerArn}%%"
        }
      }
    ],
    "modify-load-balancer-attributes": [
      {
        "action": "elasticloadbalancing:ModifyLoadBalancerAttributes",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "loadbalancer/app/": "%%iftemplatematch%${LoadBalancerArn}%%",
          "loadbalancer/net/": "%%iftemplatematch%${LoadBalancerArn}%%",
          "loadbalancer": "%%iftemplatematch%${LoadBalancerArn}%%"
        }
      }
    ],
    "modify-rule": [
      {
        "action": "elasticloadbalancing:ModifyRule",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "listener-rule/app": "%%iftemplatematch%${RuleArn}%%",
          "listener-rule/net": "%%iftemplatematch%${RuleArn}%%"
        }
      }
    ],
    "modify-target-group": [
      {
        "action": "elasticloadbalancing:ModifyTargetGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "targetgroup": "${TargetGroupArn}"
        }
      }
    ],
    "modify-target-group-attributes": [
      {
        "action": "elasticloadbalancing:ModifyTargetGroupAttributes",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "targetgroup": "${TargetGroupArn}"
        }
      }
    ],
    "register-targets": [
      {
        "action": "elasticloadbalancing:RegisterTargets",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "targetgroup": "${TargetGroupArn}"
        }
      }
    ],
    "remove-listener-certificates": [
      {
        "action": "elasticloadbalancing:RemoveListenerCertificates",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "listener/app": "%%iftemplatematch%${ListenerArn}%%",
          "listener/net": "%%iftemplatematch%${ListenerArn}%%"
        }
      }
    ],
    "remove-tags": [
      {
        "action": "elasticloadbalancing:RemoveTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "listener-rule/app": "%%iftemplatematch%${ResourceArns[]}%%",
          "listener-rule/net": "%%iftemplatematch%${ResourceArns[]}%%",
          "listener/app": "%%iftemplatematch%${ResourceArns[]}%%",
          "listener/net": "%%iftemplatematch%${ResourceArns[]}%%",
          "loadbalancer/app/": "%%iftemplatematch%${ResourceArns[]}%%",
          "loadbalancer/net/": "%%iftemplatematch%${ResourceArns[]}%%",
          "targetgroup": "%%iftemplatematch%${ResourceArns[]}%%",
          "loadbalancer": "%%iftemplatematch%${ResourceArns[]}%%"
        }
      }
    ],
    "set-ip-address-type": [
      {
        "action": "elasticloadbalancing:SetIpAddressType",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "loadbalancer/app/": "%%iftemplatematch%${LoadBalancerArn}%%",
          "loadbalancer/net/": "%%iftemplatematch%${LoadBalancerArn}%%"
        }
      }
    ],
    "set-rule-priorities": [
      {
        "action": "elasticloadbalancing:SetRulePriorities",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "listener-rule/app": "%%iftemplatematch%${RulePriorities[].RuleArn}%%",
          "listener-rule/net": "%%iftemplatematch%${RulePriorities[].RuleArn}%%"
        }
      }
    ],
    "set-security-groups": [
      {
        "action": "elasticloadbalancing:SetSecurityGroups",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "loadbalancer/app/": "%%iftemplatematch%${LoadBalancerArn}%%",
          "loadbalancer/net/": "%%iftemplatematch%${LoadBalancerArn}%%"
        }
      }
    ],
    "set-subnets": [
      {
        "action": "elasticloadbalancing:SetSubnets",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "loadbalancer/app/": "%%iftemplatematch%${LoadBalancerArn}%%",
          "loadbalancer/net/": "%%iftemplatematch%${LoadBalancerArn}%%"
        }
      }
    ],
    "wait": [
      {
        "action": "elasticloadbalancing:DescribeLoadBalancers",
        "resource_mappings": {}
      }
    ]
  },
  "emr": {
    "add-instance-fleet": [
      {
        "action": "elasticmapreduce:AddInstanceFleet",
        "resource_mappings": {
          "ClusterId": {
            "template": "${ClusterId}"
          }
        }
      }
    ],
    "add-tags": [
      {
        "action": "elasticmapreduce:AddTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "%%iftemplatematch%${ResourceId}%%",
          "editor": "%%iftemplatematch%${ResourceId}%%"
        }
      }
    ],
    "cancel-steps": [
      {
        "action": "elasticmapreduce:CancelSteps",
        "resource_mappings": {
          "ClusterId": {
            "template": "${ClusterId}"
          }
        }
      }
    ],
    "create-security-configuration": [
      {
        "action": "elasticmapreduce:CreateSecurityConfiguration",
        "resource_mappings": {}
      }
    ],
    "create-studio": [
      {
        "action": "elasticmapreduce:CreateStudio",
        "resource_mappings": {}
      }
    ],
    "create-studio-session-mapping": [
      {
        "action": "elasticmapreduce:CreateStudioSessionMapping",
        "resource_mappings": {
          "StudioId": {
            "template": "${StudioId}"
          }
        }
      }
    ],
    "delete-security-configuration": [
      {
        "action": "elasticmapreduce:DeleteSecurityConfiguration",
        "resource_mappings": {}
      }
    ],
    "delete-studio": [
      {
        "action": "elasticmapreduce:DeleteStudio",
        "resource_mappings": {
          "StudioId": {
            "template": "${StudioId}"
          }
        }
      }
    ],
    "delete-studio-session-mapping": [
      {
        "action": "elasticmapreduce:DeleteStudioSessionMapping",
        "resource_mappings": {
          "StudioId": {
            "template": "${StudioId}"
          }
        }
      }
    ],
    "describe-notebook-execution": [
      {
        "action": "elasticmapreduce:DescribeNotebookExecution",
        "resource_mappings": {
          "NotebookExecutionId": {
            "template": "${NotebookExecutionId}"
          }
        }
      }
    ],
    "describe-release-label": [
      {
        "action": "elasticmapreduce:DescribeReleaseLabel",
        "resource_mappings": {}
      }
    ],
    "describe-security-configuration": [
      {
        "action": "elasticmapreduce:DescribeSecurityConfiguration",
        "resource_mappings": {}
      }
    ],
    "describe-step": [
      {
        "action": "elasticmapreduce:DescribeStep",
        "resource_mappings": {
          "ClusterId": {
            "template": "${ClusterId}"
          }
        }
      }
    ],
    "describe-studio": [
      {
        "action": "elasticmapreduce:DescribeStudio",
        "resource_mappings": {
          "StudioId": {
            "template": "${StudioId}"
          }
        }
      }
    ],
    "get-auto-termination-policy": [
      {
        "action": "elasticmapreduce:GetAutoTerminationPolicy",
        "resource_mappings": {
          "ClusterId": {
            "template": "${ClusterId}"
          }
        }
      }
    ],
    "get-block-public-access-configuration": [
      {
        "action": "elasticmapreduce:GetBlockPublicAccessConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-cluster-session-credentials": [
      {
        "action": "elasticmapreduce:GetClusterSessionCredentials",
        "resource_mappings": {
          "ClusterId": {
            "template": "${ClusterId}"
          }
        }
      }
    ],
    "get-managed-scaling-policy": [
      {
        "action": "elasticmapreduce:GetManagedScalingPolicy",
        "resource_mappings": {
          "ClusterId": {
            "template": "${ClusterId}"
          }
        }
      }
    ],
    "get-studio-session-mapping": [
      {
        "action": "elasticmapreduce:GetStudioSessionMapping",
        "resource_mappings": {
          "StudioId": {
            "template": "${StudioId}"
          }
        }
      }
    ],
    "list-clusters": [
      {
        "action": "elasticmapreduce:ListClusters",
        "resource_mappings": {}
      }
    ],
    "list-instance-fleets": [
      {
        "action": "elasticmapreduce:ListInstanceFleets",
        "resource_mappings": {
          "ClusterId": {
            "template": "${ClusterId}"
          }
        }
      }
    ],
    "list-instances": [
      {
        "action": "elasticmapreduce:ListInstances",
        "resource_mappings": {
          "ClusterId": {
            "template": "${ClusterId}"
          }
        }
      }
    ],
    "list-notebook-executions": [
      {
        "action": "elasticmapreduce:ListNotebookExecutions",
        "resource_mappings": {}
      }
    ],
    "list-release-labels": [
      {
        "action": "elasticmapreduce:ListReleaseLabels",
        "resource_mappings": {}
      }
    ],
    "list-security-configurations": [
      {
        "action": "elasticmapreduce:ListSecurityConfigurations",
        "resource_mappings": {}
      }
    ],
    "list-steps": [
      {
        "action": "elasticmapreduce:ListSteps",
        "resource_mappings": {
          "ClusterId": {
            "template": "${ClusterId}"
          }
        }
      }
    ],
    "list-studio-session-mappings": [
      {
        "action": "elasticmapreduce:ListStudioSessionMappings",
        "resource_mappings": {}
      }
    ],
    "list-studios": [
      {
        "action": "elasticmapreduce:ListStudios",
        "resource_mappings": {}
      }
    ],
    "list-supported-instance-types": [
      {
        "action": "elasticmapreduce:ListSupportedInstanceTypes",
        "resource_mappings": {}
      }
    ],
    "modify-cluster": [
      {
        "action": "elasticmapreduce:ModifyCluster",
        "resource_mappings": {
          "ClusterId": {
            "template": "${ClusterId}"
          }
        }
      }
    ],
    "modify-instance-fleet": [
      {
        "action": "elasticmapreduce:ModifyInstanceFleet",
        "resource_mappings": {
          "ClusterId": {
            "template": "${ClusterId}"
          }
        }
      }
    ],
    "modify-instance-groups": [
      {
        "action": "elasticmapreduce:ModifyInstanceGroups",
        "resource_mappings": {
          "ClusterId": {
            "template": "${ClusterId}"
          }
        }
      }
    ],
    "put-auto-scaling-policy": [
      {
        "action": "elasticmapreduce:PutAutoScalingPolicy",
        "resource_mappings": {
          "ClusterId": {
            "template": "${ClusterId}"
          }
        }
      }
    ],
    "put-auto-termination-policy": [
      {
        "action": "elasticmapreduce:PutAutoTerminationPolicy",
        "resource_mappings": {
          "ClusterId": {
            "template": "${ClusterId}"
          }
        }
      }
    ],
    "put-block-public-access-configuration": [
      {
        "action": "elasticmapreduce:PutBlockPublicAccessConfiguration",
        "resource_mappings": {}
      }
    ],
    "put-managed-scaling-policy": [
      {
        "action": "elasticmapreduce:PutManagedScalingPolicy",
        "resource_mappings": {
          "ClusterId": {
            "template": "${ClusterId}"
          }
        }
      }
    ],
    "remove-auto-scaling-policy": [
      {
        "action": "elasticmapreduce:RemoveAutoScalingPolicy",
        "resource_mappings": {
          "ClusterId": {
            "template": "${ClusterId}"
          }
        }
      }
    ],
    "remove-auto-termination-policy": [
      {
        "action": "elasticmapreduce:RemoveAutoTerminationPolicy",
        "resource_mappings": {
          "ClusterId": {
            "template": "${ClusterId}"
          }
        }
      }
    ],
    "remove-managed-scaling-policy": [
      {
        "action": "elasticmapreduce:RemoveManagedScalingPolicy",
        "resource_mappings": {
          "ClusterId": {
            "template": "${ClusterId}"
          }
        }
      }
    ],
    "remove-tags": [
      {
        "action": "elasticmapreduce:RemoveTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "%%iftemplatematch%${ResourceId}%%",
          "editor": "%%iftemplatematch%${ResourceId}%%"
        }
      }
    ],
    "start-notebook-execution": [
      {
        "action": "elasticmapreduce:StartNotebookExecution",
        "resource_mappings": {
          "ClusterId": {
            "template": "*"
          },
          "EditorId": {
            "template": "${EditorId}"
          }
        }
      }
    ],
    "stop-notebook-execution": [
      {
        "action": "elasticmapreduce:StopNotebookExecution",
        "resource_mappings": {
          "NotebookExecutionId": {
            "template": "${NotebookExecutionId}"
          }
        }
      }
    ],
    "update-studio": [
      {
        "action": "elasticmapreduce:UpdateStudio",
        "resource_mappings": {
          "StudioId": {
            "template": "${StudioId}"
          }
        }
      }
    ],
    "update-studio-session-mapping": [
      {
        "action": "elasticmapreduce:UpdateStudioSessionMapping",
        "resource_mappings": {
          "StudioId": {
            "template": "${StudioId}"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "elasticmapreduce:DescribeCluster",
        "resource_mappings": {
          "ClusterId": {
            "template": "${ClusterId}"
          }
        }
      }
    ]
  },
  "emr-containers": {
    "cancel-job-run": [
      {
        "action": "emr-containers:CancelJobRun",
        "resource_mappings": {
          "virtualClusterId": {
            "template": "${virtualClusterId}"
          },
          "jobRunId": {
            "template": "${id}"
          }
        }
      }
    ],
    "create-job-template": [
      {
        "action": "emr-containers:CreateJobTemplate",
        "resource_mappings": {}
      }
    ],
    "create-managed-endpoint": [
      {
        "action": "emr-containers:CreateManagedEndpoint",
        "resource_mappings": {
          "virtualClusterId": {
            "template": "${virtualClusterId}"
          }
        }
      }
    ],
    "create-virtual-cluster": [
      {
        "action": "emr-containers:CreateVirtualCluster",
        "resource_mappings": {}
      }
    ],
    "delete-job-template": [
      {
        "action": "emr-containers:DeleteJobTemplate",
        "resource_mappings": {
          "JobTemplateId": {
            "template": "${id}"
          }
        }
      }
    ],
    "delete-managed-endpoint": [
      {
        "action": "emr-containers:DeleteManagedEndpoint",
        "resource_mappings": {
          "virtualClusterId": {
            "template": "${virtualClusterId}"
          },
          "endpointId": {
            "template": "${id}"
          }
        }
      }
    ],
    "delete-virtual-cluster": [
      {
        "action": "emr-containers:DeleteVirtualCluster",
        "resource_mappings": {
          "virtualClusterId": {
            "template": "${id}"
          }
        }
      }
    ],
    "describe-job-run": [
      {
        "action": "emr-containers:DescribeJobRun",
        "resource_mappings": {
          "virtualClusterId": {
            "template": "${virtualClusterId}"
          },
          "jobRunId": {
            "template": "${id}"
          }
        }
      }
    ],
    "describe-job-template": [
      {
        "action": "emr-containers:DescribeJobTemplate",
        "resource_mappings": {
          "JobTemplateId": {
            "template": "${id}"
          }
        }
      }
    ],
    "describe-managed-endpoint": [
      {
        "action": "emr-containers:DescribeManagedEndpoint",
        "resource_mappings": {
          "virtualClusterId": {
            "template": "${virtualClusterId}"
          },
          "endpointId": {
            "template": "${id}"
          }
        }
      }
    ],
    "describe-virtual-cluster": [
      {
        "action": "emr-containers:DescribeVirtualCluster",
        "resource_mappings": {
          "virtualClusterId": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-managed-endpoint-session-credentials": [
      {
        "action": "emr-containers:GetManagedEndpointSessionCredentials",
        "resource_mappings": {
          "VirtualClusterId": {
            "template": "${virtualClusterIdentifier}"
          },
          "EndpointId": {
            "template": "${endpointIdentifier}"
          }
        }
      }
    ],
    "list-job-runs": [
      {
        "action": "emr-containers:ListJobRuns",
        "resource_mappings": {
          "virtualClusterId": {
            "template": "${virtualClusterId}"
          }
        }
      }
    ],
    "list-job-templates": [
      {
        "action": "emr-containers:ListJobTemplates",
        "resource_mappings": {}
      }
    ],
    "list-managed-endpoints": [
      {
        "action": "emr-containers:ListManagedEndpoints",
        "resource_mappings": {
          "virtualClusterId": {
            "template": "${virtualClusterId}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "emr-containers:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "jobRun": "%%iftruthy%${resourceArn}%%",
          "managedEndpoint": "%%iftruthy%${resourceArn}%%",
          "virtualCluster": "%%iftruthy%${resourceArn}%%"
        }
      }
    ],
    "list-virtual-clusters": [
      {
        "action": "emr-containers:ListVirtualClusters",
        "resource_mappings": {}
      }
    ],
    "start-job-run": [
      {
        "action": "emr-containers:StartJobRun",
        "resource_mappings": {
          "virtualClusterId": {
            "template": "${virtualClusterId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "emr-containers:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "jobRun": "%%iftruthy%${resourceArn}%%",
          "managedEndpoint": "%%iftruthy%${resourceArn}%%",
          "virtualCluster": "%%iftruthy%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "emr-containers:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "jobRun": "%%iftruthy%${resourceArn}%%",
          "managedEndpoint": "%%iftruthy%${resourceArn}%%",
          "virtualCluster": "%%iftruthy%${resourceArn}%%"
        }
      }
    ]
  },
  "emr-serverless": {
    "cancel-job-run": [
      {
        "action": "emr-serverless:CancelJobRun",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          },
          "JobRunId": {
            "template": "${jobRunId}"
          }
        }
      }
    ],
    "create-application": [
      {
        "action": "emr-serverless:CreateApplication",
        "resource_mappings": {}
      }
    ],
    "delete-application": [
      {
        "action": "emr-serverless:DeleteApplication",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      }
    ],
    "get-application": [
      {
        "action": "emr-serverless:GetApplication",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      }
    ],
    "get-dashboard-for-job-run": [
      {
        "action": "emr-serverless:GetDashboardForJobRun",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          },
          "JobRunId": {
            "template": "${jobRunId}"
          }
        }
      }
    ],
    "get-job-run": [
      {
        "action": "emr-serverless:GetJobRun",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          },
          "JobRunId": {
            "template": "${jobRunId}"
          }
        }
      }
    ],
    "list-applications": [
      {
        "action": "emr-serverless:ListApplications",
        "resource_mappings": {}
      }
    ],
    "list-job-runs": [
      {
        "action": "emr-serverless:ListJobRuns",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "emr-serverless:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "%%iftemplatematch%${resourceArn}%%",
          "jobRun": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "start-application": [
      {
        "action": "emr-serverless:StartApplication",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      }
    ],
    "start-job-run": [
      {
        "action": "emr-serverless:StartJobRun",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${executionRoleArn}"
        }
      }
    ],
    "stop-application": [
      {
        "action": "emr-serverless:StopApplication",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "emr-serverless:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "%%iftemplatematch%${resourceArn}%%",
          "jobRun": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "emr-serverless:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "%%iftemplatematch%${resourceArn}%%",
          "jobRun": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-application": [
      {
        "action": "emr-serverless:UpdateApplication",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      }
    ]
  },
  "entityresolution": {
    "create-id-mapping-workflow": [
      {
        "note": "NotFound",
        "action": "EntityResolution:CreateIdMappingWorkflow",
        "resource_mappings": {}
      }
    ],
    "create-matching-workflow": [
      {
        "action": "entityresolution:CreateMatchingWorkflow",
        "resource_mappings": {}
      }
    ],
    "create-schema-mapping": [
      {
        "action": "entityresolution:CreateSchemaMapping",
        "resource_mappings": {}
      }
    ],
    "delete-id-mapping-workflow": [
      {
        "note": "NotFound",
        "action": "EntityResolution:DeleteIdMappingWorkflow",
        "resource_mappings": {}
      }
    ],
    "delete-matching-workflow": [
      {
        "action": "entityresolution:DeleteMatchingWorkflow",
        "resource_mappings": {
          "WorkflowName": {
            "template": "${workflowName}"
          }
        }
      }
    ],
    "delete-schema-mapping": [
      {
        "action": "entityresolution:DeleteSchemaMapping",
        "resource_mappings": {
          "SchemaName": {
            "template": "${schemaName}"
          }
        }
      }
    ],
    "get-id-mapping-job": [
      {
        "note": "NotFound",
        "action": "EntityResolution:GetIdMappingJob",
        "resource_mappings": {}
      }
    ],
    "get-id-mapping-workflow": [
      {
        "note": "NotFound",
        "action": "EntityResolution:GetIdMappingWorkflow",
        "resource_mappings": {}
      }
    ],
    "get-match-id": [
      {
        "action": "entityresolution:GetMatchId",
        "resource_mappings": {
          "WorkflowName": {
            "template": "${workflowName}"
          }
        }
      }
    ],
    "get-matching-job": [
      {
        "action": "entityresolution:GetMatchingJob",
        "resource_mappings": {
          "WorkflowName": {
            "template": "${workflowName}"
          }
        }
      }
    ],
    "get-matching-workflow": [
      {
        "action": "entityresolution:GetMatchingWorkflow",
        "resource_mappings": {
          "WorkflowName": {
            "template": "${workflowName}"
          }
        }
      }
    ],
    "get-provider-service": [
      {
        "note": "NotFound",
        "action": "EntityResolution:GetProviderService",
        "resource_mappings": {}
      }
    ],
    "get-schema-mapping": [
      {
        "action": "entityresolution:GetSchemaMapping",
        "resource_mappings": {
          "SchemaName": {
            "template": "${schemaName}"
          }
        }
      }
    ],
    "list-id-mapping-jobs": [
      {
        "note": "NotFound",
        "action": "EntityResolution:ListIdMappingJobs",
        "resource_mappings": {}
      }
    ],
    "list-id-mapping-workflows": [
      {
        "note": "NotFound",
        "action": "EntityResolution:ListIdMappingWorkflows",
        "resource_mappings": {}
      }
    ],
    "list-matching-jobs": [
      {
        "action": "entityresolution:ListMatchingJobs",
        "resource_mappings": {
          "WorkflowName": {
            "template": "${workflowName}"
          }
        }
      }
    ],
    "list-matching-workflows": [
      {
        "action": "entityresolution:ListMatchingWorkflows",
        "resource_mappings": {}
      }
    ],
    "list-provider-services": [
      {
        "note": "NotFound",
        "action": "EntityResolution:ListProviderServices",
        "resource_mappings": {}
      }
    ],
    "list-schema-mappings": [
      {
        "action": "entityresolution:ListSchemaMappings",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "entityresolution:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "start-id-mapping-job": [
      {
        "note": "NotFound",
        "action": "EntityResolution:StartIdMappingJob",
        "resource_mappings": {}
      }
    ],
    "start-matching-job": [
      {
        "action": "entityresolution:StartMatchingJob",
        "resource_mappings": {
          "WorkflowName": {
            "template": "${workflowName}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "entityresolution:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "entityresolution:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-id-mapping-workflow": [
      {
        "note": "NotFound",
        "action": "EntityResolution:UpdateIdMappingWorkflow",
        "resource_mappings": {}
      }
    ],
    "update-matching-workflow": [
      {
        "action": "entityresolution:UpdateMatchingWorkflow",
        "resource_mappings": {
          "WorkflowName": {
            "template": "${workflowName}"
          }
        }
      }
    ],
    "update-schema-mapping": [
      {
        "note": "NotFound",
        "action": "EntityResolution:UpdateSchemaMapping",
        "resource_mappings": {}
      }
    ]
  },
  "es": {
    "accept-inbound-cross-cluster-search-connection": [
      {
        "action": "es:AcceptInboundCrossClusterSearchConnection",
        "resource_mappings": {}
      }
    ],
    "add-tags": [
      {
        "action": "es:AddTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "domain": "%%iftemplatematch%${ARN}%%"
        }
      }
    ],
    "associate-package": [
      {
        "action": "es:AssociatePackage",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "authorize-vpc-endpoint-access": [
      {
        "action": "es:AuthorizeVpcEndpointAccess",
        "resource_mappings": {}
      }
    ],
    "cancel-elasticsearch-service-software-update": [
      {
        "action": "es:CancelElasticsearchServiceSoftwareUpdate",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "create-elasticsearch-domain": [
      {
        "action": "es:CreateElasticsearchDomain",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${CognitoOptions.RoleArn}%${AdvancedSecurityOptions.SAMLOptions.MasterBackendRole}%%"
        }
      }
    ],
    "create-outbound-cross-cluster-search-connection": [
      {
        "action": "es:CreateOutboundCrossClusterSearchConnection",
        "resource_mappings": {
          "DomainName": {
            "template": "%%many%${SourceDomainInfo.DomainName}%${DestinationDomainInfo.DomainName}%%"
          }
        }
      }
    ],
    "create-package": [
      {
        "action": "es:CreatePackage",
        "resource_mappings": {}
      }
    ],
    "create-vpc-endpoint": [
      {
        "action": "es:CreateVpcEndpoint",
        "resource_mappings": {}
      }
    ],
    "delete-elasticsearch-domain": [
      {
        "action": "es:DeleteElasticsearchDomain",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "delete-elasticsearch-service-role": [
      {
        "action": "es:DeleteElasticsearchServiceRole",
        "resource_mappings": {}
      }
    ],
    "delete-inbound-cross-cluster-search-connection": [
      {
        "action": "es:DeleteInboundCrossClusterSearchConnection",
        "resource_mappings": {}
      }
    ],
    "delete-outbound-cross-cluster-search-connection": [
      {
        "action": "es:DeleteOutboundCrossClusterSearchConnection",
        "resource_mappings": {}
      }
    ],
    "delete-package": [
      {
        "action": "es:DeletePackage",
        "resource_mappings": {}
      }
    ],
    "delete-vpc-endpoint": [
      {
        "action": "es:DeleteVpcEndpoint",
        "resource_mappings": {}
      }
    ],
    "describe-domain-auto-tunes": [
      {
        "action": "es:DescribeDomainAutoTunes",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "describe-domain-change-progress": [
      {
        "action": "es:DescribeDomainChangeProgress",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "describe-elasticsearch-domain": [
      {
        "action": "es:DescribeElasticsearchDomain",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "describe-elasticsearch-domain-config": [
      {
        "action": "es:DescribeElasticsearchDomainConfig",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "describe-elasticsearch-domains": [
      {
        "action": "es:DescribeElasticsearchDomains",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainNames[]}"
          }
        }
      }
    ],
    "describe-elasticsearch-instance-type-limits": [
      {
        "action": "es:DescribeElasticsearchInstanceTypeLimits",
        "resource_mappings": {}
      }
    ],
    "describe-inbound-cross-cluster-search-connections": [
      {
        "action": "es:DescribeInboundCrossClusterSearchConnections",
        "resource_mappings": {}
      }
    ],
    "describe-outbound-cross-cluster-search-connections": [
      {
        "action": "es:DescribeOutboundCrossClusterSearchConnections",
        "resource_mappings": {}
      }
    ],
    "describe-packages": [
      {
        "action": "es:DescribePackages",
        "resource_mappings": {}
      }
    ],
    "describe-reserved-elasticsearch-instance-offerings": [
      {
        "action": "es:DescribeReservedElasticsearchInstanceOfferings",
        "resource_mappings": {}
      }
    ],
    "describe-reserved-elasticsearch-instances": [
      {
        "action": "es:DescribeReservedElasticsearchInstances",
        "resource_mappings": {}
      }
    ],
    "describe-vpc-endpoints": [
      {
        "action": "es:DescribeVpcEndpoints",
        "resource_mappings": {}
      }
    ],
    "dissociate-package": [
      {
        "action": "es:DissociatePackage",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "get-compatible-elasticsearch-versions": [
      {
        "action": "es:GetCompatibleElasticsearchVersions",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "get-package-version-history": [
      {
        "action": "es:GetPackageVersionHistory",
        "resource_mappings": {}
      }
    ],
    "get-upgrade-history": [
      {
        "action": "es:GetUpgradeHistory",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "get-upgrade-status": [
      {
        "action": "es:GetUpgradeStatus",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "list-domain-names": [
      {
        "action": "es:ListDomainNames",
        "resource_mappings": {}
      }
    ],
    "list-domains-for-package": [
      {
        "action": "es:ListDomainsForPackage",
        "resource_mappings": {}
      }
    ],
    "list-elasticsearch-instance-types": [
      {
        "action": "es:ListElasticsearchInstanceTypes",
        "resource_mappings": {}
      }
    ],
    "list-elasticsearch-versions": [
      {
        "action": "es:ListElasticsearchVersions",
        "resource_mappings": {}
      }
    ],
    "list-packages-for-domain": [
      {
        "action": "es:ListPackagesForDomain",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "list-tags": [
      {
        "action": "es:ListTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "domain": "%%iftemplatematch%${ARN}%%"
        }
      }
    ],
    "list-vpc-endpoint-access": [
      {
        "action": "es:ListVpcEndpointAccess",
        "resource_mappings": {}
      }
    ],
    "list-vpc-endpoints": [
      {
        "action": "es:ListVpcEndpoints",
        "resource_mappings": {}
      }
    ],
    "list-vpc-endpoints-for-domain": [
      {
        "action": "es:ListVpcEndpointsForDomain",
        "resource_mappings": {}
      }
    ],
    "purchase-reserved-elasticsearch-instance-offering": [
      {
        "action": "es:PurchaseReservedElasticsearchInstanceOffering",
        "resource_mappings": {}
      }
    ],
    "reject-inbound-cross-cluster-search-connection": [
      {
        "action": "es:RejectInboundCrossClusterSearchConnection",
        "resource_mappings": {}
      }
    ],
    "remove-tags": [
      {
        "action": "es:RemoveTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "domain": "%%iftemplatematch%${ARN}%%"
        }
      }
    ],
    "revoke-vpc-endpoint-access": [
      {
        "action": "es:RevokeVpcEndpointAccess",
        "resource_mappings": {}
      }
    ],
    "start-elasticsearch-service-software-update": [
      {
        "action": "es:StartElasticsearchServiceSoftwareUpdate",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "update-elasticsearch-domain-config": [
      {
        "action": "es:UpdateElasticsearchDomainConfig",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${CognitoOptions.RoleArn}%${AdvancedSecurityOptions.SAMLOptions.MasterBackendRole}%%"
        }
      }
    ],
    "update-package": [
      {
        "action": "es:UpdatePackage",
        "resource_mappings": {}
      }
    ],
    "update-vpc-endpoint": [
      {
        "action": "es:UpdateVpcEndpoint",
        "resource_mappings": {}
      }
    ],
    "upgrade-elasticsearch-domain": [
      {
        "action": "es:UpgradeElasticsearchDomain",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ]
  },
  "events": {
    "activate-event-source": [
      {
        "action": "events:ActivateEventSource",
        "resource_mappings": {
          "EventSourceName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "cancel-replay": [
      {
        "action": "events:CancelReplay",
        "resource_mappings": {
          "ReplayName": {
            "template": "${ReplayName}"
          }
        }
      }
    ],
    "create-api-destination": [
      {
        "action": "events:CreateApiDestination",
        "resource_mappings": {
          "ApiDestinationName": {
            "template": "${Name}"
          }
        },
        "resourcearn_mappings": {
          "connection": "${ConnectionArn}"
        }
      }
    ],
    "create-archive": [
      {
        "action": "events:CreateArchive",
        "resource_mappings": {
          "ArchiveName": {
            "template": "${ArchiveName}"
          }
        }
      }
    ],
    "create-connection": [
      {
        "action": "events:CreateConnection",
        "resource_mappings": {
          "ConnectionName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "create-endpoint": [
      {
        "action": "events:CreateEndpoint",
        "resource_mappings": {
          "EndpointName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "create-event-bus": [
      {
        "action": "events:CreateEventBus",
        "resource_mappings": {
          "EventBusName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "create-partner-event-source": [
      {
        "action": "events:CreatePartnerEventSource",
        "resource_mappings": {
          "EventSourceName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "deactivate-event-source": [
      {
        "action": "events:DeactivateEventSource",
        "resource_mappings": {
          "EventSourceName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "deauthorize-connection": [
      {
        "action": "events:DeauthorizeConnection",
        "resource_mappings": {
          "ConnectionName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-api-destination": [
      {
        "action": "events:DeleteApiDestination",
        "resource_mappings": {
          "ApiDestinationName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-archive": [
      {
        "action": "events:DeleteArchive",
        "resource_mappings": {
          "ArchiveName": {
            "template": "${ArchiveName}"
          }
        }
      }
    ],
    "delete-connection": [
      {
        "action": "events:DeleteConnection",
        "resource_mappings": {
          "ConnectionName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-endpoint": [
      {
        "action": "events:DeleteEndpoint",
        "resource_mappings": {
          "EndpointName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-event-bus": [
      {
        "action": "events:DeleteEventBus",
        "resource_mappings": {
          "EventBusName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-partner-event-source": [
      {
        "action": "events:DeletePartnerEventSource",
        "resource_mappings": {
          "EventSourceName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-rule": [
      {
        "action": "events:DeleteRule",
        "arn_override": {
          "template": "%%iftruthy%${EventBusName}%arn:${Partition}:events:${Region}:${Account}:rule/${EventBusName}/${Name}%arn:${Partition}:events:${Region}:${Account}:rule/${Name}%%"
        }
      }
    ],
    "describe-api-destination": [
      {
        "action": "events:DescribeApiDestination",
        "resource_mappings": {
          "ApiDestinationName": {
            "template": "${Name}"
          },
          "ConnectionName": {
            "template": "*"
          }
        }
      }
    ],
    "describe-archive": [
      {
        "action": "events:DescribeArchive",
        "resource_mappings": {
          "ArchiveName": {
            "template": "${ArchiveName}"
          }
        }
      }
    ],
    "describe-connection": [
      {
        "action": "events:DescribeConnection",
        "resource_mappings": {
          "ConnectionName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "describe-endpoint": [
      {
        "action": "events:DescribeEndpoint",
        "resource_mappings": {
          "EndpointName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "describe-event-bus": [
      {
        "action": "events:DescribeEventBus",
        "resource_mappings": {
          "EventBusName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "describe-event-source": [
      {
        "action": "events:DescribeEventSource",
        "resource_mappings": {
          "EventSourceName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "describe-partner-event-source": [
      {
        "action": "events:DescribePartnerEventSource",
        "resource_mappings": {
          "EventSourceName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "describe-replay": [
      {
        "action": "events:DescribeReplay",
        "resource_mappings": {
          "ReplayName": {
            "template": "${ReplayName}"
          }
        }
      }
    ],
    "describe-rule": [
      {
        "action": "events:DescribeRule",
        "arn_override": {
          "template": "%%iftruthy%${EventBusName}%arn:${Partition}:events:${Region}:${Account}:rule/${EventBusName}/${Name}%arn:${Partition}:events:${Region}:${Account}:rule/${Name}%%"
        }
      }
    ],
    "disable-rule": [
      {
        "action": "events:DisableRule",
        "arn_override": {
          "template": "%%iftruthy%${EventBusName}%arn:${Partition}:events:${Region}:${Account}:rule/${EventBusName}/${Name}%arn:${Partition}:events:${Region}:${Account}:rule/${Name}%%"
        }
      }
    ],
    "enable-rule": [
      {
        "action": "events:EnableRule",
        "arn_override": {
          "template": "%%iftruthy%${EventBusName}%arn:${Partition}:events:${Region}:${Account}:rule/${EventBusName}/${Name}%arn:${Partition}:events:${Region}:${Account}:rule/${Name}%%"
        }
      }
    ],
    "list-api-destinations": [
      {
        "action": "events:ListApiDestinations",
        "resource_mappings": {}
      }
    ],
    "list-archives": [
      {
        "action": "events:ListArchives",
        "resource_mappings": {}
      }
    ],
    "list-connections": [
      {
        "action": "events:ListConnections",
        "resource_mappings": {}
      }
    ],
    "list-endpoints": [
      {
        "action": "events:ListEndpoints",
        "resource_mappings": {}
      }
    ],
    "list-event-buses": [
      {
        "action": "events:ListEventBuses",
        "resource_mappings": {}
      }
    ],
    "list-event-sources": [
      {
        "action": "events:ListEventSources",
        "resource_mappings": {}
      }
    ],
    "list-partner-event-source-accounts": [
      {
        "action": "events:ListPartnerEventSourceAccounts",
        "resource_mappings": {
          "EventSourceName": {
            "template": "${EventSourceName}"
          }
        }
      }
    ],
    "list-partner-event-sources": [
      {
        "action": "events:ListPartnerEventSources",
        "resource_mappings": {}
      }
    ],
    "list-replays": [
      {
        "action": "events:ListReplays",
        "resource_mappings": {}
      }
    ],
    "list-rule-names-by-target": [
      {
        "action": "events:ListRuleNamesByTarget",
        "resource_mappings": {}
      }
    ],
    "list-rules": [
      {
        "action": "events:ListRules",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "events:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "event-bus": "%%iftemplatematch%${ResourceARN}%%",
          "rule": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "list-targets-by-rule": [
      {
        "action": "events:ListTargetsByRule",
        "arn_override": {
          "template": "%%iftruthy%${EventBusName}%arn:${Partition}:events:${Region}:${Account}:rule/${EventBusName}/${Rule}%arn:${Partition}:events:${Region}:${Account}:rule/${Rule}%%"
        }
      }
    ],
    "put-events": [
      {
        "action": "events:PutEvents",
        "resource_mappings": {
          "EventBusName": {
            "template": "%%iftruthy%${Entries[].EventBusName}%${Entries[].EventBusName}%default%%"
          }
        }
      }
    ],
    "put-partner-events": [
      {
        "action": "events:PutPartnerEvents",
        "resource_mappings": {}
      }
    ],
    "put-permission": [
      {
        "action": "events:PutPermission",
        "resource_mappings": {}
      }
    ],
    "put-rule": [
      {
        "action": "events:PutRule",
        "arn_override": {
          "template": "%%iftruthy%${EventBusName}%arn:${Partition}:events:${Region}:${Account}:rule/${EventBusName}/${Name}%arn:${Partition}:events:${Region}:${Account}:rule/${Name}%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "put-targets": [
      {
        "action": "events:PutTargets",
        "arn_override": {
          "template": "%%iftruthy%${EventBusName}%arn:${Partition}:events:${Region}:${Account}:rule/${EventBusName}/${Rule}%arn:${Partition}:events:${Region}:${Account}:rule/${Rule}%%"
        }
      }
    ],
    "remove-permission": [
      {
        "action": "events:RemovePermission",
        "resource_mappings": {}
      }
    ],
    "remove-targets": [
      {
        "action": "events:RemoveTargets",
        "arn_override": {
          "template": "%%iftruthy%${EventBusName}%arn:${Partition}:events:${Region}:${Account}:rule/${EventBusName}/${Rule}%arn:${Partition}:events:${Region}:${Account}:rule/${Rule}%%"
        }
      }
    ],
    "start-replay": [
      {
        "action": "events:StartReplay",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "archive": "%%iftemplatematch%${EventSourceArn}%%"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "events:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "event-bus": "%%iftemplatematch%${ResourceARN}%%",
          "rule": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "test-event-pattern": [
      {
        "action": "events:TestEventPattern",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "events:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "event-bus": "%%iftemplatematch%${ResourceARN}%%",
          "rule": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "update-api-destination": [
      {
        "action": "events:UpdateApiDestination",
        "resource_mappings": {
          "ApiDestinationName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "update-archive": [
      {
        "action": "events:UpdateArchive",
        "resource_mappings": {
          "ArchiveName": {
            "template": "${ArchiveName}"
          }
        }
      }
    ],
    "update-connection": [
      {
        "action": "events:UpdateConnection",
        "resource_mappings": {
          "ConnectionName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "update-endpoint": [
      {
        "action": "events:UpdateEndpoint",
        "resource_mappings": {
          "EndpointName": {
            "template": "${Name}"
          }
        }
      }
    ]
  },
  "evidently": {
    "batch-evaluate-feature": [
      {
        "action": "evidently:BatchEvaluateFeature",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Feature": "%%iftemplatematch%${project}%%"
        }
      }
    ],
    "create-experiment": [
      {
        "action": "evidently:CreateExperiment",
        "resource_mappings": {}
      }
    ],
    "create-feature": [
      {
        "action": "evidently:CreateFeature",
        "resource_mappings": {}
      }
    ],
    "create-launch": [
      {
        "action": "evidently:CreateLaunch",
        "resource_mappings": {}
      }
    ],
    "create-project": [
      {
        "action": "evidently:CreateProject",
        "resource_mappings": {}
      }
    ],
    "create-segment": [
      {
        "action": "evidently:CreateSegment",
        "resource_mappings": {}
      }
    ],
    "delete-experiment": [
      {
        "action": "evidently:DeleteExperiment",
        "resource_mappings": {
          "OwnerAccountId": {
            "template": "${Account}"
          },
          "ProjectName": {
            "template": "${project}"
          },
          "ExperimentName": {
            "template": "${experiment}"
          }
        }
      }
    ],
    "delete-feature": [
      {
        "action": "evidently:DeleteFeature",
        "resource_mappings": {
          "OwnerAccountId": {
            "template": "${Account}"
          },
          "ProjectName": {
            "template": "${project}"
          },
          "FeatureName": {
            "template": "${feature}"
          }
        }
      }
    ],
    "delete-launch": [
      {
        "action": "evidently:DeleteLaunch",
        "resource_mappings": {
          "OwnerAccountId": {
            "template": "${Account}"
          },
          "ProjectName": {
            "template": "${project}"
          },
          "LaunchName": {
            "template": "${launch}"
          }
        }
      }
    ],
    "delete-project": [
      {
        "action": "evidently:DeleteProject",
        "resource_mappings": {
          "OwnerAccountId": {
            "template": "${Account}"
          },
          "ProjectName": {
            "template": "${project}"
          }
        }
      }
    ],
    "delete-segment": [
      {
        "action": "evidently:DeleteSegment",
        "resource_mappings": {
          "SegmentName": {
            "template": "${segment}"
          }
        }
      }
    ],
    "evaluate-feature": [
      {
        "action": "evidently:EvaluateFeature",
        "resource_mappings": {
          "OwnerAccountId": {
            "template": "${Account}"
          },
          "ProjectName": {
            "template": "${project}"
          },
          "FeatureName": {
            "template": "${feature}"
          }
        }
      }
    ],
    "get-experiment": [
      {
        "action": "evidently:GetExperiment",
        "resource_mappings": {
          "OwnerAccountId": {
            "template": "${Account}"
          },
          "ProjectName": {
            "template": "${project}"
          },
          "ExperimentName": {
            "template": "${experiment}"
          }
        }
      }
    ],
    "get-experiment-results": [
      {
        "action": "evidently:GetExperimentResults",
        "resource_mappings": {
          "OwnerAccountId": {
            "template": "${Account}"
          },
          "ProjectName": {
            "template": "${project}"
          },
          "ExperimentName": {
            "template": "${experiment}"
          }
        }
      }
    ],
    "get-feature": [
      {
        "action": "evidently:GetFeature",
        "resource_mappings": {
          "OwnerAccountId": {
            "template": "${Account}"
          },
          "ProjectName": {
            "template": "${project}"
          },
          "FeatureName": {
            "template": "${feature}"
          }
        }
      }
    ],
    "get-launch": [
      {
        "action": "evidently:GetLaunch",
        "resource_mappings": {
          "OwnerAccountId": {
            "template": "${Account}"
          },
          "ProjectName": {
            "template": "${project}"
          },
          "LaunchName": {
            "template": "${launch}"
          }
        }
      }
    ],
    "get-project": [
      {
        "action": "evidently:GetProject",
        "resource_mappings": {
          "OwnerAccountId": {
            "template": "${Account}"
          },
          "ProjectName": {
            "template": "${project}"
          }
        }
      }
    ],
    "get-segment": [
      {
        "action": "evidently:GetSegment",
        "resource_mappings": {
          "SegmentName": {
            "template": "${segment}"
          }
        }
      }
    ],
    "list-experiments": [
      {
        "action": "evidently:ListExperiments",
        "resource_mappings": {}
      }
    ],
    "list-features": [
      {
        "action": "evidently:ListFeatures",
        "resource_mappings": {}
      }
    ],
    "list-launches": [
      {
        "action": "evidently:ListLaunches",
        "resource_mappings": {}
      }
    ],
    "list-projects": [
      {
        "action": "evidently:ListProjects",
        "resource_mappings": {}
      }
    ],
    "list-segment-references": [
      {
        "action": "evidently:ListSegmentReferences",
        "resource_mappings": {}
      }
    ],
    "list-segments": [
      {
        "action": "evidently:ListSegments",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "evidently:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "put-project-events": [
      {
        "action": "evidently:PutProjectEvents",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Project": "%%iftemplatematch%${project}%%"
        }
      }
    ],
    "start-experiment": [
      {
        "action": "evidently:StartExperiment",
        "resource_mappings": {
          "OwnerAccountId": {
            "template": "${Account}"
          },
          "ProjectName": {
            "template": "${project}"
          },
          "ExperimentName": {
            "template": "${experiment}"
          }
        }
      }
    ],
    "start-launch": [
      {
        "action": "evidently:StartLaunch",
        "resource_mappings": {
          "OwnerAccountId": {
            "template": "${Account}"
          },
          "ProjectName": {
            "template": "${project}"
          },
          "LaunchName": {
            "template": "${launch}"
          }
        }
      }
    ],
    "stop-experiment": [
      {
        "action": "evidently:StopExperiment",
        "resource_mappings": {
          "OwnerAccountId": {
            "template": "${Account}"
          },
          "ProjectName": {
            "template": "${project}"
          },
          "ExperimentName": {
            "template": "${experiment}"
          }
        }
      }
    ],
    "stop-launch": [
      {
        "action": "evidently:StopLaunch",
        "resource_mappings": {
          "OwnerAccountId": {
            "template": "${Account}"
          },
          "ProjectName": {
            "template": "${project}"
          },
          "LaunchName": {
            "template": "${launch}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "evidently:TagResource",
        "resource_mappings": {}
      }
    ],
    "test-segment-pattern": [
      {
        "action": "evidently:TestSegmentPattern",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "evidently:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-experiment": [
      {
        "action": "evidently:UpdateExperiment",
        "resource_mappings": {
          "OwnerAccountId": {
            "template": "${Account}"
          },
          "ProjectName": {
            "template": "${project}"
          },
          "ExperimentName": {
            "template": "${experiment}"
          }
        }
      }
    ],
    "update-feature": [
      {
        "action": "evidently:UpdateFeature",
        "resource_mappings": {
          "OwnerAccountId": {
            "template": "${Account}"
          },
          "ProjectName": {
            "template": "${project}"
          },
          "FeatureName": {
            "template": "${feature}"
          }
        }
      }
    ],
    "update-launch": [
      {
        "action": "evidently:UpdateLaunch",
        "resource_mappings": {
          "OwnerAccountId": {
            "template": "${Account}"
          },
          "ProjectName": {
            "template": "${project}"
          },
          "LaunchName": {
            "template": "${launch}"
          }
        }
      }
    ],
    "update-project": [
      {
        "action": "evidently:UpdateProject",
        "resource_mappings": {
          "OwnerAccountId": {
            "template": "${Account}"
          },
          "ProjectName": {
            "template": "${project}"
          }
        }
      }
    ],
    "update-project-data-delivery": [
      {
        "action": "evidently:UpdateProjectDataDelivery",
        "resource_mappings": {
          "OwnerAccountId": {
            "template": "${Account}"
          },
          "ProjectName": {
            "template": "${project}"
          }
        }
      }
    ]
  },
  "finspace": {
    "create-environment": [
      {
        "action": "finspace:CreateEnvironment",
        "resource_mappings": {
          "environmentId": {
            "template": "*"
          }
        }
      }
    ],
    "create-kx-changeset": [
      {
        "note": "NotFound",
        "action": "finspace:CreateKxChangeset",
        "resource_mappings": {}
      }
    ],
    "create-kx-cluster": [
      {
        "note": "NotFound",
        "action": "finspace:CreateKxCluster",
        "resource_mappings": {}
      }
    ],
    "create-kx-database": [
      {
        "note": "NotFound",
        "action": "finspace:CreateKxDatabase",
        "resource_mappings": {}
      }
    ],
    "create-kx-environment": [
      {
        "action": "finspace:CreateKxEnvironment",
        "resource_mappings": {}
      }
    ],
    "create-kx-user": [
      {
        "action": "finspace:CreateKxUser",
        "resource_mappings": {
          "EnvironmentId": {
            "template": "${environmentId}"
          }
        }
      }
    ],
    "delete-environment": [
      {
        "action": "finspace:DeleteEnvironment",
        "resource_mappings": {
          "environmentId": {
            "template": "${environmentId}"
          }
        }
      }
    ],
    "delete-kx-cluster": [
      {
        "note": "NotFound",
        "action": "finspace:DeleteKxCluster",
        "resource_mappings": {}
      }
    ],
    "delete-kx-database": [
      {
        "note": "NotFound",
        "action": "finspace:DeleteKxDatabase",
        "resource_mappings": {}
      }
    ],
    "delete-kx-environment": [
      {
        "action": "finspace:DeleteKxEnvironment",
        "resource_mappings": {
          "EnvironmentId": {
            "template": "${environmentId}"
          }
        }
      }
    ],
    "delete-kx-user": [
      {
        "action": "finspace:DeleteKxUser",
        "resource_mappings": {
          "EnvironmentId": {
            "template": "${environmentId}"
          },
          "UserName": {
            "template": "${userName}"
          }
        }
      }
    ],
    "get-environment": [
      {
        "action": "finspace:GetEnvironment",
        "resource_mappings": {
          "environmentId": {
            "template": "${environmentId}"
          }
        }
      }
    ],
    "get-kx-changeset": [
      {
        "note": "NotFound",
        "action": "finspace:GetKxChangeset",
        "resource_mappings": {}
      }
    ],
    "get-kx-cluster": [
      {
        "note": "NotFound",
        "action": "finspace:GetKxCluster",
        "resource_mappings": {}
      }
    ],
    "get-kx-connection-string": [
      {
        "note": "NotFound",
        "action": "finspace:GetKxConnectionString",
        "resource_mappings": {}
      }
    ],
    "get-kx-database": [
      {
        "note": "NotFound",
        "action": "finspace:GetKxDatabase",
        "resource_mappings": {}
      }
    ],
    "get-kx-environment": [
      {
        "action": "finspace:GetKxEnvironment",
        "resource_mappings": {
          "EnvironmentId": {
            "template": "${environmentId}"
          }
        }
      }
    ],
    "get-kx-user": [
      {
        "action": "finspace:GetKxUser",
        "resource_mappings": {
          "EnvironmentId": {
            "template": "${environmentId}"
          },
          "UserName": {
            "template": "${userName}"
          }
        }
      }
    ],
    "list-environments": [
      {
        "action": "finspace:ListEnvironments",
        "resource_mappings": {
          "environmentId": {
            "template": "*"
          }
        }
      }
    ],
    "list-kx-changesets": [
      {
        "note": "NotFound",
        "action": "finspace:ListKxChangesets",
        "resource_mappings": {}
      }
    ],
    "list-kx-cluster-nodes": [
      {
        "note": "NotFound",
        "action": "finspace:ListKxClusterNodes",
        "resource_mappings": {}
      }
    ],
    "list-kx-clusters": [
      {
        "action": "finspace:ListKxClusters",
        "resource_mappings": {
          "EnvironmentId": {
            "template": "${environmentId}"
          }
        }
      }
    ],
    "list-kx-databases": [
      {
        "action": "finspace:ListKxDatabases",
        "resource_mappings": {
          "EnvironmentId": {
            "template": "${environmentId}"
          }
        }
      }
    ],
    "list-kx-environments": [
      {
        "action": "finspace:ListKxEnvironments",
        "resource_mappings": {}
      }
    ],
    "list-kx-users": [
      {
        "action": "finspace:ListKxUsers",
        "resource_mappings": {
          "EnvironmentId": {
            "template": "${environmentId}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "finspace:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "environment": "${resourceArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "finspace:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "environment": "${resourceArn}"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "finspace:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "environment": "${resourceArn}"
        }
      }
    ],
    "update-environment": [
      {
        "action": "finspace:UpdateEnvironment",
        "resource_mappings": {
          "environmentId": {
            "template": "${environmentId}"
          }
        }
      }
    ],
    "update-kx-cluster-databases": [
      {
        "note": "NotFound",
        "action": "finspace:UpdateKxClusterDatabases",
        "resource_mappings": {}
      }
    ],
    "update-kx-database": [
      {
        "note": "NotFound",
        "action": "finspace:UpdateKxDatabase",
        "resource_mappings": {}
      }
    ],
    "update-kx-environment": [
      {
        "action": "finspace:UpdateKxEnvironment",
        "resource_mappings": {
          "EnvironmentId": {
            "template": "${environmentId}"
          }
        }
      }
    ],
    "update-kx-environment-network": [
      {
        "action": "finspace:UpdateKxEnvironmentNetwork",
        "resource_mappings": {
          "EnvironmentId": {
            "template": "${environmentId}"
          }
        }
      }
    ],
    "update-kx-user": [
      {
        "action": "finspace:UpdateKxUser",
        "resource_mappings": {
          "EnvironmentId": {
            "template": "${environmentId}"
          },
          "UserName": {
            "template": "${userName}"
          }
        }
      }
    ]
  },
  "finspace-data": {
    "associate-user-to-permission-group": [
      {
        "action": "finspace-api:AssociateUserToPermissionGroupV2",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:finspace-api:${Region}:${Account}:/permission-group/${permissionGroupId}/users/${userId}"
        }
      }
    ],
    "create-changeset": [
      {
        "action": "finspace-api:CreateChangeset",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "create-data-view": [
      {
        "note": "NotFound",
        "action": "finspace data:CreateDataView",
        "resource_mappings": {}
      }
    ],
    "create-dataset": [
      {
        "action": "finspace-api:CreateDatasetV2",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:finspace-api:${Region}:${Account}:/datasetsv2"
        }
      }
    ],
    "create-permission-group": [
      {
        "action": "finspace-api:CreatePermissionGroupV2",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:finspace-api:${Region}:${Account}:/permission-group"
        }
      }
    ],
    "create-user": [
      {
        "action": "finspace-api:CreateUserV2",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:finspace-api:${Region}:${Account}:/user"
        }
      }
    ],
    "delete-dataset": [
      {
        "action": "finspace-api:DeleteDatasetV2",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:finspace-api:${Region}:${Account}:/datasetsv2/${datasetId}"
        }
      }
    ],
    "delete-permission-group": [
      {
        "action": "finspace-api:DeletePermissionGroupV2",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:finspace-api:${Region}:${Account}:/permission-group/${permissionGroupId}"
        }
      }
    ],
    "disable-user": [
      {
        "action": "finspace-api:DisableUser",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:finspace-api:${Region}:${Account}:/user/${userId}/disable"
        }
      }
    ],
    "disassociate-user-from-permission-group": [
      {
        "action": "finspace-api:DisassociateUserFromPermissionGroupV2",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:finspace-api:${Region}:${Account}:/permission-group/${permissionGroupId}/users/${userId}"
        }
      }
    ],
    "enable-user": [
      {
        "action": "finspace-api:EnableUser",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:finspace-api:${Region}:${Account}:/user/${userId}/enable"
        }
      }
    ],
    "get-changeset": [
      {
        "action": "finspace-api:GetChangesetV2",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:finspace-api:${Region}:${Account}:/datasets/${datasetId}/changesetsv2/${changesetId}"
        }
      }
    ],
    "get-data-view": [
      {
        "action": "finspace-api:GetDataViewV2",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:finspace-api:${Region}:${Account}:/datasets/${datasetId}/dataviewsv2/${dataViewId}"
        }
      }
    ],
    "get-dataset": [
      {
        "action": "finspace-api:GetDatasetV2",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:finspace-api:${Region}:${Account}:/datasetsv2/${datasetId}"
        }
      }
    ],
    "get-external-data-view-access-details": [
      {
        "action": "finspace-api:GetExternalDataViewAccessDetails",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:finspace-api:${Region}:${Account}:/datasets/${datasetId}/dataviewsv2/${dataViewId}/external-access-details"
        }
      }
    ],
    "get-permission-group": [
      {
        "action": "finspace-api:GetPermissionGroup",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:finspace-api:${Region}:${Account}:/permission-group/${permissionGroupId}"
        }
      }
    ],
    "get-programmatic-access-credentials": [
      {
        "action": "finspace-api:GetProgrammaticAccessCredentials",
        "resource_mappings": {}
      }
    ],
    "get-user": [
      {
        "action": "finspace-api:GetUser",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:finspace-api:${Region}:${Account}:/user/${userId}"
        }
      }
    ],
    "get-working-location": [
      {
        "action": "finspace-api:GetWorkingLocation",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:finspace-api:${Region}:${Account}:/workingLocationV1"
        }
      }
    ],
    "list-changesets": [
      {
        "action": "finspace-api:ListChangesetsV2",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:finspace-api:${Region}:${Account}:/datasets/${datasetId}/changesetsv2"
        }
      }
    ],
    "list-data-views": [
      {
        "action": "finspace-api:ListDataViewsV2",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:finspace-api:${Region}:${Account}:/datasets/${datasetId}/dataviewsv2"
        }
      }
    ],
    "list-datasets": [
      {
        "action": "finspace-api:ListDatasetsV2",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:finspace-api:${Region}:${Account}:/datasetsv2"
        }
      }
    ],
    "list-permission-groups": [
      {
        "action": "finspace-api:ListPermissionGroupsV2",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:finspace-api:${Region}:${Account}:/permission-group"
        }
      }
    ],
    "list-permission-groups-by-user": [
      {
        "action": "finspace-api:ListPermissionGroupsByUserV2",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:finspace-api:${Region}:${Account}:/user/${userId}/permission-groups"
        }
      }
    ],
    "list-users": [
      {
        "action": "finspace-api:ListUsersV2",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:finspace-api:${Region}:${Account}:/user"
        }
      }
    ],
    "list-users-by-permission-group": [
      {
        "action": "finspace-api:ListUsersByPermissionGroupV2",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:finspace-api:${Region}:${Account}:/permission-group/${permissionGroupId}/users"
        }
      }
    ],
    "reset-user-password": [
      {
        "action": "finspace-api:ResetUserPasswordV2",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:finspace-api:${Region}:${Account}:/user/${userId}/password"
        }
      }
    ],
    "update-changeset": [
      {
        "note": "NotFound",
        "action": "finspace data:UpdateChangeset",
        "resource_mappings": {}
      }
    ],
    "update-dataset": [
      {
        "action": "finspace-api:UpdateDatasetV2",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:finspace-api:${Region}:${Account}:/datasetsv2/${datasetId}"
        }
      }
    ],
    "update-permission-group": [
      {
        "action": "finspace-api:UpdatePermissionGroupV2",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:finspace-api:${Region}:${Account}:/permission-group/${permissionGroupId}"
        }
      }
    ],
    "update-user": [
      {
        "action": "finspace-api:UpdateUserV2",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:finspace-api:${Region}:${Account}:/user/${userId}"
        }
      }
    ]
  },
  "firehose": {
    "create-delivery-stream": [
      {
        "action": "firehose:CreateDeliveryStream",
        "resource_mappings": {
          "DeliveryStreamName": {
            "template": "${DeliveryStreamName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${KinesisStreamSourceConfiguration.RoleARN}%${S3DestinationConfiguration.RoleARN}%${ExtendedS3DestinationConfiguration.RoleARN}%${ExtendedS3DestinationConfiguration.S3BackupConfiguration.RoleARN}%${ExtendedS3DestinationConfiguration.DataFormatConversionConfiguration.SchemaConfiguration.RoleARN}%${RedshiftDestinationConfiguration.RoleARN}%${RedshiftDestinationConfiguration.S3Configuration.RoleARN}%${RedshiftDestinationConfiguration.S3BackupConfiguration.RoleARN}%${ElasticsearchDestinationConfiguration.RoleARN}%${ElasticsearchDestinationConfiguration.S3Configuration.RoleARN}%${ElasticsearchDestinationConfiguration.VpcConfiguration.RoleARN}%${SplunkDestinationConfiguration.S3Configuration.RoleARN}%%"
        }
      }
    ],
    "delete-delivery-stream": [
      {
        "action": "firehose:DeleteDeliveryStream",
        "resource_mappings": {
          "DeliveryStreamName": {
            "template": "${DeliveryStreamName}"
          }
        }
      }
    ],
    "describe-delivery-stream": [
      {
        "action": "firehose:DescribeDeliveryStream",
        "resource_mappings": {
          "DeliveryStreamName": {
            "template": "${DeliveryStreamName}"
          }
        }
      }
    ],
    "list-delivery-streams": [
      {
        "action": "firehose:ListDeliveryStreams",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-delivery-stream": [
      {
        "action": "firehose:ListTagsForDeliveryStream",
        "resource_mappings": {
          "DeliveryStreamName": {
            "template": "${DeliveryStreamName}"
          }
        }
      }
    ],
    "put-record": [
      {
        "action": "firehose:PutRecord",
        "resource_mappings": {
          "DeliveryStreamName": {
            "template": "${DeliveryStreamName}"
          }
        }
      }
    ],
    "put-record-batch": [
      {
        "action": "firehose:PutRecordBatch",
        "resource_mappings": {
          "DeliveryStreamName": {
            "template": "${DeliveryStreamName}"
          }
        }
      }
    ],
    "start-delivery-stream-encryption": [
      {
        "action": "firehose:StartDeliveryStreamEncryption",
        "resource_mappings": {
          "DeliveryStreamName": {
            "template": "${DeliveryStreamName}"
          }
        }
      }
    ],
    "stop-delivery-stream-encryption": [
      {
        "action": "firehose:StopDeliveryStreamEncryption",
        "resource_mappings": {
          "DeliveryStreamName": {
            "template": "${DeliveryStreamName}"
          }
        }
      }
    ],
    "tag-delivery-stream": [
      {
        "action": "firehose:TagDeliveryStream",
        "resource_mappings": {
          "DeliveryStreamName": {
            "template": "${DeliveryStreamName}"
          }
        }
      }
    ],
    "untag-delivery-stream": [
      {
        "action": "firehose:UntagDeliveryStream",
        "resource_mappings": {
          "DeliveryStreamName": {
            "template": "${DeliveryStreamName}"
          }
        }
      }
    ],
    "update-destination": [
      {
        "action": "firehose:UpdateDestination",
        "resource_mappings": {
          "DeliveryStreamName": {
            "template": "${DeliveryStreamName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${S3DestinationUpdate.RoleARN}%${ExtendedS3DestinationUpdate.RoleARN}%${ExtendedS3DestinationUpdate.S3BackupUpdate.RoleARN}%${ExtendedS3DestinationUpdate.DataFormatConversionConfiguration.SchemaConfiguration.RoleARN}%${RedshiftDestinationUpdate.RoleARN}%${RedshiftDestinationUpdate.S3Update.RoleARN}%${RedshiftDestinationUpdate.S3BackupUpdate.RoleARN}%${ElasticsearchDestinationUpdate.RoleARN}%${ElasticsearchDestinationUpdate.S3Update.RoleARN}%${SplunkDestinationUpdate.S3Update.RoleARN}%${HttpEndpointDestinationUpdate.RoleARN}%${HttpEndpointDestinationUpdate.S3Update.RoleARN}%%"
        }
      }
    ]
  },
  "fis": {
    "create-experiment-template": [
      {
        "action": "fis:CreateExperimentTemplate",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-experiment-template": [
      {
        "action": "fis:DeleteExperimentTemplate",
        "resource_mappings": {
          "Id": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-action": [
      {
        "action": "fis:GetAction",
        "resource_mappings": {
          "Id": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-experiment": [
      {
        "action": "fis:GetExperiment",
        "resource_mappings": {
          "Id": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-experiment-template": [
      {
        "action": "fis:GetExperimentTemplate",
        "resource_mappings": {
          "Id": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-target-resource-type": [
      {
        "action": "fis:GetTargetResourceType",
        "resource_mappings": {}
      }
    ],
    "list-actions": [
      {
        "action": "fis:ListActions",
        "resource_mappings": {}
      }
    ],
    "list-experiment-templates": [
      {
        "action": "fis:ListExperimentTemplates",
        "resource_mappings": {}
      }
    ],
    "list-experiments": [
      {
        "action": "fis:ListExperiments",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "fis:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "action": "%%iftemplatematch%${resourceArn}%%",
          "experiment": "%%iftemplatematch%${resourceArn}%%",
          "experiment-template": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "list-target-resource-types": [
      {
        "action": "fis:ListTargetResourceTypes",
        "resource_mappings": {}
      }
    ],
    "start-experiment": [
      {
        "action": "fis:StartExperiment",
        "resource_mappings": {
          "Id": {
            "template": "${experimentTemplateId}"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "stop-experiment": [
      {
        "action": "fis:StopExperiment",
        "resource_mappings": {
          "Id": {
            "template": "${id}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "fis:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "action": "%%iftemplatematch%${resourceArn}%%",
          "experiment": "%%iftemplatematch%${resourceArn}%%",
          "experiment-template": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "fis:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "action": "%%iftemplatematch%${resourceArn}%%",
          "experiment": "%%iftemplatematch%${resourceArn}%%",
          "experiment-template": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-experiment-template": [
      {
        "action": "fis:UpdateExperimentTemplate",
        "resource_mappings": {
          "Id": {
            "template": "${actions[].actionId}"
          }
        }
      }
    ]
  },
  "fms": {
    "associate-admin-account": [
      {
        "action": "fms:AssociateAdminAccount",
        "resource_mappings": {}
      }
    ],
    "associate-third-party-firewall": [
      {
        "action": "fms:AssociateThirdPartyFirewall",
        "resource_mappings": {}
      }
    ],
    "batch-associate-resource": [
      {
        "action": "fms:BatchAssociateResource",
        "resource_mappings": {
          "Id": {
            "template": "${ResourceSetIdentifier}"
          }
        }
      }
    ],
    "batch-disassociate-resource": [
      {
        "action": "fms:BatchDisassociateResource",
        "resource_mappings": {
          "Id": {
            "template": "${ResourceSetIdentifier}"
          }
        }
      }
    ],
    "delete-apps-list": [
      {
        "action": "fms:DeleteAppsList",
        "resource_mappings": {
          "Id": {
            "template": "${ListId}"
          }
        }
      }
    ],
    "delete-notification-channel": [
      {
        "action": "fms:DeleteNotificationChannel",
        "resource_mappings": {}
      }
    ],
    "delete-policy": [
      {
        "action": "fms:DeletePolicy",
        "resource_mappings": {
          "Id": {
            "template": "${PolicyId}"
          }
        }
      }
    ],
    "delete-protocols-list": [
      {
        "action": "fms:DeleteProtocolsList",
        "resource_mappings": {
          "Id": {
            "template": "${ListId}"
          }
        }
      }
    ],
    "delete-resource-set": [
      {
        "action": "fms:DeleteResourceSet",
        "resource_mappings": {
          "Id": {
            "template": "${Identifier}"
          }
        }
      }
    ],
    "disassociate-admin-account": [
      {
        "action": "fms:DisassociateAdminAccount",
        "resource_mappings": {}
      }
    ],
    "disassociate-third-party-firewall": [
      {
        "action": "fms:DisassociateThirdPartyFirewall",
        "resource_mappings": {}
      }
    ],
    "get-admin-account": [
      {
        "action": "fms:GetAdminAccount",
        "resource_mappings": {}
      }
    ],
    "get-admin-scope": [
      {
        "action": "fms:GetAdminScope",
        "resource_mappings": {}
      }
    ],
    "get-apps-list": [
      {
        "action": "fms:GetAppsList",
        "resource_mappings": {
          "Id": {
            "template": "${ListId}"
          }
        }
      }
    ],
    "get-compliance-detail": [
      {
        "action": "fms:GetComplianceDetail",
        "resource_mappings": {
          "Id": {
            "template": "${PolicyId}"
          }
        }
      }
    ],
    "get-notification-channel": [
      {
        "action": "fms:GetNotificationChannel",
        "resource_mappings": {}
      }
    ],
    "get-policy": [
      {
        "action": "fms:GetPolicy",
        "resource_mappings": {
          "Id": {
            "template": "${PolicyId}"
          }
        }
      }
    ],
    "get-protection-status": [
      {
        "action": "fms:GetProtectionStatus",
        "resource_mappings": {
          "Id": {
            "template": "${PolicyId}"
          }
        }
      }
    ],
    "get-protocols-list": [
      {
        "action": "fms:GetProtocolsList",
        "resource_mappings": {
          "Id": {
            "template": "${ListId}"
          }
        }
      }
    ],
    "get-resource-set": [
      {
        "action": "fms:GetResourceSet",
        "resource_mappings": {
          "Id": {
            "template": "${Identifier}"
          }
        }
      }
    ],
    "get-third-party-firewall-association-status": [
      {
        "action": "fms:GetThirdPartyFirewallAssociationStatus",
        "resource_mappings": {}
      }
    ],
    "get-violation-details": [
      {
        "action": "fms:GetViolationDetails",
        "resource_mappings": {
          "Id": {
            "template": "${PolicyId}"
          }
        }
      }
    ],
    "list-admin-accounts-for-organization": [
      {
        "action": "fms:ListAdminAccountsForOrganization",
        "resource_mappings": {}
      }
    ],
    "list-admins-managing-account": [
      {
        "action": "fms:ListAdminsManagingAccount",
        "resource_mappings": {}
      }
    ],
    "list-apps-lists": [
      {
        "action": "fms:ListAppsLists",
        "resource_mappings": {}
      }
    ],
    "list-compliance-status": [
      {
        "action": "fms:ListComplianceStatus",
        "resource_mappings": {
          "Id": {
            "template": "${PolicyId}"
          }
        }
      }
    ],
    "list-discovered-resources": [
      {
        "action": "fms:ListDiscoveredResources",
        "resource_mappings": {}
      }
    ],
    "list-member-accounts": [
      {
        "action": "fms:ListMemberAccounts",
        "resource_mappings": {}
      }
    ],
    "list-policies": [
      {
        "action": "fms:ListPolicies",
        "resource_mappings": {}
      }
    ],
    "list-protocols-lists": [
      {
        "action": "fms:ListProtocolsLists",
        "resource_mappings": {}
      }
    ],
    "list-resource-set-resources": [
      {
        "action": "fms:ListResourceSetResources",
        "resource_mappings": {
          "Id": {
            "template": "${Identifier}"
          }
        }
      }
    ],
    "list-resource-sets": [
      {
        "action": "fms:ListResourceSets",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "fms:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "policy": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "list-third-party-firewall-firewall-policies": [
      {
        "action": "fms:ListThirdPartyFirewallFirewallPolicies",
        "resource_mappings": {}
      }
    ],
    "put-admin-account": [
      {
        "action": "fms:PutAdminAccount",
        "resource_mappings": {}
      }
    ],
    "put-apps-list": [
      {
        "action": "fms:PutAppsList",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "put-notification-channel": [
      {
        "action": "fms:PutNotificationChannel",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${SnsRoleName}"
        }
      }
    ],
    "put-policy": [
      {
        "action": "fms:PutPolicy",
        "resource_mappings": {
          "Id": {
            "template": "${Policy.PolicyId}"
          }
        }
      }
    ],
    "put-protocols-list": [
      {
        "action": "fms:PutProtocolsList",
        "resource_mappings": {
          "Id": {
            "template": "${ProtocolsList.ListId}"
          }
        }
      }
    ],
    "put-resource-set": [
      {
        "action": "fms:PutResourceSet",
        "resource_mappings": {
          "Id": {
            "template": "${ResourceSet.Id}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "fms:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "policy": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "fms:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "policy": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ]
  },
  "forecast": {
    "create-auto-predictor": [
      {
        "action": "forecast:CreateAutoPredictor",
        "resource_mappings": {}
      }
    ],
    "create-dataset": [
      {
        "action": "forecast:CreateDataset",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${EncryptionConfig.RoleArn}"
        }
      }
    ],
    "create-dataset-group": [
      {
        "action": "forecast:CreateDatasetGroup",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-dataset-import-job": [
      {
        "action": "forecast:CreateDatasetImportJob",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${DataSource.S3Config.RoleArn}"
        }
      }
    ],
    "create-explainability": [
      {
        "action": "forecast:CreateExplainability",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "forecast": "${ResourceArn}"
        }
      }
    ],
    "create-explainability-export": [
      {
        "action": "forecast:CreateExplainabilityExport",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "explainability": "${ExplainabilityArn}"
        }
      }
    ],
    "create-forecast": [
      {
        "action": "forecast:CreateForecast",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "predictor": "${PredictorArn}"
        }
      }
    ],
    "create-forecast-export-job": [
      {
        "action": "forecast:CreateForecastExportJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "forecast": "${ForecastArn}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${DataSource.S3Config.RoleArn}"
        }
      }
    ],
    "create-monitor": [
      {
        "action": "forecast:CreateMonitor",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "predictor": "${ResourceArn}"
        }
      }
    ],
    "create-predictor": [
      {
        "action": "forecast:CreatePredictor",
        "arn_override": {
          "template": "arn:${Partition}:forecast:${Region}:${Account}:predictor/*"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${EncryptionConfig.RoleArn}"
        }
      }
    ],
    "create-predictor-backtest-export-job": [
      {
        "action": "forecast:CreatePredictorBacktestExportJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "predictor": "${PredictorArn}"
        }
      }
    ],
    "create-what-if-analysis": [
      {
        "action": "forecast:CreateWhatIfAnalysis",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "forecast": "${ForecastArn}"
        }
      }
    ],
    "create-what-if-forecast": [
      {
        "action": "forecast:CreateWhatIfForecast",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "whatIfAnalysis": "${WhatIfAnalysisArn}"
        }
      }
    ],
    "create-what-if-forecast-export": [
      {
        "action": "forecast:CreateWhatIfForecastExport",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "whatIfForecast": "${WhatIfForecastArns[]}"
        }
      }
    ],
    "delete-dataset": [
      {
        "action": "forecast:DeleteDataset",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dataset": "${DatasetArn}"
        }
      }
    ],
    "delete-dataset-group": [
      {
        "action": "forecast:DeleteDatasetGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "datasetGroup": "${DatasetGroupArn}"
        }
      }
    ],
    "delete-dataset-import-job": [
      {
        "action": "forecast:DeleteDatasetImportJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "datasetImportJob": "${DatasetImportJobArn}"
        }
      }
    ],
    "delete-explainability": [
      {
        "action": "forecast:DeleteExplainability",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "explainability": "${ExplainabilityArn}"
        }
      }
    ],
    "delete-explainability-export": [
      {
        "action": "forecast:DeleteExplainabilityExport",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "explainabilityExport": "${ExplainabilityExportArn}"
        }
      }
    ],
    "delete-forecast": [
      {
        "action": "forecast:DeleteForecast",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "forecast": "${ForecastArn}"
        }
      }
    ],
    "delete-forecast-export-job": [
      {
        "action": "forecast:DeleteForecastExportJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "forecastExport": "${ForecastExportJobArn}"
        }
      }
    ],
    "delete-monitor": [
      {
        "action": "forecast:DeleteMonitor",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "monitor": "${MonitorArn}"
        }
      }
    ],
    "delete-predictor": [
      {
        "action": "forecast:DeletePredictor",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "predictor": "${PredictorArn}"
        }
      }
    ],
    "delete-predictor-backtest-export-job": [
      {
        "action": "forecast:DeletePredictorBacktestExportJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "predictorBacktestExportJob": "${PredictorBacktestExportJobArn}"
        }
      }
    ],
    "delete-resource-tree": [
      {
        "action": "forecast:DeleteResourceTree",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dataset": "%%iftemplatematch%${ResourceArn}%%",
          "datasetGroup": "%%iftemplatematch%${ResourceArn}%%",
          "datasetImportJob": "%%iftemplatematch%${ResourceArn}%%",
          "forecast": "%%iftemplatematch%${ResourceArn}%%",
          "forecastExport": "%%iftemplatematch%${ResourceArn}%%",
          "predictor": "%%iftemplatematch%${ResourceArn}%%",
          "predictorBacktestExportJob": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "delete-what-if-analysis": [
      {
        "action": "forecast:DeleteWhatIfAnalysis",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "whatIfAnalysis": "${WhatIfAnalysisArn}"
        }
      }
    ],
    "delete-what-if-forecast": [
      {
        "action": "forecast:DeleteWhatIfForecast",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "whatIfForecast": "${WhatIfForecastArn}"
        }
      }
    ],
    "delete-what-if-forecast-export": [
      {
        "action": "forecast:DeleteWhatIfForecastExport",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "whatIfForecastExport": "${WhatIfForecastExportArn}"
        }
      }
    ],
    "describe-auto-predictor": [
      {
        "action": "forecast:DescribeAutoPredictor",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "predictor": "${PredictorArn}"
        }
      }
    ],
    "describe-dataset": [
      {
        "action": "forecast:DescribeDataset",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dataset": "${DatasetArn}"
        }
      }
    ],
    "describe-dataset-group": [
      {
        "action": "forecast:DescribeDatasetGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "datasetGroup": "${DatasetGroupArn}"
        }
      }
    ],
    "describe-dataset-import-job": [
      {
        "action": "forecast:DescribeDatasetImportJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "datasetImportJob": "${DatasetImportJobArn}"
        }
      }
    ],
    "describe-explainability": [
      {
        "action": "forecast:DescribeExplainability",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "explainability": "${ExplainabilityArn}"
        }
      }
    ],
    "describe-explainability-export": [
      {
        "action": "forecast:DescribeExplainabilityExport",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "explainabilityExport": "${ExplainabilityExportArn}"
        }
      }
    ],
    "describe-forecast": [
      {
        "action": "forecast:DescribeForecast",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "forecast": "${ForecastArn}"
        }
      }
    ],
    "describe-forecast-export-job": [
      {
        "action": "forecast:DescribeForecastExportJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "forecastExport": "${ForecastExportJobArn}"
        }
      }
    ],
    "describe-monitor": [
      {
        "action": "forecast:DescribeMonitor",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "monitor": "${MonitorArn}"
        }
      }
    ],
    "describe-predictor": [
      {
        "action": "forecast:DescribePredictor",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "predictor": "${PredictorArn}"
        }
      }
    ],
    "describe-predictor-backtest-export-job": [
      {
        "action": "forecast:DescribePredictorBacktestExportJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "predictorBacktestExportJob": "${PredictorBacktestExportJobArn}"
        }
      }
    ],
    "describe-what-if-analysis": [
      {
        "action": "forecast:DescribeWhatIfAnalysis",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "whatIfAnalysis": "${WhatIfAnalysisArn}"
        }
      }
    ],
    "describe-what-if-forecast": [
      {
        "action": "forecast:DescribeWhatIfForecast",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "whatIfForecast": "${WhatIfForecastArn}"
        }
      }
    ],
    "describe-what-if-forecast-export": [
      {
        "action": "forecast:DescribeWhatIfForecastExport",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "whatIfForecastExport": "${WhatIfForecastExportArn}"
        }
      }
    ],
    "get-accuracy-metrics": [
      {
        "action": "forecast:GetAccuracyMetrics",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "predictor": "${PredictorArn}"
        }
      }
    ],
    "list-dataset-groups": [
      {
        "action": "forecast:ListDatasetGroups",
        "resource_mappings": {}
      }
    ],
    "list-dataset-import-jobs": [
      {
        "action": "forecast:ListDatasetImportJobs",
        "resource_mappings": {}
      }
    ],
    "list-datasets": [
      {
        "action": "forecast:ListDatasets",
        "resource_mappings": {}
      }
    ],
    "list-explainabilities": [
      {
        "action": "forecast:ListExplainabilities",
        "resource_mappings": {}
      }
    ],
    "list-explainability-exports": [
      {
        "action": "forecast:ListExplainabilityExports",
        "resource_mappings": {}
      }
    ],
    "list-forecast-export-jobs": [
      {
        "action": "forecast:ListForecastExportJobs",
        "resource_mappings": {}
      }
    ],
    "list-forecasts": [
      {
        "action": "forecast:ListForecasts",
        "resource_mappings": {}
      }
    ],
    "list-monitor-evaluations": [
      {
        "action": "forecast:ListMonitorEvaluations",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "monitor": "${MonitorArn}"
        }
      }
    ],
    "list-monitors": [
      {
        "action": "forecast:ListMonitors",
        "resource_mappings": {}
      }
    ],
    "list-predictor-backtest-export-jobs": [
      {
        "action": "forecast:ListPredictorBacktestExportJobs",
        "resource_mappings": {}
      }
    ],
    "list-predictors": [
      {
        "action": "forecast:ListPredictors",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "forecast:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dataset": "%%iftemplatematch%${ResourceArn}%%",
          "datasetGroup": "%%iftemplatematch%${ResourceArn}%%",
          "datasetImportJob": "%%iftemplatematch%${ResourceArn}%%",
          "forecast": "%%iftemplatematch%${ResourceArn}%%",
          "forecastExport": "%%iftemplatematch%${ResourceArn}%%",
          "predictor": "%%iftemplatematch%${ResourceArn}%%",
          "predictorBacktestExportJob": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "list-what-if-analyses": [
      {
        "action": "forecast:ListWhatIfAnalyses",
        "resource_mappings": {}
      }
    ],
    "list-what-if-forecast-exports": [
      {
        "action": "forecast:ListWhatIfForecastExports",
        "resource_mappings": {}
      }
    ],
    "list-what-if-forecasts": [
      {
        "action": "forecast:ListWhatIfForecasts",
        "resource_mappings": {}
      }
    ],
    "resume-resource": [
      {
        "action": "forecast:ResumeResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "monitor": "${ResourceArn}"
        }
      }
    ],
    "stop-resource": [
      {
        "action": "forecast:StopResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "datasetImportJob": "%%iftemplatematch%${ResourceArn}%%",
          "forecast": "%%iftemplatematch%${ResourceArn}%%",
          "forecastExport": "%%iftemplatematch%${ResourceArn}%%",
          "predictor": "%%iftemplatematch%${ResourceArn}%%",
          "predictorBacktestExportJob": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "forecast:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dataset": "%%iftemplatematch%${ResourceArn}%%",
          "datasetGroup": "%%iftemplatematch%${ResourceArn}%%",
          "datasetImportJob": "%%iftemplatematch%${ResourceArn}%%",
          "forecast": "%%iftemplatematch%${ResourceArn}%%",
          "forecastExport": "%%iftemplatematch%${ResourceArn}%%",
          "predictor": "%%iftemplatematch%${ResourceArn}%%",
          "predictorBacktestExportJob": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "forecast:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dataset": "%%iftemplatematch%${ResourceArn}%%",
          "datasetGroup": "%%iftemplatematch%${ResourceArn}%%",
          "datasetImportJob": "%%iftemplatematch%${ResourceArn}%%",
          "forecast": "%%iftemplatematch%${ResourceArn}%%",
          "forecastExport": "%%iftemplatematch%${ResourceArn}%%",
          "predictor": "%%iftemplatematch%${ResourceArn}%%",
          "predictorBacktestExportJob": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-dataset-group": [
      {
        "action": "forecast:UpdateDatasetGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dataset": "${DatasetArns[]}",
          "datasetGroup": "${DatasetGroupArn}"
        }
      }
    ]
  },
  "forecastquery": {
    "query-forecast": [
      {
        "action": "forecast:QueryForecast",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "forecast": "${ForecastArn}"
        }
      }
    ],
    "query-what-if-forecast": [
      {
        "action": "forecast:QueryWhatIfForecast",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "whatIfForecast": "${WhatIfForecastArn}"
        }
      }
    ]
  },
  "frauddetector": {
    "batch-create-variable": [
      {
        "action": "frauddetector:BatchCreateVariable",
        "resource_mappings": {}
      }
    ],
    "batch-get-variable": [
      {
        "action": "frauddetector:BatchGetVariable",
        "resource_mappings": {
          "resourcePath": {
            "template": "${names[]}"
          }
        }
      }
    ],
    "cancel-batch-import-job": [
      {
        "action": "frauddetector:CancelBatchImportJob",
        "resource_mappings": {
          "ResourcePath": {
            "template": "${jobId}"
          }
        }
      }
    ],
    "cancel-batch-prediction-job": [
      {
        "action": "frauddetector:CancelBatchPredictionJob",
        "resource_mappings": {
          "resourcePath": {
            "template": "${jobId}"
          }
        }
      }
    ],
    "create-batch-import-job": [
      {
        "action": "frauddetector:CreateBatchImportJob",
        "resource_mappings": {
          "ResourcePath": {
            "template": "${eventTypeName}"
          }
        }
      }
    ],
    "create-batch-prediction-job": [
      {
        "action": "frauddetector:CreateBatchPredictionJob",
        "resource_mappings": {
          "resourcePath": {
            "template": "*"
          }
        }
      }
    ],
    "create-detector-version": [
      {
        "action": "frauddetector:CreateDetectorVersion",
        "resource_mappings": {
          "resourcePath": {
            "template": "${detectorId}"
          }
        }
      }
    ],
    "create-list": [
      {
        "action": "frauddetector:CreateList",
        "resource_mappings": {}
      }
    ],
    "create-model": [
      {
        "action": "frauddetector:CreateModel",
        "resource_mappings": {
          "resourcePath": {
            "template": "${modelId}"
          }
        }
      }
    ],
    "create-model-version": [
      {
        "action": "frauddetector:CreateModelVersion",
        "resource_mappings": {
          "resourcePath": {
            "template": "${modelId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${externalEventsDetail.dataAccessRoleArn}"
        }
      }
    ],
    "create-rule": [
      {
        "action": "frauddetector:CreateRule",
        "resource_mappings": {
          "resourcePath": {
            "template": "${detectorId}"
          }
        }
      }
    ],
    "create-variable": [
      {
        "action": "frauddetector:CreateVariable",
        "resource_mappings": {}
      }
    ],
    "delete-batch-import-job": [
      {
        "action": "frauddetector:DeleteBatchImportJob",
        "resource_mappings": {
          "ResourcePath": {
            "template": "${jobId}"
          }
        }
      }
    ],
    "delete-batch-prediction-job": [
      {
        "action": "frauddetector:DeleteBatchPredictionJob",
        "resource_mappings": {
          "resourcePath": {
            "template": "*"
          }
        }
      }
    ],
    "delete-detector": [
      {
        "action": "frauddetector:DeleteDetector",
        "resource_mappings": {
          "resourcePath": {
            "template": "${detectorId}"
          }
        }
      }
    ],
    "delete-detector-version": [
      {
        "action": "frauddetector:DeleteDetectorVersion",
        "resource_mappings": {
          "resourcePath": {
            "template": "*"
          }
        }
      }
    ],
    "delete-entity-type": [
      {
        "action": "frauddetector:DeleteEntityType",
        "resource_mappings": {
          "resourcePath": {
            "template": "${name}"
          }
        }
      }
    ],
    "delete-event": [
      {
        "action": "frauddetector:DeleteEvent",
        "resource_mappings": {}
      }
    ],
    "delete-event-type": [
      {
        "action": "frauddetector:DeleteEventType",
        "resource_mappings": {
          "resourcePath": {
            "template": "${name}"
          }
        }
      }
    ],
    "delete-events-by-event-type": [
      {
        "action": "frauddetector:DeleteEventsByEventType",
        "resource_mappings": {
          "ResourcePath": {
            "template": "${eventTypeName}"
          }
        }
      }
    ],
    "delete-external-model": [
      {
        "action": "frauddetector:DeleteExternalModel",
        "resource_mappings": {
          "resourcePath": {
            "template": "*"
          }
        }
      }
    ],
    "delete-label": [
      {
        "action": "frauddetector:DeleteLabel",
        "resource_mappings": {
          "resourcePath": {
            "template": "${name}"
          }
        }
      }
    ],
    "delete-list": [
      {
        "action": "frauddetector:DeleteList",
        "resource_mappings": {
          "ResourcePath": {
            "template": "*"
          }
        }
      }
    ],
    "delete-model": [
      {
        "action": "frauddetector:DeleteModel",
        "resource_mappings": {
          "resourcePath": {
            "template": "${modelId}"
          }
        }
      }
    ],
    "delete-model-version": [
      {
        "action": "frauddetector:DeleteModelVersion",
        "resource_mappings": {
          "resourcePath": {
            "template": "*"
          }
        }
      }
    ],
    "delete-outcome": [
      {
        "action": "frauddetector:DeleteOutcome",
        "resource_mappings": {
          "resourcePath": {
            "template": "${name}"
          }
        }
      }
    ],
    "delete-rule": [
      {
        "action": "frauddetector:DeleteRule",
        "resource_mappings": {
          "resourcePath": {
            "template": "${rule.ruleId}"
          }
        }
      }
    ],
    "delete-variable": [
      {
        "action": "frauddetector:DeleteVariable",
        "resource_mappings": {
          "resourcePath": {
            "template": "${name}"
          }
        }
      }
    ],
    "describe-detector": [
      {
        "action": "frauddetector:DescribeDetector",
        "resource_mappings": {
          "resourcePath": {
            "template": "${detectorId}"
          }
        }
      }
    ],
    "describe-model-versions": [
      {
        "action": "frauddetector:DescribeModelVersions",
        "resource_mappings": {
          "resourcePath": {
            "template": "*"
          }
        }
      }
    ],
    "get-batch-import-jobs": [
      {
        "action": "frauddetector:GetBatchImportJobs",
        "resource_mappings": {
          "ResourcePath": {
            "template": "${jobId}"
          }
        }
      }
    ],
    "get-batch-prediction-jobs": [
      {
        "action": "frauddetector:GetBatchPredictionJobs",
        "resource_mappings": {
          "resourcePath": {
            "template": "*"
          }
        }
      }
    ],
    "get-delete-events-by-event-type-status": [
      {
        "action": "frauddetector:GetDeleteEventsByEventTypeStatus",
        "resource_mappings": {
          "ResourcePath": {
            "template": "${eventTypeName}"
          }
        }
      }
    ],
    "get-detector-version": [
      {
        "action": "frauddetector:GetDetectorVersion",
        "resource_mappings": {
          "resourcePath": {
            "template": "*"
          }
        }
      }
    ],
    "get-detectors": [
      {
        "action": "frauddetector:GetDetectors",
        "resource_mappings": {
          "resourcePath": {
            "template": "${detectorId}"
          }
        }
      }
    ],
    "get-entity-types": [
      {
        "action": "frauddetector:GetEntityTypes",
        "resource_mappings": {
          "resourcePath": {
            "template": "${name}"
          }
        }
      }
    ],
    "get-event": [
      {
        "action": "frauddetector:GetEvent",
        "resource_mappings": {
          "ResourcePath": {
            "template": "${eventTypeName}"
          }
        }
      }
    ],
    "get-event-prediction": [
      {
        "action": "frauddetector:GetEventPrediction",
        "resource_mappings": {}
      }
    ],
    "get-event-prediction-metadata": [
      {
        "action": "frauddetector:GetEventPredictionMetadata",
        "resource_mappings": {
          "ResourcePath": {
            "template": "*"
          }
        }
      }
    ],
    "get-event-types": [
      {
        "action": "frauddetector:GetEventTypes",
        "resource_mappings": {
          "resourcePath": {
            "template": "${name}"
          }
        }
      }
    ],
    "get-external-models": [
      {
        "action": "frauddetector:GetExternalModels",
        "resource_mappings": {
          "resourcePath": {
            "template": "*"
          }
        }
      }
    ],
    "get-kms-encryption-key": [
      {
        "action": "frauddetector:GetKMSEncryptionKey",
        "resource_mappings": {}
      }
    ],
    "get-labels": [
      {
        "action": "frauddetector:GetLabels",
        "resource_mappings": {
          "resourcePath": {
            "template": "${name}"
          }
        }
      }
    ],
    "get-list-elements": [
      {
        "action": "frauddetector:GetListElements",
        "resource_mappings": {
          "ResourcePath": {
            "template": "*"
          }
        }
      }
    ],
    "get-lists-metadata": [
      {
        "action": "frauddetector:GetListsMetadata",
        "resource_mappings": {
          "ResourcePath": {
            "template": "*"
          }
        }
      }
    ],
    "get-model-version": [
      {
        "action": "frauddetector:GetModelVersion",
        "resource_mappings": {
          "resourcePath": {
            "template": "*"
          }
        }
      }
    ],
    "get-models": [
      {
        "action": "frauddetector:GetModels",
        "resource_mappings": {
          "resourcePath": {
            "template": "${modelId}"
          }
        }
      }
    ],
    "get-outcomes": [
      {
        "action": "frauddetector:GetOutcomes",
        "resource_mappings": {
          "resourcePath": {
            "template": "${name}"
          }
        }
      }
    ],
    "get-rules": [
      {
        "action": "frauddetector:GetRules",
        "resource_mappings": {
          "resourcePath": {
            "template": "${ruleId}"
          }
        }
      }
    ],
    "get-variables": [
      {
        "action": "frauddetector:GetVariables",
        "resource_mappings": {
          "resourcePath": {
            "template": "${name}"
          }
        }
      }
    ],
    "list-event-predictions": [
      {
        "action": "frauddetector:ListEventPredictions",
        "resource_mappings": {
          "ResourcePath": {
            "template": "*"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "frauddetector:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "detector": "%%iftemplatematch%${resourceARN}%%",
          "detector-version": "%%iftemplatematch%${resourceARN}%%",
          "entity-type": "%%iftemplatematch%${resourceARN}%%",
          "event-type": "%%iftemplatematch%${resourceARN}%%",
          "external-model": "%%iftemplatematch%${resourceARN}%%",
          "label": "%%iftemplatematch%${resourceARN}%%",
          "model": "%%iftemplatematch%${resourceARN}%%",
          "model-version": "%%iftemplatematch%${resourceARN}%%",
          "outcome": "%%iftemplatematch%${resourceARN}%%",
          "rule": "%%iftemplatematch%${resourceARN}%%",
          "variable": "%%iftemplatematch%${resourceARN}%%"
        }
      }
    ],
    "put-detector": [
      {
        "action": "frauddetector:PutDetector",
        "resource_mappings": {
          "resourcePath": {
            "template": "${detectorId}"
          }
        }
      }
    ],
    "put-entity-type": [
      {
        "action": "frauddetector:PutEntityType",
        "resource_mappings": {
          "resourcePath": {
            "template": "${name}"
          }
        }
      }
    ],
    "put-event-type": [
      {
        "action": "frauddetector:PutEventType",
        "resource_mappings": {
          "resourcePath": {
            "template": "${name}"
          }
        }
      }
    ],
    "put-external-model": [
      {
        "action": "frauddetector:PutExternalModel",
        "resource_mappings": {
          "resourcePath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${invokeModelEndpointRoleArn}"
        }
      }
    ],
    "put-kms-encryption-key": [
      {
        "action": "frauddetector:PutKMSEncryptionKey",
        "resource_mappings": {}
      }
    ],
    "put-label": [
      {
        "action": "frauddetector:PutLabel",
        "resource_mappings": {
          "resourcePath": {
            "template": "${name}"
          }
        }
      }
    ],
    "put-outcome": [
      {
        "action": "frauddetector:PutOutcome",
        "resource_mappings": {
          "resourcePath": {
            "template": "${name}"
          }
        }
      }
    ],
    "send-event": [
      {
        "action": "frauddetector:SendEvent",
        "resource_mappings": {
          "ResourcePath": {
            "template": "${eventTypeName}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "frauddetector:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "detector": "%%iftemplatematch%${resourceARN}%%",
          "detector-version": "%%iftemplatematch%${resourceARN}%%",
          "entity-type": "%%iftemplatematch%${resourceARN}%%",
          "event-type": "%%iftemplatematch%${resourceARN}%%",
          "external-model": "%%iftemplatematch%${resourceARN}%%",
          "label": "%%iftemplatematch%${resourceARN}%%",
          "model": "%%iftemplatematch%${resourceARN}%%",
          "model-version": "%%iftemplatematch%${resourceARN}%%",
          "outcome": "%%iftemplatematch%${resourceARN}%%",
          "rule": "%%iftemplatematch%${resourceARN}%%",
          "variable": "%%iftemplatematch%${resourceARN}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "frauddetector:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "detector": "%%iftemplatematch%${resourceARN}%%",
          "detector-version": "%%iftemplatematch%${resourceARN}%%",
          "entity-type": "%%iftemplatematch%${resourceARN}%%",
          "event-type": "%%iftemplatematch%${resourceARN}%%",
          "external-model": "%%iftemplatematch%${resourceARN}%%",
          "label": "%%iftemplatematch%${resourceARN}%%",
          "model": "%%iftemplatematch%${resourceARN}%%",
          "model-version": "%%iftemplatematch%${resourceARN}%%",
          "outcome": "%%iftemplatematch%${resourceARN}%%",
          "rule": "%%iftemplatematch%${resourceARN}%%",
          "variable": "%%iftemplatematch%${resourceARN}%%"
        }
      }
    ],
    "update-detector-version": [
      {
        "action": "frauddetector:UpdateDetectorVersion",
        "resource_mappings": {
          "resourcePath": {
            "template": "${detectorId}"
          }
        }
      }
    ],
    "update-detector-version-metadata": [
      {
        "action": "frauddetector:UpdateDetectorVersionMetadata",
        "resource_mappings": {
          "resourcePath": {
            "template": "*"
          }
        }
      }
    ],
    "update-detector-version-status": [
      {
        "action": "frauddetector:UpdateDetectorVersionStatus",
        "resource_mappings": {
          "resourcePath": {
            "template": "*"
          }
        }
      }
    ],
    "update-event-label": [
      {
        "action": "frauddetector:UpdateEventLabel",
        "resource_mappings": {
          "ResourcePath": {
            "template": "${eventTypeName}"
          }
        }
      }
    ],
    "update-list": [
      {
        "action": "frauddetector:UpdateList",
        "resource_mappings": {
          "ResourcePath": {
            "template": "*"
          }
        }
      }
    ],
    "update-model": [
      {
        "action": "frauddetector:UpdateModel",
        "resource_mappings": {
          "resourcePath": {
            "template": "${modelId}"
          }
        }
      }
    ],
    "update-model-version": [
      {
        "action": "frauddetector:UpdateModelVersion",
        "resource_mappings": {
          "resourcePath": {
            "template": "${modelId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${externalEventsDetail.dataAccessRoleArn}"
        }
      }
    ],
    "update-model-version-status": [
      {
        "action": "frauddetector:UpdateModelVersionStatus",
        "resource_mappings": {}
      }
    ],
    "update-rule-metadata": [
      {
        "action": "frauddetector:UpdateRuleMetadata",
        "resource_mappings": {
          "resourcePath": {
            "template": "${rule.ruleId}"
          }
        }
      }
    ],
    "update-rule-version": [
      {
        "action": "frauddetector:UpdateRuleVersion",
        "resource_mappings": {
          "resourcePath": {
            "template": "${rule.ruleId}"
          }
        }
      }
    ],
    "update-variable": [
      {
        "action": "frauddetector:UpdateVariable",
        "resource_mappings": {
          "resourcePath": {
            "template": "${name}"
          }
        }
      }
    ]
  },
  "fsx": {
    "associate-file-system-aliases": [
      {
        "action": "fsx:AssociateFileSystemAliases",
        "resource_mappings": {
          "FileSystemId": {
            "template": "${FileSystemId}"
          }
        }
      }
    ],
    "cancel-data-repository-task": [
      {
        "action": "fsx:CancelDataRepositoryTask",
        "resource_mappings": {
          "TaskId": {
            "template": "${TaskId}"
          }
        }
      }
    ],
    "copy-backup": [
      {
        "action": "fsx:CopyBackup",
        "resource_mappings": {
          "BackupId": {
            "template": "*"
          }
        }
      },
      {
        "action": "fsx:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "backup": "*",
          "file-system": "*",
          "task": "*"
        }
      }
    ],
    "create-backup": [
      {
        "action": "fsx:CreateBackup",
        "resource_mappings": {}
      }
    ],
    "create-data-repository-association": [
      {
        "action": "fsx:CreateDataRepositoryAssociation",
        "resource_mappings": {
          "DataRepositoryAssociationId": {
            "template": "*"
          },
          "FileSystemId": {
            "template": "${FileSystemId}"
          }
        }
      },
      {
        "action": "fsx:TagResource",
        "resource_mappings": {
          "DataRepositoryAssociationId": {
            "template": "*"
          },
          "BackupId": {
            "template": "*"
          },
          "FileSystemId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "StorageVirtualMachineId": {
            "template": "*"
          },
          "TaskId": {
            "template": "*"
          }
        }
      }
    ],
    "create-data-repository-task": [
      {
        "action": "fsx:CreateDataRepositoryTask",
        "resource_mappings": {}
      }
    ],
    "create-file-cache": [
      {
        "action": "fsx:CreateFileCache",
        "resource_mappings": {
          "FileCacheId": {
            "template": "*"
          },
          "FileSystemIdOrFileCacheId": {
            "template": "*"
          },
          "DataRepositoryAssociationId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeSecurityGroups",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSubnets",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      },
      {
        "action": "fsx:CreateDataRepositoryAssociation",
        "resource_mappings": {
          "FileSystemIdOrFileCacheId": {
            "template": "*"
          },
          "DataRepositoryAssociationId": {
            "template": "*"
          },
          "FileSystemId": {
            "template": "*"
          }
        }
      },
      {
        "action": "fsx:TagResource",
        "resource_mappings": {
          "FileSystemIdOrFileCacheId": {
            "template": "*"
          },
          "DataRepositoryAssociationId": {
            "template": "*"
          },
          "BackupId": {
            "template": "*"
          },
          "FileCacheId": {
            "template": "*"
          },
          "FileSystemId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "StorageVirtualMachineId": {
            "template": "*"
          },
          "TaskId": {
            "template": "*"
          }
        }
      },
      {
        "action": "logs:CreateLogGroup",
        "resource_mappings": {
          "LogGroupName": {
            "template": "*"
          }
        }
      },
      {
        "action": "logs:CreateLogStream",
        "resource_mappings": {
          "LogGroupName": {
            "template": "*"
          }
        }
      },
      {
        "action": "logs:PutLogEvents",
        "resource_mappings": {
          "LogGroupName": {
            "template": "*"
          },
          "LogStreamName": {
            "template": "*"
          }
        }
      },
      {
        "action": "s3:ListBucket",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          }
        }
      }
    ],
    "create-file-system": [
      {
        "action": "fsx:CreateFileSystem",
        "resource_mappings": {}
      }
    ],
    "create-file-system-from-backup": [
      {
        "action": "fsx:CreateFileSystemFromBackup",
        "resource_mappings": {}
      }
    ],
    "create-snapshot": [
      {
        "action": "fsx:CreateSnapshot",
        "resource_mappings": {
          "VolumeId": {
            "template": "${VolumeId}"
          },
          "SnapshotId": {
            "template": "*"
          },
          "FileSystemId": {
            "template": "*"
          }
        }
      },
      {
        "action": "fsx:TagResource",
        "resource_mappings": {
          "DataRepositoryAssociationId": {
            "template": "*"
          },
          "BackupId": {
            "template": "*"
          },
          "FileSystemId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "${VolumeId}"
          },
          "SnapshotId": {
            "template": "*"
          },
          "StorageVirtualMachineId": {
            "template": "*"
          },
          "TaskId": {
            "template": "*"
          }
        }
      }
    ],
    "create-storage-virtual-machine": [
      {
        "action": "fsx:CreateStorageVirtualMachine",
        "resource_mappings": {
          "FileSystemId": {
            "template": "${FileSystemId}"
          },
          "StorageVirtualMachineId": {
            "template": "*"
          }
        }
      },
      {
        "action": "fsx:TagResource",
        "resource_mappings": {
          "BackupId": {
            "template": "*"
          },
          "FileSystemId": {
            "template": "*"
          },
          "StorageVirtualMachineId": {
            "template": "*"
          },
          "TaskId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          }
        }
      }
    ],
    "create-volume": [
      {
        "action": "fsx:CreateVolume",
        "resource_mappings": {
          "FileSystemId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          }
        }
      },
      {
        "action": "fsx:TagResource",
        "resource_mappings": {
          "BackupId": {
            "template": "*"
          },
          "FileSystemId": {
            "template": "*"
          },
          "StorageVirtualMachineId": {
            "template": "*"
          },
          "TaskId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          }
        }
      }
    ],
    "create-volume-from-backup": [
      {
        "action": "fsx:CreateVolumeFromBackup",
        "resource_mappings": {
          "BackupId": {
            "template": "${BackupId}"
          },
          "FileSystemId": {
            "template": "*"
          },
          "StorageVirtualMachineId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          }
        }
      },
      {
        "action": "fsx:TagResource",
        "resource_mappings": {
          "BackupId": {
            "template": "*"
          },
          "FileSystemId": {
            "template": "*"
          },
          "StorageVirtualMachineId": {
            "template": "*"
          },
          "TaskId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-backup": [
      {
        "action": "fsx:DeleteBackup",
        "resource_mappings": {}
      }
    ],
    "delete-data-repository-association": [
      {
        "action": "fsx:DeleteDataRepositoryAssociation",
        "resource_mappings": {
          "DataRepositoryAssociationId": {
            "template": "${AssociationId}"
          }
        }
      }
    ],
    "delete-file-cache": [
      {
        "action": "fsx:DeleteFileCache",
        "resource_mappings": {
          "FileCacheId": {
            "template": "${FileCacheId}"
          },
          "FileSystemIdOrFileCacheId": {
            "template": "${FileCacheId}"
          },
          "DataRepositoryAssociationId": {
            "template": "*"
          }
        }
      },
      {
        "action": "fsx:DeleteDataRepositoryAssociation",
        "resource_mappings": {
          "FileSystemIdOrFileCacheId": {
            "template": "${FileCacheId}"
          },
          "DataRepositoryAssociationId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-file-system": [
      {
        "action": "fsx:DeleteFileSystem",
        "resource_mappings": {}
      }
    ],
    "delete-snapshot": [
      {
        "action": "fsx:DeleteSnapshot",
        "resource_mappings": {
          "VolumeId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "${SnapshotId}"
          }
        }
      }
    ],
    "delete-storage-virtual-machine": [
      {
        "action": "fsx:DeleteStorageVirtualMachine",
        "resource_mappings": {
          "FileSystemId": {
            "template": "*"
          },
          "StorageVirtualMachineId": {
            "template": "${StorageVirtualMachineId}"
          }
        }
      }
    ],
    "delete-volume": [
      {
        "action": "fsx:DeleteVolume",
        "resource_mappings": {
          "FileSystemId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "${VolumeId}"
          }
        }
      }
    ],
    "describe-backups": [
      {
        "action": "fsx:DescribeBackups",
        "resource_mappings": {}
      }
    ],
    "describe-data-repository-associations": [
      {
        "action": "fsx:DescribeDataRepositoryAssociations",
        "resource_mappings": {}
      }
    ],
    "describe-data-repository-tasks": [
      {
        "action": "fsx:DescribeDataRepositoryTasks",
        "resource_mappings": {}
      }
    ],
    "describe-file-caches": [
      {
        "action": "fsx:DescribeFileCaches",
        "resource_mappings": {}
      }
    ],
    "describe-file-system-aliases": [
      {
        "action": "fsx:DescribeFileSystemAliases",
        "resource_mappings": {
          "FileSystemId": {
            "template": "${FileSystemId}"
          }
        }
      }
    ],
    "describe-file-systems": [
      {
        "action": "fsx:DescribeFileSystems",
        "resource_mappings": {}
      }
    ],
    "describe-snapshots": [
      {
        "action": "fsx:DescribeSnapshots",
        "resource_mappings": {}
      }
    ],
    "describe-storage-virtual-machines": [
      {
        "action": "fsx:DescribeStorageVirtualMachines",
        "resource_mappings": {}
      }
    ],
    "describe-volumes": [
      {
        "action": "fsx:DescribeVolumes",
        "resource_mappings": {}
      }
    ],
    "disassociate-file-system-aliases": [
      {
        "action": "fsx:DisassociateFileSystemAliases",
        "resource_mappings": {
          "FileSystemId": {
            "template": "${FileSystemId}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "fsx:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "release-file-system-nfs-v3-locks": [
      {
        "action": "fsx:ReleaseFileSystemNfsV3Locks",
        "resource_mappings": {
          "FileSystemId": {
            "template": "${FileSystemId}"
          }
        }
      }
    ],
    "restore-volume-from-snapshot": [
      {
        "action": "fsx:RestoreVolumeFromSnapshot",
        "resource_mappings": {
          "VolumeId": {
            "template": "${VolumeId}"
          },
          "SnapshotId": {
            "template": "${SnapshotId}"
          },
          "FileSystemId": {
            "template": "*"
          }
        }
      }
    ],
    "start-misconfigured-state-recovery": [
      {
        "note": "NotFound",
        "action": "FSx:StartMisconfiguredStateRecovery",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "fsx:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "fsx:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-data-repository-association": [
      {
        "action": "fsx:UpdateDataRepositoryAssociation",
        "resource_mappings": {
          "DataRepositoryAssociationId": {
            "template": "${AssociationId}"
          }
        }
      }
    ],
    "update-file-cache": [
      {
        "action": "fsx:UpdateFileCache",
        "resource_mappings": {
          "FileCacheId": {
            "template": "${FileCacheId}"
          }
        }
      }
    ],
    "update-file-system": [
      {
        "action": "fsx:UpdateFileSystem",
        "resource_mappings": {}
      }
    ],
    "update-snapshot": [
      {
        "action": "fsx:UpdateSnapshot",
        "resource_mappings": {
          "VolumeId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "${SnapshotId}"
          }
        }
      }
    ],
    "update-storage-virtual-machine": [
      {
        "action": "fsx:UpdateStorageVirtualMachine",
        "resource_mappings": {
          "FileSystemId": {
            "template": "*"
          },
          "StorageVirtualMachineId": {
            "template": "${StorageVirtualMachineId}"
          }
        }
      }
    ],
    "update-volume": [
      {
        "action": "fsx:UpdateVolume",
        "resource_mappings": {
          "FileSystemId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "${VolumeId}"
          }
        }
      }
    ]
  },
  "gamelift": {
    "accept-match": [
      {
        "action": "gamelift:AcceptMatch",
        "resource_mappings": {}
      }
    ],
    "claim-game-server": [
      {
        "action": "gamelift:ClaimGameServer",
        "resource_mappings": {
          "GameServerGroupName": {
            "template": "${GameServerGroupName}"
          }
        }
      }
    ],
    "create-alias": [
      {
        "action": "gamelift:CreateAlias",
        "resource_mappings": {}
      }
    ],
    "create-build": [
      {
        "action": "gamelift:CreateBuild",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${StorageLocation.RoleArn}"
        }
      }
    ],
    "create-fleet": [
      {
        "action": "gamelift:CreateFleet",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${InstanceRoleArn}"
        }
      }
    ],
    "create-fleet-locations": [
      {
        "action": "gamelift:CreateFleetLocations",
        "resource_mappings": {
          "FleetId": {
            "template": "${FleetId}"
          }
        }
      }
    ],
    "create-game-server-group": [
      {
        "action": "gamelift:CreateGameServerGroup",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${LaunchTemplate.LaunchTemplateId}%*%%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${LaunchTemplate.LaunchTemplateName}%*%%%"
        }
      }
    ],
    "create-game-session": [
      {
        "action": "gamelift:CreateGameSession",
        "resource_mappings": {}
      }
    ],
    "create-game-session-queue": [
      {
        "action": "gamelift:CreateGameSessionQueue",
        "resource_mappings": {}
      }
    ],
    "create-location": [
      {
        "action": "gamelift:CreateLocation",
        "resource_mappings": {}
      }
    ],
    "create-matchmaking-configuration": [
      {
        "action": "gamelift:CreateMatchmakingConfiguration",
        "resource_mappings": {}
      }
    ],
    "create-matchmaking-rule-set": [
      {
        "action": "gamelift:CreateMatchmakingRuleSet",
        "resource_mappings": {}
      }
    ],
    "create-player-session": [
      {
        "action": "gamelift:CreatePlayerSession",
        "resource_mappings": {}
      }
    ],
    "create-player-sessions": [
      {
        "action": "gamelift:CreatePlayerSessions",
        "resource_mappings": {}
      }
    ],
    "create-script": [
      {
        "action": "gamelift:CreateScript",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${StorageLocation.RoleArn}"
        }
      }
    ],
    "create-vpc-peering-authorization": [
      {
        "action": "gamelift:CreateVpcPeeringAuthorization",
        "resource_mappings": {}
      }
    ],
    "create-vpc-peering-connection": [
      {
        "action": "gamelift:CreateVpcPeeringConnection",
        "resource_mappings": {}
      }
    ],
    "delete-alias": [
      {
        "action": "gamelift:DeleteAlias",
        "resource_mappings": {
          "AliasId": {
            "template": "${AliasId}"
          }
        }
      }
    ],
    "delete-build": [
      {
        "action": "gamelift:DeleteBuild",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "BuildId": {
            "template": "${BuildId}"
          }
        }
      }
    ],
    "delete-fleet": [
      {
        "action": "gamelift:DeleteFleet",
        "resource_mappings": {
          "FleetId": {
            "template": "${FleetId}"
          }
        }
      }
    ],
    "delete-fleet-locations": [
      {
        "action": "gamelift:DeleteFleetLocations",
        "resource_mappings": {
          "FleetId": {
            "template": "${FleetId}"
          }
        }
      }
    ],
    "delete-game-server-group": [
      {
        "action": "gamelift:DeleteGameServerGroup",
        "resource_mappings": {
          "GameServerGroupName": {
            "template": "${GameServerGroupName}"
          }
        }
      }
    ],
    "delete-game-session-queue": [
      {
        "action": "gamelift:DeleteGameSessionQueue",
        "resource_mappings": {
          "GameSessionQueueName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-location": [
      {
        "action": "gamelift:DeleteLocation",
        "resource_mappings": {
          "LocationId": {
            "template": "${LocationName}"
          }
        }
      }
    ],
    "delete-matchmaking-configuration": [
      {
        "action": "gamelift:DeleteMatchmakingConfiguration",
        "resource_mappings": {
          "MatchmakingConfigurationName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-matchmaking-rule-set": [
      {
        "action": "gamelift:DeleteMatchmakingRuleSet",
        "resource_mappings": {
          "MatchmakingRuleSetName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-scaling-policy": [
      {
        "action": "gamelift:DeleteScalingPolicy",
        "resource_mappings": {
          "FleetId": {
            "template": "${FleetId}"
          }
        }
      }
    ],
    "delete-script": [
      {
        "action": "gamelift:DeleteScript",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "ScriptId": {
            "template": "${ScriptId}"
          }
        }
      }
    ],
    "delete-vpc-peering-authorization": [
      {
        "action": "gamelift:DeleteVpcPeeringAuthorization",
        "resource_mappings": {}
      }
    ],
    "delete-vpc-peering-connection": [
      {
        "action": "gamelift:DeleteVpcPeeringConnection",
        "resource_mappings": {}
      }
    ],
    "deregister-compute": [
      {
        "action": "gamelift:DeregisterCompute",
        "resource_mappings": {
          "FleetId": {
            "template": "${FleetId}"
          }
        }
      }
    ],
    "deregister-game-server": [
      {
        "action": "gamelift:DeregisterGameServer",
        "resource_mappings": {
          "GameServerGroupName": {
            "template": "${GameServerGroupName}"
          }
        }
      }
    ],
    "describe-alias": [
      {
        "action": "gamelift:DescribeAlias",
        "resource_mappings": {
          "AliasId": {
            "template": "${AliasId}"
          }
        }
      }
    ],
    "describe-build": [
      {
        "action": "gamelift:DescribeBuild",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "BuildId": {
            "template": "${BuildId}"
          }
        }
      }
    ],
    "describe-compute": [
      {
        "action": "gamelift:DescribeCompute",
        "resource_mappings": {
          "FleetId": {
            "template": "${FleetId}"
          }
        }
      }
    ],
    "describe-ec2-instance-limits": [
      {
        "action": "gamelift:DescribeEC2InstanceLimits",
        "resource_mappings": {}
      }
    ],
    "describe-fleet-attributes": [
      {
        "action": "gamelift:DescribeFleetAttributes",
        "resource_mappings": {}
      }
    ],
    "describe-fleet-capacity": [
      {
        "action": "gamelift:DescribeFleetCapacity",
        "resource_mappings": {}
      }
    ],
    "describe-fleet-events": [
      {
        "action": "gamelift:DescribeFleetEvents",
        "resource_mappings": {
          "FleetId": {
            "template": "${FleetId}"
          }
        }
      }
    ],
    "describe-fleet-location-attributes": [
      {
        "action": "gamelift:DescribeFleetLocationAttributes",
        "resource_mappings": {
          "FleetId": {
            "template": "${FleetId}"
          }
        }
      }
    ],
    "describe-fleet-location-capacity": [
      {
        "action": "gamelift:DescribeFleetLocationCapacity",
        "resource_mappings": {
          "FleetId": {
            "template": "${FleetId}"
          }
        }
      }
    ],
    "describe-fleet-location-utilization": [
      {
        "action": "gamelift:DescribeFleetLocationUtilization",
        "resource_mappings": {
          "FleetId": {
            "template": "${FleetId}"
          }
        }
      }
    ],
    "describe-fleet-port-settings": [
      {
        "action": "gamelift:DescribeFleetPortSettings",
        "resource_mappings": {
          "FleetId": {
            "template": "${FleetId}"
          }
        }
      }
    ],
    "describe-fleet-utilization": [
      {
        "action": "gamelift:DescribeFleetUtilization",
        "resource_mappings": {}
      }
    ],
    "describe-game-server": [
      {
        "action": "gamelift:DescribeGameServer",
        "resource_mappings": {
          "GameServerGroupName": {
            "template": "${GameServerGroupName}"
          }
        }
      }
    ],
    "describe-game-server-group": [
      {
        "action": "gamelift:DescribeGameServerGroup",
        "resource_mappings": {
          "GameServerGroupName": {
            "template": "${GameServerGroupName}"
          }
        }
      }
    ],
    "describe-game-server-instances": [
      {
        "action": "gamelift:DescribeGameServerInstances",
        "resource_mappings": {
          "GameServerGroupName": {
            "template": "${GameServerGroupName}"
          }
        }
      }
    ],
    "describe-game-session-details": [
      {
        "action": "gamelift:DescribeGameSessionDetails",
        "resource_mappings": {}
      }
    ],
    "describe-game-session-placement": [
      {
        "action": "gamelift:DescribeGameSessionPlacement",
        "resource_mappings": {}
      }
    ],
    "describe-game-session-queues": [
      {
        "action": "gamelift:DescribeGameSessionQueues",
        "resource_mappings": {}
      }
    ],
    "describe-game-sessions": [
      {
        "action": "gamelift:DescribeGameSessions",
        "resource_mappings": {}
      }
    ],
    "describe-instances": [
      {
        "action": "gamelift:DescribeInstances",
        "resource_mappings": {
          "FleetId": {
            "template": "${FleetId}"
          }
        }
      }
    ],
    "describe-matchmaking": [
      {
        "action": "gamelift:DescribeMatchmaking",
        "resource_mappings": {}
      }
    ],
    "describe-matchmaking-configurations": [
      {
        "action": "gamelift:DescribeMatchmakingConfigurations",
        "resource_mappings": {}
      }
    ],
    "describe-matchmaking-rule-sets": [
      {
        "action": "gamelift:DescribeMatchmakingRuleSets",
        "resource_mappings": {}
      }
    ],
    "describe-player-sessions": [
      {
        "action": "gamelift:DescribePlayerSessions",
        "resource_mappings": {}
      }
    ],
    "describe-runtime-configuration": [
      {
        "action": "gamelift:DescribeRuntimeConfiguration",
        "resource_mappings": {
          "FleetId": {
            "template": "${FleetId}"
          }
        }
      }
    ],
    "describe-scaling-policies": [
      {
        "action": "gamelift:DescribeScalingPolicies",
        "resource_mappings": {
          "FleetId": {
            "template": "${FleetId}"
          }
        }
      }
    ],
    "describe-script": [
      {
        "action": "gamelift:DescribeScript",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "ScriptId": {
            "template": "${ScriptId}"
          }
        }
      }
    ],
    "describe-vpc-peering-authorizations": [
      {
        "action": "gamelift:DescribeVpcPeeringAuthorizations",
        "resource_mappings": {}
      }
    ],
    "describe-vpc-peering-connections": [
      {
        "action": "gamelift:DescribeVpcPeeringConnections",
        "resource_mappings": {}
      }
    ],
    "get-compute-access": [
      {
        "action": "gamelift:GetComputeAccess",
        "resource_mappings": {
          "FleetId": {
            "template": "${FleetId}"
          }
        }
      }
    ],
    "get-compute-auth-token": [
      {
        "action": "gamelift:GetComputeAuthToken",
        "resource_mappings": {
          "FleetId": {
            "template": "${FleetId}"
          }
        }
      }
    ],
    "get-game-session-log-url": [
      {
        "action": "gamelift:GetGameSessionLogUrl",
        "resource_mappings": {}
      }
    ],
    "get-instance-access": [
      {
        "action": "gamelift:GetInstanceAccess",
        "resource_mappings": {
          "FleetId": {
            "template": "${FleetId}"
          }
        }
      }
    ],
    "list-aliases": [
      {
        "action": "gamelift:ListAliases",
        "resource_mappings": {}
      }
    ],
    "list-builds": [
      {
        "action": "gamelift:ListBuilds",
        "resource_mappings": {}
      }
    ],
    "list-compute": [
      {
        "action": "gamelift:ListCompute",
        "resource_mappings": {
          "FleetId": {
            "template": "${FleetId}"
          }
        }
      }
    ],
    "list-fleets": [
      {
        "action": "gamelift:ListFleets",
        "resource_mappings": {}
      }
    ],
    "list-game-server-groups": [
      {
        "action": "gamelift:ListGameServerGroups",
        "resource_mappings": {}
      }
    ],
    "list-game-servers": [
      {
        "action": "gamelift:ListGameServers",
        "resource_mappings": {
          "GameServerGroupName": {
            "template": "${GameServerGroupName}"
          }
        }
      }
    ],
    "list-locations": [
      {
        "action": "gamelift:ListLocations",
        "resource_mappings": {}
      }
    ],
    "list-scripts": [
      {
        "action": "gamelift:ListScripts",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "gamelift:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "alias": "%%iftemplatematch%${ResourceARN}%%",
          "build": "%%iftemplatematch%${ResourceARN}%%",
          "fleet": "%%iftemplatematch%${ResourceARN}%%",
          "gameServerGroup": "%%iftemplatematch%${ResourceARN}%%",
          "gameSessionQueue": "%%iftemplatematch%${ResourceARN}%%",
          "matchmakingConfiguration": "%%iftemplatematch%${ResourceARN}%%",
          "matchmakingRuleSet": "%%iftemplatematch%${ResourceARN}%%",
          "script": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "put-scaling-policy": [
      {
        "action": "gamelift:PutScalingPolicy",
        "resource_mappings": {
          "FleetId": {
            "template": "${FleetId}"
          }
        }
      }
    ],
    "register-compute": [
      {
        "action": "gamelift:RegisterCompute",
        "resource_mappings": {
          "FleetId": {
            "template": "${FleetId}"
          }
        }
      }
    ],
    "register-game-server": [
      {
        "action": "gamelift:RegisterGameServer",
        "resource_mappings": {
          "GameServerGroupName": {
            "template": "${GameServerGroupName}"
          }
        }
      }
    ],
    "request-upload-credentials": [
      {
        "action": "gamelift:RequestUploadCredentials",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "BuildId": {
            "template": "${BuildId}"
          }
        }
      }
    ],
    "resolve-alias": [
      {
        "action": "gamelift:ResolveAlias",
        "resource_mappings": {
          "AliasId": {
            "template": "${AliasId}"
          }
        }
      }
    ],
    "resume-game-server-group": [
      {
        "action": "gamelift:ResumeGameServerGroup",
        "resource_mappings": {
          "GameServerGroupName": {
            "template": "${GameServerGroupName}"
          }
        }
      }
    ],
    "search-game-sessions": [
      {
        "action": "gamelift:SearchGameSessions",
        "resource_mappings": {}
      }
    ],
    "start-fleet-actions": [
      {
        "action": "gamelift:StartFleetActions",
        "resource_mappings": {
          "FleetId": {
            "template": "${FleetId}"
          }
        }
      }
    ],
    "start-game-session-placement": [
      {
        "action": "gamelift:StartGameSessionPlacement",
        "resource_mappings": {
          "GameSessionQueueName": {
            "template": "${GameSessionQueueName}"
          }
        }
      }
    ],
    "start-match-backfill": [
      {
        "action": "gamelift:StartMatchBackfill",
        "resource_mappings": {}
      }
    ],
    "start-matchmaking": [
      {
        "action": "gamelift:StartMatchmaking",
        "resource_mappings": {}
      }
    ],
    "stop-fleet-actions": [
      {
        "action": "gamelift:StopFleetActions",
        "resource_mappings": {
          "FleetId": {
            "template": "${FleetId}"
          }
        }
      }
    ],
    "stop-game-session-placement": [
      {
        "action": "gamelift:StopGameSessionPlacement",
        "resource_mappings": {}
      }
    ],
    "stop-matchmaking": [
      {
        "action": "gamelift:StopMatchmaking",
        "resource_mappings": {}
      }
    ],
    "suspend-game-server-group": [
      {
        "action": "gamelift:SuspendGameServerGroup",
        "resource_mappings": {
          "GameServerGroupName": {
            "template": "${GameServerGroupName}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "gamelift:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "alias": "%%iftemplatematch%${ResourceARN}%%",
          "build": "%%iftemplatematch%${ResourceARN}%%",
          "fleet": "%%iftemplatematch%${ResourceARN}%%",
          "gameServerGroup": "%%iftemplatematch%${ResourceARN}%%",
          "gameSessionQueue": "%%iftemplatematch%${ResourceARN}%%",
          "matchmakingConfiguration": "%%iftemplatematch%${ResourceARN}%%",
          "matchmakingRuleSet": "%%iftemplatematch%${ResourceARN}%%",
          "script": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "gamelift:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "alias": "%%iftemplatematch%${ResourceARN}%%",
          "build": "%%iftemplatematch%${ResourceARN}%%",
          "fleet": "%%iftemplatematch%${ResourceARN}%%",
          "gameServerGroup": "%%iftemplatematch%${ResourceARN}%%",
          "gameSessionQueue": "%%iftemplatematch%${ResourceARN}%%",
          "matchmakingConfiguration": "%%iftemplatematch%${ResourceARN}%%",
          "matchmakingRuleSet": "%%iftemplatematch%${ResourceARN}%%",
          "script": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "update-alias": [
      {
        "action": "gamelift:UpdateAlias",
        "resource_mappings": {
          "AliasId": {
            "template": "${AliasId}"
          }
        }
      }
    ],
    "update-build": [
      {
        "action": "gamelift:UpdateBuild",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "BuildId": {
            "template": "${BuildId}"
          }
        }
      }
    ],
    "update-fleet-attributes": [
      {
        "action": "gamelift:UpdateFleetAttributes",
        "resource_mappings": {
          "FleetId": {
            "template": "${FleetId}"
          }
        }
      }
    ],
    "update-fleet-capacity": [
      {
        "action": "gamelift:UpdateFleetCapacity",
        "resource_mappings": {
          "FleetId": {
            "template": "${FleetId}"
          }
        }
      }
    ],
    "update-fleet-port-settings": [
      {
        "action": "gamelift:UpdateFleetPortSettings",
        "resource_mappings": {
          "FleetId": {
            "template": "${FleetId}"
          }
        }
      }
    ],
    "update-game-server": [
      {
        "action": "gamelift:UpdateGameServer",
        "resource_mappings": {
          "GameServerGroupName": {
            "template": "${GameServerGroupName}"
          }
        }
      }
    ],
    "update-game-server-group": [
      {
        "action": "gamelift:UpdateGameServerGroup",
        "resource_mappings": {
          "GameServerGroupName": {
            "template": "${GameServerGroupName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "update-game-session": [
      {
        "action": "gamelift:UpdateGameSession",
        "resource_mappings": {}
      }
    ],
    "update-game-session-queue": [
      {
        "action": "gamelift:UpdateGameSessionQueue",
        "resource_mappings": {
          "GameSessionQueueName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "update-matchmaking-configuration": [
      {
        "action": "gamelift:UpdateMatchmakingConfiguration",
        "resource_mappings": {
          "MatchmakingConfigurationName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "update-runtime-configuration": [
      {
        "action": "gamelift:UpdateRuntimeConfiguration",
        "resource_mappings": {
          "FleetId": {
            "template": "${FleetId}"
          }
        }
      }
    ],
    "update-script": [
      {
        "action": "gamelift:UpdateScript",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "ScriptId": {
            "template": "${ScriptId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${StorageLocation.RoleArn}"
        }
      }
    ],
    "validate-matchmaking-rule-set": [
      {
        "action": "gamelift:ValidateMatchmakingRuleSet",
        "resource_mappings": {}
      }
    ]
  },
  "glacier": {
    "abort-multipart-upload": [
      {
        "action": "glacier:AbortMultipartUpload",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ],
    "abort-vault-lock": [
      {
        "action": "glacier:AbortVaultLock",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ],
    "add-tags-to-vault": [
      {
        "action": "glacier:AddTagsToVault",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ],
    "complete-multipart-upload": [
      {
        "action": "glacier:CompleteMultipartUpload",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ],
    "complete-vault-lock": [
      {
        "action": "glacier:CompleteVaultLock",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ],
    "create-vault": [
      {
        "action": "glacier:CreateVault",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ],
    "delete-archive": [
      {
        "action": "glacier:DeleteArchive",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ],
    "delete-vault": [
      {
        "action": "glacier:DeleteVault",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ],
    "delete-vault-access-policy": [
      {
        "action": "glacier:DeleteVaultAccessPolicy",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ],
    "delete-vault-notifications": [
      {
        "action": "glacier:DeleteVaultNotifications",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ],
    "describe-job": [
      {
        "action": "glacier:DescribeJob",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ],
    "describe-vault": [
      {
        "action": "glacier:DescribeVault",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ],
    "get-data-retrieval-policy": [
      {
        "action": "glacier:GetDataRetrievalPolicy",
        "resource_mappings": {}
      }
    ],
    "get-job-output": [
      {
        "action": "glacier:GetJobOutput",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ],
    "get-vault-access-policy": [
      {
        "action": "glacier:GetVaultAccessPolicy",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ],
    "get-vault-lock": [
      {
        "action": "glacier:GetVaultLock",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ],
    "get-vault-notifications": [
      {
        "action": "glacier:GetVaultNotifications",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ],
    "initiate-job": [
      {
        "action": "glacier:InitiateJob",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ],
    "initiate-multipart-upload": [
      {
        "action": "glacier:InitiateMultipartUpload",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ],
    "initiate-vault-lock": [
      {
        "action": "glacier:InitiateVaultLock",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ],
    "list-jobs": [
      {
        "action": "glacier:ListJobs",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ],
    "list-multipart-uploads": [
      {
        "action": "glacier:ListMultipartUploads",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ],
    "list-parts": [
      {
        "action": "glacier:ListParts",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ],
    "list-provisioned-capacity": [
      {
        "action": "glacier:ListProvisionedCapacity",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-vault": [
      {
        "action": "glacier:ListTagsForVault",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ],
    "list-vaults": [
      {
        "action": "glacier:ListVaults",
        "resource_mappings": {}
      }
    ],
    "purchase-provisioned-capacity": [
      {
        "action": "glacier:PurchaseProvisionedCapacity",
        "resource_mappings": {}
      }
    ],
    "remove-tags-from-vault": [
      {
        "action": "glacier:RemoveTagsFromVault",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ],
    "set-data-retrieval-policy": [
      {
        "action": "glacier:SetDataRetrievalPolicy",
        "resource_mappings": {}
      }
    ],
    "set-vault-access-policy": [
      {
        "action": "glacier:SetVaultAccessPolicy",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ],
    "set-vault-notifications": [
      {
        "action": "glacier:SetVaultNotifications",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ],
    "upload-archive": [
      {
        "action": "glacier:UploadArchive",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ],
    "upload-multipart-part": [
      {
        "action": "glacier:UploadMultipartPart",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "glacier:DescribeVault",
        "resource_mappings": {
          "VaultName": {
            "template": "${vaultName}"
          }
        }
      }
    ]
  },
  "globalaccelerator": {
    "add-custom-routing-endpoints": [
      {
        "action": "globalaccelerator:AddCustomRoutingEndpoints",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "endpointgroup": "${EndpointGroupArn}"
        }
      }
    ],
    "add-endpoints": [
      {
        "action": "globalaccelerator:AddEndpoints",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "endpointgroup": "${EndpointGroupArn}"
        }
      }
    ],
    "advertise-byoip-cidr": [
      {
        "action": "globalaccelerator:AdvertiseByoipCidr",
        "resource_mappings": {}
      }
    ],
    "allow-custom-routing-traffic": [
      {
        "action": "globalaccelerator:AllowCustomRoutingTraffic",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "endpointgroup": "${EndpointGroupArn}"
        }
      }
    ],
    "create-accelerator": [
      {
        "action": "globalaccelerator:CreateAccelerator",
        "resource_mappings": {}
      }
    ],
    "create-custom-routing-accelerator": [
      {
        "action": "globalaccelerator:CreateCustomRoutingAccelerator",
        "resource_mappings": {}
      }
    ],
    "create-custom-routing-endpoint-group": [
      {
        "action": "globalaccelerator:CreateCustomRoutingEndpointGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "listener": "${ListenerArn}"
        }
      }
    ],
    "create-custom-routing-listener": [
      {
        "action": "globalaccelerator:CreateCustomRoutingListener",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "accelerator": "${AcceleratorArn}"
        }
      }
    ],
    "create-endpoint-group": [
      {
        "action": "globalaccelerator:CreateEndpointGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "listener": "${ListenerArn}"
        }
      }
    ],
    "create-listener": [
      {
        "action": "globalaccelerator:CreateListener",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "accelerator": "${AcceleratorArn}"
        }
      }
    ],
    "delete-accelerator": [
      {
        "action": "globalaccelerator:DeleteAccelerator",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "accelerator": "${AcceleratorArn}"
        }
      }
    ],
    "delete-custom-routing-accelerator": [
      {
        "action": "globalaccelerator:DeleteCustomRoutingAccelerator",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "accelerator": "${AcceleratorArn}"
        }
      }
    ],
    "delete-custom-routing-endpoint-group": [
      {
        "action": "globalaccelerator:DeleteCustomRoutingEndpointGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "endpointgroup": "${EndpointGroupArn}"
        }
      }
    ],
    "delete-custom-routing-listener": [
      {
        "action": "globalaccelerator:DeleteCustomRoutingListener",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "listener": "${ListenerArn}"
        }
      }
    ],
    "delete-endpoint-group": [
      {
        "action": "globalaccelerator:DeleteEndpointGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "endpointgroup": "${EndpointGroupArn}"
        }
      }
    ],
    "delete-listener": [
      {
        "action": "globalaccelerator:DeleteListener",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "listener": "${ListenerArn}"
        }
      }
    ],
    "deny-custom-routing-traffic": [
      {
        "action": "globalaccelerator:DenyCustomRoutingTraffic",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "endpointgroup": "${EndpointGroupArn}"
        }
      }
    ],
    "deprovision-byoip-cidr": [
      {
        "action": "globalaccelerator:DeprovisionByoipCidr",
        "resource_mappings": {}
      }
    ],
    "describe-accelerator": [
      {
        "action": "globalaccelerator:DescribeAccelerator",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "accelerator": "${AcceleratorArn}"
        }
      }
    ],
    "describe-accelerator-attributes": [
      {
        "action": "globalaccelerator:DescribeAcceleratorAttributes",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "accelerator": "${AcceleratorArn}"
        }
      }
    ],
    "describe-custom-routing-accelerator": [
      {
        "action": "globalaccelerator:DescribeCustomRoutingAccelerator",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "accelerator": "${AcceleratorArn}"
        }
      }
    ],
    "describe-custom-routing-accelerator-attributes": [
      {
        "action": "globalaccelerator:DescribeCustomRoutingAcceleratorAttributes",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "accelerator": "${AcceleratorArn}"
        }
      }
    ],
    "describe-custom-routing-endpoint-group": [
      {
        "action": "globalaccelerator:DescribeCustomRoutingEndpointGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "endpointgroup": "${EndpointGroupArn}"
        }
      }
    ],
    "describe-custom-routing-listener": [
      {
        "action": "globalaccelerator:DescribeCustomRoutingListener",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "listener": "${ListenerArn}"
        }
      }
    ],
    "describe-endpoint-group": [
      {
        "action": "globalaccelerator:DescribeEndpointGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "endpointgroup": "${EndpointGroupArn}"
        }
      }
    ],
    "describe-listener": [
      {
        "action": "globalaccelerator:DescribeListener",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "listener": "${ListenerArn}"
        }
      }
    ],
    "list-accelerators": [
      {
        "action": "globalaccelerator:ListAccelerators",
        "resource_mappings": {}
      }
    ],
    "list-byoip-cidrs": [
      {
        "action": "globalaccelerator:ListByoipCidrs",
        "resource_mappings": {}
      }
    ],
    "list-custom-routing-accelerators": [
      {
        "action": "globalaccelerator:ListCustomRoutingAccelerators",
        "resource_mappings": {}
      }
    ],
    "list-custom-routing-endpoint-groups": [
      {
        "action": "globalaccelerator:ListCustomRoutingEndpointGroups",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "listener": "${ListenerArn}"
        }
      }
    ],
    "list-custom-routing-listeners": [
      {
        "action": "globalaccelerator:ListCustomRoutingListeners",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "accelerator": "${AcceleratorArn}"
        }
      }
    ],
    "list-custom-routing-port-mappings": [
      {
        "action": "globalaccelerator:ListCustomRoutingPortMappings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "accelerator": "${AcceleratorArn}"
        }
      }
    ],
    "list-custom-routing-port-mappings-by-destination": [
      {
        "action": "globalaccelerator:ListCustomRoutingPortMappingsByDestination",
        "resource_mappings": {}
      }
    ],
    "list-endpoint-groups": [
      {
        "action": "globalaccelerator:ListEndpointGroups",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "listener": "${ListenerArn}"
        }
      }
    ],
    "list-listeners": [
      {
        "action": "globalaccelerator:ListListeners",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "accelerator": "${AcceleratorArn}"
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "globalaccelerator:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "accelerator": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "provision-byoip-cidr": [
      {
        "action": "globalaccelerator:ProvisionByoipCidr",
        "resource_mappings": {}
      }
    ],
    "remove-custom-routing-endpoints": [
      {
        "action": "globalaccelerator:RemoveCustomRoutingEndpoints",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "endpointgroup": "${EndpointGroupArn}"
        }
      }
    ],
    "remove-endpoints": [
      {
        "action": "globalaccelerator:RemoveEndpoints",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "endpointgroup": "${EndpointGroupArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "globalaccelerator:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "accelerator": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "globalaccelerator:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "accelerator": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-accelerator": [
      {
        "action": "globalaccelerator:UpdateAccelerator",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "accelerator": "${AcceleratorArn}"
        }
      }
    ],
    "update-accelerator-attributes": [
      {
        "action": "globalaccelerator:UpdateAcceleratorAttributes",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "accelerator": "${AcceleratorArn}"
        }
      }
    ],
    "update-custom-routing-accelerator": [
      {
        "action": "globalaccelerator:UpdateCustomRoutingAccelerator",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "accelerator": "${AcceleratorArn}"
        }
      }
    ],
    "update-custom-routing-accelerator-attributes": [
      {
        "action": "globalaccelerator:UpdateCustomRoutingAcceleratorAttributes",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "accelerator": "${AcceleratorArn}"
        }
      }
    ],
    "update-custom-routing-listener": [
      {
        "action": "globalaccelerator:UpdateCustomRoutingListener",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "listener": "${ListenerArn}"
        }
      }
    ],
    "update-endpoint-group": [
      {
        "action": "globalaccelerator:UpdateEndpointGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "endpointgroup": "${EndpointGroupArn}"
        }
      }
    ],
    "update-listener": [
      {
        "action": "globalaccelerator:UpdateListener",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "listener": "${ListenerArn}"
        }
      }
    ],
    "withdraw-byoip-cidr": [
      {
        "action": "globalaccelerator:WithdrawByoipCidr",
        "resource_mappings": {}
      }
    ]
  },
  "glue": {
    "batch-create-partition": [
      {
        "action": "glue:BatchCreatePartition",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "batch-delete-connection": [
      {
        "action": "glue:BatchDeleteConnection",
        "resource_mappings": {
          "ConnectionName": {
            "template": "${ConnectionNameList[]}"
          }
        }
      }
    ],
    "batch-delete-partition": [
      {
        "action": "glue:BatchDeletePartition",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "batch-delete-table": [
      {
        "action": "glue:BatchDeleteTable",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TablesToDelete[]}"
          }
        }
      }
    ],
    "batch-delete-table-version": [
      {
        "action": "glue:BatchDeleteTableVersion",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableName}"
          },
          "TableVersionName": {
            "template": "${VersionIds[]}"
          }
        }
      }
    ],
    "batch-get-blueprints": [
      {
        "action": "glue:BatchGetBlueprints",
        "resource_mappings": {
          "BlueprintName": {
            "template": "${Names[]}"
          }
        }
      }
    ],
    "batch-get-crawlers": [
      {
        "action": "glue:BatchGetCrawlers",
        "resource_mappings": {}
      }
    ],
    "batch-get-custom-entity-types": [
      {
        "action": "glue:BatchGetCustomEntityTypes",
        "resource_mappings": {}
      }
    ],
    "batch-get-data-quality-result": [
      {
        "note": "NotFound",
        "action": "Glue:BatchGetDataQualityResult",
        "resource_mappings": {}
      }
    ],
    "batch-get-dev-endpoints": [
      {
        "action": "glue:BatchGetDevEndpoints",
        "resource_mappings": {}
      }
    ],
    "batch-get-jobs": [
      {
        "action": "glue:BatchGetJobs",
        "resource_mappings": {}
      }
    ],
    "batch-get-partition": [
      {
        "action": "glue:BatchGetPartition",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "batch-get-triggers": [
      {
        "action": "glue:BatchGetTriggers",
        "resource_mappings": {}
      }
    ],
    "batch-get-workflows": [
      {
        "action": "glue:BatchGetWorkflows",
        "resource_mappings": {}
      }
    ],
    "batch-stop-job-run": [
      {
        "action": "glue:BatchStopJobRun",
        "resource_mappings": {}
      }
    ],
    "batch-update-partition": [
      {
        "action": "glue:UpdatePartition",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "cancel-data-quality-rule-recommendation-run": [
      {
        "action": "glue:CancelDataQualityRuleRecommendationRun",
        "resource_mappings": {
          "RulesetName": {
            "template": "*"
          }
        }
      }
    ],
    "cancel-data-quality-ruleset-evaluation-run": [
      {
        "action": "glue:CancelDataQualityRulesetEvaluationRun",
        "resource_mappings": {
          "RulesetName": {
            "template": "*"
          }
        }
      }
    ],
    "cancel-ml-task-run": [
      {
        "action": "glue:CancelMLTaskRun",
        "resource_mappings": {
          "TransformId": {
            "template": "${TransformId}"
          }
        }
      }
    ],
    "cancel-statement": [
      {
        "action": "glue:CancelStatement",
        "resource_mappings": {
          "SessionId": {
            "template": "${SessionId}"
          }
        }
      }
    ],
    "check-schema-version-validity": [
      {
        "action": "glue:CheckSchemaVersionValidity",
        "resource_mappings": {}
      }
    ],
    "create-blueprint": [
      {
        "action": "glue:CreateBlueprint",
        "resource_mappings": {}
      }
    ],
    "create-classifier": [
      {
        "action": "glue:CreateClassifier",
        "resource_mappings": {}
      }
    ],
    "create-connection": [
      {
        "action": "glue:CreateConnection",
        "resource_mappings": {
          "ConnectionName": {
            "template": "${ConnectionInput.Name}"
          }
        }
      }
    ],
    "create-crawler": [
      {
        "action": "glue:CreateCrawler",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "arn:${Partition}:iam::${Account}:role/%%regex%${Role}%/(?:arn.*/)?(.+)/g%%"
        }
      }
    ],
    "create-custom-entity-type": [
      {
        "action": "glue:CreateCustomEntityType",
        "resource_mappings": {}
      }
    ],
    "create-data-quality-ruleset": [
      {
        "action": "glue:CreateDataQualityRuleset",
        "resource_mappings": {}
      }
    ],
    "create-database": [
      {
        "action": "glue:CreateDatabase",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseInput.Name}"
          }
        }
      }
    ],
    "create-dev-endpoint": [
      {
        "action": "glue:CreateDevEndpoint",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "create-job": [
      {
        "action": "glue:CreateJob",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "arn:${Partition}:iam::${Account}:role/%%regex%${Role}%/(?:arn.*/)?(.+)/g%%"
        }
      }
    ],
    "create-ml-transform": [
      {
        "action": "glue:CreateMLTransform",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "arn:${Partition}:iam::${Account}:role/%%regex%${Role}%/(?:arn.*/)?(.+)/g%%"
        }
      }
    ],
    "create-partition": [
      {
        "action": "glue:CreatePartition",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "create-partition-index": [
      {
        "action": "glue:UpdateTable",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "create-registry": [
      {
        "action": "glue:CreateRegistry",
        "resource_mappings": {
          "RegistryName": {
            "template": "${RegistryName}"
          }
        }
      }
    ],
    "create-schema": [
      {
        "action": "glue:CreateSchema",
        "resource_mappings": {
          "SchemaName": {
            "template": "${SchemaName}"
          }
        },
        "resourcearn_mappings": {
          "registry": "${RegistryId.RegistryArn}"
        }
      }
    ],
    "create-script": [
      {
        "action": "glue:CreateScript",
        "resource_mappings": {}
      }
    ],
    "create-security-configuration": [
      {
        "action": "glue:CreateSecurityConfiguration",
        "resource_mappings": {}
      }
    ],
    "create-session": [
      {
        "action": "glue:CreateSession",
        "resource_mappings": {}
      }
    ],
    "create-table": [
      {
        "action": "glue:CreateTable",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableInput.Name}"
          }
        }
      }
    ],
    "create-trigger": [
      {
        "action": "glue:CreateTrigger",
        "resource_mappings": {}
      }
    ],
    "create-user-defined-function": [
      {
        "action": "glue:CreateUserDefinedFunction",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "UserDefinedFunctionName": {
            "template": "${FunctionInput.FunctionName}"
          }
        }
      }
    ],
    "create-workflow": [
      {
        "action": "glue:CreateWorkflow",
        "resource_mappings": {}
      }
    ],
    "delete-blueprint": [
      {
        "action": "glue:DeleteBlueprint",
        "resource_mappings": {
          "BlueprintName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-classifier": [
      {
        "action": "glue:DeleteClassifier",
        "resource_mappings": {}
      }
    ],
    "delete-column-statistics-for-partition": [
      {
        "action": "glue:UpdatePartition",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "delete-column-statistics-for-table": [
      {
        "action": "glue:UpdateTable",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "delete-connection": [
      {
        "action": "glue:DeleteConnection",
        "resource_mappings": {
          "ConnectionName": {
            "template": "${ConnectionName}"
          }
        }
      }
    ],
    "delete-crawler": [
      {
        "action": "glue:DeleteCrawler",
        "resource_mappings": {}
      }
    ],
    "delete-custom-entity-type": [
      {
        "action": "glue:DeleteCustomEntityType",
        "resource_mappings": {}
      }
    ],
    "delete-data-quality-ruleset": [
      {
        "action": "glue:DeleteDataQualityRuleset",
        "resource_mappings": {
          "RulesetName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-database": [
      {
        "action": "glue:DeleteDatabase",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-dev-endpoint": [
      {
        "action": "glue:DeleteDevEndpoint",
        "resource_mappings": {}
      }
    ],
    "delete-job": [
      {
        "action": "glue:DeleteJob",
        "resource_mappings": {}
      }
    ],
    "delete-ml-transform": [
      {
        "action": "glue:DeleteMLTransform",
        "resource_mappings": {
          "TransformId": {
            "template": "${TransformId}"
          }
        }
      }
    ],
    "delete-partition": [
      {
        "action": "glue:DeletePartition",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "delete-partition-index": [
      {
        "action": "glue:UpdateTable",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "delete-registry": [
      {
        "action": "glue:DeleteRegistry",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "registry": "${RegistryId.RegistryArn}"
        }
      }
    ],
    "delete-resource-policy": [
      {
        "action": "glue:DeleteResourcePolicy",
        "resource_mappings": {}
      }
    ],
    "delete-schema": [
      {
        "action": "glue:DeleteSchema",
        "resource_mappings": {
          "RegistryName": {
            "template": "${SchemaId.RegistryName}"
          }
        },
        "resourcearn_mappings": {
          "schema": "${SchemaId.SchemaArn}"
        }
      }
    ],
    "delete-schema-versions": [
      {
        "action": "glue:DeleteSchemaVersions",
        "resource_mappings": {
          "RegistryName": {
            "template": "${SchemaId.RegistryName}"
          }
        },
        "resourcearn_mappings": {
          "schema": "${SchemaId.SchemaArn}"
        }
      }
    ],
    "delete-security-configuration": [
      {
        "action": "glue:DeleteSecurityConfiguration",
        "resource_mappings": {}
      }
    ],
    "delete-session": [
      {
        "action": "glue:DeleteSession",
        "resource_mappings": {
          "SessionId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-table": [
      {
        "action": "glue:DeleteTable",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-table-version": [
      {
        "action": "glue:DeleteTableVersion",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableName}"
          },
          "TableVersionName": {
            "template": "${VersionId}"
          }
        }
      }
    ],
    "delete-trigger": [
      {
        "action": "glue:DeleteTrigger",
        "resource_mappings": {}
      }
    ],
    "delete-user-defined-function": [
      {
        "action": "glue:DeleteUserDefinedFunction",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "UserDefinedFunctionName": {
            "template": "${FunctionName}"
          }
        }
      }
    ],
    "delete-workflow": [
      {
        "action": "glue:DeleteWorkflow",
        "resource_mappings": {}
      }
    ],
    "get-blueprint": [
      {
        "action": "glue:GetBlueprint",
        "resource_mappings": {
          "BlueprintName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-blueprint-run": [
      {
        "action": "glue:GetBlueprintRun",
        "resource_mappings": {
          "BlueprintName": {
            "template": "${BlueprintName}"
          }
        }
      }
    ],
    "get-blueprint-runs": [
      {
        "action": "glue:GetBlueprintRuns",
        "resource_mappings": {
          "BlueprintName": {
            "template": "${BlueprintName}"
          }
        }
      }
    ],
    "get-catalog-import-status": [
      {
        "action": "glue:GetCatalogImportStatus",
        "resource_mappings": {}
      }
    ],
    "get-classifier": [
      {
        "action": "glue:GetClassifier",
        "resource_mappings": {}
      }
    ],
    "get-classifiers": [
      {
        "action": "glue:GetClassifiers",
        "resource_mappings": {}
      }
    ],
    "get-column-statistics-for-partition": [
      {
        "action": "glue:GetPartition",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "get-column-statistics-for-table": [
      {
        "action": "glue:GetTable",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "get-connection": [
      {
        "action": "glue:GetConnection",
        "resource_mappings": {
          "ConnectionName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-connections": [
      {
        "action": "glue:GetConnections",
        "resource_mappings": {
          "ConnectionName": {
            "template": "*"
          }
        }
      }
    ],
    "get-crawler": [
      {
        "action": "glue:GetCrawler",
        "resource_mappings": {}
      }
    ],
    "get-crawler-metrics": [
      {
        "action": "glue:GetCrawlerMetrics",
        "resource_mappings": {}
      }
    ],
    "get-crawlers": [
      {
        "action": "glue:GetCrawlers",
        "resource_mappings": {}
      }
    ],
    "get-custom-entity-type": [
      {
        "action": "glue:GetCustomEntityType",
        "resource_mappings": {}
      }
    ],
    "get-data-catalog-encryption-settings": [
      {
        "action": "glue:GetDataCatalogEncryptionSettings",
        "resource_mappings": {}
      }
    ],
    "get-data-quality-result": [
      {
        "action": "glue:GetDataQualityResult",
        "resource_mappings": {
          "RulesetName": {
            "template": "*"
          }
        }
      }
    ],
    "get-data-quality-rule-recommendation-run": [
      {
        "action": "glue:GetDataQualityRuleRecommendationRun",
        "resource_mappings": {
          "RulesetName": {
            "template": "*"
          }
        }
      }
    ],
    "get-data-quality-ruleset": [
      {
        "action": "glue:GetDataQualityRuleset",
        "resource_mappings": {
          "RulesetName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-data-quality-ruleset-evaluation-run": [
      {
        "action": "glue:GetDataQualityRulesetEvaluationRun",
        "resource_mappings": {
          "RulesetName": {
            "template": "*"
          }
        }
      }
    ],
    "get-database": [
      {
        "action": "glue:GetDatabase",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-databases": [
      {
        "action": "glue:GetDatabases",
        "resource_mappings": {
          "DatabaseName": {
            "template": "*"
          }
        }
      }
    ],
    "get-dataflow-graph": [
      {
        "action": "glue:GetDataflowGraph",
        "resource_mappings": {}
      }
    ],
    "get-dev-endpoint": [
      {
        "action": "glue:GetDevEndpoint",
        "resource_mappings": {}
      }
    ],
    "get-dev-endpoints": [
      {
        "action": "glue:GetDevEndpoints",
        "resource_mappings": {}
      }
    ],
    "get-job": [
      {
        "action": "glue:GetJob",
        "resource_mappings": {}
      }
    ],
    "get-job-bookmark": [
      {
        "action": "glue:GetJobBookmark",
        "resource_mappings": {}
      }
    ],
    "get-job-run": [
      {
        "action": "glue:GetJobRun",
        "resource_mappings": {}
      }
    ],
    "get-job-runs": [
      {
        "action": "glue:GetJobRuns",
        "resource_mappings": {}
      }
    ],
    "get-jobs": [
      {
        "action": "glue:GetJobs",
        "resource_mappings": {}
      }
    ],
    "get-ml-task-run": [
      {
        "action": "glue:GetMLTaskRun",
        "resource_mappings": {
          "TransformId": {
            "template": "${TransformId}"
          }
        }
      }
    ],
    "get-ml-task-runs": [
      {
        "action": "glue:GetMLTaskRuns",
        "resource_mappings": {
          "TransformId": {
            "template": "${TransformId}"
          }
        }
      }
    ],
    "get-ml-transform": [
      {
        "action": "glue:GetMLTransform",
        "resource_mappings": {
          "TransformId": {
            "template": "${TransformId}"
          }
        }
      }
    ],
    "get-ml-transforms": [
      {
        "action": "glue:GetMLTransforms",
        "resource_mappings": {}
      }
    ],
    "get-mapping": [
      {
        "action": "glue:GetMapping",
        "resource_mappings": {}
      }
    ],
    "get-partition": [
      {
        "action": "glue:GetPartition",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "get-partition-indexes": [
      {
        "action": "glue:GetTable",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "get-partitions": [
      {
        "action": "glue:GetPartitions",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "get-plan": [
      {
        "action": "glue:GetPlan",
        "resource_mappings": {}
      }
    ],
    "get-registry": [
      {
        "action": "glue:GetRegistry",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "registry": "${RegistryId.RegistryArn}"
        }
      }
    ],
    "get-resource-policies": [
      {
        "action": "glue:GetResourcePolicies",
        "resource_mappings": {}
      }
    ],
    "get-resource-policy": [
      {
        "action": "glue:GetResourcePolicy",
        "resource_mappings": {}
      }
    ],
    "get-schema": [
      {
        "action": "glue:GetSchema",
        "resource_mappings": {
          "RegistryName": {
            "template": "${SchemaId.RegistryName}"
          }
        },
        "resourcearn_mappings": {
          "schema": "${SchemaId.SchemaArn}"
        }
      }
    ],
    "get-schema-by-definition": [
      {
        "action": "glue:GetSchemaByDefinition",
        "resource_mappings": {
          "RegistryName": {
            "template": "${SchemaId.RegistryName}"
          }
        },
        "resourcearn_mappings": {
          "schema": "${SchemaId.SchemaArn}"
        }
      }
    ],
    "get-schema-version": [
      {
        "action": "glue:GetSchemaVersion",
        "resource_mappings": {
          "RegistryName": {
            "template": "${SchemaId.RegistryName}"
          }
        },
        "resourcearn_mappings": {
          "schema": "${SchemaId.SchemaArn}"
        }
      }
    ],
    "get-schema-versions-diff": [
      {
        "action": "glue:GetSchemaVersionsDiff",
        "resource_mappings": {
          "RegistryName": {
            "template": "${SchemaId.RegistryName}"
          }
        },
        "resourcearn_mappings": {
          "schema": "${SchemaId.SchemaArn}"
        }
      }
    ],
    "get-security-configuration": [
      {
        "action": "glue:GetSecurityConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-security-configurations": [
      {
        "action": "glue:GetSecurityConfigurations",
        "resource_mappings": {}
      }
    ],
    "get-session": [
      {
        "action": "glue:GetSession",
        "resource_mappings": {
          "SessionId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-statement": [
      {
        "action": "glue:GetStatement",
        "resource_mappings": {
          "SessionId": {
            "template": "${SessionId}"
          }
        }
      }
    ],
    "get-table": [
      {
        "action": "glue:GetTable",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-table-version": [
      {
        "action": "glue:GetTableVersion",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableName}"
          },
          "TableVersionName": {
            "template": "${VersionId}"
          }
        }
      }
    ],
    "get-table-versions": [
      {
        "action": "glue:GetTableVersions",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableName}"
          },
          "TableVersionName": {
            "template": "*"
          }
        }
      }
    ],
    "get-tables": [
      {
        "action": "glue:GetTables",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "*"
          }
        }
      }
    ],
    "get-tags": [
      {
        "action": "glue:GetTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "crawler": "%%iftemplatematch%${ResourceArn}%%",
          "devendpoint": "%%iftemplatematch%${ResourceArn}%%",
          "job": "%%iftemplatematch%${ResourceArn}%%",
          "trigger": "%%iftemplatematch%${ResourceArn}%%",
          "workflow": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "get-trigger": [
      {
        "action": "glue:GetTrigger",
        "resource_mappings": {}
      }
    ],
    "get-triggers": [
      {
        "action": "glue:GetTriggers",
        "resource_mappings": {}
      }
    ],
    "get-unfiltered-partition-metadata": [
      {
        "action": "glue:GetPartition",
        "undocumented": true,
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "get-unfiltered-partitions-metadata": [
      {
        "action": "glue:GetPartitionMetadata",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "get-unfiltered-table-metadata": [
      {
        "action": "glue:GetTable",
        "undocumented": true,
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-user-defined-function": [
      {
        "action": "glue:GetUserDefinedFunction",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "UserDefinedFunctionName": {
            "template": "${FunctionName}"
          }
        }
      }
    ],
    "get-user-defined-functions": [
      {
        "action": "glue:GetUserDefinedFunctions",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "UserDefinedFunctionName": {
            "template": "*"
          }
        }
      }
    ],
    "get-workflow": [
      {
        "action": "glue:GetWorkflow",
        "resource_mappings": {}
      }
    ],
    "get-workflow-run": [
      {
        "action": "glue:GetWorkflowRun",
        "resource_mappings": {}
      }
    ],
    "get-workflow-run-properties": [
      {
        "action": "glue:GetWorkflowRunProperties",
        "resource_mappings": {}
      }
    ],
    "get-workflow-runs": [
      {
        "action": "glue:GetWorkflowRuns",
        "resource_mappings": {}
      }
    ],
    "import-catalog-to-glue": [
      {
        "action": "glue:ImportCatalogToGlue",
        "resource_mappings": {}
      }
    ],
    "list-blueprints": [
      {
        "action": "glue:ListBlueprints",
        "resource_mappings": {}
      }
    ],
    "list-crawlers": [
      {
        "action": "glue:ListCrawlers",
        "resource_mappings": {}
      }
    ],
    "list-crawls": [
      {
        "action": "glue:ListCrawls",
        "resource_mappings": {}
      }
    ],
    "list-custom-entity-types": [
      {
        "action": "glue:ListCustomEntityTypes",
        "resource_mappings": {}
      }
    ],
    "list-data-quality-results": [
      {
        "action": "glue:ListDataQualityResults",
        "resource_mappings": {
          "RulesetName": {
            "template": "*"
          }
        }
      }
    ],
    "list-data-quality-rule-recommendation-runs": [
      {
        "action": "glue:ListDataQualityRuleRecommendationRuns",
        "resource_mappings": {
          "RulesetName": {
            "template": "*"
          }
        }
      }
    ],
    "list-data-quality-ruleset-evaluation-runs": [
      {
        "action": "glue:ListDataQualityRulesetEvaluationRuns",
        "resource_mappings": {
          "RulesetName": {
            "template": "*"
          }
        }
      }
    ],
    "list-data-quality-rulesets": [
      {
        "action": "glue:ListDataQualityRulesets",
        "resource_mappings": {
          "RulesetName": {
            "template": "*"
          }
        }
      }
    ],
    "list-dev-endpoints": [
      {
        "action": "glue:ListDevEndpoints",
        "resource_mappings": {}
      }
    ],
    "list-jobs": [
      {
        "action": "glue:ListJobs",
        "resource_mappings": {}
      }
    ],
    "list-ml-transforms": [
      {
        "action": "glue:ListMLTransforms",
        "resource_mappings": {}
      }
    ],
    "list-registries": [
      {
        "action": "glue:ListRegistries",
        "resource_mappings": {}
      }
    ],
    "list-schema-versions": [
      {
        "action": "glue:ListSchemaVersions",
        "resource_mappings": {
          "RegistryName": {
            "template": "${SchemaId.RegistryName}"
          }
        },
        "resourcearn_mappings": {
          "schema": "${SchemaId.SchemaArn}"
        }
      }
    ],
    "list-schemas": [
      {
        "action": "glue:ListSchemas",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "registry": "${RegistryId.RegistryArn}"
        }
      }
    ],
    "list-sessions": [
      {
        "action": "glue:ListSessions",
        "resource_mappings": {}
      }
    ],
    "list-statements": [
      {
        "action": "glue:ListStatements",
        "resource_mappings": {
          "SessionId": {
            "template": "${SessionId}"
          }
        }
      }
    ],
    "list-triggers": [
      {
        "action": "glue:ListTriggers",
        "resource_mappings": {}
      }
    ],
    "list-workflows": [
      {
        "action": "glue:ListWorkflows",
        "resource_mappings": {}
      }
    ],
    "put-data-catalog-encryption-settings": [
      {
        "action": "glue:PutDataCatalogEncryptionSettings",
        "resource_mappings": {}
      }
    ],
    "put-resource-policy": [
      {
        "action": "glue:PutResourcePolicy",
        "resource_mappings": {}
      }
    ],
    "put-schema-version-metadata": [
      {
        "action": "glue:PutSchemaVersionMetadata",
        "resource_mappings": {
          "RegistryName": {
            "template": "${SchemaId.RegistryName}"
          }
        },
        "resourcearn_mappings": {
          "schema": "${SchemaId.SchemaArn}"
        }
      }
    ],
    "put-workflow-run-properties": [
      {
        "action": "glue:PutWorkflowRunProperties",
        "resource_mappings": {}
      }
    ],
    "query-schema-version-metadata": [
      {
        "action": "glue:QuerySchemaVersionMetadata",
        "resource_mappings": {
          "RegistryName": {
            "template": "${SchemaId.RegistryName}"
          }
        },
        "resourcearn_mappings": {
          "schema": "${SchemaId.SchemaArn}"
        }
      }
    ],
    "register-schema-version": [
      {
        "action": "glue:RegisterSchemaVersion",
        "resource_mappings": {
          "RegistryName": {
            "template": "${SchemaId.RegistryName}"
          }
        },
        "resourcearn_mappings": {
          "schema": "${SchemaId.SchemaArn}"
        }
      }
    ],
    "remove-schema-version-metadata": [
      {
        "action": "glue:RemoveSchemaVersionMetadata",
        "resource_mappings": {
          "RegistryName": {
            "template": "${SchemaId.RegistryName}"
          }
        },
        "resourcearn_mappings": {
          "schema": "${SchemaId.SchemaArn}"
        }
      }
    ],
    "reset-job-bookmark": [
      {
        "action": "glue:ResetJobBookmark",
        "resource_mappings": {}
      }
    ],
    "resume-workflow-run": [
      {
        "action": "glue:ResumeWorkflowRun",
        "resource_mappings": {}
      }
    ],
    "run-statement": [
      {
        "action": "glue:RunStatement",
        "resource_mappings": {
          "SessionId": {
            "template": "${SessionId}"
          }
        }
      }
    ],
    "search-tables": [
      {
        "action": "glue:SearchTables",
        "resource_mappings": {
          "DatabaseName": {
            "template": "*"
          },
          "TableName": {
            "template": "*"
          }
        }
      }
    ],
    "start-blueprint-run": [
      {
        "action": "glue:StartBlueprintRun",
        "resource_mappings": {
          "BlueprintName": {
            "template": "${BlueprintName}"
          }
        }
      }
    ],
    "start-crawler": [
      {
        "action": "glue:StartCrawler",
        "resource_mappings": {}
      }
    ],
    "start-crawler-schedule": [
      {
        "action": "glue:StartCrawlerSchedule",
        "resource_mappings": {}
      }
    ],
    "start-data-quality-rule-recommendation-run": [
      {
        "action": "glue:StartDataQualityRuleRecommendationRun",
        "resource_mappings": {
          "RulesetName": {
            "template": "${CreatedRulesetName}"
          }
        }
      }
    ],
    "start-data-quality-ruleset-evaluation-run": [
      {
        "action": "glue:StartDataQualityRulesetEvaluationRun",
        "resource_mappings": {
          "RulesetName": {
            "template": "${RulesetNames[]}"
          }
        }
      }
    ],
    "start-export-labels-task-run": [
      {
        "action": "glue:StartExportLabelsTaskRun",
        "resource_mappings": {
          "TransformId": {
            "template": "${TransformId}"
          }
        }
      }
    ],
    "start-import-labels-task-run": [
      {
        "action": "glue:StartImportLabelsTaskRun",
        "resource_mappings": {
          "TransformId": {
            "template": "${TransformId}"
          }
        }
      }
    ],
    "start-job-run": [
      {
        "action": "glue:StartJobRun",
        "resource_mappings": {}
      }
    ],
    "start-ml-evaluation-task-run": [
      {
        "action": "glue:StartMLEvaluationTaskRun",
        "resource_mappings": {
          "TransformId": {
            "template": "${TransformId}"
          }
        }
      }
    ],
    "start-ml-labeling-set-generation-task-run": [
      {
        "action": "glue:StartMLLabelingSetGenerationTaskRun",
        "resource_mappings": {
          "TransformId": {
            "template": "${TransformId}"
          }
        }
      }
    ],
    "start-trigger": [
      {
        "action": "glue:StartTrigger",
        "resource_mappings": {}
      }
    ],
    "start-workflow-run": [
      {
        "action": "glue:StartWorkflowRun",
        "resource_mappings": {}
      }
    ],
    "stop-crawler": [
      {
        "action": "glue:StopCrawler",
        "resource_mappings": {}
      }
    ],
    "stop-crawler-schedule": [
      {
        "action": "glue:StopCrawlerSchedule",
        "resource_mappings": {}
      }
    ],
    "stop-session": [
      {
        "action": "glue:StopSession",
        "resource_mappings": {
          "SessionId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "stop-trigger": [
      {
        "action": "glue:StopTrigger",
        "resource_mappings": {}
      }
    ],
    "stop-workflow-run": [
      {
        "action": "glue:StopWorkflowRun",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "glue:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "crawler": "%%iftemplatematch%${ResourceArn}%%",
          "devendpoint": "%%iftemplatematch%${ResourceArn}%%",
          "job": "%%iftemplatematch%${ResourceArn}%%",
          "trigger": "%%iftemplatematch%${ResourceArn}%%",
          "workflow": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "glue:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "crawler": "%%iftemplatematch%${ResourceArn}%%",
          "devendpoint": "%%iftemplatematch%${ResourceArn}%%",
          "job": "%%iftemplatematch%${ResourceArn}%%",
          "trigger": "%%iftemplatematch%${ResourceArn}%%",
          "workflow": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-blueprint": [
      {
        "action": "glue:UpdateBlueprint",
        "resource_mappings": {
          "BlueprintName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "update-classifier": [
      {
        "action": "glue:UpdateClassifier",
        "resource_mappings": {}
      }
    ],
    "update-column-statistics-for-partition": [
      {
        "action": "glue:UpdateColumnStatisticsForPartition",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "update-column-statistics-for-table": [
      {
        "action": "glue:UpdateColumnStatisticsForTable",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "update-connection": [
      {
        "action": "glue:UpdateConnection",
        "resource_mappings": {
          "ConnectionName": {
            "template": "%%many%${Name}%${ConnectionInput.Name}%%"
          }
        }
      }
    ],
    "update-crawler": [
      {
        "action": "glue:UpdateCrawler",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "arn:${Partition}:iam::${Account}:role/%%regex%${Role}%/(?:arn.*/)?(.+)/g%%"
        }
      }
    ],
    "update-crawler-schedule": [
      {
        "action": "glue:UpdateCrawlerSchedule",
        "resource_mappings": {}
      }
    ],
    "update-data-quality-ruleset": [
      {
        "action": "glue:UpdateDataQualityRuleset",
        "resource_mappings": {
          "RulesetName": {
            "template": "%%many%${Name}%${UpdatedName}%%"
          }
        }
      }
    ],
    "update-database": [
      {
        "action": "glue:UpdateDatabase",
        "resource_mappings": {
          "DatabaseName": {
            "template": "%%many%${Name}%${DatabaseInput.Name}%%"
          }
        }
      }
    ],
    "update-dev-endpoint": [
      {
        "action": "glue:UpdateDevEndpoint",
        "resource_mappings": {}
      }
    ],
    "update-job": [
      {
        "action": "glue:UpdateJob",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "arn:${Partition}:iam::${Account}:role/%%regex%${JobUpdate.Role}%/(?:arn.*/)?(.+)/g%%"
        }
      }
    ],
    "update-job-from-source-control": [
      {
        "action": "glue:UpdateJobFromSourceControl",
        "resource_mappings": {
          "JobName": {
            "template": "${JobName}"
          }
        }
      }
    ],
    "update-ml-transform": [
      {
        "action": "glue:UpdateMLTransform",
        "resource_mappings": {
          "TransformId": {
            "template": "${TransformId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "arn:${Partition}:iam::${Account}:role/%%regex%${Role}%/(?:arn.*/)?(.+)/g%%"
        }
      }
    ],
    "update-partition": [
      {
        "action": "glue:UpdatePartition",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "update-registry": [
      {
        "action": "glue:UpdateRegistry",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "registry": "${RegistryId.RegistryArn}"
        }
      }
    ],
    "update-schema": [
      {
        "action": "glue:UpdateSchema",
        "resource_mappings": {
          "RegistryName": {
            "template": "${SchemaId.RegistryName}"
          }
        },
        "resourcearn_mappings": {
          "schema": "${SchemaId.SchemaArn}"
        }
      }
    ],
    "update-source-control-from-job": [
      {
        "action": "glue:UpdateSourceControlFromJob",
        "resource_mappings": {
          "JobName": {
            "template": "${JobName}"
          }
        }
      }
    ],
    "update-table": [
      {
        "action": "glue:UpdateTable",
        "resource_mappings": {
          "DatabaseName": {
            "template": "%%many%${DatabaseName}%${TableInput.TargetTable.DatabaseName}%%"
          },
          "TableName": {
            "template": "%%many%${TableInput.Name}%${TableInput.TargetTable.Name}%%"
          }
        }
      }
    ],
    "update-trigger": [
      {
        "action": "glue:UpdateTrigger",
        "resource_mappings": {}
      }
    ],
    "update-user-defined-function": [
      {
        "action": "glue:UpdateUserDefinedFunction",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "UserDefinedFunctionName": {
            "template": "%%many%${FunctionName}%${FunctionInput.FunctionName}%%"
          }
        }
      }
    ],
    "update-workflow": [
      {
        "action": "glue:UpdateWorkflow",
        "resource_mappings": {}
      }
    ]
  },
  "grafana": {
    "associate-license": [
      {
        "action": "grafana:AssociateLicense",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workspaceId}"
          }
        }
      },
      {
        "action": "aws-marketplace:ViewSubscriptions",
        "resource_mappings": {}
      }
    ],
    "create-workspace": [
      {
        "action": "grafana:CreateWorkspace",
        "resource_mappings": {}
      },
      {
        "action": "organizations:DescribeOrganization",
        "resource_mappings": {}
      },
      {
        "action": "sso:CreateManagedApplicationInstance",
        "resource_mappings": {}
      },
      {
        "action": "sso:DescribeRegisteredRegions",
        "resource_mappings": {}
      },
      {
        "action": "sso:GetSharedSsoConfiguration",
        "resource_mappings": {}
      }
    ],
    "create-workspace-api-key": [
      {
        "action": "grafana:CreateWorkspaceApiKey",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "delete-workspace": [
      {
        "action": "grafana:DeleteWorkspace",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workspaceId}"
          }
        }
      },
      {
        "action": "sso:DeleteManagedApplicationInstance",
        "resource_mappings": {}
      }
    ],
    "delete-workspace-api-key": [
      {
        "action": "grafana:DeleteWorkspaceApiKey",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "describe-workspace": [
      {
        "action": "grafana:DescribeWorkspace",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "describe-workspace-authentication": [
      {
        "action": "grafana:DescribeWorkspaceAuthentication",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "describe-workspace-configuration": [
      {
        "action": "grafana:DescribeWorkspaceConfiguration",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "disassociate-license": [
      {
        "action": "grafana:DisassociateLicense",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "list-permissions": [
      {
        "action": "grafana:ListPermissions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "grafana:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "workspace": "${resourceArn}"
        }
      }
    ],
    "list-versions": [
      {
        "action": "grafana:ListVersions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "list-workspaces": [
      {
        "action": "grafana:ListWorkspaces",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "grafana:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "workspace": "${resourceArn}"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "grafana:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "workspace": "${resourceArn}"
        }
      }
    ],
    "update-permissions": [
      {
        "action": "grafana:UpdatePermissions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "update-workspace": [
      {
        "action": "grafana:UpdateWorkspace",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "update-workspace-authentication": [
      {
        "action": "grafana:UpdateWorkspaceAuthentication",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "update-workspace-configuration": [
      {
        "action": "grafana:UpdateWorkspaceConfiguration",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ]
  },
  "greengrass": {
    "associate-role-to-group": [
      {
        "action": "greengrass:AssociateRoleToGroup",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "associate-service-role-to-account": [
      {
        "action": "greengrass:AssociateServiceRoleToAccount",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "create-connector-definition": [
      {
        "action": "greengrass:CreateConnectorDefinition",
        "resource_mappings": {}
      }
    ],
    "create-connector-definition-version": [
      {
        "action": "greengrass:CreateConnectorDefinitionVersion",
        "resource_mappings": {
          "ConnectorDefinitionId": {
            "template": "${ConnectorDefinitionId}"
          }
        }
      }
    ],
    "create-core-definition": [
      {
        "action": "greengrass:CreateCoreDefinition",
        "resource_mappings": {}
      }
    ],
    "create-core-definition-version": [
      {
        "action": "greengrass:CreateCoreDefinitionVersion",
        "resource_mappings": {
          "CoreDefinitionId": {
            "template": "${CoreDefinitionId}"
          }
        }
      }
    ],
    "create-deployment": [
      {
        "action": "greengrass:CreateDeployment",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupId}"
          }
        }
      },
      {
        "action": "iot:CancelJob",
        "resource_mappings": {
          "JobId": {
            "template": "*"
          }
        }
      }
    ],
    "create-device-definition": [
      {
        "action": "greengrass:CreateDeviceDefinition",
        "resource_mappings": {}
      }
    ],
    "create-device-definition-version": [
      {
        "action": "greengrass:CreateDeviceDefinitionVersion",
        "resource_mappings": {
          "DeviceDefinitionId": {
            "template": "${DeviceDefinitionId}"
          }
        }
      }
    ],
    "create-function-definition": [
      {
        "action": "greengrass:CreateFunctionDefinition",
        "resource_mappings": {}
      }
    ],
    "create-function-definition-version": [
      {
        "action": "greengrass:CreateFunctionDefinitionVersion",
        "resource_mappings": {
          "FunctionDefinitionId": {
            "template": "${FunctionDefinitionId}"
          }
        }
      }
    ],
    "create-group": [
      {
        "action": "greengrass:CreateGroup",
        "resource_mappings": {}
      }
    ],
    "create-group-certificate-authority": [
      {
        "action": "greengrass:CreateGroupCertificateAuthority",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupId}"
          }
        }
      }
    ],
    "create-group-version": [
      {
        "action": "greengrass:CreateGroupVersion",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupId}"
          }
        }
      }
    ],
    "create-logger-definition": [
      {
        "action": "greengrass:CreateLoggerDefinition",
        "resource_mappings": {}
      }
    ],
    "create-logger-definition-version": [
      {
        "action": "greengrass:CreateLoggerDefinitionVersion",
        "resource_mappings": {
          "LoggerDefinitionId": {
            "template": "${LoggerDefinitionId}"
          }
        }
      }
    ],
    "create-resource-definition": [
      {
        "action": "greengrass:CreateResourceDefinition",
        "resource_mappings": {}
      }
    ],
    "create-resource-definition-version": [
      {
        "action": "greengrass:CreateResourceDefinitionVersion",
        "resource_mappings": {
          "ResourceDefinitionId": {
            "template": "${ResourceDefinitionId}"
          }
        }
      }
    ],
    "create-software-update-job": [
      {
        "action": "greengrass:CreateSoftwareUpdateJob",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${S3UrlSignerRole}"
        }
      }
    ],
    "create-subscription-definition": [
      {
        "action": "greengrass:CreateSubscriptionDefinition",
        "resource_mappings": {}
      }
    ],
    "create-subscription-definition-version": [
      {
        "action": "greengrass:CreateSubscriptionDefinitionVersion",
        "resource_mappings": {
          "SubscriptionDefinitionId": {
            "template": "${SubscriptionDefinitionId}"
          }
        }
      }
    ],
    "delete-connector-definition": [
      {
        "action": "greengrass:DeleteConnectorDefinition",
        "resource_mappings": {
          "ConnectorDefinitionId": {
            "template": "${ConnectorDefinitionId}"
          }
        }
      }
    ],
    "delete-core-definition": [
      {
        "action": "greengrass:DeleteCoreDefinition",
        "resource_mappings": {
          "CoreDefinitionId": {
            "template": "${CoreDefinitionId}"
          }
        }
      }
    ],
    "delete-device-definition": [
      {
        "action": "greengrass:DeleteDeviceDefinition",
        "resource_mappings": {
          "DeviceDefinitionId": {
            "template": "${DeviceDefinitionId}"
          }
        }
      }
    ],
    "delete-function-definition": [
      {
        "action": "greengrass:DeleteFunctionDefinition",
        "resource_mappings": {
          "FunctionDefinitionId": {
            "template": "${FunctionDefinitionId}"
          }
        }
      }
    ],
    "delete-group": [
      {
        "action": "greengrass:DeleteGroup",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupId}"
          }
        }
      }
    ],
    "delete-logger-definition": [
      {
        "action": "greengrass:DeleteLoggerDefinition",
        "resource_mappings": {
          "LoggerDefinitionId": {
            "template": "${LoggerDefinitionId}"
          }
        }
      }
    ],
    "delete-resource-definition": [
      {
        "action": "greengrass:DeleteResourceDefinition",
        "resource_mappings": {
          "ResourceDefinitionId": {
            "template": "${ResourceDefinitionId}"
          }
        }
      }
    ],
    "delete-subscription-definition": [
      {
        "action": "greengrass:DeleteSubscriptionDefinition",
        "resource_mappings": {
          "SubscriptionDefinitionId": {
            "template": "${SubscriptionDefinitionId}"
          }
        }
      }
    ],
    "disassociate-role-from-group": [
      {
        "action": "greengrass:DisassociateRoleFromGroup",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupId}"
          }
        }
      }
    ],
    "disassociate-service-role-from-account": [
      {
        "action": "greengrass:DisassociateServiceRoleFromAccount",
        "resource_mappings": {}
      }
    ],
    "get-associated-role": [
      {
        "action": "greengrass:GetAssociatedRole",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupId}"
          }
        }
      }
    ],
    "get-bulk-deployment-status": [
      {
        "action": "greengrass:GetBulkDeploymentStatus",
        "resource_mappings": {
          "BulkDeploymentId": {
            "template": "${BulkDeploymentId}"
          }
        }
      }
    ],
    "get-connectivity-info": [
      {
        "action": "greengrass:GetConnectivityInfo",
        "resource_mappings": {
          "ThingName": {
            "template": "${ThingName}"
          }
        }
      }
    ],
    "get-connector-definition": [
      {
        "action": "greengrass:GetConnectorDefinition",
        "resource_mappings": {
          "ConnectorDefinitionId": {
            "template": "${ConnectorDefinitionId}"
          }
        }
      }
    ],
    "get-connector-definition-version": [
      {
        "action": "greengrass:GetConnectorDefinitionVersion",
        "resource_mappings": {
          "ConnectorDefinitionId": {
            "template": "${ConnectorDefinitionId}"
          },
          "VersionId": {
            "template": "${ConnectorDefinitionVersionId}"
          }
        }
      }
    ],
    "get-core-definition": [
      {
        "action": "greengrass:GetCoreDefinition",
        "resource_mappings": {
          "CoreDefinitionId": {
            "template": "${CoreDefinitionId}"
          }
        }
      }
    ],
    "get-core-definition-version": [
      {
        "action": "greengrass:GetCoreDefinitionVersion",
        "resource_mappings": {
          "CoreDefinitionId": {
            "template": "${CoreDefinitionId}"
          },
          "VersionId": {
            "template": "${CoreDefinitionVersionId}"
          }
        }
      }
    ],
    "get-deployment-status": [
      {
        "action": "greengrass:GetDeploymentStatus",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupId}"
          },
          "DeploymentId": {
            "template": "${DeploymentId}"
          }
        }
      }
    ],
    "get-device-definition": [
      {
        "action": "greengrass:GetDeviceDefinition",
        "resource_mappings": {
          "DeviceDefinitionId": {
            "template": "${DeviceDefinitionId}"
          }
        }
      }
    ],
    "get-device-definition-version": [
      {
        "action": "greengrass:GetDeviceDefinitionVersion",
        "resource_mappings": {
          "DeviceDefinitionId": {
            "template": "${DeviceDefinitionId}"
          },
          "VersionId": {
            "template": "${DeviceDefinitionVersionId}"
          }
        }
      }
    ],
    "get-function-definition": [
      {
        "action": "greengrass:GetFunctionDefinition",
        "resource_mappings": {
          "FunctionDefinitionId": {
            "template": "${FunctionDefinitionId}"
          }
        }
      }
    ],
    "get-function-definition-version": [
      {
        "action": "greengrass:GetFunctionDefinitionVersion",
        "resource_mappings": {
          "FunctionDefinitionId": {
            "template": "${FunctionDefinitionId}"
          },
          "VersionId": {
            "template": "${FunctionDefinitionVersionId}"
          }
        }
      }
    ],
    "get-group": [
      {
        "action": "greengrass:GetGroup",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupId}"
          }
        }
      }
    ],
    "get-group-certificate-authority": [
      {
        "action": "greengrass:GetGroupCertificateAuthority",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupId}"
          },
          "CertificateAuthorityId": {
            "template": "${CertificateAuthorityId}"
          }
        }
      }
    ],
    "get-group-certificate-configuration": [
      {
        "action": "greengrass:GetGroupCertificateConfiguration",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupId}"
          }
        }
      }
    ],
    "get-group-version": [
      {
        "action": "greengrass:GetGroupVersion",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupId}"
          },
          "VersionId": {
            "template": "${GroupVersionId}"
          }
        }
      }
    ],
    "get-logger-definition": [
      {
        "action": "greengrass:GetLoggerDefinition",
        "resource_mappings": {
          "LoggerDefinitionId": {
            "template": "${LoggerDefinitionId}"
          }
        }
      }
    ],
    "get-logger-definition-version": [
      {
        "action": "greengrass:GetLoggerDefinitionVersion",
        "resource_mappings": {
          "LoggerDefinitionId": {
            "template": "${LoggerDefinitionId}"
          },
          "VersionId": {
            "template": "${LoggerDefinitionVersionId}"
          }
        }
      }
    ],
    "get-resource-definition": [
      {
        "action": "greengrass:GetResourceDefinition",
        "resource_mappings": {
          "ResourceDefinitionId": {
            "template": "${ResourceDefinitionId}"
          }
        }
      }
    ],
    "get-resource-definition-version": [
      {
        "action": "greengrass:GetResourceDefinitionVersion",
        "resource_mappings": {
          "ResourceDefinitionId": {
            "template": "${ResourceDefinitionId}"
          },
          "VersionId": {
            "template": "${ResourceDefinitionVersionId}"
          }
        }
      }
    ],
    "get-service-role-for-account": [
      {
        "action": "greengrass:GetServiceRoleForAccount",
        "resource_mappings": {}
      }
    ],
    "get-subscription-definition": [
      {
        "action": "greengrass:GetSubscriptionDefinition",
        "resource_mappings": {
          "SubscriptionDefinitionId": {
            "template": "${SubscriptionDefinitionId}"
          }
        }
      }
    ],
    "get-subscription-definition-version": [
      {
        "action": "greengrass:GetSubscriptionDefinitionVersion",
        "resource_mappings": {
          "SubscriptionDefinitionId": {
            "template": "${SubscriptionDefinitionId}"
          },
          "VersionId": {
            "template": "${SubscriptionDefinitionVersionId}"
          }
        }
      }
    ],
    "get-thing-runtime-configuration": [
      {
        "action": "greengrass:GetThingRuntimeConfiguration",
        "resource_mappings": {
          "ThingName": {
            "template": "${ThingName}"
          }
        }
      }
    ],
    "list-bulk-deployment-detailed-reports": [
      {
        "action": "greengrass:ListBulkDeploymentDetailedReports",
        "resource_mappings": {
          "BulkDeploymentId": {
            "template": "${BulkDeploymentId}"
          }
        }
      }
    ],
    "list-bulk-deployments": [
      {
        "action": "greengrass:ListBulkDeployments",
        "resource_mappings": {}
      }
    ],
    "list-connector-definition-versions": [
      {
        "action": "greengrass:ListConnectorDefinitionVersions",
        "resource_mappings": {
          "ConnectorDefinitionId": {
            "template": "${ConnectorDefinitionId}"
          }
        }
      }
    ],
    "list-connector-definitions": [
      {
        "action": "greengrass:ListConnectorDefinitions",
        "resource_mappings": {}
      }
    ],
    "list-core-definition-versions": [
      {
        "action": "greengrass:ListCoreDefinitionVersions",
        "resource_mappings": {
          "CoreDefinitionId": {
            "template": "${CoreDefinitionId}"
          }
        }
      }
    ],
    "list-core-definitions": [
      {
        "action": "greengrass:ListCoreDefinitions",
        "resource_mappings": {}
      }
    ],
    "list-deployments": [
      {
        "action": "greengrass:ListDeployments",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupId}"
          }
        }
      },
      {
        "action": "iot:DescribeJob",
        "resource_mappings": {
          "JobId": {
            "template": "*"
          }
        }
      }
    ],
    "list-device-definition-versions": [
      {
        "action": "greengrass:ListDeviceDefinitionVersions",
        "resource_mappings": {
          "DeviceDefinitionId": {
            "template": "${DeviceDefinitionId}"
          }
        }
      }
    ],
    "list-device-definitions": [
      {
        "action": "greengrass:ListDeviceDefinitions",
        "resource_mappings": {}
      }
    ],
    "list-function-definition-versions": [
      {
        "action": "greengrass:ListFunctionDefinitionVersions",
        "resource_mappings": {
          "FunctionDefinitionId": {
            "template": "${FunctionDefinitionId}"
          }
        }
      }
    ],
    "list-function-definitions": [
      {
        "action": "greengrass:ListFunctionDefinitions",
        "resource_mappings": {}
      }
    ],
    "list-group-certificate-authorities": [
      {
        "action": "greengrass:ListGroupCertificateAuthorities",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupId}"
          }
        }
      }
    ],
    "list-group-versions": [
      {
        "action": "greengrass:ListGroupVersions",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupId}"
          }
        }
      }
    ],
    "list-groups": [
      {
        "action": "greengrass:ListGroups",
        "resource_mappings": {}
      }
    ],
    "list-logger-definition-versions": [
      {
        "action": "greengrass:ListLoggerDefinitionVersions",
        "resource_mappings": {
          "LoggerDefinitionId": {
            "template": "${LoggerDefinitionId}"
          }
        }
      }
    ],
    "list-logger-definitions": [
      {
        "action": "greengrass:ListLoggerDefinitions",
        "resource_mappings": {}
      }
    ],
    "list-resource-definition-versions": [
      {
        "action": "greengrass:ListResourceDefinitionVersions",
        "resource_mappings": {
          "ResourceDefinitionId": {
            "template": "${ResourceDefinitionId}"
          }
        }
      }
    ],
    "list-resource-definitions": [
      {
        "action": "greengrass:ListResourceDefinitions",
        "resource_mappings": {}
      }
    ],
    "list-subscription-definition-versions": [
      {
        "action": "greengrass:ListSubscriptionDefinitionVersions",
        "resource_mappings": {
          "SubscriptionDefinitionId": {
            "template": "${SubscriptionDefinitionId}"
          }
        }
      }
    ],
    "list-subscription-definitions": [
      {
        "action": "greengrass:ListSubscriptionDefinitions",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "greengrass:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "component": "%%iftemplatematch%${ResourceArn}%%",
          "componentVersion": "%%iftemplatematch%${ResourceArn}%%",
          "coreDevice": "%%iftemplatematch%${ResourceArn}%%",
          "deployment": "%%iftemplatematch%${ResourceArn}%%",
          "bulkDeployment": "%%iftemplatematch%${ResourceArn}%%",
          "connectorDefinition": "%%iftemplatematch%${ResourceArn}%%",
          "coreDefinition": "%%iftemplatematch%${ResourceArn}%%",
          "deviceDefinition": "%%iftemplatematch%${ResourceArn}%%",
          "functionDefinition": "%%iftemplatematch%${ResourceArn}%%",
          "group": "%%iftemplatematch%${ResourceArn}%%",
          "loggerDefinition": "%%iftemplatematch%${ResourceArn}%%",
          "resourceDefinition": "%%iftemplatematch%${ResourceArn}%%",
          "subscriptionDefinition": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "reset-deployments": [
      {
        "action": "greengrass:ResetDeployments",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupId}"
          }
        }
      }
    ],
    "start-bulk-deployment": [
      {
        "action": "greengrass:StartBulkDeployment",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${ExecutionRoleArn}"
        }
      }
    ],
    "stop-bulk-deployment": [
      {
        "action": "greengrass:StopBulkDeployment",
        "resource_mappings": {
          "BulkDeploymentId": {
            "template": "${BulkDeploymentId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "greengrass:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "component": "%%iftemplatematch%${ResourceArn}%%",
          "componentVersion": "%%iftemplatematch%${ResourceArn}%%",
          "coreDevice": "%%iftemplatematch%${ResourceArn}%%",
          "deployment": "%%iftemplatematch%${ResourceArn}%%",
          "bulkDeployment": "%%iftemplatematch%${ResourceArn}%%",
          "connectorDefinition": "%%iftemplatematch%${ResourceArn}%%",
          "coreDefinition": "%%iftemplatematch%${ResourceArn}%%",
          "deviceDefinition": "%%iftemplatematch%${ResourceArn}%%",
          "functionDefinition": "%%iftemplatematch%${ResourceArn}%%",
          "group": "%%iftemplatematch%${ResourceArn}%%",
          "loggerDefinition": "%%iftemplatematch%${ResourceArn}%%",
          "resourceDefinition": "%%iftemplatematch%${ResourceArn}%%",
          "subscriptionDefinition": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "greengrass:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "component": "%%iftemplatematch%${ResourceArn}%%",
          "componentVersion": "%%iftemplatematch%${ResourceArn}%%",
          "coreDevice": "%%iftemplatematch%${ResourceArn}%%",
          "deployment": "%%iftemplatematch%${ResourceArn}%%",
          "bulkDeployment": "%%iftemplatematch%${ResourceArn}%%",
          "connectorDefinition": "%%iftemplatematch%${ResourceArn}%%",
          "coreDefinition": "%%iftemplatematch%${ResourceArn}%%",
          "deviceDefinition": "%%iftemplatematch%${ResourceArn}%%",
          "functionDefinition": "%%iftemplatematch%${ResourceArn}%%",
          "group": "%%iftemplatematch%${ResourceArn}%%",
          "loggerDefinition": "%%iftemplatematch%${ResourceArn}%%",
          "resourceDefinition": "%%iftemplatematch%${ResourceArn}%%",
          "subscriptionDefinition": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-connectivity-info": [
      {
        "action": "greengrass:UpdateConnectivityInfo",
        "resource_mappings": {
          "ThingName": {
            "template": "${ThingName}"
          }
        }
      }
    ],
    "update-connector-definition": [
      {
        "action": "greengrass:UpdateConnectorDefinition",
        "resource_mappings": {
          "ConnectorDefinitionId": {
            "template": "${ConnectorDefinitionId}"
          }
        }
      }
    ],
    "update-core-definition": [
      {
        "action": "greengrass:UpdateCoreDefinition",
        "resource_mappings": {
          "CoreDefinitionId": {
            "template": "${CoreDefinitionId}"
          }
        }
      }
    ],
    "update-device-definition": [
      {
        "action": "greengrass:UpdateDeviceDefinition",
        "resource_mappings": {
          "DeviceDefinitionId": {
            "template": "${DeviceDefinitionId}"
          }
        }
      }
    ],
    "update-function-definition": [
      {
        "action": "greengrass:UpdateFunctionDefinition",
        "resource_mappings": {
          "FunctionDefinitionId": {
            "template": "${FunctionDefinitionId}"
          }
        }
      }
    ],
    "update-group": [
      {
        "action": "greengrass:UpdateGroup",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupId}"
          }
        }
      }
    ],
    "update-group-certificate-configuration": [
      {
        "action": "greengrass:UpdateGroupCertificateConfiguration",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupId}"
          }
        }
      }
    ],
    "update-logger-definition": [
      {
        "action": "greengrass:UpdateLoggerDefinition",
        "resource_mappings": {
          "LoggerDefinitionId": {
            "template": "${LoggerDefinitionId}"
          }
        }
      }
    ],
    "update-resource-definition": [
      {
        "action": "greengrass:UpdateResourceDefinition",
        "resource_mappings": {
          "ResourceDefinitionId": {
            "template": "${ResourceDefinitionId}"
          }
        }
      }
    ],
    "update-subscription-definition": [
      {
        "action": "greengrass:UpdateSubscriptionDefinition",
        "resource_mappings": {
          "SubscriptionDefinitionId": {
            "template": "${SubscriptionDefinitionId}"
          }
        }
      }
    ],
    "update-thing-runtime-configuration": [
      {
        "action": "greengrass:UpdateThingRuntimeConfiguration",
        "resource_mappings": {
          "ThingName": {
            "template": "${ThingName}"
          }
        }
      }
    ]
  },
  "greengrassv2": {
    "associate-service-role-to-account": [
      {
        "action": "greengrass:AssociateServiceRoleToAccount",
        "resource_mappings": {}
      }
    ],
    "batch-associate-client-device-with-core-device": [
      {
        "action": "greengrass:BatchAssociateClientDeviceWithCoreDevice",
        "resource_mappings": {
          "CoreDeviceThingName": {
            "template": "${coreDeviceThingName}"
          }
        }
      }
    ],
    "batch-disassociate-client-device-from-core-device": [
      {
        "action": "greengrass:BatchDisassociateClientDeviceFromCoreDevice",
        "resource_mappings": {
          "CoreDeviceThingName": {
            "template": "${coreDeviceThingName}"
          }
        }
      }
    ],
    "cancel-deployment": [
      {
        "action": "greengrass:CancelDeployment",
        "resource_mappings": {
          "DeploymentId": {
            "template": "${deploymentId}"
          }
        }
      },
      {
        "action": "iot:CancelJob",
        "resource_mappings": {
          "JobId": {
            "template": "*"
          }
        }
      }
    ],
    "create-component-version": [
      {
        "action": "greengrass:CreateComponentVersion",
        "resource_mappings": {
          "ComponentName": {
            "template": "${lambdaFunction.componentName}"
          }
        }
      }
    ],
    "create-deployment": [
      {
        "action": "greengrass:CreateDeployment",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "group": "%%iftemplatematch%${targetArn}%%"
        }
      },
      {
        "action": "iot:CancelJob",
        "resource_mappings": {
          "JobId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-component": [
      {
        "action": "greengrass:DeleteComponent",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "componentVersion": "${arn}"
        }
      }
    ],
    "delete-core-device": [
      {
        "action": "greengrass:DeleteCoreDevice",
        "resource_mappings": {
          "CoreDeviceThingName": {
            "template": "${coreDeviceThingName}"
          }
        }
      },
      {
        "action": "iot:DescribeJobExecution",
        "resource_mappings": {
          "JobId": {
            "template": "*"
          },
          "ThingName": {
            "template": "${coreDeviceThingName}"
          }
        }
      }
    ],
    "delete-deployment": [
      {
        "action": "greengrass:DeleteDeployment",
        "resource_mappings": {
          "DeploymentId": {
            "template": "${deploymentId}"
          }
        }
      },
      {
        "action": "iot:DeleteJob",
        "resource_mappings": {
          "JobId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-component": [
      {
        "action": "greengrass:DescribeComponent",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "componentVersion": "${arn}"
        }
      }
    ],
    "disassociate-service-role-from-account": [
      {
        "action": "greengrass:DisassociateServiceRoleFromAccount",
        "resource_mappings": {}
      }
    ],
    "get-component": [
      {
        "action": "greengrass:GetComponent",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "componentVersion": "${arn}"
        }
      }
    ],
    "get-component-version-artifact": [
      {
        "action": "greengrass:GetComponentVersionArtifact",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "componentVersion": "${arn}"
        }
      }
    ],
    "get-connectivity-info": [
      {
        "action": "greengrass:GetConnectivityInfo",
        "resource_mappings": {
          "ThingName": {
            "template": "${thingName}"
          }
        }
      }
    ],
    "get-core-device": [
      {
        "action": "greengrass:GetCoreDevice",
        "resource_mappings": {
          "CoreDeviceThingName": {
            "template": "${coreDeviceThingName}"
          }
        }
      }
    ],
    "get-deployment": [
      {
        "action": "greengrass:GetDeployment",
        "resource_mappings": {
          "DeploymentId": {
            "template": "${deploymentId}"
          }
        }
      },
      {
        "action": "iot:DescribeJob",
        "resource_mappings": {
          "JobId": {
            "template": "*"
          }
        }
      }
    ],
    "get-service-role-for-account": [
      {
        "action": "greengrass:GetServiceRoleForAccount",
        "resource_mappings": {}
      }
    ],
    "list-client-devices-associated-with-core-device": [
      {
        "action": "greengrass:ListClientDevicesAssociatedWithCoreDevice",
        "resource_mappings": {
          "CoreDeviceThingName": {
            "template": "${coreDeviceThingName}"
          }
        }
      }
    ],
    "list-component-versions": [
      {
        "action": "greengrass:ListComponentVersions",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "component": "${arn}"
        }
      }
    ],
    "list-components": [
      {
        "action": "greengrass:ListComponents",
        "resource_mappings": {}
      }
    ],
    "list-core-devices": [
      {
        "action": "greengrass:ListCoreDevices",
        "resource_mappings": {}
      }
    ],
    "list-deployments": [
      {
        "action": "greengrass:ListDeployments",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "group": "%%iftemplatematch%${targetArn}%%"
        }
      },
      {
        "action": "iot:DescribeJob",
        "resource_mappings": {
          "JobId": {
            "template": "*"
          }
        }
      }
    ],
    "list-effective-deployments": [
      {
        "action": "greengrass:ListEffectiveDeployments",
        "resource_mappings": {
          "CoreDeviceThingName": {
            "template": "${coreDeviceThingName}"
          }
        }
      },
      {
        "action": "iot:DescribeJob",
        "resource_mappings": {
          "JobId": {
            "template": "*"
          }
        }
      }
    ],
    "list-installed-components": [
      {
        "action": "greengrass:ListInstalledComponents",
        "resource_mappings": {
          "CoreDeviceThingName": {
            "template": "${coreDeviceThingName}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "greengrass:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "component": "%%iftemplatematch%${resourceArn}%%",
          "componentVersion": "%%iftemplatematch%${resourceArn}%%",
          "coreDevice": "%%iftemplatematch%${resourceArn}%%",
          "deployment": "%%iftemplatematch%${resourceArn}%%",
          "bulkDeployment": "%%iftemplatematch%${resourceArn}%%",
          "connectorDefinition": "%%iftemplatematch%${resourceArn}%%",
          "coreDefinition": "%%iftemplatematch%${resourceArn}%%",
          "deviceDefinition": "%%iftemplatematch%${resourceArn}%%",
          "functionDefinition": "%%iftemplatematch%${resourceArn}%%",
          "group": "%%iftemplatematch%${resourceArn}%%",
          "loggerDefinition": "%%iftemplatematch%${resourceArn}%%",
          "resourceDefinition": "%%iftemplatematch%${resourceArn}%%",
          "subscriptionDefinition": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "resolve-component-candidates": [
      {
        "action": "greengrass:ResolveComponentCandidates",
        "resource_mappings": {
          "ComponentName": {
            "template": "${componentCandidates[].componentName}"
          },
          "ComponentVersion": {
            "template": "${componentCandidates[].componentVersion}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "greengrass:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "component": "%%iftemplatematch%${resourceArn}%%",
          "componentVersion": "%%iftemplatematch%${resourceArn}%%",
          "coreDevice": "%%iftemplatematch%${resourceArn}%%",
          "deployment": "%%iftemplatematch%${resourceArn}%%",
          "bulkDeployment": "%%iftemplatematch%${resourceArn}%%",
          "connectorDefinition": "%%iftemplatematch%${resourceArn}%%",
          "coreDefinition": "%%iftemplatematch%${resourceArn}%%",
          "deviceDefinition": "%%iftemplatematch%${resourceArn}%%",
          "functionDefinition": "%%iftemplatematch%${resourceArn}%%",
          "group": "%%iftemplatematch%${resourceArn}%%",
          "loggerDefinition": "%%iftemplatematch%${resourceArn}%%",
          "resourceDefinition": "%%iftemplatematch%${resourceArn}%%",
          "subscriptionDefinition": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "greengrass:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "component": "%%iftemplatematch%${resourceArn}%%",
          "componentVersion": "%%iftemplatematch%${resourceArn}%%",
          "coreDevice": "%%iftemplatematch%${resourceArn}%%",
          "deployment": "%%iftemplatematch%${resourceArn}%%",
          "bulkDeployment": "%%iftemplatematch%${resourceArn}%%",
          "connectorDefinition": "%%iftemplatematch%${resourceArn}%%",
          "coreDefinition": "%%iftemplatematch%${resourceArn}%%",
          "deviceDefinition": "%%iftemplatematch%${resourceArn}%%",
          "functionDefinition": "%%iftemplatematch%${resourceArn}%%",
          "group": "%%iftemplatematch%${resourceArn}%%",
          "loggerDefinition": "%%iftemplatematch%${resourceArn}%%",
          "resourceDefinition": "%%iftemplatematch%${resourceArn}%%",
          "subscriptionDefinition": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-connectivity-info": [
      {
        "action": "greengrass:UpdateConnectivityInfo",
        "resource_mappings": {
          "ThingName": {
            "template": "${thingName}"
          }
        }
      }
    ]
  },
  "groundstation": {
    "cancel-contact": [
      {
        "action": "groundstation:CancelContact",
        "resource_mappings": {
          "contactId": {
            "template": "${contactId}"
          }
        }
      }
    ],
    "create-config": [
      {
        "action": "groundstation:CreateConfig",
        "resource_mappings": {}
      }
    ],
    "create-dataflow-endpoint-group": [
      {
        "action": "groundstation:CreateDataflowEndpointGroup",
        "resource_mappings": {}
      }
    ],
    "create-ephemeris": [
      {
        "action": "groundstation:CreateEphemeris",
        "resource_mappings": {}
      }
    ],
    "create-mission-profile": [
      {
        "action": "groundstation:CreateMissionProfile",
        "resource_mappings": {}
      }
    ],
    "delete-config": [
      {
        "action": "groundstation:DeleteConfig",
        "resource_mappings": {
          "configType": {
            "template": "${configType}"
          },
          "configId": {
            "template": "${configId}"
          }
        }
      }
    ],
    "delete-dataflow-endpoint-group": [
      {
        "action": "groundstation:DeleteDataflowEndpointGroup",
        "resource_mappings": {
          "dataflowEndpointGroupId": {
            "template": "${dataflowEndpointGroupId}"
          }
        }
      }
    ],
    "delete-ephemeris": [
      {
        "action": "groundstation:DeleteEphemeris",
        "resource_mappings": {
          "EphemerisId": {
            "template": "${ephemerisId}"
          }
        }
      }
    ],
    "delete-mission-profile": [
      {
        "action": "groundstation:DeleteMissionProfile",
        "resource_mappings": {
          "missionProfileId": {
            "template": "${missionProfileId}"
          }
        }
      }
    ],
    "describe-contact": [
      {
        "action": "groundstation:DescribeContact",
        "resource_mappings": {
          "contactId": {
            "template": "${contactId}"
          }
        }
      }
    ],
    "describe-ephemeris": [
      {
        "action": "groundstation:DescribeEphemeris",
        "resource_mappings": {
          "EphemerisId": {
            "template": "${ephemerisId}"
          }
        }
      }
    ],
    "get-agent-configuration": [
      {
        "action": "groundstation:GetAgentConfiguration",
        "resource_mappings": {
          "AgentId": {
            "template": "${agentId}"
          }
        }
      }
    ],
    "get-config": [
      {
        "action": "groundstation:GetConfig",
        "resource_mappings": {
          "configType": {
            "template": "${configType}"
          },
          "configId": {
            "template": "${configId}"
          }
        }
      }
    ],
    "get-dataflow-endpoint-group": [
      {
        "action": "groundstation:GetDataflowEndpointGroup",
        "resource_mappings": {
          "dataflowEndpointGroupId": {
            "template": "${dataflowEndpointGroupId}"
          }
        }
      }
    ],
    "get-minute-usage": [
      {
        "action": "groundstation:GetMinuteUsage",
        "resource_mappings": {}
      }
    ],
    "get-mission-profile": [
      {
        "action": "groundstation:GetMissionProfile",
        "resource_mappings": {
          "missionProfileId": {
            "template": "${missionProfileId}"
          }
        }
      }
    ],
    "get-satellite": [
      {
        "action": "groundstation:GetSatellite",
        "resource_mappings": {
          "satelliteId": {
            "template": "${satelliteId}"
          }
        }
      }
    ],
    "list-configs": [
      {
        "action": "groundstation:ListConfigs",
        "resource_mappings": {}
      }
    ],
    "list-contacts": [
      {
        "action": "groundstation:ListContacts",
        "resource_mappings": {}
      }
    ],
    "list-dataflow-endpoint-groups": [
      {
        "action": "groundstation:ListDataflowEndpointGroups",
        "resource_mappings": {}
      }
    ],
    "list-ephemerides": [
      {
        "action": "groundstation:ListEphemerides",
        "resource_mappings": {}
      }
    ],
    "list-ground-stations": [
      {
        "action": "groundstation:ListGroundStations",
        "resource_mappings": {}
      }
    ],
    "list-mission-profiles": [
      {
        "action": "groundstation:ListMissionProfiles",
        "resource_mappings": {}
      }
    ],
    "list-satellites": [
      {
        "action": "groundstation:ListSatellites",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "groundstation:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Config": "%%iftemplatematch%${resourceArn}%%",
          "Contact": "%%iftemplatematch%${resourceArn}%%",
          "DataflowEndpointGroup": "%%iftemplatematch%${resourceArn}%%",
          "MissionProfile": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "register-agent": [
      {
        "action": "groundstation:RegisterAgent",
        "resource_mappings": {}
      }
    ],
    "reserve-contact": [
      {
        "action": "groundstation:ReserveContact",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "groundstation:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Config": "%%iftemplatematch%${resourceArn}%%",
          "Contact": "%%iftemplatematch%${resourceArn}%%",
          "DataflowEndpointGroup": "%%iftemplatematch%${resourceArn}%%",
          "MissionProfile": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "groundstation:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Config": "%%iftemplatematch%${resourceArn}%%",
          "Contact": "%%iftemplatematch%${resourceArn}%%",
          "DataflowEndpointGroup": "%%iftemplatematch%${resourceArn}%%",
          "MissionProfile": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-agent-status": [
      {
        "action": "groundstation:UpdateAgentStatus",
        "resource_mappings": {
          "AgentId": {
            "template": "${agentId}"
          }
        }
      }
    ],
    "update-config": [
      {
        "action": "groundstation:UpdateConfig",
        "resource_mappings": {
          "configType": {
            "template": "${configType}"
          },
          "configId": {
            "template": "${configId}"
          }
        }
      }
    ],
    "update-ephemeris": [
      {
        "action": "groundstation:UpdateEphemeris",
        "resource_mappings": {
          "EphemerisId": {
            "template": "${ephemerisId}"
          }
        }
      }
    ],
    "update-mission-profile": [
      {
        "action": "groundstation:UpdateMissionProfile",
        "resource_mappings": {
          "missionProfileId": {
            "template": "${missionProfileId}"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "groundstation:DescribeContact",
        "resource_mappings": {
          "contactId": {
            "template": "${contactId}"
          }
        }
      }
    ]
  },
  "guardduty": {
    "accept-administrator-invitation": [
      {
        "action": "guardduty:AcceptAdministratorInvitation",
        "resource_mappings": {}
      }
    ],
    "accept-invitation": [
      {
        "action": "guardduty:AcceptInvitation",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "archive-findings": [
      {
        "action": "guardduty:ArchiveFindings",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "create-detector": [
      {
        "action": "guardduty:CreateDetector",
        "resource_mappings": {}
      }
    ],
    "create-filter": [
      {
        "action": "guardduty:CreateFilter",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "create-ip-set": [
      {
        "action": "guardduty:CreateIPSet",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "create-members": [
      {
        "action": "guardduty:CreateMembers",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "create-publishing-destination": [
      {
        "action": "guardduty:CreatePublishingDestination",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      }
    ],
    "create-sample-findings": [
      {
        "action": "guardduty:CreateSampleFindings",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "create-threat-intel-set": [
      {
        "action": "guardduty:CreateThreatIntelSet",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "decline-invitations": [
      {
        "action": "guardduty:DeclineInvitations",
        "resource_mappings": {}
      }
    ],
    "delete-detector": [
      {
        "action": "guardduty:DeleteDetector",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "delete-filter": [
      {
        "action": "guardduty:DeleteFilter",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          },
          "FilterName": {
            "template": "${FilterName}"
          }
        }
      }
    ],
    "delete-ip-set": [
      {
        "action": "guardduty:DeleteIPSet",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          },
          "IPSetId": {
            "template": "${IpSetId}"
          }
        }
      }
    ],
    "delete-invitations": [
      {
        "action": "guardduty:DeleteInvitations",
        "resource_mappings": {}
      }
    ],
    "delete-members": [
      {
        "action": "guardduty:DeleteMembers",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "delete-publishing-destination": [
      {
        "action": "guardduty:DeletePublishingDestination",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          },
          "PublishingDestinationId": {
            "template": "${DestinationId}"
          }
        }
      }
    ],
    "delete-threat-intel-set": [
      {
        "action": "guardduty:DeleteThreatIntelSet",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          },
          "ThreatIntelSetId": {
            "template": "${ThreatIntelSetId}"
          }
        }
      }
    ],
    "describe-malware-scans": [
      {
        "action": "guardduty:DescribeMalwareScans",
        "resource_mappings": {}
      }
    ],
    "describe-organization-configuration": [
      {
        "action": "guardduty:DescribeOrganizationConfiguration",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "describe-publishing-destination": [
      {
        "action": "guardduty:DescribePublishingDestination",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          },
          "PublishingDestinationId": {
            "template": "${DestinationId}"
          }
        }
      }
    ],
    "disable-organization-admin-account": [
      {
        "action": "guardduty:DisableOrganizationAdminAccount",
        "resource_mappings": {}
      }
    ],
    "disassociate-from-administrator-account": [
      {
        "action": "guardduty:DisassociateFromAdministratorAccount",
        "resource_mappings": {}
      }
    ],
    "disassociate-from-master-account": [
      {
        "action": "guardduty:DisassociateFromMasterAccount",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "disassociate-members": [
      {
        "action": "guardduty:DisassociateMembers",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "enable-organization-admin-account": [
      {
        "action": "guardduty:EnableOrganizationAdminAccount",
        "resource_mappings": {}
      }
    ],
    "get-administrator-account": [
      {
        "action": "guardduty:GetAdministratorAccount",
        "resource_mappings": {}
      }
    ],
    "get-coverage-statistics": [
      {
        "action": "guardduty:GetCoverageStatistics",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "get-detector": [
      {
        "action": "guardduty:GetDetector",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "get-filter": [
      {
        "action": "guardduty:GetFilter",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          },
          "FilterName": {
            "template": "${FilterName}"
          }
        }
      }
    ],
    "get-findings": [
      {
        "action": "guardduty:GetFindings",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "get-findings-statistics": [
      {
        "action": "guardduty:GetFindingsStatistics",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "get-ip-set": [
      {
        "action": "guardduty:GetIPSet",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          },
          "IPSetId": {
            "template": "${IpSetId}"
          }
        }
      }
    ],
    "get-invitations-count": [
      {
        "action": "guardduty:GetInvitationsCount",
        "resource_mappings": {}
      }
    ],
    "get-malware-scan-settings": [
      {
        "action": "guardduty:GetMalwareScanSettings",
        "resource_mappings": {}
      }
    ],
    "get-master-account": [
      {
        "action": "guardduty:GetMasterAccount",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "get-member-detectors": [
      {
        "action": "guardduty:GetMemberDetectors",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "get-members": [
      {
        "action": "guardduty:GetMembers",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "get-remaining-free-trial-days": [
      {
        "action": "guardduty:GetRemainingFreeTrialDays",
        "resource_mappings": {}
      }
    ],
    "get-threat-intel-set": [
      {
        "action": "guardduty:GetThreatIntelSet",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          },
          "ThreatIntelSetId": {
            "template": "${ThreatIntelSetId}"
          }
        }
      }
    ],
    "get-usage-statistics": [
      {
        "action": "guardduty:GetUsageStatistics",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "invite-members": [
      {
        "action": "guardduty:InviteMembers",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "list-coverage": [
      {
        "action": "guardduty:ListCoverage",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "list-detectors": [
      {
        "action": "guardduty:ListDetectors",
        "resource_mappings": {}
      }
    ],
    "list-filters": [
      {
        "action": "guardduty:ListFilters",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "list-findings": [
      {
        "action": "guardduty:ListFindings",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "list-ip-sets": [
      {
        "action": "guardduty:ListIPSets",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "list-invitations": [
      {
        "action": "guardduty:ListInvitations",
        "resource_mappings": {}
      }
    ],
    "list-members": [
      {
        "action": "guardduty:ListMembers",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "list-organization-admin-accounts": [
      {
        "action": "guardduty:ListOrganizationAdminAccounts",
        "resource_mappings": {}
      }
    ],
    "list-publishing-destinations": [
      {
        "action": "guardduty:ListPublishingDestinations",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "guardduty:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "detector": "%%iftemplatematch%${ResourceArn}%%",
          "filter": "%%iftemplatematch%${ResourceArn}%%",
          "ipset": "%%iftemplatematch%${ResourceArn}%%",
          "threatintelset": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "list-threat-intel-sets": [
      {
        "action": "guardduty:ListThreatIntelSets",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "start-malware-scan": [
      {
        "action": "guardduty:StartMalwareScan",
        "resource_mappings": {}
      }
    ],
    "start-monitoring-members": [
      {
        "action": "guardduty:StartMonitoringMembers",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "stop-monitoring-members": [
      {
        "action": "guardduty:StopMonitoringMembers",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "guardduty:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "detector": "%%iftemplatematch%${ResourceArn}%%",
          "filter": "%%iftemplatematch%${ResourceArn}%%",
          "ipset": "%%iftemplatematch%${ResourceArn}%%",
          "threatintelset": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "unarchive-findings": [
      {
        "action": "guardduty:UnarchiveFindings",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "untag-resource": [
      {
        "action": "guardduty:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "detector": "%%iftemplatematch%${ResourceArn}%%",
          "filter": "%%iftemplatematch%${ResourceArn}%%",
          "ipset": "%%iftemplatematch%${ResourceArn}%%",
          "threatintelset": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-detector": [
      {
        "action": "guardduty:UpdateDetector",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "update-filter": [
      {
        "action": "guardduty:UpdateFilter",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          },
          "FilterName": {
            "template": "${FilterName}"
          }
        }
      }
    ],
    "update-findings-feedback": [
      {
        "action": "guardduty:UpdateFindingsFeedback",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "update-ip-set": [
      {
        "action": "guardduty:UpdateIPSet",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          },
          "IPSetId": {
            "template": "${IpSetId}"
          }
        }
      }
    ],
    "update-malware-scan-settings": [
      {
        "action": "guardduty:UpdateMalwareScanSettings",
        "resource_mappings": {}
      }
    ],
    "update-member-detectors": [
      {
        "action": "guardduty:UpdateMemberDetectors",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "update-organization-configuration": [
      {
        "action": "guardduty:UpdateOrganizationConfiguration",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          }
        }
      }
    ],
    "update-publishing-destination": [
      {
        "action": "guardduty:UpdatePublishingDestination",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          },
          "PublishingDestinationId": {
            "template": "${DestinationId}"
          }
        }
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      }
    ],
    "update-threat-intel-set": [
      {
        "action": "guardduty:UpdateThreatIntelSet",
        "resource_mappings": {
          "DetectorId": {
            "template": "${DetectorId}"
          },
          "ThreatIntelSetId": {
            "template": "${ThreatIntelSetId}"
          }
        }
      }
    ]
  },
  "health": {
    "describe-affected-accounts-for-organization": [
      {
        "action": "health:DescribeAffectedAccountsForOrganization",
        "resource_mappings": {}
      },
      {
        "action": "organizations:ListAccounts",
        "resource_mappings": {}
      }
    ],
    "describe-affected-entities": [
      {
        "action": "health:DescribeAffectedEntities",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "event": "${filter.eventArns[]}"
        }
      }
    ],
    "describe-affected-entities-for-organization": [
      {
        "action": "health:DescribeAffectedEntitiesForOrganization",
        "resource_mappings": {}
      },
      {
        "action": "organizations:ListAccounts",
        "resource_mappings": {}
      }
    ],
    "describe-entity-aggregates": [
      {
        "action": "health:DescribeEntityAggregates",
        "resource_mappings": {}
      }
    ],
    "describe-entity-aggregates-for-organization": [
      {
        "action": "health:DescribeEntityAggregatesForOrganization",
        "resource_mappings": {}
      },
      {
        "action": "organizations:ListAccounts",
        "resource_mappings": {}
      }
    ],
    "describe-event-aggregates": [
      {
        "action": "health:DescribeEventAggregates",
        "resource_mappings": {}
      }
    ],
    "describe-event-details": [
      {
        "action": "health:DescribeEventDetails",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "event": "${eventArns}"
        }
      }
    ],
    "describe-event-details-for-organization": [
      {
        "action": "health:DescribeEventDetailsForOrganization",
        "resource_mappings": {}
      },
      {
        "action": "organizations:ListAccounts",
        "resource_mappings": {}
      }
    ],
    "describe-event-types": [
      {
        "action": "health:DescribeEventTypes",
        "resource_mappings": {}
      }
    ],
    "describe-events": [
      {
        "action": "health:DescribeEvents",
        "resource_mappings": {}
      }
    ],
    "describe-events-for-organization": [
      {
        "action": "health:DescribeEventsForOrganization",
        "resource_mappings": {}
      },
      {
        "action": "organizations:ListAccounts",
        "resource_mappings": {}
      }
    ],
    "describe-health-service-status-for-organization": [
      {
        "action": "health:DescribeHealthServiceStatusForOrganization",
        "resource_mappings": {}
      },
      {
        "action": "organizations:ListAccounts",
        "resource_mappings": {}
      }
    ],
    "disable-health-service-access-for-organization": [
      {
        "action": "health:DisableHealthServiceAccessForOrganization",
        "resource_mappings": {}
      },
      {
        "action": "organizations:DisableAWSServiceAccess",
        "resource_mappings": {}
      }
    ],
    "enable-health-service-access-for-organization": [
      {
        "action": "health:EnableHealthServiceAccessForOrganization",
        "resource_mappings": {}
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ]
  },
  "healthlake": {
    "create-fhir-datastore": [
      {
        "action": "healthlake:CreateFHIRDatastore",
        "resource_mappings": {}
      }
    ],
    "delete-fhir-datastore": [
      {
        "action": "healthlake:DeleteFHIRDatastore",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "DatastoreId": {
            "template": "${DatastoreId}"
          }
        }
      }
    ],
    "describe-fhir-datastore": [
      {
        "action": "healthlake:DescribeFHIRDatastore",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "DatastoreId": {
            "template": "${DatastoreId}"
          }
        }
      }
    ],
    "describe-fhir-export-job": [
      {
        "action": "healthlake:DescribeFHIRExportJob",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "DatastoreId": {
            "template": "${DatastoreId}"
          }
        }
      }
    ],
    "describe-fhir-import-job": [
      {
        "action": "healthlake:DescribeFHIRImportJob",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "DatastoreId": {
            "template": "${DatastoreId}"
          }
        }
      }
    ],
    "list-fhir-datastores": [
      {
        "action": "healthlake:ListFHIRDatastores",
        "resource_mappings": {}
      }
    ],
    "list-fhir-export-jobs": [
      {
        "action": "healthlake:ListFHIRExportJobs",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "DatastoreId": {
            "template": "${DatastoreId}"
          }
        }
      }
    ],
    "list-fhir-import-jobs": [
      {
        "action": "healthlake:ListFHIRImportJobs",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "DatastoreId": {
            "template": "${DatastoreId}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "healthlake:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "datastore": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "start-fhir-export-job": [
      {
        "action": "healthlake:StartFHIRExportJob",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "DatastoreId": {
            "template": "${DatastoreId}"
          }
        }
      }
    ],
    "start-fhir-import-job": [
      {
        "action": "healthlake:StartFHIRImportJob",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "DatastoreId": {
            "template": "${DatastoreId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "healthlake:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "datastore": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "healthlake:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "datastore": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ]
  },
  "honeycode": {
    "batch-create-table-rows": [
      {
        "action": "honeycode:BatchCreateTableRows",
        "resource_mappings": {
          "WorkbookId": {
            "template": "${workbookId}"
          },
          "TableId": {
            "template": "${tableId}"
          }
        }
      }
    ],
    "batch-delete-table-rows": [
      {
        "action": "honeycode:BatchDeleteTableRows",
        "resource_mappings": {
          "WorkbookId": {
            "template": "${workbookId}"
          },
          "TableId": {
            "template": "${tableId}"
          }
        }
      }
    ],
    "batch-update-table-rows": [
      {
        "action": "honeycode:BatchUpdateTableRows",
        "resource_mappings": {
          "WorkbookId": {
            "template": "${workbookId}"
          },
          "TableId": {
            "template": "${tableId}"
          }
        }
      }
    ],
    "batch-upsert-table-rows": [
      {
        "action": "honeycode:BatchUpsertTableRows",
        "resource_mappings": {
          "WorkbookId": {
            "template": "${workbookId}"
          },
          "TableId": {
            "template": "${tableId}"
          }
        }
      }
    ],
    "describe-table-data-import-job": [
      {
        "action": "honeycode:DescribeTableDataImportJob",
        "resource_mappings": {
          "WorkbookId": {
            "template": "${workbookId}"
          },
          "TableId": {
            "template": "${tableId}"
          }
        }
      }
    ],
    "get-screen-data": [
      {
        "action": "honeycode:GetScreenData",
        "resource_mappings": {
          "WorkbookId": {
            "template": "${workbookId}"
          },
          "AppId": {
            "template": "${appId}"
          },
          "ScreenId": {
            "template": "${screenId}"
          }
        }
      }
    ],
    "invoke-screen-automation": [
      {
        "action": "honeycode:InvokeScreenAutomation",
        "resource_mappings": {
          "WorkbookId": {
            "template": "${workbookId}"
          },
          "AppId": {
            "template": "${appId}"
          },
          "ScreenId": {
            "template": "${screenId}"
          },
          "AutomationId": {
            "template": "${screenAutomationId}"
          }
        }
      }
    ],
    "list-table-columns": [
      {
        "action": "honeycode:ListTableColumns",
        "resource_mappings": {
          "WorkbookId": {
            "template": "${workbookId}"
          },
          "TableId": {
            "template": "${tableId}"
          }
        }
      }
    ],
    "list-table-rows": [
      {
        "action": "honeycode:ListTableRows",
        "resource_mappings": {
          "WorkbookId": {
            "template": "${workbookId}"
          },
          "TableId": {
            "template": "${tableId}"
          }
        }
      }
    ],
    "list-tables": [
      {
        "action": "honeycode:ListTables",
        "resource_mappings": {
          "WorkbookId": {
            "template": "${workbookId}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "honeycode:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "query-table-rows": [
      {
        "action": "honeycode:QueryTableRows",
        "resource_mappings": {
          "WorkbookId": {
            "template": "${workbookId}"
          },
          "TableId": {
            "template": "${tableId}"
          }
        }
      }
    ],
    "start-table-data-import-job": [
      {
        "action": "honeycode:StartTableDataImportJob",
        "resource_mappings": {
          "WorkbookId": {
            "template": "${workbookId}"
          },
          "TableId": {
            "template": "${destinationTableId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "honeycode:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "honeycode:UntagResource",
        "resource_mappings": {}
      }
    ]
  },
  "iam": {
    "add-client-id-to-open-id-connect-provider": [
      {
        "action": "iam:AddClientIDToOpenIDConnectProvider",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "oidc-provider": "${OpenIDConnectProviderArn}"
        }
      }
    ],
    "add-role-to-instance-profile": [
      {
        "action": "iam:AddRoleToInstanceProfile",
        "resource_mappings": {
          "InstanceProfileNameWithPath": {
            "template": "${InstanceProfileName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "arn:${Partition}:iam::${Account}:role/${RoleName}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${InstanceProfileName}%*%%%"
        }
      }
    ],
    "add-user-to-group": [
      {
        "action": "iam:AddUserToGroup",
        "resource_mappings": {
          "GroupNameWithPath": {
            "template": "${GroupName}"
          }
        }
      }
    ],
    "attach-group-policy": [
      {
        "action": "iam:AttachGroupPolicy",
        "resource_mappings": {
          "GroupNameWithPath": {
            "template": "${GroupName}"
          }
        }
      }
    ],
    "attach-role-policy": [
      {
        "action": "iam:AttachRolePolicy",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "${RoleName}"
          }
        }
      }
    ],
    "attach-user-policy": [
      {
        "action": "iam:AttachUserPolicy",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "change-password": [
      {
        "action": "iam:ChangePassword",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${aws:username}"
          }
        }
      }
    ],
    "create-access-key": [
      {
        "action": "iam:CreateAccessKey",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "create-account-alias": [
      {
        "action": "iam:CreateAccountAlias",
        "resource_mappings": {}
      }
    ],
    "create-group": [
      {
        "action": "iam:CreateGroup",
        "resource_mappings": {
          "GroupNameWithPath": {
            "template": "%%regex%${Path}%/^\\/(.+)$/g%%${GroupName}"
          }
        }
      }
    ],
    "create-instance-profile": [
      {
        "action": "iam:CreateInstanceProfile",
        "resource_mappings": {
          "InstanceProfileNameWithPath": {
            "template": "%%regex%${Path}%/^\\/(.+)$/g%%${InstanceProfileName}"
          }
        }
      }
    ],
    "create-login-profile": [
      {
        "action": "iam:CreateLoginProfile",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "create-open-id-connect-provider": [
      {
        "action": "iam:CreateOpenIDConnectProvider",
        "resource_mappings": {
          "OidcProviderName": {
            "template": "*"
          }
        }
      }
    ],
    "create-policy": [
      {
        "action": "iam:CreatePolicy",
        "resource_mappings": {
          "PolicyNameWithPath": {
            "template": "%%regex%${Path}%/^\\/(.+)$/g%%${PolicyName}"
          }
        }
      }
    ],
    "create-policy-version": [
      {
        "action": "iam:CreatePolicyVersion",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "policy": "${PolicyArn}"
        }
      }
    ],
    "create-role": [
      {
        "action": "iam:CreateRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "%%regex%${Path}%/^\\/(.+)$/g%%${RoleName}"
          }
        }
      }
    ],
    "create-saml-provider": [
      {
        "action": "iam:CreateSAMLProvider",
        "resource_mappings": {
          "SamlProviderName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "create-service-linked-role": [
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "create-service-specific-credential": [
      {
        "action": "iam:CreateServiceSpecificCredential",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "create-user": [
      {
        "action": "iam:CreateUser",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "%%regex%${Path}%/^\\/(.+)$/g%%${UserName}"
          }
        }
      }
    ],
    "create-virtual-mfa-device": [
      {
        "action": "iam:CreateVirtualMFADevice",
        "resource_mappings": {
          "MfaTokenIdWithPath": {
            "template": "%%regex%${Path}%/^\\/(.+)$/g%%*"
          }
        }
      }
    ],
    "deactivate-mfa-device": [
      {
        "action": "iam:DeactivateMFADevice",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "delete-access-key": [
      {
        "action": "iam:DeleteAccessKey",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "delete-account-alias": [
      {
        "action": "iam:DeleteAccountAlias",
        "resource_mappings": {}
      }
    ],
    "delete-account-password-policy": [
      {
        "action": "iam:DeleteAccountPasswordPolicy",
        "resource_mappings": {}
      }
    ],
    "delete-group": [
      {
        "action": "iam:DeleteGroup",
        "resource_mappings": {
          "GroupNameWithPath": {
            "template": "${GroupName}"
          }
        }
      }
    ],
    "delete-group-policy": [
      {
        "action": "iam:DeleteGroupPolicy",
        "resource_mappings": {
          "GroupNameWithPath": {
            "template": "${GroupName}"
          }
        }
      }
    ],
    "delete-instance-profile": [
      {
        "action": "iam:DeleteInstanceProfile",
        "resource_mappings": {
          "InstanceProfileNameWithPath": {
            "template": "${InstanceProfileName}"
          }
        }
      }
    ],
    "delete-login-profile": [
      {
        "action": "iam:DeleteLoginProfile",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "delete-open-id-connect-provider": [
      {
        "action": "iam:DeleteOpenIDConnectProvider",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "oidc-provider": "${OpenIDConnectProviderArn}"
        }
      }
    ],
    "delete-policy": [
      {
        "action": "iam:DeletePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "policy": "${PolicyArn}"
        }
      }
    ],
    "delete-policy-version": [
      {
        "action": "iam:DeletePolicyVersion",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "policy": "${PolicyArn}"
        }
      }
    ],
    "delete-role": [
      {
        "action": "iam:DeleteRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "${RoleName}"
          }
        }
      }
    ],
    "delete-role-permissions-boundary": [
      {
        "action": "iam:DeleteRolePermissionsBoundary",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "${RoleName}"
          }
        }
      }
    ],
    "delete-role-policy": [
      {
        "action": "iam:DeleteRolePolicy",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "${RoleName}"
          }
        }
      }
    ],
    "delete-saml-provider": [
      {
        "action": "iam:DeleteSAMLProvider",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "saml-provider": "${SAMLProviderArn}"
        }
      }
    ],
    "delete-ssh-public-key": [
      {
        "action": "iam:DeleteSSHPublicKey",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "delete-server-certificate": [
      {
        "action": "iam:DeleteServerCertificate",
        "resource_mappings": {
          "CertificateNameWithPath": {
            "template": "${ServerCertificateName}"
          }
        }
      }
    ],
    "delete-service-linked-role": [
      {
        "action": "iam:DeleteServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "${RoleName}"
          }
        }
      }
    ],
    "delete-service-specific-credential": [
      {
        "action": "iam:DeleteServiceSpecificCredential",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "delete-signing-certificate": [
      {
        "action": "iam:DeleteSigningCertificate",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "delete-user": [
      {
        "action": "iam:DeleteUser",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "delete-user-permissions-boundary": [
      {
        "action": "iam:DeleteUserPermissionsBoundary",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "delete-user-policy": [
      {
        "action": "iam:DeleteUserPolicy",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "delete-virtual-mfa-device": [
      {
        "action": "iam:DeleteVirtualMFADevice",
        "resource_mappings": {
          "MfaTokenIdWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "detach-group-policy": [
      {
        "action": "iam:DetachGroupPolicy",
        "resource_mappings": {
          "GroupNameWithPath": {
            "template": "${GroupName}"
          }
        }
      }
    ],
    "detach-role-policy": [
      {
        "action": "iam:DetachRolePolicy",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "${RoleName}"
          }
        }
      }
    ],
    "detach-user-policy": [
      {
        "action": "iam:DetachUserPolicy",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "enable-mfa-device": [
      {
        "action": "iam:EnableMFADevice",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "generate-credential-report": [
      {
        "action": "iam:GenerateCredentialReport",
        "resource_mappings": {}
      }
    ],
    "generate-organizations-access-report": [
      {
        "action": "iam:GenerateOrganizationsAccessReport",
        "resource_mappings": {
          "EntityPath": {
            "template": "${EntityPath}"
          }
        }
      },
      {
        "action": "organizations:DescribePolicy",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "PolicyType": {
            "template": "*"
          },
          "PolicyId": {
            "template": "%%regex%${OrganizationsPolicyId}%/^(?:p-)?(.+)$/g%%"
          }
        }
      }
    ],
    "generate-service-last-accessed-details": [
      {
        "action": "iam:GenerateServiceLastAccessedDetails",
        "resource_mappings": {}
      }
    ],
    "get-access-key-last-used": [
      {
        "action": "iam:GetAccessKeyLastUsed",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "get-account-authorization-details": [
      {
        "action": "iam:GetAccountAuthorizationDetails",
        "resource_mappings": {}
      }
    ],
    "get-account-password-policy": [
      {
        "action": "iam:GetAccountPasswordPolicy",
        "resource_mappings": {}
      }
    ],
    "get-account-summary": [
      {
        "action": "iam:GetAccountSummary",
        "resource_mappings": {}
      }
    ],
    "get-context-keys-for-custom-policy": [
      {
        "action": "iam:GetContextKeysForCustomPolicy",
        "resource_mappings": {}
      }
    ],
    "get-context-keys-for-principal-policy": [
      {
        "action": "iam:GetContextKeysForPrincipalPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "group": "%%iftemplatematch%${PolicySourceArn}%%",
          "role": "%%iftemplatematch%${PolicySourceArn}%%",
          "user": "%%iftemplatematch%${PolicySourceArn}%%"
        }
      }
    ],
    "get-credential-report": [
      {
        "action": "iam:GetCredentialReport",
        "resource_mappings": {}
      }
    ],
    "get-group": [
      {
        "action": "iam:GetGroup",
        "resource_mappings": {
          "GroupNameWithPath": {
            "template": "${GroupName}"
          }
        }
      }
    ],
    "get-group-policy": [
      {
        "action": "iam:GetGroupPolicy",
        "resource_mappings": {
          "GroupNameWithPath": {
            "template": "${GroupName}"
          }
        }
      }
    ],
    "get-instance-profile": [
      {
        "action": "iam:GetInstanceProfile",
        "resource_mappings": {
          "InstanceProfileNameWithPath": {
            "template": "${InstanceProfileName}"
          }
        }
      }
    ],
    "get-login-profile": [
      {
        "action": "iam:GetLoginProfile",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "get-mfa-device": [
      {
        "action": "iam:GetMFADevice",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "get-open-id-connect-provider": [
      {
        "action": "iam:GetOpenIDConnectProvider",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "oidc-provider": "${OpenIDConnectProviderArn}"
        }
      }
    ],
    "get-organizations-access-report": [
      {
        "action": "iam:GetOrganizationsAccessReport",
        "resource_mappings": {}
      }
    ],
    "get-policy": [
      {
        "action": "iam:GetPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "policy": "${PolicyArn}"
        }
      }
    ],
    "get-policy-version": [
      {
        "action": "iam:GetPolicyVersion",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "policy": "${PolicyArn}"
        }
      }
    ],
    "get-role": [
      {
        "action": "iam:GetRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "${RoleName}"
          }
        }
      }
    ],
    "get-role-policy": [
      {
        "action": "iam:GetRolePolicy",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "${RoleName}"
          }
        }
      }
    ],
    "get-saml-provider": [
      {
        "action": "iam:GetSAMLProvider",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "saml-provider": "${SAMLProviderArn}"
        }
      }
    ],
    "get-ssh-public-key": [
      {
        "action": "iam:GetSSHPublicKey",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "get-server-certificate": [
      {
        "action": "iam:GetServerCertificate",
        "resource_mappings": {
          "CertificateNameWithPath": {
            "template": "${ServerCertificateName}"
          }
        }
      }
    ],
    "get-service-last-accessed-details": [
      {
        "action": "iam:GetServiceLastAccessedDetails",
        "resource_mappings": {}
      }
    ],
    "get-service-last-accessed-details-with-entities": [
      {
        "action": "iam:GetServiceLastAccessedDetailsWithEntities",
        "resource_mappings": {}
      }
    ],
    "get-service-linked-role-deletion-status": [
      {
        "action": "iam:GetServiceLinkedRoleDeletionStatus",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "get-user": [
      {
        "action": "iam:GetUser",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "get-user-policy": [
      {
        "action": "iam:GetUserPolicy",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "list-access-keys": [
      {
        "action": "iam:ListAccessKeys",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "list-account-aliases": [
      {
        "action": "iam:ListAccountAliases",
        "resource_mappings": {}
      }
    ],
    "list-attached-group-policies": [
      {
        "action": "iam:ListAttachedGroupPolicies",
        "resource_mappings": {
          "GroupNameWithPath": {
            "template": "%%regex%${PathPrefix}%/^\\/?(.+)\\/?$/g%%/${GroupName}"
          }
        }
      }
    ],
    "list-attached-role-policies": [
      {
        "action": "iam:ListAttachedRolePolicies",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "%%regex%${PathPrefix}%/^\\/?(.+)\\/?$/g%%/${RoleName}"
          }
        }
      }
    ],
    "list-attached-user-policies": [
      {
        "action": "iam:ListAttachedUserPolicies",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "%%regex%${PathPrefix}%/^\\/?(.+)\\/?$/g%%/${UserName}"
          }
        }
      }
    ],
    "list-entities-for-policy": [
      {
        "action": "iam:ListEntitiesForPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "policy": "${PolicyArn}"
        }
      }
    ],
    "list-group-policies": [
      {
        "action": "iam:ListGroupPolicies",
        "resource_mappings": {
          "GroupNameWithPath": {
            "template": "${GroupName}"
          }
        }
      }
    ],
    "list-groups": [
      {
        "action": "iam:ListGroups",
        "resource_mappings": {}
      }
    ],
    "list-groups-for-user": [
      {
        "action": "iam:ListGroupsForUser",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "list-instance-profile-tags": [
      {
        "action": "iam:ListInstanceProfileTags",
        "resource_mappings": {
          "InstanceProfileNameWithPath": {
            "template": "${InstanceProfileName}"
          }
        }
      }
    ],
    "list-instance-profiles": [
      {
        "action": "iam:ListInstanceProfiles",
        "resource_mappings": {
          "InstanceProfileNameWithPath": {
            "template": "%%regex%${PathPrefix}%/^\\/?(.+)\\/?$/g%%/*"
          }
        }
      }
    ],
    "list-instance-profiles-for-role": [
      {
        "action": "iam:ListInstanceProfilesForRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "${RoleName}"
          }
        }
      }
    ],
    "list-mfa-device-tags": [
      {
        "action": "iam:ListMFADeviceTags",
        "resource_mappings": {
          "MfaTokenIdWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "list-mfa-devices": [
      {
        "action": "iam:ListMFADevices",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "list-open-id-connect-provider-tags": [
      {
        "action": "iam:ListOpenIDConnectProviderTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "oidc-provider": "${OpenIDConnectProviderArn}"
        }
      }
    ],
    "list-open-id-connect-providers": [
      {
        "action": "iam:ListOpenIDConnectProviders",
        "resource_mappings": {}
      }
    ],
    "list-policies": [
      {
        "action": "iam:ListPolicies",
        "resource_mappings": {}
      }
    ],
    "list-policies-granting-service-access": [
      {
        "action": "iam:ListPoliciesGrantingServiceAccess",
        "resource_mappings": {}
      }
    ],
    "list-policy-tags": [
      {
        "action": "iam:ListPolicyTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "policy": "${PolicyArn}"
        }
      }
    ],
    "list-policy-versions": [
      {
        "action": "iam:ListPolicyVersions",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "policy": "${PolicyArn}"
        }
      }
    ],
    "list-role-policies": [
      {
        "action": "iam:ListRolePolicies",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "${RoleName}"
          }
        }
      }
    ],
    "list-role-tags": [
      {
        "action": "iam:ListRoleTags",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "${RoleName}"
          }
        }
      }
    ],
    "list-roles": [
      {
        "action": "iam:ListRoles",
        "resource_mappings": {}
      }
    ],
    "list-saml-provider-tags": [
      {
        "action": "iam:ListSAMLProviderTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "saml-provider": "${SAMLProviderArn}"
        }
      }
    ],
    "list-saml-providers": [
      {
        "action": "iam:ListSAMLProviders",
        "resource_mappings": {}
      }
    ],
    "list-ssh-public-keys": [
      {
        "action": "iam:ListSSHPublicKeys",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "list-server-certificate-tags": [
      {
        "action": "iam:ListServerCertificateTags",
        "resource_mappings": {
          "CertificateNameWithPath": {
            "template": "${ServerCertificateName}"
          }
        }
      }
    ],
    "list-server-certificates": [
      {
        "action": "iam:ListServerCertificates",
        "resource_mappings": {}
      }
    ],
    "list-service-specific-credentials": [
      {
        "action": "iam:ListServiceSpecificCredentials",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "list-signing-certificates": [
      {
        "action": "iam:ListSigningCertificates",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "list-user-policies": [
      {
        "action": "iam:ListUserPolicies",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "list-user-tags": [
      {
        "action": "iam:ListUserTags",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "list-users": [
      {
        "action": "iam:ListUsers",
        "resource_mappings": {}
      }
    ],
    "list-virtual-mfa-devices": [
      {
        "action": "iam:ListVirtualMFADevices",
        "resource_mappings": {}
      }
    ],
    "put-group-policy": [
      {
        "action": "iam:PutGroupPolicy",
        "resource_mappings": {
          "GroupNameWithPath": {
            "template": "${GroupName}"
          }
        }
      }
    ],
    "put-role-permissions-boundary": [
      {
        "action": "iam:PutRolePermissionsBoundary",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "${RoleName}"
          }
        }
      }
    ],
    "put-role-policy": [
      {
        "action": "iam:PutRolePolicy",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "${RoleName}"
          }
        }
      }
    ],
    "put-user-permissions-boundary": [
      {
        "action": "iam:PutUserPermissionsBoundary",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "put-user-policy": [
      {
        "action": "iam:PutUserPolicy",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "remove-client-id-from-open-id-connect-provider": [
      {
        "action": "iam:RemoveClientIDFromOpenIDConnectProvider",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "oidc-provider": "${OpenIDConnectProviderArn}"
        }
      }
    ],
    "remove-role-from-instance-profile": [
      {
        "action": "iam:RemoveRoleFromInstanceProfile",
        "resource_mappings": {
          "InstanceProfileNameWithPath": {
            "template": "${InstanceProfileName}"
          }
        }
      }
    ],
    "remove-user-from-group": [
      {
        "action": "iam:RemoveUserFromGroup",
        "resource_mappings": {
          "GroupNameWithPath": {
            "template": "${GroupName}"
          }
        }
      }
    ],
    "reset-service-specific-credential": [
      {
        "action": "iam:ResetServiceSpecificCredential",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "resync-mfa-device": [
      {
        "action": "iam:ResyncMFADevice",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "set-default-policy-version": [
      {
        "action": "iam:SetDefaultPolicyVersion",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "policy": "${PolicyArn}"
        }
      }
    ],
    "set-security-token-service-preferences": [
      {
        "action": "iam:SetSecurityTokenServicePreferences",
        "resource_mappings": {}
      }
    ],
    "simulate-custom-policy": [
      {
        "action": "iam:SimulateCustomPolicy",
        "resource_mappings": {}
      }
    ],
    "simulate-principal-policy": [
      {
        "action": "iam:SimulatePrincipalPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "group": "%%iftemplatematch%${PolicySourceArn}%%",
          "role": "%%iftemplatematch%${PolicySourceArn}%%",
          "user": "%%iftemplatematch%${PolicySourceArn}%%"
        }
      }
    ],
    "tag-instance-profile": [
      {
        "action": "iam:TagInstanceProfile",
        "resource_mappings": {
          "InstanceProfileNameWithPath": {
            "template": "${InstanceProfileName}"
          }
        }
      }
    ],
    "tag-mfa-device": [
      {
        "action": "iam:TagMFADevice",
        "resource_mappings": {
          "MfaTokenIdWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "tag-open-id-connect-provider": [
      {
        "action": "iam:TagOpenIDConnectProvider",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "oidc-provider": "${OpenIDConnectProviderArn}"
        }
      }
    ],
    "tag-policy": [
      {
        "action": "iam:TagPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "policy": "${PolicyArn}"
        }
      }
    ],
    "tag-role": [
      {
        "action": "iam:TagRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "${RoleName}"
          }
        }
      }
    ],
    "tag-saml-provider": [
      {
        "action": "iam:TagSAMLProvider",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "saml-provider": "${SAMLProviderArn}"
        }
      }
    ],
    "tag-server-certificate": [
      {
        "action": "iam:TagServerCertificate",
        "resource_mappings": {
          "CertificateNameWithPath": {
            "template": "${ServerCertificateName}"
          }
        }
      }
    ],
    "tag-user": [
      {
        "action": "iam:TagUser",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "untag-instance-profile": [
      {
        "action": "iam:UntagInstanceProfile",
        "resource_mappings": {
          "InstanceProfileNameWithPath": {
            "template": "${InstanceProfileName}"
          }
        }
      }
    ],
    "untag-mfa-device": [
      {
        "action": "iam:UntagMFADevice",
        "resource_mappings": {
          "MfaTokenIdWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "untag-open-id-connect-provider": [
      {
        "action": "iam:UntagOpenIDConnectProvider",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "oidc-provider": "${OpenIDConnectProviderArn}"
        }
      }
    ],
    "untag-policy": [
      {
        "action": "iam:UntagPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "policy": "${PolicyArn}"
        }
      }
    ],
    "untag-role": [
      {
        "action": "iam:UntagRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "${RoleName}"
          }
        }
      }
    ],
    "untag-saml-provider": [
      {
        "action": "iam:UntagSAMLProvider",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "saml-provider": "${SAMLProviderArn}"
        }
      }
    ],
    "untag-server-certificate": [
      {
        "action": "iam:UntagServerCertificate",
        "resource_mappings": {
          "CertificateNameWithPath": {
            "template": "${ServerCertificateName}"
          }
        }
      }
    ],
    "untag-user": [
      {
        "action": "iam:UntagUser",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "update-access-key": [
      {
        "action": "iam:UpdateAccessKey",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "update-account-password-policy": [
      {
        "action": "iam:UpdateAccountPasswordPolicy",
        "resource_mappings": {}
      }
    ],
    "update-assume-role-policy": [
      {
        "action": "iam:UpdateAssumeRolePolicy",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "${RoleName}"
          }
        }
      }
    ],
    "update-group": [
      {
        "action": "iam:UpdateGroup",
        "resource_mappings": {
          "GroupNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "update-login-profile": [
      {
        "action": "iam:UpdateLoginProfile",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "update-open-id-connect-provider-thumbprint": [
      {
        "action": "iam:UpdateOpenIDConnectProviderThumbprint",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "oidc-provider": "${OpenIDConnectProviderArn}"
        }
      }
    ],
    "update-role": [
      {
        "action": "iam:UpdateRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "${RoleName}"
          }
        }
      }
    ],
    "update-role-description": [
      {
        "action": "iam:UpdateRoleDescription",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "${RoleName}"
          }
        }
      }
    ],
    "update-saml-provider": [
      {
        "action": "iam:UpdateSAMLProvider",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "saml-provider": "${SAMLProviderArn}"
        }
      }
    ],
    "update-ssh-public-key": [
      {
        "action": "iam:UpdateSSHPublicKey",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "update-server-certificate": [
      {
        "action": "iam:UpdateServerCertificate",
        "resource_mappings": {
          "CertificateNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "update-service-specific-credential": [
      {
        "action": "iam:UpdateServiceSpecificCredential",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "update-signing-certificate": [
      {
        "action": "iam:UpdateSigningCertificate",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "update-user": [
      {
        "action": "iam:UpdateUser",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "upload-ssh-public-key": [
      {
        "action": "iam:UploadSSHPublicKey",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "upload-server-certificate": [
      {
        "action": "iam:UploadServerCertificate",
        "resource_mappings": {
          "CertificateNameWithPath": {
            "template": "%%regex%${Path}%/^\\/(.+)$/g%%${ServerCertificateName}"
          }
        }
      }
    ],
    "upload-signing-certificate": [
      {
        "action": "iam:UploadSigningCertificate",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "iam:GetInstanceProfile",
        "resource_mappings": {
          "InstanceProfileNameWithPath": {
            "template": "${InstanceProfileName}"
          }
        }
      }
    ]
  },
  "identitystore": {
    "create-group": [
      {
        "action": "identitystore:CreateGroup",
        "resource_mappings": {
          "IdentityStoreId": {
            "template": "${IdentityStoreId}"
          }
        }
      }
    ],
    "create-group-membership": [
      {
        "action": "identitystore:CreateGroupMembership",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupId}"
          },
          "IdentityStoreId": {
            "template": "${IdentityStoreId}"
          },
          "UserId": {
            "template": "${MemberId.UserId}"
          }
        }
      }
    ],
    "create-user": [
      {
        "action": "identitystore:CreateUser",
        "resource_mappings": {
          "IdentityStoreId": {
            "template": "${IdentityStoreId}"
          }
        }
      }
    ],
    "delete-group": [
      {
        "action": "identitystore:DeleteGroup",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupId}"
          },
          "IdentityStoreId": {
            "template": "${IdentityStoreId}"
          }
        }
      }
    ],
    "delete-group-membership": [
      {
        "action": "identitystore:DeleteGroupMembership",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "MembershipId": {
            "template": "${MembershipId}"
          },
          "IdentityStoreId": {
            "template": "${IdentityStoreId}"
          },
          "UserId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-user": [
      {
        "action": "identitystore:DeleteUser",
        "resource_mappings": {
          "IdentityStoreId": {
            "template": "${IdentityStoreId}"
          },
          "UserId": {
            "template": "${UserId}"
          }
        }
      }
    ],
    "describe-group": [
      {
        "action": "identitystore:DescribeGroup",
        "resource_mappings": {}
      }
    ],
    "describe-group-membership": [
      {
        "action": "identitystore:DescribeGroupMembership",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "MembershipId": {
            "template": "${MembershipId}"
          },
          "IdentityStoreId": {
            "template": "${IdentityStoreId}"
          },
          "UserId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-user": [
      {
        "action": "identitystore:DescribeUser",
        "resource_mappings": {}
      }
    ],
    "get-group-id": [
      {
        "action": "identitystore:GetGroupId",
        "resource_mappings": {
          "GroupId": {
            "template": "*"
          },
          "IdentityStoreId": {
            "template": "${IdentityStoreId}"
          }
        }
      }
    ],
    "get-group-membership-id": [
      {
        "action": "identitystore:GetGroupMembershipId",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupId}"
          },
          "MembershipId": {
            "template": "*"
          },
          "IdentityStoreId": {
            "template": "${IdentityStoreId}"
          },
          "UserId": {
            "template": "${MemberId.UserId}"
          }
        }
      }
    ],
    "get-user-id": [
      {
        "action": "identitystore:GetUserId",
        "resource_mappings": {
          "IdentityStoreId": {
            "template": "${IdentityStoreId}"
          },
          "UserId": {
            "template": "*"
          }
        }
      }
    ],
    "is-member-in-groups": [
      {
        "action": "identitystore:IsMemberInGroups",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupIds[]}"
          },
          "IdentityStoreId": {
            "template": "${IdentityStoreId}"
          },
          "UserId": {
            "template": "${MemberId.UserId}"
          }
        }
      }
    ],
    "list-group-memberships": [
      {
        "action": "identitystore:ListGroupMemberships",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupId}"
          },
          "IdentityStoreId": {
            "template": "${IdentityStoreId}"
          }
        }
      }
    ],
    "list-group-memberships-for-member": [
      {
        "action": "identitystore:ListGroupMembershipsForMember",
        "resource_mappings": {
          "IdentityStoreId": {
            "template": "${IdentityStoreId}"
          },
          "UserId": {
            "template": "${MemberId.UserId}"
          }
        }
      }
    ],
    "list-groups": [
      {
        "action": "identitystore:ListGroups",
        "resource_mappings": {}
      }
    ],
    "list-users": [
      {
        "action": "identitystore:ListUsers",
        "resource_mappings": {}
      }
    ],
    "update-group": [
      {
        "action": "identitystore:UpdateGroup",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupId}"
          },
          "IdentityStoreId": {
            "template": "${IdentityStoreId}"
          }
        }
      }
    ],
    "update-user": [
      {
        "action": "identitystore:UpdateUser",
        "resource_mappings": {
          "IdentityStoreId": {
            "template": "${IdentityStoreId}"
          },
          "UserId": {
            "template": "${UserId}"
          }
        }
      }
    ]
  },
  "imagebuilder": {
    "cancel-image-creation": [
      {
        "action": "imagebuilder:CancelImageCreation",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "image": "${imageBuildVersionArn}"
        }
      }
    ],
    "create-component": [
      {
        "action": "imagebuilder:CreateComponent",
        "resource_mappings": {
          "ComponentName": {
            "template": "${name}"
          },
          "ComponentVersion": {
            "template": "${semanticVersion}"
          },
          "ComponentBuildVersion": {
            "template": "*"
          },
          "KeyId": {
            "template": "${kmsKeyId}"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "imagebuilder:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "component": "*",
          "containerRecipe": "*",
          "distributionConfiguration": "*",
          "image": "*",
          "imagePipeline": "*",
          "imageRecipe": "*",
          "infrastructureConfiguration": "*"
        }
      },
      {
        "action": "kms:Encrypt",
        "resource_mappings": {
          "KeyId": {
            "template": "${kmsKeyId}"
          }
        }
      },
      {
        "action": "kms:GenerateDataKey",
        "resource_mappings": {
          "KeyId": {
            "template": "${kmsKeyId}"
          }
        }
      },
      {
        "action": "kms:GenerateDataKeyWithoutPlaintext",
        "resource_mappings": {
          "KeyId": {
            "template": "${kmsKeyId}"
          }
        }
      }
    ],
    "create-container-recipe": [
      {
        "action": "imagebuilder:CreateContainerRecipe",
        "resource_mappings": {
          "ContainerRecipeName": {
            "template": "${name}"
          },
          "ContainerRecipeVersion": {
            "template": "${semanticVersion}"
          }
        }
      },
      {
        "action": "ecr:DescribeImages",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${targetRepository.repositoryName}"
          }
        }
      },
      {
        "action": "ecr:DescribeRepositories",
        "resource_mappings": {
          "RepositoryName": {
            "template": "${targetRepository.repositoryName}"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "imagebuilder:GetComponent",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "component": "${components[].componentArn}"
        }
      },
      {
        "action": "imagebuilder:GetImage",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "image": "${parentImage}"
        }
      },
      {
        "action": "imagebuilder:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "component": "*",
          "containerRecipe": "*",
          "distributionConfiguration": "*",
          "image": "*",
          "imagePipeline": "*",
          "imageRecipe": "*",
          "infrastructureConfiguration": "*"
        }
      },
      {
        "action": "kms:Encrypt",
        "resource_mappings": {
          "KeyId": {
            "template": "${kmsKeyId}"
          }
        }
      },
      {
        "action": "kms:GenerateDataKey",
        "resource_mappings": {
          "KeyId": {
            "template": "${kmsKeyId}"
          }
        }
      },
      {
        "action": "kms:GenerateDataKeyWithoutPlaintext",
        "resource_mappings": {
          "KeyId": {
            "template": "${kmsKeyId}"
          }
        }
      }
    ],
    "create-distribution-configuration": [
      {
        "action": "imagebuilder:CreateDistributionConfiguration",
        "resource_mappings": {
          "DistributionConfigurationName": {
            "template": "${name}"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "imagebuilder:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "component": "*",
          "containerRecipe": "*",
          "distributionConfiguration": "*",
          "image": "*",
          "imagePipeline": "*",
          "imageRecipe": "*",
          "infrastructureConfiguration": "*"
        }
      }
    ],
    "create-image": [
      {
        "action": "imagebuilder:CreateImage",
        "resource_mappings": {
          "ImageName": {
            "template": "*"
          },
          "ImageVersion": {
            "template": "*"
          },
          "ImageBuildVersion": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "imagebuilder:GetContainerRecipe",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "containerRecipe": "${containerRecipeArn}"
        }
      },
      {
        "action": "imagebuilder:GetDistributionConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "distributionConfiguration": "${distributionConfigurationArn}"
        }
      },
      {
        "action": "imagebuilder:GetImageRecipe",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "imageRecipe": "${imageRecipeArn}"
        }
      },
      {
        "action": "imagebuilder:GetInfrastructureConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "infrastructureConfiguration": "${infrastructureConfigurationArn}"
        }
      },
      {
        "action": "imagebuilder:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "component": "*",
          "containerRecipe": "*",
          "distributionConfiguration": "*",
          "image": "*",
          "imagePipeline": "*",
          "imageRecipe": "*",
          "infrastructureConfiguration": "*"
        }
      }
    ],
    "create-image-pipeline": [
      {
        "action": "imagebuilder:CreateImagePipeline",
        "resource_mappings": {
          "ImagePipelineName": {
            "template": "${name}"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "imagebuilder:GetContainerRecipe",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "containerRecipe": "${containerRecipeArn}"
        }
      },
      {
        "action": "imagebuilder:GetImageRecipe",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "imageRecipe": "${imageRecipeArn}"
        }
      },
      {
        "action": "imagebuilder:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "component": "*",
          "containerRecipe": "*",
          "distributionConfiguration": "*",
          "image": "*",
          "imagePipeline": "*",
          "imageRecipe": "*",
          "infrastructureConfiguration": "*"
        }
      }
    ],
    "create-image-recipe": [
      {
        "action": "imagebuilder:CreateImageRecipe",
        "resource_mappings": {
          "ImageRecipeName": {
            "template": "${name}"
          },
          "ImageRecipeVersion": {
            "template": "${semanticVersion}"
          }
        }
      },
      {
        "action": "ec2:DescribeImages",
        "resource_mappings": {}
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "imagebuilder:GetComponent",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "component": "${components[].componentArn}"
        }
      },
      {
        "action": "imagebuilder:GetImage",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "image": "%%iftemplatematch%${parentImage}%%"
        }
      },
      {
        "action": "imagebuilder:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "component": "*",
          "containerRecipe": "*",
          "distributionConfiguration": "*",
          "image": "*",
          "imagePipeline": "*",
          "imageRecipe": "*",
          "infrastructureConfiguration": "*"
        }
      }
    ],
    "create-infrastructure-configuration": [
      {
        "action": "imagebuilder:CreateInfrastructureConfiguration",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "imagebuilder:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "component": "*",
          "containerRecipe": "*",
          "distributionConfiguration": "*",
          "image": "*",
          "imagePipeline": "*",
          "imageRecipe": "*",
          "infrastructureConfiguration": "*"
        }
      },
      {
        "action": "sns:Publish",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "topic": "${snsTopicArn}"
        }
      }
    ],
    "delete-component": [
      {
        "action": "imagebuilder:DeleteComponent",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "component": "${componentBuildVersionArn}"
        }
      }
    ],
    "delete-container-recipe": [
      {
        "action": "imagebuilder:DeleteContainerRecipe",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "containerRecipe": "${containerRecipeArn}"
        }
      }
    ],
    "delete-distribution-configuration": [
      {
        "action": "imagebuilder:DeleteDistributionConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "distributionConfiguration": "${distributionConfigurationArn}"
        }
      }
    ],
    "delete-image": [
      {
        "action": "imagebuilder:DeleteImage",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "image": "${imageBuildVersionArn}"
        }
      }
    ],
    "delete-image-pipeline": [
      {
        "action": "imagebuilder:DeleteImagePipeline",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "imagePipeline": "${imagePipelineArn}"
        }
      }
    ],
    "delete-image-recipe": [
      {
        "action": "imagebuilder:DeleteImageRecipe",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "imageRecipe": "${imageRecipeArn}"
        }
      }
    ],
    "delete-infrastructure-configuration": [
      {
        "action": "imagebuilder:DeleteInfrastructureConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "infrastructureConfiguration": "${infrastructureConfigurationArn}"
        }
      }
    ],
    "get-component": [
      {
        "action": "imagebuilder:GetComponent",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "component": "${componentBuildVersionArn}"
        }
      },
      {
        "action": "kms:Decrypt",
        "resource_mappings": {
          "KeyId": {
            "template": "*"
          }
        }
      }
    ],
    "get-component-policy": [
      {
        "action": "imagebuilder:GetComponentPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "component": "${componentArn}"
        }
      }
    ],
    "get-container-recipe": [
      {
        "action": "imagebuilder:GetContainerRecipe",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "containerRecipe": "${containerRecipeArn}"
        }
      }
    ],
    "get-container-recipe-policy": [
      {
        "action": "imagebuilder:GetContainerRecipePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "containerRecipe": "${containerRecipeArn}"
        }
      }
    ],
    "get-distribution-configuration": [
      {
        "action": "imagebuilder:GetDistributionConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "distributionConfiguration": "${distributionConfigurationArn}"
        }
      }
    ],
    "get-image": [
      {
        "action": "imagebuilder:GetImage",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "image": "${imageBuildVersionArn}"
        }
      }
    ],
    "get-image-pipeline": [
      {
        "action": "imagebuilder:GetImagePipeline",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "imagePipeline": "${imagePipelineArn}"
        }
      }
    ],
    "get-image-policy": [
      {
        "action": "imagebuilder:GetImagePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "image": "${imageArn}"
        }
      }
    ],
    "get-image-recipe": [
      {
        "action": "imagebuilder:GetImageRecipe",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "imageRecipe": "${imageRecipeArn}"
        }
      }
    ],
    "get-image-recipe-policy": [
      {
        "action": "imagebuilder:GetImageRecipePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "imageRecipe": "${imageRecipeArn}"
        }
      }
    ],
    "get-infrastructure-configuration": [
      {
        "action": "imagebuilder:GetInfrastructureConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "infrastructureConfiguration": "${infrastructureConfigurationArn}"
        }
      }
    ],
    "get-workflow-execution": [
      {
        "action": "imagebuilder:GetWorkflowExecution",
        "resource_mappings": {
          "WorkflowExecutionId": {
            "template": "${workflowExecutionId}"
          }
        }
      }
    ],
    "get-workflow-step-execution": [
      {
        "action": "imagebuilder:GetWorkflowStepExecution",
        "resource_mappings": {
          "WorkflowStepExecutionId": {
            "template": "${stepExecutionId}"
          }
        }
      }
    ],
    "import-component": [
      {
        "action": "imagebuilder:ImportComponent",
        "resource_mappings": {
          "ComponentName": {
            "template": "${name}"
          },
          "ComponentVersion": {
            "template": "*"
          },
          "ComponentBuildVersion": {
            "template": "*"
          },
          "KeyId": {
            "template": "${kmsKeyId}"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "imagebuilder:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "component": "*",
          "containerRecipe": "*",
          "distributionConfiguration": "*",
          "image": "*",
          "imagePipeline": "*",
          "imageRecipe": "*",
          "infrastructureConfiguration": "*"
        }
      },
      {
        "action": "kms:Encrypt",
        "resource_mappings": {
          "KeyId": {
            "template": "${kmsKeyId}"
          }
        }
      },
      {
        "action": "kms:GenerateDataKey",
        "resource_mappings": {
          "KeyId": {
            "template": "${kmsKeyId}"
          }
        }
      },
      {
        "action": "kms:GenerateDataKeyWithoutPlaintext",
        "resource_mappings": {
          "KeyId": {
            "template": "${kmsKeyId}"
          }
        }
      }
    ],
    "import-vm-image": [
      {
        "action": "imagebuilder:ImportVmImage",
        "resource_mappings": {
          "ImageName": {
            "template": "${name}"
          },
          "ImageVersion": {
            "template": "${semanticVersion}"
          },
          "ImageBuildVersion": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeImportImageTasks",
        "resource_mappings": {}
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "list-component-build-versions": [
      {
        "action": "imagebuilder:ListComponentBuildVersions",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "componentVersion": "${componentVersionArn}"
        }
      }
    ],
    "list-components": [
      {
        "action": "imagebuilder:ListComponents",
        "resource_mappings": {}
      }
    ],
    "list-container-recipes": [
      {
        "action": "imagebuilder:ListContainerRecipes",
        "resource_mappings": {}
      }
    ],
    "list-distribution-configurations": [
      {
        "action": "imagebuilder:ListDistributionConfigurations",
        "resource_mappings": {}
      }
    ],
    "list-image-build-versions": [
      {
        "action": "imagebuilder:ListImageBuildVersions",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "imageVersion": "${imageVersionArn}"
        }
      }
    ],
    "list-image-packages": [
      {
        "action": "imagebuilder:ListImagePackages",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "image": "${imageBuildVersionArn}"
        }
      }
    ],
    "list-image-pipeline-images": [
      {
        "action": "imagebuilder:ListImagePipelineImages",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "imagePipeline": "${imagePipelineArn}"
        }
      }
    ],
    "list-image-pipelines": [
      {
        "action": "imagebuilder:ListImagePipelines",
        "resource_mappings": {}
      }
    ],
    "list-image-recipes": [
      {
        "action": "imagebuilder:ListImageRecipes",
        "resource_mappings": {}
      }
    ],
    "list-image-scan-finding-aggregations": [
      {
        "action": "imagebuilder:ListImageScanFindingAggregations",
        "resource_mappings": {
          "ImageName": {
            "template": "*"
          },
          "ImageVersion": {
            "template": "*"
          },
          "ImageBuildVersion": {
            "template": "*"
          },
          "ImagePipelineName": {
            "template": "*"
          }
        }
      }
    ],
    "list-image-scan-findings": [
      {
        "action": "imagebuilder:ListImageScanFindings",
        "resource_mappings": {
          "ImageName": {
            "template": "*"
          },
          "ImageVersion": {
            "template": "*"
          },
          "ImageBuildVersion": {
            "template": "*"
          },
          "ImagePipelineName": {
            "template": "*"
          }
        }
      },
      {
        "action": "inspector2:ListFindings",
        "resource_mappings": {}
      }
    ],
    "list-images": [
      {
        "action": "imagebuilder:ListImages",
        "resource_mappings": {}
      }
    ],
    "list-infrastructure-configurations": [
      {
        "action": "imagebuilder:ListInfrastructureConfigurations",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "imagebuilder:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "component": "%%iftemplatematch%${resourceArn}%%",
          "distributionConfiguration": "%%iftemplatematch%${resourceArn}%%",
          "image": "%%iftemplatematch%${resourceArn}%%",
          "imagePipeline": "%%iftemplatematch%${resourceArn}%%",
          "imageRecipe": "%%iftemplatematch%${resourceArn}%%",
          "infrastructureConfiguration": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "list-workflow-executions": [
      {
        "action": "imagebuilder:ListWorkflowExecutions",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "image": "${imageBuildVersionArn}"
        }
      }
    ],
    "list-workflow-step-executions": [
      {
        "action": "imagebuilder:ListWorkflowStepExecutions",
        "resource_mappings": {
          "WorkflowExecutionId": {
            "template": "${workflowExecutionId}"
          }
        }
      }
    ],
    "put-component-policy": [
      {
        "action": "imagebuilder:PutComponentPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "component": "${componentArn}"
        }
      }
    ],
    "put-container-recipe-policy": [
      {
        "action": "imagebuilder:PutContainerRecipePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "containerRecipe": "${containerRecipeArn}"
        }
      }
    ],
    "put-image-policy": [
      {
        "action": "imagebuilder:PutImagePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "image": "${imageArn}"
        }
      }
    ],
    "put-image-recipe-policy": [
      {
        "action": "imagebuilder:PutImageRecipePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "imageRecipe": "${imageRecipeArn}"
        }
      }
    ],
    "start-image-pipeline-execution": [
      {
        "action": "imagebuilder:StartImagePipelineExecution",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "imagePipeline": "${imagePipelineArn}"
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "imagebuilder:GetImagePipeline",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "imagePipeline": "${imagePipelineArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "imagebuilder:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "component": "%%iftemplatematch%${resourceArn}%%",
          "containerRecipe": "%%iftemplatematch%${resourceArn}%%",
          "distributionConfiguration": "%%iftemplatematch%${resourceArn}%%",
          "image": "%%iftemplatematch%${resourceArn}%%",
          "imagePipeline": "%%iftemplatematch%${resourceArn}%%",
          "imageRecipe": "%%iftemplatematch%${resourceArn}%%",
          "infrastructureConfiguration": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "imagebuilder:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "component": "%%iftemplatematch%${resourceArn}%%",
          "containerRecipe": "%%iftemplatematch%${resourceArn}%%",
          "distributionConfiguration": "%%iftemplatematch%${resourceArn}%%",
          "image": "%%iftemplatematch%${resourceArn}%%",
          "imagePipeline": "%%iftemplatematch%${resourceArn}%%",
          "imageRecipe": "%%iftemplatematch%${resourceArn}%%",
          "infrastructureConfiguration": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-distribution-configuration": [
      {
        "action": "imagebuilder:UpdateDistributionConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "distributionConfiguration": "${distributionConfigurationArn}"
        }
      }
    ],
    "update-image-pipeline": [
      {
        "action": "imagebuilder:UpdateImagePipeline",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "imagePipeline": "${imagePipelineArn}"
        }
      }
    ],
    "update-infrastructure-configuration": [
      {
        "action": "imagebuilder:UpdateInfrastructureConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "infrastructureConfiguration": "${infrastructureConfigurationArn}"
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "sns:Publish",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "topic": "${snsTopicArn}"
        }
      }
    ]
  },
  "importexport": {
    "cancel-job": [
      {
        "action": "importexport:CancelJob",
        "resource_mappings": {}
      }
    ],
    "create-job": [
      {
        "action": "importexport:CreateJob",
        "resource_mappings": {}
      }
    ],
    "get-shipping-label": [
      {
        "action": "importexport:GetShippingLabel",
        "resource_mappings": {}
      }
    ],
    "get-status": [
      {
        "action": "importexport:GetStatus",
        "resource_mappings": {}
      }
    ],
    "list-jobs": [
      {
        "action": "importexport:ListJobs",
        "resource_mappings": {}
      }
    ],
    "update-job": [
      {
        "action": "importexport:UpdateJob",
        "resource_mappings": {}
      }
    ]
  },
  "inspector": {
    "add-attributes-to-findings": [
      {
        "action": "inspector:AddAttributesToFindings",
        "resource_mappings": {}
      }
    ],
    "create-assessment-target": [
      {
        "action": "inspector:CreateAssessmentTarget",
        "resource_mappings": {}
      }
    ],
    "create-assessment-template": [
      {
        "action": "inspector:CreateAssessmentTemplate",
        "resource_mappings": {}
      }
    ],
    "create-exclusions-preview": [
      {
        "action": "inspector:CreateExclusionsPreview",
        "resource_mappings": {}
      }
    ],
    "create-resource-group": [
      {
        "action": "inspector:CreateResourceGroup",
        "resource_mappings": {}
      }
    ],
    "delete-assessment-run": [
      {
        "action": "inspector:DeleteAssessmentRun",
        "resource_mappings": {}
      }
    ],
    "delete-assessment-target": [
      {
        "action": "inspector:DeleteAssessmentTarget",
        "resource_mappings": {}
      }
    ],
    "delete-assessment-template": [
      {
        "action": "inspector:DeleteAssessmentTemplate",
        "resource_mappings": {}
      }
    ],
    "describe-assessment-runs": [
      {
        "action": "inspector:DescribeAssessmentRuns",
        "resource_mappings": {}
      }
    ],
    "describe-assessment-targets": [
      {
        "action": "inspector:DescribeAssessmentTargets",
        "resource_mappings": {}
      }
    ],
    "describe-assessment-templates": [
      {
        "action": "inspector:DescribeAssessmentTemplates",
        "resource_mappings": {}
      }
    ],
    "describe-cross-account-access-role": [
      {
        "action": "inspector:DescribeCrossAccountAccessRole",
        "resource_mappings": {}
      }
    ],
    "describe-exclusions": [
      {
        "action": "inspector:DescribeExclusions",
        "resource_mappings": {}
      }
    ],
    "describe-findings": [
      {
        "action": "inspector:DescribeFindings",
        "resource_mappings": {}
      }
    ],
    "describe-resource-groups": [
      {
        "action": "inspector:DescribeResourceGroups",
        "resource_mappings": {}
      }
    ],
    "describe-rules-packages": [
      {
        "action": "inspector:DescribeRulesPackages",
        "resource_mappings": {}
      }
    ],
    "get-assessment-report": [
      {
        "action": "inspector:GetAssessmentReport",
        "resource_mappings": {}
      }
    ],
    "get-exclusions-preview": [
      {
        "action": "inspector:GetExclusionsPreview",
        "resource_mappings": {}
      }
    ],
    "get-telemetry-metadata": [
      {
        "action": "inspector:GetTelemetryMetadata",
        "resource_mappings": {}
      }
    ],
    "list-assessment-run-agents": [
      {
        "action": "inspector:ListAssessmentRunAgents",
        "resource_mappings": {}
      }
    ],
    "list-assessment-runs": [
      {
        "action": "inspector:ListAssessmentRuns",
        "resource_mappings": {}
      }
    ],
    "list-assessment-targets": [
      {
        "action": "inspector:ListAssessmentTargets",
        "resource_mappings": {}
      }
    ],
    "list-assessment-templates": [
      {
        "action": "inspector:ListAssessmentTemplates",
        "resource_mappings": {}
      }
    ],
    "list-event-subscriptions": [
      {
        "action": "inspector:ListEventSubscriptions",
        "resource_mappings": {}
      }
    ],
    "list-exclusions": [
      {
        "action": "inspector:ListExclusions",
        "resource_mappings": {}
      }
    ],
    "list-findings": [
      {
        "action": "inspector:ListFindings",
        "resource_mappings": {}
      }
    ],
    "list-rules-packages": [
      {
        "action": "inspector:ListRulesPackages",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "inspector:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "preview-agents": [
      {
        "action": "inspector:PreviewAgents",
        "resource_mappings": {}
      }
    ],
    "register-cross-account-access-role": [
      {
        "action": "inspector:RegisterCrossAccountAccessRole",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${roleArn}"
        }
      }
    ],
    "remove-attributes-from-findings": [
      {
        "action": "inspector:RemoveAttributesFromFindings",
        "resource_mappings": {}
      }
    ],
    "set-tags-for-resource": [
      {
        "action": "inspector:SetTagsForResource",
        "resource_mappings": {}
      }
    ],
    "start-assessment-run": [
      {
        "action": "inspector:StartAssessmentRun",
        "resource_mappings": {}
      }
    ],
    "stop-assessment-run": [
      {
        "action": "inspector:StopAssessmentRun",
        "resource_mappings": {}
      }
    ],
    "subscribe-to-event": [
      {
        "action": "inspector:SubscribeToEvent",
        "resource_mappings": {}
      }
    ],
    "unsubscribe-from-event": [
      {
        "action": "inspector:UnsubscribeFromEvent",
        "resource_mappings": {}
      }
    ],
    "update-assessment-target": [
      {
        "action": "inspector:UpdateAssessmentTarget",
        "resource_mappings": {}
      }
    ]
  },
  "inspector2": {
    "associate-member": [
      {
        "action": "inspector2:AssociateMember",
        "resource_mappings": {}
      }
    ],
    "batch-get-account-status": [
      {
        "action": "inspector2:BatchGetAccountStatus",
        "resource_mappings": {}
      }
    ],
    "batch-get-code-snippet": [
      {
        "action": "inspector2:BatchGetCodeSnippet",
        "resource_mappings": {}
      }
    ],
    "batch-get-finding-details": [
      {
        "action": "inspector2:BatchGetFindingDetails",
        "resource_mappings": {}
      }
    ],
    "batch-get-free-trial-info": [
      {
        "action": "inspector2:BatchGetFreeTrialInfo",
        "resource_mappings": {}
      }
    ],
    "batch-get-member-ec2-deep-inspection-status": [
      {
        "action": "inspector2:BatchGetMemberEc2DeepInspectionStatus",
        "resource_mappings": {}
      }
    ],
    "batch-update-member-ec2-deep-inspection-status": [
      {
        "action": "inspector2:BatchUpdateMemberEc2DeepInspectionStatus",
        "resource_mappings": {}
      }
    ],
    "cancel-findings-report": [
      {
        "action": "inspector2:CancelFindingsReport",
        "resource_mappings": {}
      }
    ],
    "cancel-sbom-export": [
      {
        "action": "inspector2:CancelSbomExport",
        "resource_mappings": {}
      }
    ],
    "create-filter": [
      {
        "action": "inspector2:CreateFilter",
        "resource_mappings": {
          "OwnerId": {
            "template": "*"
          },
          "FilterId": {
            "template": "*"
          }
        }
      }
    ],
    "create-findings-report": [
      {
        "action": "inspector2:CreateFindingsReport",
        "resource_mappings": {}
      }
    ],
    "create-sbom-export": [
      {
        "action": "inspector2:CreateSbomExport",
        "resource_mappings": {}
      }
    ],
    "delete-filter": [
      {
        "action": "inspector2:DeleteFilter",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Filter": "${arn}"
        }
      }
    ],
    "describe-organization-configuration": [
      {
        "action": "inspector2:DescribeOrganizationConfiguration",
        "resource_mappings": {}
      }
    ],
    "disable": [
      {
        "action": "inspector2:Disable",
        "resource_mappings": {}
      }
    ],
    "disable-delegated-admin-account": [
      {
        "action": "inspector2:DisableDelegatedAdminAccount",
        "resource_mappings": {}
      }
    ],
    "disassociate-member": [
      {
        "action": "inspector2:DisassociateMember",
        "resource_mappings": {}
      }
    ],
    "enable": [
      {
        "action": "inspector2:Enable",
        "resource_mappings": {}
      }
    ],
    "enable-delegated-admin-account": [
      {
        "action": "inspector2:EnableDelegatedAdminAccount",
        "resource_mappings": {}
      }
    ],
    "get-configuration": [
      {
        "action": "inspector2:GetConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-delegated-admin-account": [
      {
        "action": "inspector2:GetDelegatedAdminAccount",
        "resource_mappings": {}
      }
    ],
    "get-ec2-deep-inspection-configuration": [
      {
        "action": "inspector2:GetEc2DeepInspectionConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-encryption-key": [
      {
        "action": "inspector2:GetEncryptionKey",
        "resource_mappings": {}
      }
    ],
    "get-findings-report-status": [
      {
        "action": "inspector2:GetFindingsReportStatus",
        "resource_mappings": {}
      }
    ],
    "get-member": [
      {
        "action": "inspector2:GetMember",
        "resource_mappings": {}
      }
    ],
    "get-sbom-export": [
      {
        "action": "inspector2:GetSbomExport",
        "resource_mappings": {}
      }
    ],
    "list-account-permissions": [
      {
        "action": "inspector2:ListAccountPermissions",
        "resource_mappings": {}
      }
    ],
    "list-coverage": [
      {
        "action": "inspector2:ListCoverage",
        "resource_mappings": {}
      }
    ],
    "list-coverage-statistics": [
      {
        "action": "inspector2:ListCoverageStatistics",
        "resource_mappings": {}
      }
    ],
    "list-delegated-admin-accounts": [
      {
        "action": "inspector2:ListDelegatedAdminAccounts",
        "resource_mappings": {}
      }
    ],
    "list-filters": [
      {
        "action": "inspector2:ListFilters",
        "resource_mappings": {}
      }
    ],
    "list-finding-aggregations": [
      {
        "action": "inspector2:ListFindingAggregations",
        "resource_mappings": {}
      }
    ],
    "list-findings": [
      {
        "action": "inspector2:ListFindings",
        "resource_mappings": {}
      }
    ],
    "list-members": [
      {
        "action": "inspector2:ListMembers",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "inspector2:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "list-usage-totals": [
      {
        "action": "inspector2:ListUsageTotals",
        "resource_mappings": {}
      }
    ],
    "reset-encryption-key": [
      {
        "action": "inspector2:ResetEncryptionKey",
        "resource_mappings": {}
      }
    ],
    "search-vulnerabilities": [
      {
        "action": "inspector2:SearchVulnerabilities",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "inspector2:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "inspector2:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-configuration": [
      {
        "action": "inspector2:UpdateConfiguration",
        "resource_mappings": {}
      }
    ],
    "update-ec2-deep-inspection-configuration": [
      {
        "action": "inspector2:UpdateEc2DeepInspectionConfiguration",
        "resource_mappings": {}
      }
    ],
    "update-encryption-key": [
      {
        "action": "inspector2:UpdateEncryptionKey",
        "resource_mappings": {}
      }
    ],
    "update-filter": [
      {
        "action": "inspector2:UpdateFilter",
        "resource_mappings": {
          "OwnerId": {
            "template": "*"
          },
          "FilterId": {
            "template": "*"
          }
        }
      }
    ],
    "update-org-ec2-deep-inspection-configuration": [
      {
        "action": "inspector2:UpdateOrgEc2DeepInspectionConfiguration",
        "resource_mappings": {}
      }
    ],
    "update-organization-configuration": [
      {
        "action": "inspector2:UpdateOrganizationConfiguration",
        "resource_mappings": {}
      }
    ]
  },
  "internetmonitor": {
    "create-monitor": [
      {
        "action": "internetmonitor:CreateMonitor",
        "resource_mappings": {
          "MonitorName": {
            "template": "${MonitorName}"
          }
        }
      }
    ],
    "delete-monitor": [
      {
        "action": "internetmonitor:DeleteMonitor",
        "resource_mappings": {
          "MonitorName": {
            "template": "${MonitorName}"
          }
        }
      }
    ],
    "get-health-event": [
      {
        "action": "internetmonitor:GetHealthEvent",
        "resource_mappings": {
          "MonitorName": {
            "template": "${MonitorName}"
          },
          "EventId": {
            "template": "${EventId}"
          }
        }
      }
    ],
    "get-monitor": [
      {
        "action": "internetmonitor:GetMonitor",
        "resource_mappings": {
          "MonitorName": {
            "template": "${MonitorName}"
          }
        }
      }
    ],
    "list-health-events": [
      {
        "action": "internetmonitor:ListHealthEvents",
        "resource_mappings": {
          "MonitorName": {
            "template": "${MonitorName}"
          }
        }
      }
    ],
    "list-monitors": [
      {
        "action": "internetmonitor:ListMonitors",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "internetmonitor:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Monitor": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "internetmonitor:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Monitor": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "internetmonitor:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Monitor": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-monitor": [
      {
        "action": "internetmonitor:UpdateMonitor",
        "resource_mappings": {
          "MonitorName": {
            "template": "${MonitorName}"
          }
        }
      }
    ]
  },
  "iot": {
    "accept-certificate-transfer": [
      {
        "action": "iot:AcceptCertificateTransfer",
        "resource_mappings": {
          "Certificate": {
            "template": "${certificateId}"
          }
        }
      }
    ],
    "add-thing-to-billing-group": [
      {
        "action": "iot:AddThingToBillingGroup",
        "resource_mappings": {
          "BillingGroupName": {
            "template": "${billingGroupName}"
          },
          "ThingName": {
            "template": "${thingName}"
          }
        }
      }
    ],
    "add-thing-to-thing-group": [
      {
        "action": "iot:AddThingToThingGroup",
        "resource_mappings": {
          "ThingName": {
            "template": "${thingName}"
          },
          "ThingGroupName": {
            "template": "${thingGroupName}"
          }
        }
      }
    ],
    "associate-targets-with-job": [
      {
        "action": "iot:AssociateTargetsWithJob",
        "resource_mappings": {
          "JobId": {
            "template": "${jobId}"
          }
        },
        "resourcearn_mappings": {
          "thing": "%%iftemplatematch%${targets[]}%%",
          "thinggroup": "%%iftemplatematch%${targets[]}%%"
        }
      }
    ],
    "attach-policy": [
      {
        "action": "iot:AttachPolicy",
        "resource_mappings": {
          "Certificate": {
            "template": "*"
          },
          "ThingGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "attach-principal-policy": [
      {
        "action": "iot:AttachPrincipalPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cert": "%%iftemplatematch%${principal}%%"
        }
      }
    ],
    "attach-security-profile": [
      {
        "action": "iot:AttachSecurityProfile",
        "resource_mappings": {
          "SecurityProfileName": {
            "template": "${securityProfileName}"
          },
          "DimensionName": {
            "template": "*"
          },
          "ThingGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "attach-thing-principal": [
      {
        "action": "iot:AttachThingPrincipal",
        "resource_mappings": {}
      }
    ],
    "cancel-audit-mitigation-actions-task": [
      {
        "action": "iot:CancelAuditMitigationActionsTask",
        "resource_mappings": {}
      }
    ],
    "cancel-audit-task": [
      {
        "action": "iot:CancelAuditTask",
        "resource_mappings": {}
      }
    ],
    "cancel-certificate-transfer": [
      {
        "action": "iot:CancelCertificateTransfer",
        "resource_mappings": {
          "Certificate": {
            "template": "${certificateId}"
          }
        }
      }
    ],
    "cancel-detect-mitigation-actions-task": [
      {
        "action": "iot:CancelDetectMitigationActionsTask",
        "resource_mappings": {}
      }
    ],
    "cancel-job": [
      {
        "action": "iot:CancelJob",
        "resource_mappings": {
          "JobId": {
            "template": "${jobId}"
          }
        }
      }
    ],
    "cancel-job-execution": [
      {
        "action": "iot:CancelJobExecution",
        "resource_mappings": {
          "JobId": {
            "template": "${jobId}"
          },
          "ThingName": {
            "template": "${thingName}"
          }
        }
      }
    ],
    "clear-default-authorizer": [
      {
        "action": "iot:ClearDefaultAuthorizer",
        "resource_mappings": {}
      }
    ],
    "confirm-topic-rule-destination": [
      {
        "action": "iot:ConfirmTopicRuleDestination",
        "resource_mappings": {
          "destinationType": {
            "template": "*"
          },
          "uuid": {
            "template": "*"
          }
        }
      }
    ],
    "create-audit-suppression": [
      {
        "action": "iot:CreateAuditSuppression",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${resourceIdentifier.iamRoleArn}"
        }
      }
    ],
    "create-authorizer": [
      {
        "action": "iot:CreateAuthorizer",
        "resource_mappings": {
          "AuthorizerName": {
            "template": "${authorizerName}"
          }
        }
      }
    ],
    "create-billing-group": [
      {
        "action": "iot:CreateBillingGroup",
        "resource_mappings": {
          "BillingGroupName": {
            "template": "${billingGroupName}"
          }
        }
      }
    ],
    "create-certificate-from-csr": [
      {
        "action": "iot:CreateCertificateFromCsr",
        "resource_mappings": {}
      }
    ],
    "create-custom-metric": [
      {
        "action": "iot:CreateCustomMetric",
        "resource_mappings": {
          "MetricName": {
            "template": "${metricName}"
          }
        }
      }
    ],
    "create-dimension": [
      {
        "action": "iot:CreateDimension",
        "resource_mappings": {
          "DimensionName": {
            "template": "${name}"
          }
        }
      }
    ],
    "create-domain-configuration": [
      {
        "action": "iot:CreateDomainConfiguration",
        "resource_mappings": {
          "domainConfigurationName": {
            "template": "${domainConfigurationName}"
          }
        }
      }
    ],
    "create-dynamic-thing-group": [
      {
        "action": "iot:CreateDynamicThingGroup",
        "resource_mappings": {
          "ThingGroupName": {
            "template": "${thingGroupName}"
          }
        }
      }
    ],
    "create-fleet-metric": [
      {
        "action": "iot:CreateFleetMetric",
        "resource_mappings": {
          "FleetMetricName": {
            "template": "${metricName}"
          },
          "IndexName": {
            "template": "${indexName}"
          }
        }
      }
    ],
    "create-job": [
      {
        "action": "iot:CreateJob",
        "resource_mappings": {
          "JobId": {
            "template": "${jobId}"
          }
        },
        "resourcearn_mappings": {
          "thing": "%%iftemplatematch%${targets[]}%%",
          "thinggroup": "%%iftemplatematch%${targets[]}%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${presignedUrlConfig.roleArn}"
        }
      }
    ],
    "create-job-template": [
      {
        "action": "iot:CreateJobTemplate",
        "resource_mappings": {
          "JobTemplateId": {
            "template": "${jobTemplateId}"
          }
        },
        "resourcearn_mappings": {
          "job": "${jobArn}"
        }
      }
    ],
    "create-keys-and-certificate": [
      {
        "action": "iot:CreateKeysAndCertificate",
        "resource_mappings": {}
      }
    ],
    "create-mitigation-action": [
      {
        "action": "iot:CreateMitigationAction",
        "resource_mappings": {
          "MitigationActionName": {
            "template": "${actionName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${roleArn}%${actionParams.enableIoTLoggingParams.roleArnForLogging}%%"
        }
      }
    ],
    "create-ota-update": [
      {
        "action": "iot:CreateOTAUpdate",
        "resource_mappings": {
          "otaUpdateId": {
            "template": "${otaUpdateId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${roleArn}"
        }
      }
    ],
    "create-package": [
      {
        "action": "iot:CreatePackage",
        "resource_mappings": {
          "PackageName": {
            "template": "${packageName}"
          }
        }
      },
      {
        "action": "iot:GetIndexingConfiguration",
        "resource_mappings": {}
      }
    ],
    "create-package-version": [
      {
        "action": "iot:CreatePackageVersion",
        "resource_mappings": {
          "PackageName": {
            "template": "${packageName}"
          },
          "VersionName": {
            "template": "${versionName}"
          }
        }
      },
      {
        "action": "iot:GetIndexingConfiguration",
        "resource_mappings": {}
      }
    ],
    "create-policy": [
      {
        "action": "iot:CreatePolicy",
        "resource_mappings": {
          "PolicyName": {
            "template": "${policyName}"
          }
        }
      }
    ],
    "create-policy-version": [
      {
        "action": "iot:CreatePolicyVersion",
        "resource_mappings": {
          "PolicyName": {
            "template": "${policyName}"
          }
        }
      }
    ],
    "create-provisioning-claim": [
      {
        "action": "iot:CreateProvisioningClaim",
        "resource_mappings": {
          "provisioningTemplate": {
            "template": "${templateName}"
          }
        }
      }
    ],
    "create-provisioning-template": [
      {
        "action": "iot:CreateProvisioningTemplate",
        "resource_mappings": {
          "provisioningTemplate": {
            "template": "${templateName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${provisioningRoleArn}"
        }
      }
    ],
    "create-provisioning-template-version": [
      {
        "action": "iot:CreateProvisioningTemplateVersion",
        "resource_mappings": {
          "provisioningTemplate": {
            "template": "${templateName}"
          }
        }
      }
    ],
    "create-role-alias": [
      {
        "action": "iot:CreateRoleAlias",
        "resource_mappings": {
          "RoleAlias": {
            "template": "${roleAlias}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${roleArn}"
        }
      }
    ],
    "create-scheduled-audit": [
      {
        "action": "iot:CreateScheduledAudit",
        "resource_mappings": {
          "ScheduleName": {
            "template": "${scheduledAuditName}"
          }
        }
      }
    ],
    "create-security-profile": [
      {
        "action": "iot:CreateSecurityProfile",
        "resource_mappings": {
          "SecurityProfileName": {
            "template": "${securityProfileName}"
          },
          "DimensionName": {
            "template": "%%many%${behaviors[].metricDimension.dimensionName}%${additionalMetricsToRetainV2[].metricDimension.dimensionName}%%"
          }
        }
      }
    ],
    "create-stream": [
      {
        "action": "iot:CreateStream",
        "resource_mappings": {
          "streamId": {
            "template": "${streamId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${roleArn}"
        }
      }
    ],
    "create-thing": [
      {
        "action": "iot:CreateThing",
        "resource_mappings": {
          "ThingName": {
            "template": "${thingName}"
          },
          "BillingGroupName": {
            "template": "${billingGroupName}"
          }
        }
      }
    ],
    "create-thing-group": [
      {
        "action": "iot:CreateThingGroup",
        "resource_mappings": {
          "ThingGroupName": {
            "template": "%%many%${thingGroupName}%${parentGroupName}%%"
          }
        }
      }
    ],
    "create-thing-type": [
      {
        "action": "iot:CreateThingType",
        "resource_mappings": {
          "ThingTypeName": {
            "template": "${thingTypeName}"
          }
        }
      }
    ],
    "create-topic-rule": [
      {
        "action": "iot:CreateTopicRule",
        "resource_mappings": {
          "ruleName": {
            "template": "${ruleName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${topicRulePayload.errorAction.dynamoDB.roleArn}%${topicRulePayload.errorAction.dynamoDBv2.roleArn}%${topicRulePayload.errorAction.sns.roleArn}%${topicRulePayload.errorAction.sqs.roleArn}%${topicRulePayload.errorAction.kinesis.roleArn}%${topicRulePayload.errorAction.republish.roleArn}%${topicRulePayload.errorAction.s3.roleArn}%${topicRulePayload.errorAction.firehose.roleArn}%${topicRulePayload.errorAction.cloudwatchMetric.roleArn}%${topicRulePayload.errorAction.cloudwatchAlarm.roleArn}%${topicRulePayload.errorAction.cloudwatchLogs.roleArn}%${topicRulePayload.errorAction.elasticsearch.roleArn}%%"
        }
      }
    ],
    "create-topic-rule-destination": [
      {
        "action": "iot:CreateTopicRuleDestination",
        "resource_mappings": {
          "destinationType": {
            "template": "*"
          },
          "uuid": {
            "template": "*"
          }
        }
      }
    ],
    "delete-account-audit-configuration": [
      {
        "action": "iot:DeleteAccountAuditConfiguration",
        "resource_mappings": {}
      }
    ],
    "delete-audit-suppression": [
      {
        "action": "iot:DeleteAuditSuppression",
        "resource_mappings": {}
      }
    ],
    "delete-authorizer": [
      {
        "action": "iot:DeleteAuthorizer",
        "resource_mappings": {
          "AuthorizerName": {
            "template": "${authorizerName}"
          }
        }
      }
    ],
    "delete-billing-group": [
      {
        "action": "iot:DeleteBillingGroup",
        "resource_mappings": {
          "BillingGroupName": {
            "template": "${billingGroupName}"
          }
        }
      }
    ],
    "delete-ca-certificate": [
      {
        "action": "iot:DeleteCACertificate",
        "resource_mappings": {
          "CACertificate": {
            "template": "${certificateId}"
          }
        }
      }
    ],
    "delete-certificate": [
      {
        "action": "iot:DeleteCertificate",
        "resource_mappings": {
          "Certificate": {
            "template": "${certificateId}"
          }
        }
      }
    ],
    "delete-custom-metric": [
      {
        "action": "iot:DeleteCustomMetric",
        "resource_mappings": {
          "MetricName": {
            "template": "${metricName}"
          }
        }
      }
    ],
    "delete-dimension": [
      {
        "action": "iot:DeleteDimension",
        "resource_mappings": {
          "DimensionName": {
            "template": "${name}"
          }
        }
      }
    ],
    "delete-domain-configuration": [
      {
        "action": "iot:DeleteDomainConfiguration",
        "resource_mappings": {
          "domainConfigurationName": {
            "template": "${domainConfigurationName}"
          }
        }
      }
    ],
    "delete-dynamic-thing-group": [
      {
        "action": "iot:DeleteDynamicThingGroup",
        "resource_mappings": {
          "ThingGroupName": {
            "template": "${thingGroupName}"
          }
        }
      }
    ],
    "delete-fleet-metric": [
      {
        "action": "iot:DeleteFleetMetric",
        "resource_mappings": {
          "FleetMetricName": {
            "template": "${metricName}"
          }
        }
      }
    ],
    "delete-job": [
      {
        "action": "iot:DeleteJob",
        "resource_mappings": {
          "JobId": {
            "template": "${jobId}"
          }
        }
      }
    ],
    "delete-job-execution": [
      {
        "action": "iot:DeleteJobExecution",
        "resource_mappings": {
          "JobId": {
            "template": "${jobId}"
          },
          "ThingName": {
            "template": "${thingName}"
          }
        }
      }
    ],
    "delete-job-template": [
      {
        "action": "iot:DeleteJobTemplate",
        "resource_mappings": {
          "JobTemplateId": {
            "template": "${jobTemplateId}"
          }
        }
      }
    ],
    "delete-mitigation-action": [
      {
        "action": "iot:DeleteMitigationAction",
        "resource_mappings": {
          "MitigationActionName": {
            "template": "${actionName}"
          }
        }
      }
    ],
    "delete-ota-update": [
      {
        "action": "iot:DeleteOTAUpdate",
        "resource_mappings": {
          "otaUpdateId": {
            "template": "${otaUpdateId}"
          }
        }
      }
    ],
    "delete-package": [
      {
        "action": "iot:DeletePackage",
        "resource_mappings": {
          "PackageName": {
            "template": "${packageName}"
          }
        }
      }
    ],
    "delete-package-version": [
      {
        "action": "iot:DeletePackageVersion",
        "resource_mappings": {
          "PackageName": {
            "template": "${packageName}"
          },
          "VersionName": {
            "template": "${versionName}"
          }
        }
      }
    ],
    "delete-policy": [
      {
        "action": "iot:DeletePolicy",
        "resource_mappings": {
          "PolicyName": {
            "template": "${policyName}"
          }
        }
      }
    ],
    "delete-policy-version": [
      {
        "action": "iot:DeletePolicyVersion",
        "resource_mappings": {
          "PolicyName": {
            "template": "${policyName}"
          }
        }
      }
    ],
    "delete-provisioning-template": [
      {
        "action": "iot:DeleteProvisioningTemplate",
        "resource_mappings": {
          "provisioningTemplate": {
            "template": "${templateName}"
          }
        }
      }
    ],
    "delete-provisioning-template-version": [
      {
        "action": "iot:DeleteProvisioningTemplateVersion",
        "resource_mappings": {
          "provisioningTemplate": {
            "template": "${templateName}"
          }
        }
      }
    ],
    "delete-registration-code": [
      {
        "action": "iot:DeleteRegistrationCode",
        "resource_mappings": {}
      }
    ],
    "delete-role-alias": [
      {
        "action": "iot:DeleteRoleAlias",
        "resource_mappings": {
          "RoleAlias": {
            "template": "${roleAlias}"
          }
        }
      }
    ],
    "delete-scheduled-audit": [
      {
        "action": "iot:DeleteScheduledAudit",
        "resource_mappings": {
          "ScheduleName": {
            "template": "${scheduledAuditName}"
          }
        }
      }
    ],
    "delete-security-profile": [
      {
        "action": "iot:DeleteSecurityProfile",
        "resource_mappings": {
          "SecurityProfileName": {
            "template": "${securityProfileName}"
          },
          "DimensionName": {
            "template": "*"
          }
        }
      }
    ],
    "delete-stream": [
      {
        "action": "iot:DeleteStream",
        "resource_mappings": {
          "streamId": {
            "template": "${streamId}"
          }
        }
      }
    ],
    "delete-thing": [
      {
        "action": "iot:DeleteThing",
        "resource_mappings": {
          "ThingName": {
            "template": "${thingName}"
          }
        }
      }
    ],
    "delete-thing-group": [
      {
        "action": "iot:DeleteThingGroup",
        "resource_mappings": {
          "ThingGroupName": {
            "template": "${thingGroupName}"
          }
        }
      }
    ],
    "delete-thing-type": [
      {
        "action": "iot:DeleteThingType",
        "resource_mappings": {
          "ThingTypeName": {
            "template": "${thingTypeName}"
          }
        }
      }
    ],
    "delete-topic-rule": [
      {
        "action": "iot:DeleteTopicRule",
        "resource_mappings": {
          "ruleName": {
            "template": "${ruleName}"
          }
        }
      }
    ],
    "delete-topic-rule-destination": [
      {
        "action": "iot:DeleteTopicRuleDestination",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "destination": "${arn}"
        }
      }
    ],
    "delete-v2-logging-level": [
      {
        "action": "iot:DeleteV2LoggingLevel",
        "resource_mappings": {}
      }
    ],
    "deprecate-thing-type": [
      {
        "action": "iot:DeprecateThingType",
        "resource_mappings": {
          "ThingTypeName": {
            "template": "${thingTypeName}"
          }
        }
      }
    ],
    "describe-account-audit-configuration": [
      {
        "action": "iot:DescribeAccountAuditConfiguration",
        "resource_mappings": {}
      }
    ],
    "describe-audit-finding": [
      {
        "action": "iot:DescribeAuditFinding",
        "resource_mappings": {}
      }
    ],
    "describe-audit-mitigation-actions-task": [
      {
        "action": "iot:DescribeAuditMitigationActionsTask",
        "resource_mappings": {}
      }
    ],
    "describe-audit-suppression": [
      {
        "action": "iot:DescribeAuditSuppression",
        "resource_mappings": {}
      }
    ],
    "describe-audit-task": [
      {
        "action": "iot:DescribeAuditTask",
        "resource_mappings": {}
      }
    ],
    "describe-authorizer": [
      {
        "action": "iot:DescribeAuthorizer",
        "resource_mappings": {
          "AuthorizerName": {
            "template": "${authorizerName}"
          }
        }
      }
    ],
    "describe-billing-group": [
      {
        "action": "iot:DescribeBillingGroup",
        "resource_mappings": {
          "BillingGroupName": {
            "template": "${billingGroupName}"
          }
        }
      }
    ],
    "describe-ca-certificate": [
      {
        "action": "iot:DescribeCACertificate",
        "resource_mappings": {
          "CACertificate": {
            "template": "${certificateId}"
          }
        }
      }
    ],
    "describe-certificate": [
      {
        "action": "iot:DescribeCertificate",
        "resource_mappings": {
          "Certificate": {
            "template": "${certificateId}"
          }
        }
      }
    ],
    "describe-custom-metric": [
      {
        "action": "iot:DescribeCustomMetric",
        "resource_mappings": {
          "MetricName": {
            "template": "${metricName}"
          }
        }
      }
    ],
    "describe-default-authorizer": [
      {
        "action": "iot:DescribeDefaultAuthorizer",
        "resource_mappings": {}
      }
    ],
    "describe-detect-mitigation-actions-task": [
      {
        "action": "iot:DescribeDetectMitigationActionsTask",
        "resource_mappings": {}
      }
    ],
    "describe-dimension": [
      {
        "action": "iot:DescribeDimension",
        "resource_mappings": {
          "DimensionName": {
            "template": "${name}"
          }
        }
      }
    ],
    "describe-domain-configuration": [
      {
        "action": "iot:DescribeDomainConfiguration",
        "resource_mappings": {
          "domainConfigurationName": {
            "template": "${domainConfigurationName}"
          }
        }
      }
    ],
    "describe-endpoint": [
      {
        "action": "iot:DescribeEndpoint",
        "resource_mappings": {}
      }
    ],
    "describe-event-configurations": [
      {
        "action": "iot:DescribeEventConfigurations",
        "resource_mappings": {}
      }
    ],
    "describe-fleet-metric": [
      {
        "action": "iot:DescribeFleetMetric",
        "resource_mappings": {
          "FleetMetricName": {
            "template": "${metricName}"
          }
        }
      }
    ],
    "describe-index": [
      {
        "action": "iot:DescribeIndex",
        "resource_mappings": {
          "IndexName": {
            "template": "${indexName}"
          }
        }
      }
    ],
    "describe-job": [
      {
        "action": "iot:DescribeJob",
        "resource_mappings": {
          "JobId": {
            "template": "${jobId}"
          }
        }
      }
    ],
    "describe-job-execution": [
      {
        "action": "iot:DescribeJobExecution",
        "resource_mappings": {
          "JobId": {
            "template": "${jobId}"
          },
          "ThingName": {
            "template": "${thingName}"
          }
        }
      }
    ],
    "describe-job-template": [
      {
        "action": "iot:DescribeJobTemplate",
        "resource_mappings": {
          "JobTemplateId": {
            "template": "${jobTemplateId}"
          }
        }
      }
    ],
    "describe-managed-job-template": [
      {
        "action": "iot:DescribeManagedJobTemplate",
        "resource_mappings": {
          "JobTemplateId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-mitigation-action": [
      {
        "action": "iot:DescribeMitigationAction",
        "resource_mappings": {
          "MitigationActionName": {
            "template": "${actionName}"
          }
        }
      }
    ],
    "describe-provisioning-template": [
      {
        "action": "iot:DescribeProvisioningTemplate",
        "resource_mappings": {
          "provisioningTemplate": {
            "template": "${templateName}"
          }
        }
      }
    ],
    "describe-provisioning-template-version": [
      {
        "action": "iot:DescribeProvisioningTemplateVersion",
        "resource_mappings": {
          "provisioningTemplate": {
            "template": "${templateName}"
          }
        }
      }
    ],
    "describe-role-alias": [
      {
        "action": "iot:DescribeRoleAlias",
        "resource_mappings": {
          "RoleAlias": {
            "template": "${roleAlias}"
          }
        }
      }
    ],
    "describe-scheduled-audit": [
      {
        "action": "iot:DescribeScheduledAudit",
        "resource_mappings": {
          "ScheduleName": {
            "template": "${scheduledAuditName}"
          }
        }
      }
    ],
    "describe-security-profile": [
      {
        "action": "iot:DescribeSecurityProfile",
        "resource_mappings": {
          "SecurityProfileName": {
            "template": "${securityProfileName}"
          }
        }
      }
    ],
    "describe-stream": [
      {
        "action": "iot:DescribeStream",
        "resource_mappings": {
          "streamId": {
            "template": "${streamId}"
          }
        }
      }
    ],
    "describe-thing": [
      {
        "action": "iot:DescribeThing",
        "resource_mappings": {
          "ThingName": {
            "template": "${thingName}"
          }
        }
      }
    ],
    "describe-thing-group": [
      {
        "action": "iot:DescribeThingGroup",
        "resource_mappings": {
          "ThingGroupName": {
            "template": "${thingGroupName}"
          }
        }
      }
    ],
    "describe-thing-registration-task": [
      {
        "action": "iot:DescribeThingRegistrationTask",
        "resource_mappings": {}
      }
    ],
    "describe-thing-type": [
      {
        "action": "iot:DescribeThingType",
        "resource_mappings": {
          "ThingTypeName": {
            "template": "${thingTypeName}"
          }
        }
      }
    ],
    "detach-policy": [
      {
        "action": "iot:DetachPolicy",
        "resource_mappings": {
          "Certificate": {
            "template": "*"
          },
          "ThingGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "detach-principal-policy": [
      {
        "action": "iot:DetachPrincipalPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cert": "%%iftemplatematch%${principal}%%"
        }
      }
    ],
    "detach-security-profile": [
      {
        "action": "iot:DetachSecurityProfile",
        "resource_mappings": {
          "SecurityProfileName": {
            "template": "${securityProfileName}"
          },
          "DimensionName": {
            "template": "*"
          },
          "ThingGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "detach-thing-principal": [
      {
        "action": "iot:DetachThingPrincipal",
        "resource_mappings": {}
      }
    ],
    "disable-topic-rule": [
      {
        "action": "iot:DisableTopicRule",
        "resource_mappings": {
          "ruleName": {
            "template": "${ruleName}"
          }
        }
      }
    ],
    "enable-topic-rule": [
      {
        "action": "iot:EnableTopicRule",
        "resource_mappings": {
          "ruleName": {
            "template": "${ruleName}"
          }
        }
      }
    ],
    "get-behavior-model-training-summaries": [
      {
        "action": "iot:GetBehaviorModelTrainingSummaries",
        "resource_mappings": {
          "SecurityProfileName": {
            "template": "${securityProfileName}"
          }
        }
      }
    ],
    "get-buckets-aggregation": [
      {
        "action": "iot:GetBucketsAggregation",
        "resource_mappings": {
          "IndexName": {
            "template": "${indexName}"
          }
        }
      }
    ],
    "get-cardinality": [
      {
        "action": "iot:GetCardinality",
        "resource_mappings": {
          "IndexName": {
            "template": "${indexName}"
          }
        }
      }
    ],
    "get-effective-policies": [
      {
        "action": "iot:GetEffectivePolicies",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cert": "%%iftemplatematch%${principal}%%"
        }
      }
    ],
    "get-indexing-configuration": [
      {
        "action": "iot:GetIndexingConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-job-document": [
      {
        "action": "iot:GetJobDocument",
        "resource_mappings": {
          "JobId": {
            "template": "${jobId}"
          }
        }
      }
    ],
    "get-logging-options": [
      {
        "action": "iot:GetLoggingOptions",
        "resource_mappings": {}
      }
    ],
    "get-ota-update": [
      {
        "action": "iot:GetOTAUpdate",
        "resource_mappings": {
          "otaUpdateId": {
            "template": "${otaUpdateId}"
          }
        }
      }
    ],
    "get-package": [
      {
        "action": "iot:GetPackage",
        "resource_mappings": {
          "PackageName": {
            "template": "${packageName}"
          }
        }
      }
    ],
    "get-package-configuration": [
      {
        "action": "iot:GetPackageConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-package-version": [
      {
        "action": "iot:GetPackageVersion",
        "resource_mappings": {
          "PackageName": {
            "template": "${packageName}"
          },
          "VersionName": {
            "template": "${versionName}"
          }
        }
      }
    ],
    "get-percentiles": [
      {
        "action": "iot:GetPercentiles",
        "resource_mappings": {
          "IndexName": {
            "template": "${indexName}"
          }
        }
      }
    ],
    "get-policy": [
      {
        "action": "iot:GetPolicy",
        "resource_mappings": {
          "PolicyName": {
            "template": "${policyName}"
          }
        }
      }
    ],
    "get-policy-version": [
      {
        "action": "iot:GetPolicyVersion",
        "resource_mappings": {
          "PolicyName": {
            "template": "${policyName}"
          }
        }
      }
    ],
    "get-registration-code": [
      {
        "action": "iot:GetRegistrationCode",
        "resource_mappings": {}
      }
    ],
    "get-statistics": [
      {
        "action": "iot:GetStatistics",
        "resource_mappings": {
          "IndexName": {
            "template": "${indexName}"
          }
        }
      }
    ],
    "get-topic-rule": [
      {
        "action": "iot:GetTopicRule",
        "resource_mappings": {
          "ruleName": {
            "template": "${ruleName}"
          }
        }
      }
    ],
    "get-topic-rule-destination": [
      {
        "action": "iot:GetTopicRuleDestination",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "destination": "${arn}"
        }
      }
    ],
    "get-v2-logging-options": [
      {
        "action": "iot:GetV2LoggingOptions",
        "resource_mappings": {}
      }
    ],
    "list-active-violations": [
      {
        "action": "iot:ListActiveViolations",
        "resource_mappings": {
          "SecurityProfileName": {
            "template": "${securityProfileName}"
          },
          "ThingName": {
            "template": "${thingName}"
          }
        }
      }
    ],
    "list-attached-policies": [
      {
        "action": "iot:ListAttachedPolicies",
        "resource_mappings": {}
      }
    ],
    "list-audit-findings": [
      {
        "action": "iot:ListAuditFindings",
        "resource_mappings": {}
      }
    ],
    "list-audit-mitigation-actions-executions": [
      {
        "action": "iot:ListAuditMitigationActionsExecutions",
        "resource_mappings": {}
      }
    ],
    "list-audit-mitigation-actions-tasks": [
      {
        "action": "iot:ListAuditMitigationActionsTasks",
        "resource_mappings": {}
      }
    ],
    "list-audit-suppressions": [
      {
        "action": "iot:ListAuditSuppressions",
        "resource_mappings": {}
      }
    ],
    "list-audit-tasks": [
      {
        "action": "iot:ListAuditTasks",
        "resource_mappings": {}
      }
    ],
    "list-authorizers": [
      {
        "action": "iot:ListAuthorizers",
        "resource_mappings": {}
      }
    ],
    "list-billing-groups": [
      {
        "action": "iot:ListBillingGroups",
        "resource_mappings": {}
      }
    ],
    "list-ca-certificates": [
      {
        "action": "iot:ListCACertificates",
        "resource_mappings": {}
      }
    ],
    "list-certificates": [
      {
        "action": "iot:ListCertificates",
        "resource_mappings": {}
      }
    ],
    "list-certificates-by-ca": [
      {
        "action": "iot:ListCertificatesByCA",
        "resource_mappings": {}
      }
    ],
    "list-custom-metrics": [
      {
        "action": "iot:ListCustomMetrics",
        "resource_mappings": {}
      }
    ],
    "list-detect-mitigation-actions-executions": [
      {
        "action": "iot:ListDetectMitigationActionsExecutions",
        "resource_mappings": {
          "ThingName": {
            "template": "${thingName}"
          }
        }
      }
    ],
    "list-detect-mitigation-actions-tasks": [
      {
        "action": "iot:ListDetectMitigationActionsTasks",
        "resource_mappings": {}
      }
    ],
    "list-dimensions": [
      {
        "action": "iot:ListDimensions",
        "resource_mappings": {}
      }
    ],
    "list-domain-configurations": [
      {
        "action": "iot:ListDomainConfigurations",
        "resource_mappings": {}
      }
    ],
    "list-fleet-metrics": [
      {
        "action": "iot:ListFleetMetrics",
        "resource_mappings": {}
      }
    ],
    "list-indices": [
      {
        "action": "iot:ListIndices",
        "resource_mappings": {}
      }
    ],
    "list-job-executions-for-job": [
      {
        "action": "iot:ListJobExecutionsForJob",
        "resource_mappings": {
          "JobId": {
            "template": "${jobId}"
          }
        }
      }
    ],
    "list-job-executions-for-thing": [
      {
        "action": "iot:ListJobExecutionsForThing",
        "resource_mappings": {
          "ThingName": {
            "template": "${thingName}"
          }
        }
      }
    ],
    "list-job-templates": [
      {
        "action": "iot:ListJobTemplates",
        "resource_mappings": {}
      }
    ],
    "list-jobs": [
      {
        "action": "iot:ListJobs",
        "resource_mappings": {}
      }
    ],
    "list-managed-job-templates": [
      {
        "action": "iot:ListManagedJobTemplates",
        "resource_mappings": {}
      }
    ],
    "list-metric-values": [
      {
        "action": "iot:ListMetricValues",
        "resource_mappings": {
          "ThingName": {
            "template": "${thingName}"
          }
        }
      }
    ],
    "list-mitigation-actions": [
      {
        "action": "iot:ListMitigationActions",
        "resource_mappings": {}
      }
    ],
    "list-ota-updates": [
      {
        "action": "iot:ListOTAUpdates",
        "resource_mappings": {}
      }
    ],
    "list-outgoing-certificates": [
      {
        "action": "iot:ListOutgoingCertificates",
        "resource_mappings": {}
      }
    ],
    "list-package-versions": [
      {
        "action": "iot:ListPackageVersions",
        "resource_mappings": {}
      }
    ],
    "list-packages": [
      {
        "action": "iot:ListPackages",
        "resource_mappings": {}
      }
    ],
    "list-policies": [
      {
        "action": "iot:ListPolicies",
        "resource_mappings": {}
      }
    ],
    "list-policy-principals": [
      {
        "action": "iot:ListPolicyPrincipals",
        "resource_mappings": {}
      }
    ],
    "list-policy-versions": [
      {
        "action": "iot:ListPolicyVersions",
        "resource_mappings": {
          "PolicyName": {
            "template": "${policyName}"
          }
        }
      }
    ],
    "list-principal-policies": [
      {
        "action": "iot:ListPrincipalPolicies",
        "resource_mappings": {}
      }
    ],
    "list-principal-things": [
      {
        "action": "iot:ListPrincipalThings",
        "resource_mappings": {}
      }
    ],
    "list-provisioning-template-versions": [
      {
        "action": "iot:ListProvisioningTemplateVersions",
        "resource_mappings": {
          "provisioningTemplate": {
            "template": "${templateName}"
          }
        }
      }
    ],
    "list-provisioning-templates": [
      {
        "action": "iot:ListProvisioningTemplates",
        "resource_mappings": {}
      }
    ],
    "list-related-resources-for-audit-finding": [
      {
        "action": "iot:ListRelatedResourcesForAuditFinding",
        "resource_mappings": {}
      }
    ],
    "list-role-aliases": [
      {
        "action": "iot:ListRoleAliases",
        "resource_mappings": {}
      }
    ],
    "list-scheduled-audits": [
      {
        "action": "iot:ListScheduledAudits",
        "resource_mappings": {}
      }
    ],
    "list-security-profiles": [
      {
        "action": "iot:ListSecurityProfiles",
        "resource_mappings": {
          "DimensionName": {
            "template": "${dimensionName}"
          }
        }
      }
    ],
    "list-security-profiles-for-target": [
      {
        "action": "iot:ListSecurityProfilesForTarget",
        "resource_mappings": {
          "ThingGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "list-streams": [
      {
        "action": "iot:ListStreams",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "iot:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "authorizer": "%%iftemplatematch%${resourceArn}%%",
          "billinggroup": "%%iftemplatematch%${resourceArn}%%",
          "cacert": "%%iftemplatematch%${resourceArn}%%",
          "dimension": "%%iftemplatematch%${resourceArn}%%",
          "domainconfiguration": "%%iftemplatematch%${resourceArn}%%",
          "dynamicthinggroup": "%%iftemplatematch%${resourceArn}%%",
          "fleetmetric": "%%iftemplatematch%${resourceArn}%%",
          "job": "%%iftemplatematch%${resourceArn}%%",
          "mitigationaction": "%%iftemplatematch%${resourceArn}%%",
          "otaupdate": "%%iftemplatematch%${resourceArn}%%",
          "policy": "%%iftemplatematch%${resourceArn}%%",
          "provisioningtemplate": "%%iftemplatematch%${resourceArn}%%",
          "rolealias": "%%iftemplatematch%${resourceArn}%%",
          "rule": "%%iftemplatematch%${resourceArn}%%",
          "scheduledaudit": "%%iftemplatematch%${resourceArn}%%",
          "securityprofile": "%%iftemplatematch%${resourceArn}%%",
          "stream": "%%iftemplatematch%${resourceArn}%%",
          "thinggroup": "%%iftemplatematch%${resourceArn}%%",
          "thingtype": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "list-targets-for-policy": [
      {
        "action": "iot:ListTargetsForPolicy",
        "resource_mappings": {
          "PolicyName": {
            "template": "${policyName}"
          }
        }
      }
    ],
    "list-targets-for-security-profile": [
      {
        "action": "iot:ListTargetsForSecurityProfile",
        "resource_mappings": {
          "SecurityProfileName": {
            "template": "${securityProfileName}"
          }
        }
      }
    ],
    "list-thing-groups": [
      {
        "action": "iot:ListThingGroups",
        "resource_mappings": {}
      }
    ],
    "list-thing-groups-for-thing": [
      {
        "action": "iot:ListThingGroupsForThing",
        "resource_mappings": {
          "ThingName": {
            "template": "${thingName}"
          }
        }
      }
    ],
    "list-thing-principals": [
      {
        "action": "iot:ListThingPrincipals",
        "resource_mappings": {}
      }
    ],
    "list-thing-registration-task-reports": [
      {
        "action": "iot:ListThingRegistrationTaskReports",
        "resource_mappings": {}
      }
    ],
    "list-thing-registration-tasks": [
      {
        "action": "iot:ListThingRegistrationTasks",
        "resource_mappings": {}
      }
    ],
    "list-thing-types": [
      {
        "action": "iot:ListThingTypes",
        "resource_mappings": {}
      }
    ],
    "list-things": [
      {
        "action": "iot:ListThings",
        "resource_mappings": {}
      }
    ],
    "list-things-in-billing-group": [
      {
        "action": "iot:ListThingsInBillingGroup",
        "resource_mappings": {
          "BillingGroupName": {
            "template": "${billingGroupName}"
          }
        }
      }
    ],
    "list-things-in-thing-group": [
      {
        "action": "iot:ListThingsInThingGroup",
        "resource_mappings": {
          "ThingGroupName": {
            "template": "${thingGroupName}"
          }
        }
      }
    ],
    "list-topic-rule-destinations": [
      {
        "action": "iot:ListTopicRuleDestinations",
        "resource_mappings": {}
      }
    ],
    "list-topic-rules": [
      {
        "action": "iot:ListTopicRules",
        "resource_mappings": {}
      }
    ],
    "list-v2-logging-levels": [
      {
        "action": "iot:ListV2LoggingLevels",
        "resource_mappings": {}
      }
    ],
    "list-violation-events": [
      {
        "action": "iot:ListViolationEvents",
        "resource_mappings": {
          "SecurityProfileName": {
            "template": "${securityProfileName}"
          },
          "ThingName": {
            "template": "${thingName}"
          }
        }
      }
    ],
    "put-verification-state-on-violation": [
      {
        "action": "iot:PutVerificationStateOnViolation",
        "resource_mappings": {}
      }
    ],
    "register-ca-certificate": [
      {
        "action": "iot:RegisterCACertificate",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${registrationConfig.roleArn}"
        }
      }
    ],
    "register-certificate": [
      {
        "action": "iot:RegisterCertificate",
        "resource_mappings": {}
      }
    ],
    "register-certificate-without-ca": [
      {
        "action": "iot:RegisterCertificateWithoutCA",
        "resource_mappings": {}
      }
    ],
    "register-thing": [
      {
        "action": "iot:RegisterThing",
        "resource_mappings": {}
      }
    ],
    "reject-certificate-transfer": [
      {
        "action": "iot:RejectCertificateTransfer",
        "resource_mappings": {
          "Certificate": {
            "template": "${certificateId}"
          }
        }
      }
    ],
    "remove-thing-from-billing-group": [
      {
        "action": "iot:RemoveThingFromBillingGroup",
        "resource_mappings": {
          "BillingGroupName": {
            "template": "${billingGroupName}"
          },
          "ThingName": {
            "template": "${thingName}"
          }
        }
      }
    ],
    "remove-thing-from-thing-group": [
      {
        "action": "iot:RemoveThingFromThingGroup",
        "resource_mappings": {
          "ThingName": {
            "template": "${thingName}"
          },
          "ThingGroupName": {
            "template": "${thingGroupName}"
          }
        }
      }
    ],
    "replace-topic-rule": [
      {
        "action": "iot:ReplaceTopicRule",
        "resource_mappings": {
          "ruleName": {
            "template": "${ruleName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${topicRulePayload.errorAction.dynamoDB.roleArn}%${topicRulePayload.errorAction.dynamoDBv2.roleArn}%${topicRulePayload.errorAction.sns.roleArn}%${topicRulePayload.errorAction.sqs.roleArn}%${topicRulePayload.errorAction.kinesis.roleArn}%${topicRulePayload.errorAction.republish.roleArn}%${topicRulePayload.errorAction.s3.roleArn}%${topicRulePayload.errorAction.firehose.roleArn}%${topicRulePayload.errorAction.cloudwatchMetric.roleArn}%${topicRulePayload.errorAction.cloudwatchAlarm.roleArn}%${topicRulePayload.errorAction.cloudwatchLogs.roleArn}%${topicRulePayload.errorAction.elasticsearch.roleArn}%%"
        }
      }
    ],
    "search-index": [
      {
        "action": "iot:SearchIndex",
        "resource_mappings": {
          "IndexName": {
            "template": "${indexName}"
          }
        }
      }
    ],
    "set-default-authorizer": [
      {
        "action": "iot:SetDefaultAuthorizer",
        "resource_mappings": {
          "AuthorizerName": {
            "template": "${authorizerName}"
          }
        }
      }
    ],
    "set-default-policy-version": [
      {
        "action": "iot:SetDefaultPolicyVersion",
        "resource_mappings": {
          "PolicyName": {
            "template": "${policyName}"
          }
        }
      }
    ],
    "set-logging-options": [
      {
        "action": "iot:SetLoggingOptions",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${loggingOptionsPayload.roleArn}"
        }
      }
    ],
    "set-v2-logging-level": [
      {
        "action": "iot:SetV2LoggingLevel",
        "resource_mappings": {}
      }
    ],
    "set-v2-logging-options": [
      {
        "action": "iot:SetV2LoggingOptions",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${roleArn}"
        }
      }
    ],
    "start-audit-mitigation-actions-task": [
      {
        "action": "iot:StartAuditMitigationActionsTask",
        "resource_mappings": {}
      }
    ],
    "start-detect-mitigation-actions-task": [
      {
        "action": "iot:StartDetectMitigationActionsTask",
        "resource_mappings": {
          "SecurityProfileName": {
            "template": "${target.securityProfileName}"
          }
        }
      }
    ],
    "start-on-demand-audit-task": [
      {
        "action": "iot:StartOnDemandAuditTask",
        "resource_mappings": {}
      }
    ],
    "start-thing-registration-task": [
      {
        "action": "iot:StartThingRegistrationTask",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${roleArn}"
        }
      }
    ],
    "stop-thing-registration-task": [
      {
        "action": "iot:StopThingRegistrationTask",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "iot:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "authorizer": "%%iftemplatematch%${resourceArn}%%",
          "billinggroup": "%%iftemplatematch%${resourceArn}%%",
          "cacert": "%%iftemplatematch%${resourceArn}%%",
          "dimension": "%%iftemplatematch%${resourceArn}%%",
          "domainconfiguration": "%%iftemplatematch%${resourceArn}%%",
          "dynamicthinggroup": "%%iftemplatematch%${resourceArn}%%",
          "fleetmetric": "%%iftemplatematch%${resourceArn}%%",
          "job": "%%iftemplatematch%${resourceArn}%%",
          "mitigationaction": "%%iftemplatematch%${resourceArn}%%",
          "otaupdate": "%%iftemplatematch%${resourceArn}%%",
          "policy": "%%iftemplatematch%${resourceArn}%%",
          "provisioningtemplate": "%%iftemplatematch%${resourceArn}%%",
          "rolealias": "%%iftemplatematch%${resourceArn}%%",
          "rule": "%%iftemplatematch%${resourceArn}%%",
          "scheduledaudit": "%%iftemplatematch%${resourceArn}%%",
          "securityprofile": "%%iftemplatematch%${resourceArn}%%",
          "stream": "%%iftemplatematch%${resourceArn}%%",
          "thinggroup": "%%iftemplatematch%${resourceArn}%%",
          "thingtype": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "test-authorization": [
      {
        "action": "iot:TestAuthorization",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cert": "%%iftemplatematch%${principal}%%"
        }
      }
    ],
    "test-invoke-authorizer": [
      {
        "action": "iot:TestInvokeAuthorizer",
        "resource_mappings": {
          "AuthorizerName": {
            "template": "${authorizerName}"
          }
        }
      }
    ],
    "transfer-certificate": [
      {
        "action": "iot:TransferCertificate",
        "resource_mappings": {
          "Certificate": {
            "template": "${certificateId}"
          }
        }
      }
    ],
    "untag-resource": [
      {
        "action": "iot:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "authorizer": "%%iftemplatematch%${resourceArn}%%",
          "billinggroup": "%%iftemplatematch%${resourceArn}%%",
          "cacert": "%%iftemplatematch%${resourceArn}%%",
          "dimension": "%%iftemplatematch%${resourceArn}%%",
          "domainconfiguration": "%%iftemplatematch%${resourceArn}%%",
          "dynamicthinggroup": "%%iftemplatematch%${resourceArn}%%",
          "fleetmetric": "%%iftemplatematch%${resourceArn}%%",
          "job": "%%iftemplatematch%${resourceArn}%%",
          "mitigationaction": "%%iftemplatematch%${resourceArn}%%",
          "otaupdate": "%%iftemplatematch%${resourceArn}%%",
          "policy": "%%iftemplatematch%${resourceArn}%%",
          "provisioningtemplate": "%%iftemplatematch%${resourceArn}%%",
          "rolealias": "%%iftemplatematch%${resourceArn}%%",
          "rule": "%%iftemplatematch%${resourceArn}%%",
          "scheduledaudit": "%%iftemplatematch%${resourceArn}%%",
          "securityprofile": "%%iftemplatematch%${resourceArn}%%",
          "stream": "%%iftemplatematch%${resourceArn}%%",
          "thinggroup": "%%iftemplatematch%${resourceArn}%%",
          "thingtype": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-account-audit-configuration": [
      {
        "action": "iot:UpdateAccountAuditConfiguration",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${roleArn}"
        }
      }
    ],
    "update-audit-suppression": [
      {
        "action": "iot:UpdateAuditSuppression",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${resourceIdentifier.iamRoleArn}"
        }
      }
    ],
    "update-authorizer": [
      {
        "action": "iot:UpdateAuthorizer",
        "resource_mappings": {
          "AuthorizerName": {
            "template": "${authorizerName}"
          }
        }
      }
    ],
    "update-billing-group": [
      {
        "action": "iot:UpdateBillingGroup",
        "resource_mappings": {
          "BillingGroupName": {
            "template": "${billingGroupName}"
          }
        }
      }
    ],
    "update-ca-certificate": [
      {
        "action": "iot:UpdateCACertificate",
        "resource_mappings": {
          "CACertificate": {
            "template": "${certificateId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${registrationConfig.roleArn}"
        }
      }
    ],
    "update-certificate": [
      {
        "action": "iot:UpdateCertificate",
        "resource_mappings": {
          "Certificate": {
            "template": "${certificateId}"
          }
        }
      }
    ],
    "update-custom-metric": [
      {
        "action": "iot:UpdateCustomMetric",
        "resource_mappings": {
          "MetricName": {
            "template": "${metricName}"
          }
        }
      }
    ],
    "update-dimension": [
      {
        "action": "iot:UpdateDimension",
        "resource_mappings": {
          "DimensionName": {
            "template": "${name}"
          }
        }
      }
    ],
    "update-domain-configuration": [
      {
        "action": "iot:UpdateDomainConfiguration",
        "resource_mappings": {
          "domainConfigurationName": {
            "template": "${domainConfigurationName}"
          }
        }
      }
    ],
    "update-dynamic-thing-group": [
      {
        "action": "iot:UpdateDynamicThingGroup",
        "resource_mappings": {
          "ThingGroupName": {
            "template": "${thingGroupName}"
          }
        }
      }
    ],
    "update-event-configurations": [
      {
        "action": "iot:UpdateEventConfigurations",
        "resource_mappings": {}
      }
    ],
    "update-fleet-metric": [
      {
        "action": "iot:UpdateFleetMetric",
        "resource_mappings": {
          "FleetMetricName": {
            "template": "${metricName}"
          },
          "IndexName": {
            "template": "${indexName}"
          }
        }
      }
    ],
    "update-indexing-configuration": [
      {
        "action": "iot:UpdateIndexingConfiguration",
        "resource_mappings": {}
      }
    ],
    "update-job": [
      {
        "action": "iot:UpdateJob",
        "resource_mappings": {
          "JobId": {
            "template": "${jobId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${presignedUrlConfig.roleArn}"
        }
      }
    ],
    "update-mitigation-action": [
      {
        "action": "iot:UpdateMitigationAction",
        "resource_mappings": {
          "MitigationActionName": {
            "template": "${actionName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${roleArn}%${actionParams.enableIoTLoggingParams.roleArnForLogging}%%"
        }
      }
    ],
    "update-package": [
      {
        "action": "iot:UpdatePackage",
        "resource_mappings": {
          "PackageName": {
            "template": "${packageName}"
          }
        }
      },
      {
        "action": "iot:GetIndexingConfiguration",
        "resource_mappings": {}
      }
    ],
    "update-package-configuration": [
      {
        "action": "iot:UpdatePackageConfiguration",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "update-package-version": [
      {
        "action": "iot:UpdatePackageVersion",
        "resource_mappings": {
          "PackageName": {
            "template": "${packageName}"
          },
          "VersionName": {
            "template": "${versionName}"
          }
        }
      },
      {
        "action": "iot:GetIndexingConfiguration",
        "resource_mappings": {}
      }
    ],
    "update-provisioning-template": [
      {
        "action": "iot:UpdateProvisioningTemplate",
        "resource_mappings": {
          "provisioningTemplate": {
            "template": "${templateName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${provisioningRoleArn}"
        }
      }
    ],
    "update-role-alias": [
      {
        "action": "iot:UpdateRoleAlias",
        "resource_mappings": {
          "RoleAlias": {
            "template": "${roleAlias}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${roleArn}"
        }
      }
    ],
    "update-scheduled-audit": [
      {
        "action": "iot:UpdateScheduledAudit",
        "resource_mappings": {
          "ScheduleName": {
            "template": "${scheduledAuditName}"
          }
        }
      }
    ],
    "update-security-profile": [
      {
        "action": "iot:UpdateSecurityProfile",
        "resource_mappings": {
          "SecurityProfileName": {
            "template": "${securityProfileName}"
          },
          "DimensionName": {
            "template": "%%many%${behaviors[].metricDimension.dimensionName}%${additionalMetricsToRetainV2[].metricDimension.dimensionName}%%"
          }
        }
      }
    ],
    "update-stream": [
      {
        "action": "iot:UpdateStream",
        "resource_mappings": {
          "streamId": {
            "template": "${streamId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${roleArn}"
        }
      }
    ],
    "update-thing": [
      {
        "action": "iot:UpdateThing",
        "resource_mappings": {
          "ThingName": {
            "template": "${thingName}"
          }
        }
      }
    ],
    "update-thing-group": [
      {
        "action": "iot:UpdateThingGroup",
        "resource_mappings": {
          "ThingGroupName": {
            "template": "${thingGroupName}"
          }
        }
      }
    ],
    "update-thing-groups-for-thing": [
      {
        "action": "iot:UpdateThingGroupsForThing",
        "resource_mappings": {
          "ThingName": {
            "template": "${thingName}"
          },
          "ThingGroupName": {
            "template": "%%many%${thingGroupsToAdd[]}%${thingGroupsToRemove[]}%%"
          }
        }
      }
    ],
    "update-topic-rule-destination": [
      {
        "action": "iot:UpdateTopicRuleDestination",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "destination": "${arn}"
        }
      }
    ],
    "validate-security-profile-behaviors": [
      {
        "action": "iot:ValidateSecurityProfileBehaviors",
        "resource_mappings": {}
      }
    ]
  },
  "iot-data": {
    "delete-thing-shadow": [
      {
        "action": "iot:DeleteThingShadow",
        "resource_mappings": {
          "ThingName": {
            "template": "${thingName}"
          }
        }
      }
    ],
    "get-retained-message": [
      {
        "action": "iot:GetRetainedMessage",
        "resource_mappings": {
          "TopicName": {
            "template": "${topic}"
          }
        }
      }
    ],
    "get-thing-shadow": [
      {
        "action": "iot:GetThingShadow",
        "resource_mappings": {
          "ThingName": {
            "template": "${thingName}"
          }
        }
      }
    ],
    "list-named-shadows-for-thing": [
      {
        "action": "iot:ListNamedShadowsForThing",
        "resource_mappings": {
          "ThingName": {
            "template": "${thingName}"
          }
        }
      }
    ],
    "list-retained-messages": [
      {
        "action": "iot:ListRetainedMessages",
        "resource_mappings": {}
      }
    ],
    "publish": [
      {
        "action": "iot:Publish",
        "resource_mappings": {
          "TopicName": {
            "template": "${topic}"
          }
        }
      }
    ],
    "update-thing-shadow": [
      {
        "action": "iot:UpdateThingShadow",
        "resource_mappings": {
          "ThingName": {
            "template": "${thingName}"
          }
        }
      }
    ]
  },
  "iot-jobs-data": {
    "describe-job-execution": [
      {
        "action": "iot:DescribeJobExecution",
        "resource_mappings": {
          "JobId": {
            "template": "${jobId}"
          },
          "ThingName": {
            "template": "${thingName}"
          }
        }
      }
    ],
    "get-pending-job-executions": [
      {
        "action": "iot:GetPendingJobExecutions",
        "resource_mappings": {
          "ThingName": {
            "template": "${thingName}"
          }
        }
      }
    ],
    "start-next-pending-job-execution": [
      {
        "action": "iot:StartNextPendingJobExecution",
        "resource_mappings": {
          "ThingName": {
            "template": "${thingName}"
          }
        }
      }
    ],
    "update-job-execution": [
      {
        "action": "iot:UpdateJobExecution",
        "resource_mappings": {
          "ThingName": {
            "template": "${thingName}"
          }
        }
      }
    ]
  },
  "iot-roborunner": {
    "create-destination": [
      {
        "action": "iotroborunner:CreateDestination",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "SiteResource": "${site}"
        }
      }
    ],
    "create-site": [
      {
        "action": "iotroborunner:CreateSite",
        "resource_mappings": {}
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "create-worker": [
      {
        "action": "iotroborunner:CreateWorker",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "WorkerFleetResource": "${fleet}"
        }
      }
    ],
    "create-worker-fleet": [
      {
        "action": "iotroborunner:CreateWorkerFleet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "SiteResource": "${site}"
        }
      }
    ],
    "delete-destination": [
      {
        "action": "iotroborunner:DeleteDestination",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "DestinationResource": "${id}"
        }
      }
    ],
    "delete-site": [
      {
        "action": "iotroborunner:DeleteSite",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "SiteResource": "${id}"
        }
      }
    ],
    "delete-worker": [
      {
        "action": "iotroborunner:DeleteWorker",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "WorkerResource": "${id}"
        }
      }
    ],
    "delete-worker-fleet": [
      {
        "action": "iotroborunner:DeleteWorkerFleet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "WorkerFleetResource": "${id}"
        }
      }
    ],
    "get-destination": [
      {
        "action": "iotroborunner:GetDestination",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "DestinationResource": "${id}"
        }
      }
    ],
    "get-site": [
      {
        "action": "iotroborunner:GetSite",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "SiteResource": "${id}"
        }
      }
    ],
    "get-worker": [
      {
        "action": "iotroborunner:GetWorker",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "WorkerResource": "${id}"
        }
      }
    ],
    "get-worker-fleet": [
      {
        "action": "iotroborunner:GetWorkerFleet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "WorkerFleetResource": "${id}"
        }
      }
    ],
    "list-destinations": [
      {
        "action": "iotroborunner:ListDestinations",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "SiteResource": "${site}"
        }
      }
    ],
    "list-sites": [
      {
        "action": "iotroborunner:ListSites",
        "resource_mappings": {}
      }
    ],
    "list-worker-fleets": [
      {
        "action": "iotroborunner:ListWorkerFleets",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "SiteResource": "${site}"
        }
      }
    ],
    "list-workers": [
      {
        "action": "iotroborunner:ListWorkers",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "SiteResource": "${site}"
        }
      }
    ],
    "update-destination": [
      {
        "action": "iotroborunner:UpdateDestination",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "DestinationResource": "${id}"
        }
      }
    ],
    "update-site": [
      {
        "action": "iotroborunner:UpdateSite",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "SiteResource": "${id}"
        }
      }
    ],
    "update-worker": [
      {
        "action": "iotroborunner:UpdateWorker",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "WorkerResource": "${id}"
        }
      }
    ],
    "update-worker-fleet": [
      {
        "action": "iotroborunner:UpdateWorkerFleet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "WorkerFleetResource": "${id}"
        }
      }
    ]
  },
  "iot1click-devices": {
    "claim-devices-by-claim-code": [
      {
        "action": "iot1click:ClaimDevicesByClaimCode",
        "resource_mappings": {}
      }
    ],
    "describe-device": [
      {
        "action": "iot1click:DescribeDevice",
        "resource_mappings": {
          "DeviceId": {
            "template": "${DeviceId}"
          }
        }
      }
    ],
    "finalize-device-claim": [
      {
        "action": "iot1click:FinalizeDeviceClaim",
        "resource_mappings": {
          "DeviceId": {
            "template": "${DeviceId}"
          }
        }
      }
    ],
    "get-device-methods": [
      {
        "action": "iot1click:GetDeviceMethods",
        "resource_mappings": {
          "DeviceId": {
            "template": "${DeviceId}"
          }
        }
      }
    ],
    "initiate-device-claim": [
      {
        "action": "iot1click:InitiateDeviceClaim",
        "resource_mappings": {
          "DeviceId": {
            "template": "${DeviceId}"
          }
        }
      }
    ],
    "invoke-device-method": [
      {
        "action": "iot1click:InvokeDeviceMethod",
        "resource_mappings": {
          "DeviceId": {
            "template": "${DeviceId}"
          }
        }
      }
    ],
    "list-device-events": [
      {
        "action": "iot1click:ListDeviceEvents",
        "resource_mappings": {
          "DeviceId": {
            "template": "${DeviceId}"
          }
        }
      }
    ],
    "list-devices": [
      {
        "action": "iot1click:ListDevices",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "iot1click:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "device": "%%iftemplatematch%${ResourceArn}%%",
          "project": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "iot1click:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "device": "%%iftemplatematch%${ResourceArn}%%",
          "project": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "unclaim-device": [
      {
        "action": "iot1click:UnclaimDevice",
        "resource_mappings": {
          "DeviceId": {
            "template": "${DeviceId}"
          }
        }
      }
    ],
    "untag-resource": [
      {
        "action": "iot1click:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "device": "%%iftemplatematch%${ResourceArn}%%",
          "project": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-device-state": [
      {
        "action": "iot1click:UpdateDeviceState",
        "resource_mappings": {
          "DeviceId": {
            "template": "${DeviceId}"
          }
        }
      }
    ]
  },
  "iot1click-projects": {
    "associate-device-with-placement": [
      {
        "action": "iot1click:AssociateDeviceWithPlacement",
        "resource_mappings": {
          "ProjectName": {
            "template": "${projectName}"
          }
        }
      }
    ],
    "create-placement": [
      {
        "action": "iot1click:CreatePlacement",
        "resource_mappings": {
          "ProjectName": {
            "template": "${projectName}"
          }
        }
      }
    ],
    "create-project": [
      {
        "action": "iot1click:CreateProject",
        "resource_mappings": {
          "ProjectName": {
            "template": "${projectName}"
          }
        }
      }
    ],
    "delete-placement": [
      {
        "action": "iot1click:DeletePlacement",
        "resource_mappings": {
          "ProjectName": {
            "template": "${projectName}"
          }
        }
      }
    ],
    "delete-project": [
      {
        "action": "iot1click:DeleteProject",
        "resource_mappings": {
          "ProjectName": {
            "template": "${projectName}"
          }
        }
      }
    ],
    "describe-placement": [
      {
        "action": "iot1click:DescribePlacement",
        "resource_mappings": {
          "ProjectName": {
            "template": "${projectName}"
          }
        }
      }
    ],
    "describe-project": [
      {
        "action": "iot1click:DescribeProject",
        "resource_mappings": {
          "ProjectName": {
            "template": "${projectName}"
          }
        }
      }
    ],
    "disassociate-device-from-placement": [
      {
        "action": "iot1click:DisassociateDeviceFromPlacement",
        "resource_mappings": {
          "ProjectName": {
            "template": "${projectName}"
          }
        }
      }
    ],
    "get-devices-in-placement": [
      {
        "action": "iot1click:GetDevicesInPlacement",
        "resource_mappings": {
          "ProjectName": {
            "template": "${projectName}"
          }
        }
      }
    ],
    "list-placements": [
      {
        "action": "iot1click:ListPlacements",
        "resource_mappings": {
          "ProjectName": {
            "template": "${projectName}"
          }
        }
      }
    ],
    "list-projects": [
      {
        "action": "iot1click:ListProjects",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "iot1click:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "device": "%%iftemplatematch%${resourceArn}%%",
          "project": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "iot1click:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "device": "%%iftemplatematch%${resourceArn}%%",
          "project": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "iot1click:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "device": "%%iftemplatematch%${resourceArn}%%",
          "project": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-placement": [
      {
        "action": "iot1click:UpdatePlacement",
        "resource_mappings": {
          "ProjectName": {
            "template": "${projectName}"
          }
        }
      }
    ],
    "update-project": [
      {
        "action": "iot1click:UpdateProject",
        "resource_mappings": {
          "ProjectName": {
            "template": "${projectName}"
          }
        }
      }
    ]
  },
  "iotanalytics": {
    "batch-put-message": [
      {
        "action": "iotanalytics:BatchPutMessage",
        "resource_mappings": {
          "ChannelName": {
            "template": "${channelName}"
          }
        }
      }
    ],
    "cancel-pipeline-reprocessing": [
      {
        "action": "iotanalytics:CancelPipelineReprocessing",
        "resource_mappings": {
          "PipelineName": {
            "template": "${pipelineName}"
          }
        }
      }
    ],
    "create-channel": [
      {
        "action": "iotanalytics:CreateChannel",
        "resource_mappings": {
          "ChannelName": {
            "template": "${channelName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${channelStorage.customerManagedS3.roleArn}"
        }
      }
    ],
    "create-dataset": [
      {
        "action": "iotanalytics:CreateDataset",
        "resource_mappings": {
          "DatasetName": {
            "template": "${datasetName}"
          }
        }
      }
    ],
    "create-dataset-content": [
      {
        "action": "iotanalytics:CreateDatasetContent",
        "resource_mappings": {
          "DatasetName": {
            "template": "${datasetName}"
          }
        }
      }
    ],
    "create-datastore": [
      {
        "action": "iotanalytics:CreateDatastore",
        "resource_mappings": {
          "DatastoreName": {
            "template": "${datastoreName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${datastoreStorage.customerManagedS3.roleArn}"
        }
      }
    ],
    "create-pipeline": [
      {
        "action": "iotanalytics:CreatePipeline",
        "resource_mappings": {
          "PipelineName": {
            "template": "${pipelineName}"
          }
        }
      }
    ],
    "delete-channel": [
      {
        "action": "iotanalytics:DeleteChannel",
        "resource_mappings": {
          "ChannelName": {
            "template": "${channelName}"
          }
        }
      }
    ],
    "delete-dataset": [
      {
        "action": "iotanalytics:DeleteDataset",
        "resource_mappings": {
          "DatasetName": {
            "template": "${datasetName}"
          }
        }
      }
    ],
    "delete-dataset-content": [
      {
        "action": "iotanalytics:DeleteDatasetContent",
        "resource_mappings": {
          "DatasetName": {
            "template": "${datasetName}"
          }
        }
      }
    ],
    "delete-datastore": [
      {
        "action": "iotanalytics:DeleteDatastore",
        "resource_mappings": {
          "DatastoreName": {
            "template": "${datastoreName}"
          }
        }
      }
    ],
    "delete-pipeline": [
      {
        "action": "iotanalytics:DeletePipeline",
        "resource_mappings": {
          "PipelineName": {
            "template": "${pipelineName}"
          }
        }
      }
    ],
    "describe-channel": [
      {
        "action": "iotanalytics:DescribeChannel",
        "resource_mappings": {
          "ChannelName": {
            "template": "${channelName}"
          }
        }
      }
    ],
    "describe-dataset": [
      {
        "action": "iotanalytics:DescribeDataset",
        "resource_mappings": {
          "DatasetName": {
            "template": "${datasetName}"
          }
        }
      }
    ],
    "describe-datastore": [
      {
        "action": "iotanalytics:DescribeDatastore",
        "resource_mappings": {
          "DatastoreName": {
            "template": "${datastoreName}"
          }
        }
      }
    ],
    "describe-logging-options": [
      {
        "action": "iotanalytics:DescribeLoggingOptions",
        "resource_mappings": {}
      }
    ],
    "describe-pipeline": [
      {
        "action": "iotanalytics:DescribePipeline",
        "resource_mappings": {
          "PipelineName": {
            "template": "${pipelineName}"
          }
        }
      }
    ],
    "get-dataset-content": [
      {
        "action": "iotanalytics:GetDatasetContent",
        "resource_mappings": {
          "DatasetName": {
            "template": "${datasetName}"
          }
        }
      }
    ],
    "list-channels": [
      {
        "action": "iotanalytics:ListChannels",
        "resource_mappings": {}
      }
    ],
    "list-dataset-contents": [
      {
        "action": "iotanalytics:ListDatasetContents",
        "resource_mappings": {
          "DatasetName": {
            "template": "${datasetName}"
          }
        }
      }
    ],
    "list-datasets": [
      {
        "action": "iotanalytics:ListDatasets",
        "resource_mappings": {}
      }
    ],
    "list-datastores": [
      {
        "action": "iotanalytics:ListDatastores",
        "resource_mappings": {}
      }
    ],
    "list-pipelines": [
      {
        "action": "iotanalytics:ListPipelines",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "iotanalytics:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channel": "%%iftemplatematch%${resourceArn}%%",
          "dataset": "%%iftemplatematch%${resourceArn}%%",
          "datastore": "%%iftemplatematch%${resourceArn}%%",
          "pipeline": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "put-logging-options": [
      {
        "action": "iotanalytics:PutLoggingOptions",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${loggingOptions.roleArn}"
        }
      }
    ],
    "run-pipeline-activity": [
      {
        "action": "iotanalytics:RunPipelineActivity",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${pipelineActivity.deviceRegistryEnrich.roleArn}%${pipelineActivity.deviceShadowEnrich.roleArn}%%"
        }
      }
    ],
    "sample-channel-data": [
      {
        "action": "iotanalytics:SampleChannelData",
        "resource_mappings": {
          "ChannelName": {
            "template": "${channelName}"
          }
        }
      }
    ],
    "start-pipeline-reprocessing": [
      {
        "action": "iotanalytics:StartPipelineReprocessing",
        "resource_mappings": {
          "PipelineName": {
            "template": "${pipelineName}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "iotanalytics:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channel": "%%iftemplatematch%${resourceArn}%%",
          "dataset": "%%iftemplatematch%${resourceArn}%%",
          "datastore": "%%iftemplatematch%${resourceArn}%%",
          "pipeline": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "iotanalytics:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channel": "%%iftemplatematch%${resourceArn}%%",
          "dataset": "%%iftemplatematch%${resourceArn}%%",
          "datastore": "%%iftemplatematch%${resourceArn}%%",
          "pipeline": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-channel": [
      {
        "action": "iotanalytics:UpdateChannel",
        "resource_mappings": {
          "ChannelName": {
            "template": "${channelName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${channelStorage.customerManagedS3.roleArn}"
        }
      }
    ],
    "update-dataset": [
      {
        "action": "iotanalytics:UpdateDataset",
        "resource_mappings": {
          "DatasetName": {
            "template": "${datasetName}"
          }
        }
      }
    ],
    "update-datastore": [
      {
        "action": "iotanalytics:UpdateDatastore",
        "resource_mappings": {
          "DatastoreName": {
            "template": "${datastoreName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${datastoreStorage.customerManagedS3.roleArn}"
        }
      }
    ],
    "update-pipeline": [
      {
        "action": "iotanalytics:UpdatePipeline",
        "resource_mappings": {
          "PipelineName": {
            "template": "${pipelineName}"
          }
        }
      }
    ]
  },
  "iotdeviceadvisor": {
    "create-suite-definition": [
      {
        "action": "iotdeviceadvisor:CreateSuiteDefinition",
        "resource_mappings": {}
      }
    ],
    "delete-suite-definition": [
      {
        "action": "iotdeviceadvisor:DeleteSuiteDefinition",
        "resource_mappings": {
          "suiteDefinitionId": {
            "template": "${suiteDefinitionId}"
          }
        }
      }
    ],
    "get-endpoint": [
      {
        "action": "iotdeviceadvisor:GetEndpoint",
        "resource_mappings": {}
      }
    ],
    "get-suite-definition": [
      {
        "action": "iotdeviceadvisor:GetSuiteDefinition",
        "resource_mappings": {
          "suiteDefinitionId": {
            "template": "${suiteDefinitionId}"
          }
        }
      }
    ],
    "get-suite-run": [
      {
        "action": "iotdeviceadvisor:GetSuiteRun",
        "resource_mappings": {
          "suiteDefinitionId": {
            "template": "${suiteDefinitionId}"
          },
          "suiteRunId": {
            "template": "${suiteRunId}"
          }
        }
      }
    ],
    "get-suite-run-report": [
      {
        "action": "iotdeviceadvisor:GetSuiteRunReport",
        "resource_mappings": {
          "suiteDefinitionId": {
            "template": "${suiteDefinitionId}"
          },
          "suiteRunId": {
            "template": "${suiteRunId}"
          }
        }
      }
    ],
    "list-suite-definitions": [
      {
        "action": "iotdeviceadvisor:ListSuiteDefinitions",
        "resource_mappings": {}
      }
    ],
    "list-suite-runs": [
      {
        "action": "iotdeviceadvisor:ListSuiteRuns",
        "resource_mappings": {
          "suiteDefinitionId": {
            "template": "${suiteDefinitionId}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "iotdeviceadvisor:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "suitedefinition": "%%iftemplatematch%${resourceArn}%%",
          "suiterun": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "start-suite-run": [
      {
        "action": "iotdeviceadvisor:StartSuiteRun",
        "resource_mappings": {}
      }
    ],
    "stop-suite-run": [
      {
        "action": "iotdeviceadvisor:StopSuiteRun",
        "resource_mappings": {
          "suiteDefinitionId": {
            "template": "${suiteDefinitionId}"
          },
          "suiteRunId": {
            "template": "${suiteRunId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "iotdeviceadvisor:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "suitedefinition": "%%iftemplatematch%${resourceArn}%%",
          "suiterun": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "iotdeviceadvisor:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "suitedefinition": "%%iftemplatematch%${resourceArn}%%",
          "suiterun": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-suite-definition": [
      {
        "action": "iotdeviceadvisor:UpdateSuiteDefinition",
        "resource_mappings": {
          "suiteDefinitionId": {
            "template": "${suiteDefinitionId}"
          }
        }
      }
    ]
  },
  "iotevents": {
    "create-alarm-model": [
      {
        "action": "iotevents:CreateAlarmModel",
        "resource_mappings": {
          "AlarmModelName": {
            "template": "${alarmModelName}"
          }
        }
      }
    ],
    "create-detector-model": [
      {
        "action": "iotevents:CreateDetectorModel",
        "resource_mappings": {
          "DetectorModelName": {
            "template": "${detectorModelName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${roleArn}"
        }
      }
    ],
    "create-input": [
      {
        "action": "iotevents:CreateInput",
        "resource_mappings": {
          "inputName": {
            "template": "${inputName}"
          }
        }
      }
    ],
    "delete-alarm-model": [
      {
        "action": "iotevents:DeleteAlarmModel",
        "resource_mappings": {
          "AlarmModelName": {
            "template": "${alarmModelName}"
          }
        }
      }
    ],
    "delete-detector-model": [
      {
        "action": "iotevents:DeleteDetectorModel",
        "resource_mappings": {
          "DetectorModelName": {
            "template": "${detectorModelName}"
          }
        }
      }
    ],
    "delete-input": [
      {
        "action": "iotevents:DeleteInput",
        "resource_mappings": {
          "inputName": {
            "template": "${inputName}"
          }
        }
      }
    ],
    "describe-alarm-model": [
      {
        "action": "iotevents:DescribeAlarmModel",
        "resource_mappings": {
          "AlarmModelName": {
            "template": "${alarmModelName}"
          }
        }
      }
    ],
    "describe-detector-model": [
      {
        "action": "iotevents:DescribeDetectorModel",
        "resource_mappings": {
          "DetectorModelName": {
            "template": "${detectorModelName}"
          }
        }
      }
    ],
    "describe-detector-model-analysis": [
      {
        "action": "iotevents:DescribeDetectorModelAnalysis",
        "resource_mappings": {}
      }
    ],
    "describe-input": [
      {
        "action": "iotevents:DescribeInput",
        "resource_mappings": {
          "inputName": {
            "template": "${inputName}"
          }
        }
      }
    ],
    "describe-logging-options": [
      {
        "action": "iotevents:DescribeLoggingOptions",
        "resource_mappings": {}
      }
    ],
    "get-detector-model-analysis-results": [
      {
        "action": "iotevents:GetDetectorModelAnalysisResults",
        "resource_mappings": {}
      }
    ],
    "list-alarm-model-versions": [
      {
        "action": "iotevents:ListAlarmModelVersions",
        "resource_mappings": {
          "AlarmModelName": {
            "template": "${alarmModelName}"
          }
        }
      }
    ],
    "list-alarm-models": [
      {
        "action": "iotevents:ListAlarmModels",
        "resource_mappings": {}
      }
    ],
    "list-detector-model-versions": [
      {
        "action": "iotevents:ListDetectorModelVersions",
        "resource_mappings": {
          "DetectorModelName": {
            "template": "${detectorModelName}"
          }
        }
      }
    ],
    "list-detector-models": [
      {
        "action": "iotevents:ListDetectorModels",
        "resource_mappings": {}
      }
    ],
    "list-input-routings": [
      {
        "action": "iotevents:ListInputRoutings",
        "resource_mappings": {}
      }
    ],
    "list-inputs": [
      {
        "action": "iotevents:ListInputs",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "iotevents:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "detectorModel": "%%iftemplatematch%${resourceArn}%%",
          "input": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "put-logging-options": [
      {
        "action": "iotevents:PutLoggingOptions",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${loggingOptions.roleArn}"
        }
      }
    ],
    "start-detector-model-analysis": [
      {
        "action": "iotevents:StartDetectorModelAnalysis",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "iotevents:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "detectorModel": "%%iftemplatematch%${resourceArn}%%",
          "input": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "iotevents:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "detectorModel": "%%iftemplatematch%${resourceArn}%%",
          "input": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-alarm-model": [
      {
        "action": "iotevents:UpdateAlarmModel",
        "resource_mappings": {
          "AlarmModelName": {
            "template": "${alarmModelName}"
          }
        }
      }
    ],
    "update-detector-model": [
      {
        "action": "iotevents:UpdateDetectorModel",
        "resource_mappings": {
          "DetectorModelName": {
            "template": "${detectorModelName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${roleArn}"
        }
      }
    ],
    "update-input": [
      {
        "action": "iotevents:UpdateInput",
        "resource_mappings": {
          "inputName": {
            "template": "${inputName}"
          }
        }
      }
    ]
  },
  "iotevents-data": {
    "batch-acknowledge-alarm": [
      {
        "action": "iotevents:BatchAcknowledgeAlarm",
        "resource_mappings": {
          "inputName": {
            "template": "*"
          }
        }
      }
    ],
    "batch-delete-detector": [
      {
        "action": "iotevents:BatchDeleteDetector",
        "resource_mappings": {
          "DetectorModelName": {
            "template": "${detectors[].detectorModelName}"
          }
        }
      }
    ],
    "batch-disable-alarm": [
      {
        "action": "iotevents:BatchDisableAlarm",
        "resource_mappings": {
          "inputName": {
            "template": "*"
          }
        }
      }
    ],
    "batch-enable-alarm": [
      {
        "action": "iotevents:BatchEnableAlarm",
        "resource_mappings": {
          "inputName": {
            "template": "*"
          }
        }
      }
    ],
    "batch-put-message": [
      {
        "action": "iotevents:BatchPutMessage",
        "resource_mappings": {
          "inputName": {
            "template": "${messages[].inputName}"
          }
        }
      }
    ],
    "batch-reset-alarm": [
      {
        "action": "iotevents:BatchResetAlarm",
        "resource_mappings": {
          "inputName": {
            "template": "*"
          }
        }
      }
    ],
    "batch-snooze-alarm": [
      {
        "action": "iotevents:BatchSnoozeAlarm",
        "resource_mappings": {
          "inputName": {
            "template": "*"
          }
        }
      }
    ],
    "batch-update-detector": [
      {
        "action": "iotevents:BatchUpdateDetector",
        "resource_mappings": {
          "inputName": {
            "template": "*"
          }
        }
      }
    ],
    "describe-alarm": [
      {
        "action": "iotevents:DescribeAlarm",
        "resource_mappings": {
          "AlarmModelName": {
            "template": "${alarmModelName}"
          }
        }
      }
    ],
    "describe-detector": [
      {
        "action": "iotevents:DescribeDetector",
        "resource_mappings": {
          "DetectorModelName": {
            "template": "${detectorModelName}"
          }
        }
      }
    ],
    "list-alarms": [
      {
        "action": "iotevents:ListAlarms",
        "resource_mappings": {
          "AlarmModelName": {
            "template": "${alarmModelName}"
          }
        }
      }
    ],
    "list-detectors": [
      {
        "action": "iotevents:ListDetectors",
        "resource_mappings": {
          "DetectorModelName": {
            "template": "${detectorModelName}"
          }
        }
      }
    ]
  },
  "iotfleethub": {
    "create-application": [
      {
        "action": "iotfleethub:CreateApplication",
        "resource_mappings": {}
      },
      {
        "action": "sso:CreateManagedApplicationInstance",
        "resource_mappings": {}
      }
    ],
    "delete-application": [
      {
        "action": "iotfleethub:DeleteApplication",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      },
      {
        "action": "sso:DeleteManagedApplicationInstance",
        "resource_mappings": {}
      }
    ],
    "describe-application": [
      {
        "action": "iotfleethub:DescribeApplication",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      }
    ],
    "list-applications": [
      {
        "action": "iotfleethub:ListApplications",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "iotfleethub:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "%%iftemplatematch%${resourceArn}%%",
          "dashboard": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "iotfleethub:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "%%iftemplatematch%${resourceArn}%%",
          "dashboard": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "iotfleethub:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "%%iftemplatematch%${resourceArn}%%",
          "dashboard": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-application": [
      {
        "action": "iotfleethub:UpdateApplication",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      }
    ]
  },
  "iotfleetwise": {
    "associate-vehicle-fleet": [
      {
        "action": "iotfleetwise:AssociateVehicleFleet",
        "resource_mappings": {
          "FleetId": {
            "template": "${fleetId}"
          },
          "VehicleId": {
            "template": "*"
          }
        }
      }
    ],
    "batch-create-vehicle": [
      {
        "action": "iotfleetwise:BatchCreateVehicle",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "decodermanifest": "${vehicles[].decoderManifestArn}",
          "modelmanifest": "${vehicles[].modelManifestArn}"
        }
      },
      {
        "action": "iot:CreateThing",
        "resource_mappings": {
          "ThingName": {
            "template": "*"
          },
          "BillingGroupName": {
            "template": "*"
          }
        }
      },
      {
        "action": "iot:DescribeThing",
        "resource_mappings": {
          "ThingName": {
            "template": "*"
          }
        }
      }
    ],
    "batch-update-vehicle": [
      {
        "action": "iotfleetwise:BatchUpdateVehicle",
        "resource_mappings": {
          "VehicleId": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "decodermanifest": "${vehicles[].decoderManifestArn}",
          "modelmanifest": "${vehicles[].modelManifestArn}"
        }
      }
    ],
    "create-campaign": [
      {
        "action": "iotfleetwise:CreateCampaign",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "%%iftemplatematch%${targetArn}%%",
          "signalcatalog": "${signalCatalogArn}",
          "vehicle": "%%iftemplatematch%${targetArn}%%"
        }
      }
    ],
    "create-decoder-manifest": [
      {
        "action": "iotfleetwise:CreateDecoderManifest",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "modelmanifest": "${modelManifestArn}"
        }
      }
    ],
    "create-fleet": [
      {
        "action": "iotfleetwise:CreateFleet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "signalcatalog": "${signalCatalogArn}"
        }
      }
    ],
    "create-model-manifest": [
      {
        "action": "iotfleetwise:CreateModelManifest",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "signalcatalog": "${signalCatalogArn}"
        }
      }
    ],
    "create-signal-catalog": [
      {
        "action": "iotfleetwise:CreateSignalCatalog",
        "resource_mappings": {}
      }
    ],
    "create-vehicle": [
      {
        "action": "iotfleetwise:CreateVehicle",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "decodermanifest": "${decoderManifestArn}",
          "modelmanifest": "${modelManifestArn}"
        }
      },
      {
        "action": "iot:CreateThing",
        "resource_mappings": {
          "ThingName": {
            "template": "*"
          },
          "BillingGroupName": {
            "template": "*"
          }
        }
      },
      {
        "action": "iot:DescribeThing",
        "resource_mappings": {
          "ThingName": {
            "template": "*"
          }
        }
      }
    ],
    "delete-campaign": [
      {
        "action": "iotfleetwise:DeleteCampaign",
        "resource_mappings": {
          "CampaignName": {
            "template": "${name}"
          }
        }
      }
    ],
    "delete-decoder-manifest": [
      {
        "action": "iotfleetwise:DeleteDecoderManifest",
        "resource_mappings": {
          "Name": {
            "template": "${name}"
          }
        }
      }
    ],
    "delete-fleet": [
      {
        "action": "iotfleetwise:DeleteFleet",
        "resource_mappings": {
          "FleetId": {
            "template": "${fleetId}"
          }
        }
      }
    ],
    "delete-model-manifest": [
      {
        "action": "iotfleetwise:DeleteModelManifest",
        "resource_mappings": {
          "Name": {
            "template": "${name}"
          }
        }
      }
    ],
    "delete-signal-catalog": [
      {
        "action": "iotfleetwise:DeleteSignalCatalog",
        "resource_mappings": {
          "Name": {
            "template": "${name}"
          }
        }
      }
    ],
    "delete-vehicle": [
      {
        "action": "iotfleetwise:DeleteVehicle",
        "resource_mappings": {
          "VehicleId": {
            "template": "*"
          }
        }
      }
    ],
    "disassociate-vehicle-fleet": [
      {
        "action": "iotfleetwise:DisassociateVehicleFleet",
        "resource_mappings": {
          "FleetId": {
            "template": "${fleetId}"
          },
          "VehicleId": {
            "template": "*"
          }
        }
      }
    ],
    "get-campaign": [
      {
        "action": "iotfleetwise:GetCampaign",
        "resource_mappings": {
          "CampaignName": {
            "template": "${name}"
          }
        }
      }
    ],
    "get-decoder-manifest": [
      {
        "action": "iotfleetwise:GetDecoderManifest",
        "resource_mappings": {
          "Name": {
            "template": "${name}"
          }
        }
      }
    ],
    "get-encryption-configuration": [
      {
        "note": "NotFound",
        "action": "IoTFleetWise:GetEncryptionConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-fleet": [
      {
        "action": "iotfleetwise:GetFleet",
        "resource_mappings": {
          "FleetId": {
            "template": "${fleetId}"
          }
        }
      }
    ],
    "get-logging-options": [
      {
        "action": "iotfleetwise:GetLoggingOptions",
        "resource_mappings": {}
      }
    ],
    "get-model-manifest": [
      {
        "action": "iotfleetwise:GetModelManifest",
        "resource_mappings": {
          "Name": {
            "template": "${name}"
          }
        }
      }
    ],
    "get-register-account-status": [
      {
        "action": "iotfleetwise:GetRegisterAccountStatus",
        "resource_mappings": {}
      }
    ],
    "get-signal-catalog": [
      {
        "action": "iotfleetwise:GetSignalCatalog",
        "resource_mappings": {
          "Name": {
            "template": "${name}"
          }
        }
      }
    ],
    "get-vehicle": [
      {
        "action": "iotfleetwise:GetVehicle",
        "resource_mappings": {
          "VehicleId": {
            "template": "*"
          }
        }
      }
    ],
    "get-vehicle-status": [
      {
        "action": "iotfleetwise:GetVehicleStatus",
        "resource_mappings": {
          "VehicleId": {
            "template": "*"
          }
        }
      }
    ],
    "import-decoder-manifest": [
      {
        "action": "iotfleetwise:ImportDecoderManifest",
        "resource_mappings": {
          "Name": {
            "template": "${name}"
          }
        }
      }
    ],
    "import-signal-catalog": [
      {
        "action": "iotfleetwise:ImportSignalCatalog",
        "resource_mappings": {}
      }
    ],
    "list-campaigns": [
      {
        "action": "iotfleetwise:ListCampaigns",
        "resource_mappings": {}
      }
    ],
    "list-decoder-manifest-network-interfaces": [
      {
        "action": "iotfleetwise:ListDecoderManifestNetworkInterfaces",
        "resource_mappings": {
          "Name": {
            "template": "${name}"
          }
        }
      }
    ],
    "list-decoder-manifest-signals": [
      {
        "action": "iotfleetwise:ListDecoderManifestSignals",
        "resource_mappings": {
          "Name": {
            "template": "${name}"
          }
        }
      }
    ],
    "list-decoder-manifests": [
      {
        "action": "iotfleetwise:ListDecoderManifests",
        "resource_mappings": {}
      }
    ],
    "list-fleets": [
      {
        "action": "iotfleetwise:ListFleets",
        "resource_mappings": {}
      }
    ],
    "list-fleets-for-vehicle": [
      {
        "action": "iotfleetwise:ListFleetsForVehicle",
        "resource_mappings": {
          "VehicleId": {
            "template": "*"
          }
        }
      }
    ],
    "list-model-manifest-nodes": [
      {
        "action": "iotfleetwise:ListModelManifestNodes",
        "resource_mappings": {
          "Name": {
            "template": "${name}"
          }
        }
      }
    ],
    "list-model-manifests": [
      {
        "action": "iotfleetwise:ListModelManifests",
        "resource_mappings": {}
      }
    ],
    "list-signal-catalog-nodes": [
      {
        "action": "iotfleetwise:ListSignalCatalogNodes",
        "resource_mappings": {
          "Name": {
            "template": "${name}"
          }
        }
      }
    ],
    "list-signal-catalogs": [
      {
        "action": "iotfleetwise:ListSignalCatalogs",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "iotfleetwise:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "campaign": "%%iftemplatematch%${ResourceARN}%%",
          "decodermanifest": "%%iftemplatematch%${ResourceARN}%%",
          "fleet": "%%iftemplatematch%${ResourceARN}%%",
          "modelmanifest": "%%iftemplatematch%${ResourceARN}%%",
          "signalcatalog": "%%iftemplatematch%${ResourceARN}%%",
          "vehicle": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "list-vehicles": [
      {
        "action": "iotfleetwise:ListVehicles",
        "resource_mappings": {}
      }
    ],
    "list-vehicles-in-fleet": [
      {
        "action": "iotfleetwise:ListVehiclesInFleet",
        "resource_mappings": {
          "FleetId": {
            "template": "${fleetId}"
          }
        }
      }
    ],
    "put-encryption-configuration": [
      {
        "note": "NotFound",
        "action": "IoTFleetWise:PutEncryptionConfiguration",
        "resource_mappings": {}
      }
    ],
    "put-logging-options": [
      {
        "action": "iotfleetwise:PutLoggingOptions",
        "resource_mappings": {}
      }
    ],
    "register-account": [
      {
        "action": "iotfleetwise:RegisterAccount",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${iamResources.roleArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "iotfleetwise:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "campaign": "%%iftemplatematch%${ResourceARN}%%",
          "decodermanifest": "%%iftemplatematch%${ResourceARN}%%",
          "fleet": "%%iftemplatematch%${ResourceARN}%%",
          "modelmanifest": "%%iftemplatematch%${ResourceARN}%%",
          "signalcatalog": "%%iftemplatematch%${ResourceARN}%%",
          "vehicle": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "iotfleetwise:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "campaign": "%%iftemplatematch%${ResourceARN}%%",
          "decodermanifest": "%%iftemplatematch%${ResourceARN}%%",
          "fleet": "%%iftemplatematch%${ResourceARN}%%",
          "modelmanifest": "%%iftemplatematch%${ResourceARN}%%",
          "signalcatalog": "%%iftemplatematch%${ResourceARN}%%",
          "vehicle": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "update-campaign": [
      {
        "action": "iotfleetwise:UpdateCampaign",
        "resource_mappings": {
          "CampaignName": {
            "template": "${name}"
          }
        }
      }
    ],
    "update-decoder-manifest": [
      {
        "action": "iotfleetwise:UpdateDecoderManifest",
        "resource_mappings": {
          "Name": {
            "template": "${name}"
          }
        }
      }
    ],
    "update-fleet": [
      {
        "action": "iotfleetwise:UpdateFleet",
        "resource_mappings": {
          "FleetId": {
            "template": "${fleetId}"
          }
        }
      }
    ],
    "update-model-manifest": [
      {
        "action": "iotfleetwise:UpdateModelManifest",
        "resource_mappings": {
          "Name": {
            "template": "${name}"
          }
        }
      }
    ],
    "update-signal-catalog": [
      {
        "action": "iotfleetwise:UpdateSignalCatalog",
        "resource_mappings": {
          "Name": {
            "template": "${name}"
          }
        }
      }
    ],
    "update-vehicle": [
      {
        "action": "iotfleetwise:UpdateVehicle",
        "resource_mappings": {
          "VehicleId": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "decodermanifest": "${decoderManifestArn}",
          "modelmanifest": "${modelManifestArn}"
        }
      }
    ]
  },
  "iotsecuretunneling": {
    "close-tunnel": [
      {
        "action": "iot:CloseTunnel",
        "resource_mappings": {
          "TunnelId": {
            "template": "${tunnelId}"
          }
        }
      }
    ],
    "describe-tunnel": [
      {
        "action": "iot:DescribeTunnel",
        "resource_mappings": {
          "TunnelId": {
            "template": "${tunnelId}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "iot:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "authorizer": "%%iftemplatematch%${resourceArn}%%",
          "billinggroup": "%%iftemplatematch%${resourceArn}%%",
          "cacert": "%%iftemplatematch%${resourceArn}%%",
          "dimension": "%%iftemplatematch%${resourceArn}%%",
          "domainconfiguration": "%%iftemplatematch%${resourceArn}%%",
          "dynamicthinggroup": "%%iftemplatematch%${resourceArn}%%",
          "fleetmetric": "%%iftemplatematch%${resourceArn}%%",
          "job": "%%iftemplatematch%${resourceArn}%%",
          "mitigationaction": "%%iftemplatematch%${resourceArn}%%",
          "otaupdate": "%%iftemplatematch%${resourceArn}%%",
          "policy": "%%iftemplatematch%${resourceArn}%%",
          "provisioningtemplate": "%%iftemplatematch%${resourceArn}%%",
          "rolealias": "%%iftemplatematch%${resourceArn}%%",
          "rule": "%%iftemplatematch%${resourceArn}%%",
          "scheduledaudit": "%%iftemplatematch%${resourceArn}%%",
          "securityprofile": "%%iftemplatematch%${resourceArn}%%",
          "stream": "%%iftemplatematch%${resourceArn}%%",
          "thinggroup": "%%iftemplatematch%${resourceArn}%%",
          "thingtype": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "list-tunnels": [
      {
        "action": "iot:ListTunnels",
        "resource_mappings": {}
      }
    ],
    "open-tunnel": [
      {
        "action": "iot:OpenTunnel",
        "resource_mappings": {}
      }
    ],
    "rotate-tunnel-access-token": [
      {
        "action": "iot:RotateTunnelAccessToken",
        "resource_mappings": {
          "TunnelId": {
            "template": "${tunnelId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "iot:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "authorizer": "%%iftemplatematch%${resourceArn}%%",
          "billinggroup": "%%iftemplatematch%${resourceArn}%%",
          "cacert": "%%iftemplatematch%${resourceArn}%%",
          "dimension": "%%iftemplatematch%${resourceArn}%%",
          "domainconfiguration": "%%iftemplatematch%${resourceArn}%%",
          "dynamicthinggroup": "%%iftemplatematch%${resourceArn}%%",
          "fleetmetric": "%%iftemplatematch%${resourceArn}%%",
          "job": "%%iftemplatematch%${resourceArn}%%",
          "mitigationaction": "%%iftemplatematch%${resourceArn}%%",
          "otaupdate": "%%iftemplatematch%${resourceArn}%%",
          "policy": "%%iftemplatematch%${resourceArn}%%",
          "provisioningtemplate": "%%iftemplatematch%${resourceArn}%%",
          "rolealias": "%%iftemplatematch%${resourceArn}%%",
          "rule": "%%iftemplatematch%${resourceArn}%%",
          "scheduledaudit": "%%iftemplatematch%${resourceArn}%%",
          "securityprofile": "%%iftemplatematch%${resourceArn}%%",
          "stream": "%%iftemplatematch%${resourceArn}%%",
          "thinggroup": "%%iftemplatematch%${resourceArn}%%",
          "thingtype": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "iot:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "authorizer": "%%iftemplatematch%${resourceArn}%%",
          "billinggroup": "%%iftemplatematch%${resourceArn}%%",
          "cacert": "%%iftemplatematch%${resourceArn}%%",
          "dimension": "%%iftemplatematch%${resourceArn}%%",
          "domainconfiguration": "%%iftemplatematch%${resourceArn}%%",
          "dynamicthinggroup": "%%iftemplatematch%${resourceArn}%%",
          "fleetmetric": "%%iftemplatematch%${resourceArn}%%",
          "job": "%%iftemplatematch%${resourceArn}%%",
          "mitigationaction": "%%iftemplatematch%${resourceArn}%%",
          "otaupdate": "%%iftemplatematch%${resourceArn}%%",
          "policy": "%%iftemplatematch%${resourceArn}%%",
          "provisioningtemplate": "%%iftemplatematch%${resourceArn}%%",
          "rolealias": "%%iftemplatematch%${resourceArn}%%",
          "rule": "%%iftemplatematch%${resourceArn}%%",
          "scheduledaudit": "%%iftemplatematch%${resourceArn}%%",
          "securityprofile": "%%iftemplatematch%${resourceArn}%%",
          "stream": "%%iftemplatematch%${resourceArn}%%",
          "thinggroup": "%%iftemplatematch%${resourceArn}%%",
          "thingtype": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ]
  },
  "iotsitewise": {
    "associate-assets": [
      {
        "action": "iotsitewise:AssociateAssets",
        "resource_mappings": {
          "AssetId": {
            "template": "%%many%${assetId}%${childAssetId}%%"
          }
        }
      }
    ],
    "associate-time-series-to-asset-property": [
      {
        "action": "iotsitewise:AssociateTimeSeriesToAssetProperty",
        "resource_mappings": {
          "AssetId": {
            "template": "${assetId}"
          },
          "TimeSeriesId": {
            "template": "*"
          }
        }
      }
    ],
    "batch-associate-project-assets": [
      {
        "action": "iotsitewise:BatchAssociateProjectAssets",
        "resource_mappings": {
          "ProjectId": {
            "template": "${projectId}"
          }
        }
      }
    ],
    "batch-disassociate-project-assets": [
      {
        "action": "iotsitewise:BatchDisassociateProjectAssets",
        "resource_mappings": {
          "ProjectId": {
            "template": "${projectId}"
          }
        }
      }
    ],
    "batch-get-asset-property-aggregates": [
      {
        "action": "iotsitewise:BatchGetAssetPropertyAggregates",
        "resource_mappings": {
          "AssetId": {
            "template": "${entries[].assetId}"
          },
          "TimeSeriesId": {
            "template": "*"
          }
        }
      }
    ],
    "batch-get-asset-property-value": [
      {
        "action": "iotsitewise:BatchGetAssetPropertyValue",
        "resource_mappings": {
          "AssetId": {
            "template": "${entries[].assetId}"
          },
          "TimeSeriesId": {
            "template": "*"
          }
        }
      }
    ],
    "batch-get-asset-property-value-history": [
      {
        "action": "iotsitewise:BatchGetAssetPropertyValueHistory",
        "resource_mappings": {
          "AssetId": {
            "template": "${entries[].assetId}"
          },
          "TimeSeriesId": {
            "template": "*"
          }
        }
      }
    ],
    "batch-put-asset-property-value": [
      {
        "action": "iotsitewise:BatchPutAssetPropertyValue",
        "resource_mappings": {
          "AssetId": {
            "template": "${entries[].assetId}"
          }
        }
      }
    ],
    "create-access-policy": [
      {
        "action": "iotsitewise:CreateAccessPolicy",
        "resource_mappings": {
          "PortalId": {
            "template": "${accessPolicyResource.portal.id}"
          },
          "ProjectId": {
            "template": "${accessPolicyResource.project.id}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${accessPolicyIdentity.iamUser.arn}"
        }
      }
    ],
    "create-asset": [
      {
        "action": "iotsitewise:CreateAsset",
        "resource_mappings": {
          "AssetModelId": {
            "template": "${assetModelId}"
          }
        }
      }
    ],
    "create-asset-model": [
      {
        "action": "iotsitewise:CreateAssetModel",
        "resource_mappings": {}
      }
    ],
    "create-bulk-import-job": [
      {
        "action": "iotsitewise:CreateBulkImportJob",
        "resource_mappings": {}
      }
    ],
    "create-dashboard": [
      {
        "action": "iotsitewise:CreateDashboard",
        "resource_mappings": {
          "ProjectId": {
            "template": "${projectId}"
          }
        }
      }
    ],
    "create-gateway": [
      {
        "action": "iotsitewise:CreateGateway",
        "resource_mappings": {}
      }
    ],
    "create-portal": [
      {
        "action": "iotsitewise:CreatePortal",
        "resource_mappings": {}
      },
      {
        "action": "sso:CreateManagedApplicationInstance",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${roleArn}"
        }
      }
    ],
    "create-project": [
      {
        "action": "iotsitewise:CreateProject",
        "resource_mappings": {
          "PortalId": {
            "template": "${portalId}"
          }
        }
      }
    ],
    "delete-access-policy": [
      {
        "action": "iotsitewise:DeleteAccessPolicy",
        "resource_mappings": {
          "AccessPolicyId": {
            "template": "${accessPolicyId}"
          }
        }
      }
    ],
    "delete-asset": [
      {
        "action": "iotsitewise:DeleteAsset",
        "resource_mappings": {
          "AssetId": {
            "template": "${assetId}"
          }
        }
      }
    ],
    "delete-asset-model": [
      {
        "action": "iotsitewise:DeleteAssetModel",
        "resource_mappings": {
          "AssetModelId": {
            "template": "${assetModelId}"
          }
        }
      }
    ],
    "delete-dashboard": [
      {
        "action": "iotsitewise:DeleteDashboard",
        "resource_mappings": {
          "DashboardId": {
            "template": "${dashboardId}"
          }
        }
      }
    ],
    "delete-gateway": [
      {
        "action": "iotsitewise:DeleteGateway",
        "resource_mappings": {
          "GatewayId": {
            "template": "${gatewayId}"
          }
        }
      }
    ],
    "delete-portal": [
      {
        "action": "iotsitewise:DeletePortal",
        "resource_mappings": {
          "PortalId": {
            "template": "${portalId}"
          }
        }
      },
      {
        "action": "sso:DeleteManagedApplicationInstance",
        "resource_mappings": {}
      }
    ],
    "delete-project": [
      {
        "action": "iotsitewise:DeleteProject",
        "resource_mappings": {
          "ProjectId": {
            "template": "${projectId}"
          }
        }
      }
    ],
    "delete-time-series": [
      {
        "action": "iotsitewise:DeleteTimeSeries",
        "resource_mappings": {
          "AssetId": {
            "template": "${assetId}"
          },
          "TimeSeriesId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-access-policy": [
      {
        "action": "iotsitewise:DescribeAccessPolicy",
        "resource_mappings": {
          "AccessPolicyId": {
            "template": "${accessPolicyId}"
          }
        }
      }
    ],
    "describe-asset": [
      {
        "action": "iotsitewise:DescribeAsset",
        "resource_mappings": {
          "AssetId": {
            "template": "${assetId}"
          }
        }
      }
    ],
    "describe-asset-model": [
      {
        "action": "iotsitewise:DescribeAssetModel",
        "resource_mappings": {
          "AssetModelId": {
            "template": "${assetModelId}"
          }
        }
      }
    ],
    "describe-asset-property": [
      {
        "action": "iotsitewise:DescribeAssetProperty",
        "resource_mappings": {
          "AssetId": {
            "template": "${assetId}"
          }
        }
      }
    ],
    "describe-bulk-import-job": [
      {
        "action": "iotsitewise:DescribeBulkImportJob",
        "resource_mappings": {}
      }
    ],
    "describe-dashboard": [
      {
        "action": "iotsitewise:DescribeDashboard",
        "resource_mappings": {
          "DashboardId": {
            "template": "${dashboardId}"
          }
        }
      }
    ],
    "describe-default-encryption-configuration": [
      {
        "action": "iotsitewise:DescribeDefaultEncryptionConfiguration",
        "resource_mappings": {}
      }
    ],
    "describe-gateway": [
      {
        "action": "iotsitewise:DescribeGateway",
        "resource_mappings": {
          "GatewayId": {
            "template": "${gatewayId}"
          }
        }
      }
    ],
    "describe-gateway-capability-configuration": [
      {
        "action": "iotsitewise:DescribeGatewayCapabilityConfiguration",
        "resource_mappings": {
          "GatewayId": {
            "template": "${gatewayId}"
          }
        }
      }
    ],
    "describe-logging-options": [
      {
        "action": "iotsitewise:DescribeLoggingOptions",
        "resource_mappings": {}
      }
    ],
    "describe-portal": [
      {
        "action": "iotsitewise:DescribePortal",
        "resource_mappings": {
          "PortalId": {
            "template": "${portalId}"
          }
        }
      }
    ],
    "describe-project": [
      {
        "action": "iotsitewise:DescribeProject",
        "resource_mappings": {
          "ProjectId": {
            "template": "${projectId}"
          }
        }
      }
    ],
    "describe-storage-configuration": [
      {
        "action": "iotsitewise:DescribeStorageConfiguration",
        "resource_mappings": {}
      }
    ],
    "describe-time-series": [
      {
        "action": "iotsitewise:DescribeTimeSeries",
        "resource_mappings": {
          "AssetId": {
            "template": "${assetId}"
          },
          "TimeSeriesId": {
            "template": "*"
          }
        }
      }
    ],
    "disassociate-assets": [
      {
        "action": "iotsitewise:DisassociateAssets",
        "resource_mappings": {
          "AssetId": {
            "template": "${assetId}"
          }
        }
      }
    ],
    "disassociate-time-series-from-asset-property": [
      {
        "action": "iotsitewise:DisassociateTimeSeriesFromAssetProperty",
        "resource_mappings": {
          "AssetId": {
            "template": "${assetId}"
          },
          "TimeSeriesId": {
            "template": "*"
          }
        }
      }
    ],
    "get-asset-property-aggregates": [
      {
        "action": "iotsitewise:GetAssetPropertyAggregates",
        "resource_mappings": {
          "AssetId": {
            "template": "${assetId}"
          }
        }
      }
    ],
    "get-asset-property-value": [
      {
        "action": "iotsitewise:GetAssetPropertyValue",
        "resource_mappings": {
          "AssetId": {
            "template": "${assetId}"
          }
        }
      }
    ],
    "get-asset-property-value-history": [
      {
        "action": "iotsitewise:GetAssetPropertyValueHistory",
        "resource_mappings": {
          "AssetId": {
            "template": "${assetId}"
          }
        }
      }
    ],
    "get-interpolated-asset-property-values": [
      {
        "action": "iotsitewise:GetInterpolatedAssetPropertyValues",
        "resource_mappings": {
          "AssetId": {
            "template": "${assetId}"
          },
          "TimeSeriesId": {
            "template": "*"
          }
        }
      }
    ],
    "list-access-policies": [
      {
        "action": "iotsitewise:ListAccessPolicies",
        "resource_mappings": {
          "PortalId": {
            "template": "*"
          },
          "ProjectId": {
            "template": "*"
          }
        }
      }
    ],
    "list-asset-model-properties": [
      {
        "action": "iotsitewise:ListAssetModelProperties",
        "resource_mappings": {
          "AssetModelId": {
            "template": "${assetModelId}"
          }
        }
      }
    ],
    "list-asset-models": [
      {
        "action": "iotsitewise:ListAssetModels",
        "resource_mappings": {}
      }
    ],
    "list-asset-properties": [
      {
        "action": "iotsitewise:ListAssetProperties",
        "resource_mappings": {
          "AssetId": {
            "template": "${assetId}"
          }
        }
      }
    ],
    "list-asset-relationships": [
      {
        "action": "iotsitewise:ListAssetRelationships",
        "resource_mappings": {
          "AssetId": {
            "template": "${assetId}"
          }
        }
      }
    ],
    "list-assets": [
      {
        "action": "iotsitewise:ListAssets",
        "resource_mappings": {
          "AssetModelId": {
            "template": "${assetModelId}"
          }
        }
      }
    ],
    "list-associated-assets": [
      {
        "action": "iotsitewise:ListAssociatedAssets",
        "resource_mappings": {
          "AssetId": {
            "template": "${assetId}"
          }
        }
      }
    ],
    "list-bulk-import-jobs": [
      {
        "action": "iotsitewise:ListBulkImportJobs",
        "resource_mappings": {}
      }
    ],
    "list-dashboards": [
      {
        "action": "iotsitewise:ListDashboards",
        "resource_mappings": {
          "ProjectId": {
            "template": "${projectId}"
          }
        }
      }
    ],
    "list-gateways": [
      {
        "action": "iotsitewise:ListGateways",
        "resource_mappings": {}
      }
    ],
    "list-portals": [
      {
        "action": "iotsitewise:ListPortals",
        "resource_mappings": {}
      }
    ],
    "list-project-assets": [
      {
        "action": "iotsitewise:ListProjectAssets",
        "resource_mappings": {
          "ProjectId": {
            "template": "${projectId}"
          }
        }
      }
    ],
    "list-projects": [
      {
        "action": "iotsitewise:ListProjects",
        "resource_mappings": {
          "PortalId": {
            "template": "${portalId}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "iotsitewise:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "access-policy": "%%iftemplatematch%${resourceArn}%%",
          "asset": "%%iftemplatematch%${resourceArn}%%",
          "asset-model": "%%iftemplatematch%${resourceArn}%%",
          "dashboard": "%%iftemplatematch%${resourceArn}%%",
          "gateway": "%%iftemplatematch%${resourceArn}%%",
          "portal": "%%iftemplatematch%${resourceArn}%%",
          "project": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "list-time-series": [
      {
        "action": "iotsitewise:ListTimeSeries",
        "resource_mappings": {
          "AssetId": {
            "template": "${assetId}"
          }
        }
      }
    ],
    "put-default-encryption-configuration": [
      {
        "action": "iotsitewise:PutDefaultEncryptionConfiguration",
        "resource_mappings": {}
      }
    ],
    "put-logging-options": [
      {
        "action": "iotsitewise:PutLoggingOptions",
        "resource_mappings": {}
      }
    ],
    "put-storage-configuration": [
      {
        "action": "iotsitewise:PutStorageConfiguration",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "iotsitewise:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "access-policy": "%%iftemplatematch%${resourceArn}%%",
          "asset": "%%iftemplatematch%${resourceArn}%%",
          "asset-model": "%%iftemplatematch%${resourceArn}%%",
          "dashboard": "%%iftemplatematch%${resourceArn}%%",
          "gateway": "%%iftemplatematch%${resourceArn}%%",
          "portal": "%%iftemplatematch%${resourceArn}%%",
          "project": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "iotsitewise:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "access-policy": "%%iftemplatematch%${resourceArn}%%",
          "asset": "%%iftemplatematch%${resourceArn}%%",
          "asset-model": "%%iftemplatematch%${resourceArn}%%",
          "dashboard": "%%iftemplatematch%${resourceArn}%%",
          "gateway": "%%iftemplatematch%${resourceArn}%%",
          "portal": "%%iftemplatematch%${resourceArn}%%",
          "project": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-access-policy": [
      {
        "action": "iotsitewise:UpdateAccessPolicy",
        "resource_mappings": {
          "AccessPolicyId": {
            "template": "${accessPolicyId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${accessPolicyIdentity.iamUser.arn}"
        }
      }
    ],
    "update-asset": [
      {
        "action": "iotsitewise:UpdateAsset",
        "resource_mappings": {
          "AssetId": {
            "template": "${assetId}"
          }
        }
      }
    ],
    "update-asset-model": [
      {
        "action": "iotsitewise:UpdateAssetModel",
        "resource_mappings": {
          "AssetModelId": {
            "template": "${assetModelId}"
          }
        }
      }
    ],
    "update-asset-property": [
      {
        "action": "iotsitewise:UpdateAssetProperty",
        "resource_mappings": {
          "AssetId": {
            "template": "${assetId}"
          }
        }
      }
    ],
    "update-dashboard": [
      {
        "action": "iotsitewise:UpdateDashboard",
        "resource_mappings": {
          "DashboardId": {
            "template": "${dashboardId}"
          }
        }
      }
    ],
    "update-gateway": [
      {
        "action": "iotsitewise:UpdateGateway",
        "resource_mappings": {
          "GatewayId": {
            "template": "${gatewayId}"
          }
        }
      }
    ],
    "update-gateway-capability-configuration": [
      {
        "action": "iotsitewise:UpdateGatewayCapabilityConfiguration",
        "resource_mappings": {
          "GatewayId": {
            "template": "${gatewayId}"
          }
        }
      }
    ],
    "update-portal": [
      {
        "action": "iotsitewise:UpdatePortal",
        "resource_mappings": {
          "PortalId": {
            "template": "${portalId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${roleArn}"
        }
      }
    ],
    "update-project": [
      {
        "action": "iotsitewise:UpdateProject",
        "resource_mappings": {
          "ProjectId": {
            "template": "${projectId}"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "iotsitewise:DescribeAsset",
        "resource_mappings": {
          "AssetId": {
            "template": "${assetId}"
          }
        }
      }
    ]
  },
  "iotthingsgraph": {
    "associate-entity-to-thing": [
      {
        "action": "iotthingsgraph:AssociateEntityToThing",
        "resource_mappings": {}
      },
      {
        "action": "iot:DescribeThing",
        "resource_mappings": {
          "ThingName": {
            "template": "${thingName}"
          }
        }
      }
    ],
    "create-flow-template": [
      {
        "action": "iotthingsgraph:CreateFlowTemplate",
        "resource_mappings": {}
      }
    ],
    "create-system-instance": [
      {
        "action": "iotthingsgraph:CreateSystemInstance",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${metricsConfiguration.metricRuleRoleArn}%${flowActionsRoleArn}%%"
        }
      }
    ],
    "create-system-template": [
      {
        "action": "iotthingsgraph:CreateSystemTemplate",
        "resource_mappings": {}
      }
    ],
    "delete-flow-template": [
      {
        "action": "iotthingsgraph:DeleteFlowTemplate",
        "resource_mappings": {
          "NamespacePath": {
            "template": "${id}"
          }
        }
      }
    ],
    "delete-namespace": [
      {
        "action": "iotthingsgraph:DeleteNamespace",
        "resource_mappings": {}
      }
    ],
    "delete-system-instance": [
      {
        "action": "iotthingsgraph:DeleteSystemInstance",
        "resource_mappings": {
          "NamespacePath": {
            "template": "${id}"
          }
        }
      }
    ],
    "delete-system-template": [
      {
        "action": "iotthingsgraph:DeleteSystemTemplate",
        "resource_mappings": {
          "NamespacePath": {
            "template": "${id}"
          }
        }
      }
    ],
    "deploy-system-instance": [
      {
        "action": "iotthingsgraph:DeploySystemInstance",
        "resource_mappings": {
          "NamespacePath": {
            "template": "${id}"
          }
        }
      }
    ],
    "deprecate-flow-template": [
      {
        "action": "iotthingsgraph:DeprecateFlowTemplate",
        "resource_mappings": {
          "NamespacePath": {
            "template": "${id}"
          }
        }
      }
    ],
    "deprecate-system-template": [
      {
        "action": "iotthingsgraph:DeprecateSystemTemplate",
        "resource_mappings": {
          "NamespacePath": {
            "template": "${id}"
          }
        }
      }
    ],
    "describe-namespace": [
      {
        "action": "iotthingsgraph:DescribeNamespace",
        "resource_mappings": {}
      }
    ],
    "dissociate-entity-from-thing": [
      {
        "action": "iotthingsgraph:DissociateEntityFromThing",
        "resource_mappings": {}
      },
      {
        "action": "iot:DescribeThing",
        "resource_mappings": {
          "ThingName": {
            "template": "${thingName}"
          }
        }
      }
    ],
    "get-entities": [
      {
        "action": "iotthingsgraph:GetEntities",
        "resource_mappings": {}
      }
    ],
    "get-flow-template": [
      {
        "action": "iotthingsgraph:GetFlowTemplate",
        "resource_mappings": {
          "NamespacePath": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-flow-template-revisions": [
      {
        "action": "iotthingsgraph:GetFlowTemplateRevisions",
        "resource_mappings": {
          "NamespacePath": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-namespace-deletion-status": [
      {
        "action": "iotthingsgraph:GetNamespaceDeletionStatus",
        "resource_mappings": {}
      }
    ],
    "get-system-instance": [
      {
        "action": "iotthingsgraph:GetSystemInstance",
        "resource_mappings": {
          "NamespacePath": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-system-template": [
      {
        "action": "iotthingsgraph:GetSystemTemplate",
        "resource_mappings": {
          "NamespacePath": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-system-template-revisions": [
      {
        "action": "iotthingsgraph:GetSystemTemplateRevisions",
        "resource_mappings": {
          "NamespacePath": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-upload-status": [
      {
        "action": "iotthingsgraph:GetUploadStatus",
        "resource_mappings": {}
      }
    ],
    "list-flow-execution-messages": [
      {
        "action": "iotthingsgraph:ListFlowExecutionMessages",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "iotthingsgraph:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "SystemInstance": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "search-entities": [
      {
        "action": "iotthingsgraph:SearchEntities",
        "resource_mappings": {}
      }
    ],
    "search-flow-executions": [
      {
        "action": "iotthingsgraph:SearchFlowExecutions",
        "resource_mappings": {
          "NamespacePath": {
            "template": "${systemInstanceId}"
          }
        }
      }
    ],
    "search-flow-templates": [
      {
        "action": "iotthingsgraph:SearchFlowTemplates",
        "resource_mappings": {}
      }
    ],
    "search-system-instances": [
      {
        "action": "iotthingsgraph:SearchSystemInstances",
        "resource_mappings": {}
      },
      {
        "action": "iotthingsgraph:SearchSystemInstances",
        "resource_mappings": {}
      }
    ],
    "search-system-templates": [
      {
        "action": "iotthingsgraph:SearchSystemTemplates",
        "resource_mappings": {}
      }
    ],
    "search-things": [
      {
        "action": "iotthingsgraph:SearchThings",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "iotthingsgraph:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "SystemInstance": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "undeploy-system-instance": [
      {
        "action": "iotthingsgraph:UndeploySystemInstance",
        "resource_mappings": {
          "NamespacePath": {
            "template": "${id}"
          }
        }
      }
    ],
    "untag-resource": [
      {
        "action": "iotthingsgraph:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "SystemInstance": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-flow-template": [
      {
        "action": "iotthingsgraph:UpdateFlowTemplate",
        "resource_mappings": {
          "NamespacePath": {
            "template": "${id}"
          }
        }
      }
    ],
    "update-system-template": [
      {
        "action": "iotthingsgraph:UpdateSystemTemplate",
        "resource_mappings": {
          "NamespacePath": {
            "template": "${id}"
          }
        }
      }
    ],
    "upload-entity-definitions": [
      {
        "action": "iotthingsgraph:UploadEntityDefinitions",
        "resource_mappings": {}
      }
    ]
  },
  "iottwinmaker": {
    "batch-put-property-values": [
      {
        "action": "iottwinmaker:BatchPutPropertyValues",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          },
          "EntityId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iottwinmaker:GetComponentType",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          },
          "ComponentTypeId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iottwinmaker:GetEntity",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          },
          "EntityId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iottwinmaker:GetWorkspace",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "create-component-type": [
      {
        "action": "iottwinmaker:CreateComponentType",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "create-entity": [
      {
        "action": "iottwinmaker:CreateEntity",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "create-scene": [
      {
        "action": "iottwinmaker:CreateScene",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "create-sync-job": [
      {
        "action": "iottwinmaker:CreateSyncJob",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "create-workspace": [
      {
        "action": "iottwinmaker:CreateWorkspace",
        "resource_mappings": {}
      }
    ],
    "delete-component-type": [
      {
        "action": "iottwinmaker:DeleteComponentType",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          },
          "ComponentTypeId": {
            "template": "${componentTypeId}"
          }
        }
      }
    ],
    "delete-entity": [
      {
        "action": "iottwinmaker:DeleteEntity",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          },
          "EntityId": {
            "template": "${entityId}"
          }
        }
      }
    ],
    "delete-scene": [
      {
        "action": "iottwinmaker:DeleteScene",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          },
          "SceneId": {
            "template": "${sceneId}"
          }
        }
      }
    ],
    "delete-sync-job": [
      {
        "action": "iottwinmaker:DeleteSyncJob",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          },
          "SyncJobId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-workspace": [
      {
        "action": "iottwinmaker:DeleteWorkspace",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "execute-query": [
      {
        "action": "iottwinmaker:ExecuteQuery",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "get-component-type": [
      {
        "action": "iottwinmaker:GetComponentType",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          },
          "ComponentTypeId": {
            "template": "${componentTypeId}"
          }
        }
      }
    ],
    "get-entity": [
      {
        "action": "iottwinmaker:GetEntity",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          },
          "EntityId": {
            "template": "${entityId}"
          }
        }
      }
    ],
    "get-pricing-plan": [
      {
        "action": "iottwinmaker:GetPricingPlan",
        "resource_mappings": {}
      }
    ],
    "get-property-value": [
      {
        "action": "iottwinmaker:GetPropertyValue",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          },
          "ComponentTypeId": {
            "template": "${componentTypeId}"
          },
          "EntityId": {
            "template": "${entityId}"
          }
        }
      },
      {
        "action": "iottwinmaker:GetComponentType",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          },
          "ComponentTypeId": {
            "template": "${componentTypeId}"
          }
        }
      },
      {
        "action": "iottwinmaker:GetEntity",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          },
          "EntityId": {
            "template": "${entityId}"
          }
        }
      },
      {
        "action": "iottwinmaker:GetWorkspace",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "get-property-value-history": [
      {
        "action": "iottwinmaker:GetPropertyValueHistory",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          },
          "ComponentTypeId": {
            "template": "${componentTypeId}"
          },
          "EntityId": {
            "template": "${entityId}"
          }
        }
      },
      {
        "action": "iottwinmaker:GetComponentType",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          },
          "ComponentTypeId": {
            "template": "${componentTypeId}"
          }
        }
      },
      {
        "action": "iottwinmaker:GetEntity",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          },
          "EntityId": {
            "template": "${entityId}"
          }
        }
      },
      {
        "action": "iottwinmaker:GetWorkspace",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "get-scene": [
      {
        "action": "iottwinmaker:GetScene",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          },
          "SceneId": {
            "template": "${sceneId}"
          }
        }
      }
    ],
    "get-sync-job": [
      {
        "action": "iottwinmaker:GetSyncJob",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          },
          "SyncJobId": {
            "template": "*"
          }
        }
      }
    ],
    "get-workspace": [
      {
        "action": "iottwinmaker:GetWorkspace",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "list-component-types": [
      {
        "action": "iottwinmaker:ListComponentTypes",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "list-entities": [
      {
        "action": "iottwinmaker:ListEntities",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "list-scenes": [
      {
        "action": "iottwinmaker:ListScenes",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "list-sync-jobs": [
      {
        "action": "iottwinmaker:ListSyncJobs",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ],
    "list-sync-resources": [
      {
        "action": "iottwinmaker:ListSyncResources",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          },
          "SyncJobId": {
            "template": "*"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "iottwinmaker:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "componentType": "%%iftemplatematch%${resourceARN}%%",
          "entity": "%%iftemplatematch%${resourceARN}%%",
          "scene": "%%iftemplatematch%${resourceARN}%%",
          "workspace": "%%iftemplatematch%${resourceARN}%%"
        }
      }
    ],
    "list-workspaces": [
      {
        "action": "iottwinmaker:ListWorkspaces",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "iottwinmaker:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "componentType": "%%iftemplatematch%${resourceARN}%%",
          "entity": "%%iftemplatematch%${resourceARN}%%",
          "scene": "%%iftemplatematch%${resourceARN}%%",
          "workspace": "%%iftemplatematch%${resourceARN}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "iottwinmaker:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "componentType": "%%iftemplatematch%${resourceARN}%%",
          "entity": "%%iftemplatematch%${resourceARN}%%",
          "scene": "%%iftemplatematch%${resourceARN}%%",
          "workspace": "%%iftemplatematch%${resourceARN}%%"
        }
      }
    ],
    "update-component-type": [
      {
        "action": "iottwinmaker:UpdateComponentType",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          },
          "ComponentTypeId": {
            "template": "${componentTypeId}"
          }
        }
      }
    ],
    "update-entity": [
      {
        "action": "iottwinmaker:UpdateEntity",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          },
          "EntityId": {
            "template": "${entityId}"
          }
        }
      }
    ],
    "update-pricing-plan": [
      {
        "action": "iottwinmaker:UpdatePricingPlan",
        "resource_mappings": {}
      }
    ],
    "update-scene": [
      {
        "action": "iottwinmaker:UpdateScene",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          },
          "SceneId": {
            "template": "${sceneId}"
          }
        }
      }
    ],
    "update-workspace": [
      {
        "action": "iottwinmaker:UpdateWorkspace",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${workspaceId}"
          }
        }
      }
    ]
  },
  "iotwireless": {
    "associate-aws-account-with-partner-account": [
      {
        "action": "iotwireless:AssociateAwsAccountWithPartnerAccount",
        "resource_mappings": {
          "SidewalkId": {
            "template": "${Sidewalk.AmazonId}"
          }
        }
      }
    ],
    "associate-multicast-group-with-fuota-task": [
      {
        "action": "iotwireless:AssociateMulticastGroupWithFuotaTask",
        "resource_mappings": {
          "FuotaTaskId": {
            "template": "${Id}"
          },
          "MulticastGroupId": {
            "template": "${MulticastGroupId}"
          }
        }
      }
    ],
    "associate-wireless-device-with-fuota-task": [
      {
        "action": "iotwireless:AssociateWirelessDeviceWithFuotaTask",
        "resource_mappings": {
          "FuotaTaskId": {
            "template": "${Id}"
          },
          "WirelessDeviceId": {
            "template": "${WirelessDeviceId}"
          }
        }
      }
    ],
    "associate-wireless-device-with-multicast-group": [
      {
        "action": "iotwireless:AssociateWirelessDeviceWithMulticastGroup",
        "resource_mappings": {
          "MulticastGroupId": {
            "template": "${Id}"
          },
          "WirelessDeviceId": {
            "template": "${WirelessDeviceId}"
          }
        }
      }
    ],
    "associate-wireless-device-with-thing": [
      {
        "action": "iotwireless:AssociateWirelessDeviceWithThing",
        "resource_mappings": {
          "WirelessDeviceId": {
            "template": "${Id}"
          }
        },
        "resourcearn_mappings": {
          "thing": "${ThingArn}"
        }
      },
      {
        "action": "iot:DescribeThing",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "thing": "${ThingArn}"
        }
      }
    ],
    "associate-wireless-gateway-with-certificate": [
      {
        "action": "iotwireless:AssociateWirelessGatewayWithCertificate",
        "resource_mappings": {
          "WirelessGatewayId": {
            "template": "${Id}"
          },
          "Certificate": {
            "template": "${IotCertificateId}"
          }
        }
      }
    ],
    "associate-wireless-gateway-with-thing": [
      {
        "action": "iotwireless:AssociateWirelessGatewayWithThing",
        "resource_mappings": {
          "WirelessGatewayId": {
            "template": "${Id}"
          }
        },
        "resourcearn_mappings": {
          "thing": "${ThingArn}"
        }
      },
      {
        "action": "iot:DescribeThing",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "thing": "${ThingArn}"
        }
      }
    ],
    "cancel-multicast-group-session": [
      {
        "action": "iotwireless:CancelMulticastGroupSession",
        "resource_mappings": {
          "MulticastGroupId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "create-destination": [
      {
        "action": "iotwireless:CreateDestination",
        "resource_mappings": {
          "DestinationName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "create-device-profile": [
      {
        "action": "iotwireless:CreateDeviceProfile",
        "resource_mappings": {
          "DeviceProfileId": {
            "template": "*"
          }
        }
      }
    ],
    "create-fuota-task": [
      {
        "action": "iotwireless:CreateFuotaTask",
        "resource_mappings": {}
      }
    ],
    "create-multicast-group": [
      {
        "action": "iotwireless:CreateMulticastGroup",
        "resource_mappings": {}
      }
    ],
    "create-network-analyzer-configuration": [
      {
        "action": "iotwireless:CreateNetworkAnalyzerConfiguration",
        "resource_mappings": {
          "WirelessDeviceId": {
            "template": "${WirelessDevices[]}"
          },
          "WirelessGatewayId": {
            "template": "${WirelessGateways[]}"
          }
        }
      }
    ],
    "create-service-profile": [
      {
        "action": "iotwireless:CreateServiceProfile",
        "resource_mappings": {
          "ServiceProfileId": {
            "template": "*"
          }
        }
      }
    ],
    "create-wireless-device": [
      {
        "action": "iotwireless:CreateWirelessDevice",
        "resource_mappings": {
          "DestinationName": {
            "template": "${DestinationName}"
          },
          "WirelessDeviceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-wireless-gateway": [
      {
        "action": "iotwireless:CreateWirelessGateway",
        "resource_mappings": {
          "WirelessGatewayId": {
            "template": "*"
          }
        }
      }
    ],
    "create-wireless-gateway-task": [
      {
        "action": "iotwireless:CreateWirelessGatewayTask",
        "resource_mappings": {
          "WirelessGatewayId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "create-wireless-gateway-task-definition": [
      {
        "action": "iotwireless:CreateWirelessGatewayTaskDefinition",
        "resource_mappings": {
          "WirelessGatewayTaskDefinitionId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-destination": [
      {
        "action": "iotwireless:DeleteDestination",
        "resource_mappings": {
          "DestinationName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-device-profile": [
      {
        "action": "iotwireless:DeleteDeviceProfile",
        "resource_mappings": {
          "DeviceProfileId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-fuota-task": [
      {
        "action": "iotwireless:DeleteFuotaTask",
        "resource_mappings": {
          "FuotaTaskId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-multicast-group": [
      {
        "action": "iotwireless:DeleteMulticastGroup",
        "resource_mappings": {
          "MulticastGroupId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-network-analyzer-configuration": [
      {
        "action": "iotwireless:DeleteNetworkAnalyzerConfiguration",
        "resource_mappings": {
          "NetworkAnalyzerConfigurationName": {
            "template": "${ConfigurationName}"
          }
        }
      }
    ],
    "delete-queued-messages": [
      {
        "action": "iotwireless:DeleteQueuedMessages",
        "resource_mappings": {}
      }
    ],
    "delete-service-profile": [
      {
        "action": "iotwireless:DeleteServiceProfile",
        "resource_mappings": {
          "ServiceProfileId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-wireless-device": [
      {
        "action": "iotwireless:DeleteWirelessDevice",
        "resource_mappings": {
          "WirelessDeviceId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-wireless-device-import-task": [
      {
        "action": "iotwireless:DeleteWirelessDeviceImportTask",
        "resource_mappings": {
          "WirelessDeviceImportTaskId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-wireless-gateway": [
      {
        "action": "iotwireless:DeleteWirelessGateway",
        "resource_mappings": {
          "WirelessGatewayId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-wireless-gateway-task": [
      {
        "action": "iotwireless:DeleteWirelessGatewayTask",
        "resource_mappings": {
          "WirelessGatewayId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-wireless-gateway-task-definition": [
      {
        "action": "iotwireless:DeleteWirelessGatewayTaskDefinition",
        "resource_mappings": {
          "WirelessGatewayTaskDefinitionId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "deregister-wireless-device": [
      {
        "action": "iotwireless:DeregisterWirelessDevice",
        "resource_mappings": {
          "WirelessDeviceId": {
            "template": "${Identifier}"
          }
        }
      }
    ],
    "disassociate-aws-account-from-partner-account": [
      {
        "action": "iotwireless:DisassociateAwsAccountFromPartnerAccount",
        "resource_mappings": {
          "SidewalkId": {
            "template": "${PartnerAccountId}"
          }
        }
      }
    ],
    "disassociate-multicast-group-from-fuota-task": [
      {
        "action": "iotwireless:DisassociateMulticastGroupFromFuotaTask",
        "resource_mappings": {
          "FuotaTaskId": {
            "template": "${Id}"
          },
          "MulticastGroupId": {
            "template": "${MulticastGroupId}"
          }
        }
      }
    ],
    "disassociate-wireless-device-from-fuota-task": [
      {
        "action": "iotwireless:DisassociateWirelessDeviceFromFuotaTask",
        "resource_mappings": {
          "FuotaTaskId": {
            "template": "${Id}"
          },
          "WirelessDeviceId": {
            "template": "${WirelessDeviceId}"
          }
        }
      }
    ],
    "disassociate-wireless-device-from-multicast-group": [
      {
        "action": "iotwireless:DisassociateWirelessDeviceFromMulticastGroup",
        "resource_mappings": {
          "MulticastGroupId": {
            "template": "${Id}"
          },
          "WirelessDeviceId": {
            "template": "${WirelessDeviceId}"
          }
        }
      }
    ],
    "disassociate-wireless-device-from-thing": [
      {
        "action": "iotwireless:DisassociateWirelessDeviceFromThing",
        "resource_mappings": {
          "WirelessDeviceId": {
            "template": "${Id}"
          },
          "ThingName": {
            "template": "*"
          }
        }
      },
      {
        "action": "iot:DescribeThing",
        "resource_mappings": {
          "ThingName": {
            "template": "*"
          }
        }
      }
    ],
    "disassociate-wireless-gateway-from-certificate": [
      {
        "action": "iotwireless:DisassociateWirelessGatewayFromCertificate",
        "resource_mappings": {
          "WirelessGatewayId": {
            "template": "${Id}"
          },
          "Certificate": {
            "template": "*"
          }
        }
      }
    ],
    "disassociate-wireless-gateway-from-thing": [
      {
        "action": "iotwireless:DisassociateWirelessGatewayFromThing",
        "resource_mappings": {
          "WirelessGatewayId": {
            "template": "${Id}"
          },
          "ThingName": {
            "template": "*"
          }
        }
      },
      {
        "action": "iot:DescribeThing",
        "resource_mappings": {
          "ThingName": {
            "template": "*"
          }
        }
      }
    ],
    "get-destination": [
      {
        "action": "iotwireless:GetDestination",
        "resource_mappings": {
          "DestinationName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-device-profile": [
      {
        "action": "iotwireless:GetDeviceProfile",
        "resource_mappings": {
          "DeviceProfileId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-event-configuration-by-resource-types": [
      {
        "action": "iotwireless:GetEventConfigurationByResourceTypes",
        "resource_mappings": {}
      }
    ],
    "get-fuota-task": [
      {
        "action": "iotwireless:GetFuotaTask",
        "resource_mappings": {
          "FuotaTaskId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-log-levels-by-resource-types": [
      {
        "action": "iotwireless:GetLogLevelsByResourceTypes",
        "resource_mappings": {}
      }
    ],
    "get-multicast-group": [
      {
        "action": "iotwireless:GetMulticastGroup",
        "resource_mappings": {
          "MulticastGroupId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-multicast-group-session": [
      {
        "action": "iotwireless:GetMulticastGroupSession",
        "resource_mappings": {
          "MulticastGroupId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-network-analyzer-configuration": [
      {
        "action": "iotwireless:GetNetworkAnalyzerConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-partner-account": [
      {
        "action": "iotwireless:GetPartnerAccount",
        "resource_mappings": {
          "SidewalkId": {
            "template": "${PartnerAccountId}"
          }
        }
      }
    ],
    "get-position": [
      {
        "action": "iotwireless:GetPosition",
        "resource_mappings": {
          "WirelessDeviceId": {
            "template": "${ResourceIdentifier}"
          },
          "WirelessGatewayId": {
            "template": "${ResourceIdentifier}"
          }
        }
      }
    ],
    "get-position-configuration": [
      {
        "action": "iotwireless:GetPositionConfiguration",
        "resource_mappings": {
          "WirelessDeviceId": {
            "template": "${ResourceIdentifier}"
          },
          "WirelessGatewayId": {
            "template": "${ResourceIdentifier}"
          }
        }
      }
    ],
    "get-position-estimate": [
      {
        "action": "iotwireless:GetPositionEstimate",
        "resource_mappings": {}
      }
    ],
    "get-resource-event-configuration": [
      {
        "action": "iotwireless:GetResourceEventConfiguration",
        "resource_mappings": {
          "SidewalkAccountId": {
            "template": "${Identifier}"
          }
        }
      }
    ],
    "get-resource-log-level": [
      {
        "action": "iotwireless:GetResourceLogLevel",
        "resource_mappings": {
          "WirelessDeviceId": {
            "template": "*"
          },
          "WirelessGatewayId": {
            "template": "*"
          }
        }
      }
    ],
    "get-resource-position": [
      {
        "action": "iotwireless:GetResourcePosition",
        "resource_mappings": {
          "WirelessDeviceId": {
            "template": "${ResourceIdentifier}"
          },
          "WirelessGatewayId": {
            "template": "${ResourceIdentifier}"
          }
        }
      }
    ],
    "get-service-endpoint": [
      {
        "action": "iotwireless:GetServiceEndpoint",
        "resource_mappings": {}
      }
    ],
    "get-service-profile": [
      {
        "action": "iotwireless:GetServiceProfile",
        "resource_mappings": {
          "ServiceProfileId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-wireless-device": [
      {
        "action": "iotwireless:GetWirelessDevice",
        "resource_mappings": {
          "WirelessDeviceId": {
            "template": "*"
          }
        }
      }
    ],
    "get-wireless-device-import-task": [
      {
        "action": "iotwireless:GetWirelessDeviceImportTask",
        "resource_mappings": {
          "WirelessDeviceImportTaskId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-wireless-device-statistics": [
      {
        "action": "iotwireless:GetWirelessDeviceStatistics",
        "resource_mappings": {
          "WirelessDeviceId": {
            "template": "${WirelessDeviceId}"
          }
        }
      }
    ],
    "get-wireless-gateway": [
      {
        "action": "iotwireless:GetWirelessGateway",
        "resource_mappings": {
          "WirelessGatewayId": {
            "template": "*"
          }
        }
      }
    ],
    "get-wireless-gateway-certificate": [
      {
        "action": "iotwireless:GetWirelessGatewayCertificate",
        "resource_mappings": {
          "WirelessGatewayId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-wireless-gateway-firmware-information": [
      {
        "action": "iotwireless:GetWirelessGatewayFirmwareInformation",
        "resource_mappings": {
          "WirelessGatewayId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-wireless-gateway-statistics": [
      {
        "action": "iotwireless:GetWirelessGatewayStatistics",
        "resource_mappings": {
          "WirelessGatewayId": {
            "template": "${WirelessGatewayId}"
          }
        }
      }
    ],
    "get-wireless-gateway-task": [
      {
        "action": "iotwireless:GetWirelessGatewayTask",
        "resource_mappings": {
          "WirelessGatewayId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-wireless-gateway-task-definition": [
      {
        "action": "iotwireless:GetWirelessGatewayTaskDefinition",
        "resource_mappings": {
          "WirelessGatewayTaskDefinitionId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "list-destinations": [
      {
        "action": "iotwireless:ListDestinations",
        "resource_mappings": {}
      }
    ],
    "list-device-profiles": [
      {
        "action": "iotwireless:ListDeviceProfiles",
        "resource_mappings": {}
      }
    ],
    "list-devices-for-wireless-device-import-task": [
      {
        "action": "iotwireless:ListDevicesForWirelessDeviceImportTask",
        "resource_mappings": {
          "WirelessDeviceImportTaskId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "list-event-configurations": [
      {
        "action": "iotwireless:ListEventConfigurations",
        "resource_mappings": {}
      }
    ],
    "list-fuota-tasks": [
      {
        "action": "iotwireless:ListFuotaTasks",
        "resource_mappings": {}
      }
    ],
    "list-multicast-groups": [
      {
        "action": "iotwireless:ListMulticastGroups",
        "resource_mappings": {}
      }
    ],
    "list-multicast-groups-by-fuota-task": [
      {
        "action": "iotwireless:ListMulticastGroupsByFuotaTask",
        "resource_mappings": {
          "FuotaTaskId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "list-network-analyzer-configurations": [
      {
        "action": "iotwireless:ListNetworkAnalyzerConfigurations",
        "resource_mappings": {}
      }
    ],
    "list-partner-accounts": [
      {
        "action": "iotwireless:ListPartnerAccounts",
        "resource_mappings": {}
      }
    ],
    "list-position-configurations": [
      {
        "action": "iotwireless:ListPositionConfigurations",
        "resource_mappings": {}
      }
    ],
    "list-queued-messages": [
      {
        "action": "iotwireless:ListQueuedMessages",
        "resource_mappings": {}
      }
    ],
    "list-service-profiles": [
      {
        "action": "iotwireless:ListServiceProfiles",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "iotwireless:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Destination": "%%iftemplatematch%${ResourceArn}%%",
          "DeviceProfile": "%%iftemplatematch%${ResourceArn}%%",
          "ServiceProfile": "%%iftemplatematch%${ResourceArn}%%",
          "WirelessGateway": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "list-wireless-device-import-tasks": [
      {
        "action": "iotwireless:ListWirelessDeviceImportTasks",
        "resource_mappings": {}
      }
    ],
    "list-wireless-devices": [
      {
        "action": "iotwireless:ListWirelessDevices",
        "resource_mappings": {}
      }
    ],
    "list-wireless-gateway-task-definitions": [
      {
        "action": "iotwireless:ListWirelessGatewayTaskDefinitions",
        "resource_mappings": {}
      }
    ],
    "list-wireless-gateways": [
      {
        "action": "iotwireless:ListWirelessGateways",
        "resource_mappings": {}
      }
    ],
    "put-position-configuration": [
      {
        "action": "iotwireless:PutPositionConfiguration",
        "resource_mappings": {
          "WirelessDeviceId": {
            "template": "${ResourceIdentifier}"
          },
          "WirelessGatewayId": {
            "template": "${ResourceIdentifier}"
          }
        }
      }
    ],
    "put-resource-log-level": [
      {
        "action": "iotwireless:PutResourceLogLevel",
        "resource_mappings": {
          "WirelessDeviceId": {
            "template": "*"
          },
          "WirelessGatewayId": {
            "template": "*"
          }
        }
      }
    ],
    "reset-all-resource-log-levels": [
      {
        "action": "iotwireless:ResetAllResourceLogLevels",
        "resource_mappings": {}
      }
    ],
    "reset-resource-log-level": [
      {
        "action": "iotwireless:ResetResourceLogLevel",
        "resource_mappings": {
          "WirelessDeviceId": {
            "template": "*"
          },
          "WirelessGatewayId": {
            "template": "*"
          }
        }
      }
    ],
    "send-data-to-multicast-group": [
      {
        "action": "iotwireless:SendDataToMulticastGroup",
        "resource_mappings": {
          "MulticastGroupId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "send-data-to-wireless-device": [
      {
        "action": "iotwireless:SendDataToWirelessDevice",
        "resource_mappings": {
          "WirelessDeviceId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "start-bulk-associate-wireless-device-with-multicast-group": [
      {
        "action": "iotwireless:StartBulkAssociateWirelessDeviceWithMulticastGroup",
        "resource_mappings": {
          "MulticastGroupId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "start-bulk-disassociate-wireless-device-from-multicast-group": [
      {
        "action": "iotwireless:StartBulkDisassociateWirelessDeviceFromMulticastGroup",
        "resource_mappings": {
          "MulticastGroupId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "start-fuota-task": [
      {
        "action": "iotwireless:StartFuotaTask",
        "resource_mappings": {
          "FuotaTaskId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "start-multicast-group-session": [
      {
        "action": "iotwireless:StartMulticastGroupSession",
        "resource_mappings": {
          "MulticastGroupId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "start-single-wireless-device-import-task": [
      {
        "action": "iotwireless:StartSingleWirelessDeviceImportTask",
        "resource_mappings": {
          "WirelessDeviceImportTaskId": {
            "template": "*"
          }
        }
      }
    ],
    "start-wireless-device-import-task": [
      {
        "action": "iotwireless:StartWirelessDeviceImportTask",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "iotwireless:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Destination": "%%iftemplatematch%${ResourceArn}%%",
          "DeviceProfile": "%%iftemplatematch%${ResourceArn}%%",
          "ServiceProfile": "%%iftemplatematch%${ResourceArn}%%",
          "WirelessGateway": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "test-wireless-device": [
      {
        "action": "iotwireless:TestWirelessDevice",
        "resource_mappings": {
          "WirelessDeviceId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "untag-resource": [
      {
        "action": "iotwireless:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Destination": "%%iftemplatematch%${ResourceArn}%%",
          "DeviceProfile": "%%iftemplatematch%${ResourceArn}%%",
          "ServiceProfile": "%%iftemplatematch%${ResourceArn}%%",
          "WirelessGateway": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-destination": [
      {
        "action": "iotwireless:UpdateDestination",
        "resource_mappings": {
          "DestinationName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "update-event-configuration-by-resource-types": [
      {
        "action": "iotwireless:UpdateEventConfigurationByResourceTypes",
        "resource_mappings": {}
      }
    ],
    "update-fuota-task": [
      {
        "action": "iotwireless:UpdateFuotaTask",
        "resource_mappings": {
          "FuotaTaskId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "update-log-levels-by-resource-types": [
      {
        "action": "iotwireless:UpdateLogLevelsByResourceTypes",
        "resource_mappings": {}
      }
    ],
    "update-multicast-group": [
      {
        "action": "iotwireless:UpdateMulticastGroup",
        "resource_mappings": {
          "MulticastGroupId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "update-network-analyzer-configuration": [
      {
        "action": "iotwireless:UpdateNetworkAnalyzerConfiguration",
        "resource_mappings": {}
      }
    ],
    "update-partner-account": [
      {
        "action": "iotwireless:UpdatePartnerAccount",
        "resource_mappings": {
          "SidewalkId": {
            "template": "${PartnerAccountId}"
          }
        }
      }
    ],
    "update-position": [
      {
        "action": "iotwireless:UpdatePosition",
        "resource_mappings": {
          "WirelessDeviceId": {
            "template": "${ResourceIdentifier}"
          },
          "WirelessGatewayId": {
            "template": "${ResourceIdentifier}"
          }
        }
      }
    ],
    "update-resource-event-configuration": [
      {
        "action": "iotwireless:UpdateResourceEventConfiguration",
        "resource_mappings": {
          "SidewalkAccountId": {
            "template": "${Identifier}"
          }
        }
      }
    ],
    "update-resource-position": [
      {
        "action": "iotwireless:UpdateResourcePosition",
        "resource_mappings": {
          "WirelessDeviceId": {
            "template": "${ResourceIdentifier}"
          },
          "WirelessGatewayId": {
            "template": "${ResourceIdentifier}"
          }
        }
      }
    ],
    "update-wireless-device": [
      {
        "action": "iotwireless:UpdateWirelessDevice",
        "resource_mappings": {
          "WirelessDeviceId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "update-wireless-device-import-task": [
      {
        "action": "iotwireless:UpdateWirelessDeviceImportTask",
        "resource_mappings": {
          "WirelessDeviceImportTaskId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "update-wireless-gateway": [
      {
        "action": "iotwireless:UpdateWirelessGateway",
        "resource_mappings": {
          "WirelessGatewayId": {
            "template": "${Id}"
          }
        }
      }
    ]
  },
  "ivs": {
    "batch-get-channel": [
      {
        "action": "ivs:BatchGetChannel",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Channel": "${arns[]}"
        }
      }
    ],
    "batch-get-stream-key": [
      {
        "action": "ivs:BatchGetStreamKey",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Stream-Key": "${arns[]}"
        }
      }
    ],
    "batch-start-viewer-session-revocation": [
      {
        "action": "ivs:BatchStartViewerSessionRevocation",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Channel": "${viewerSessions[].channelArn}"
        }
      }
    ],
    "create-channel": [
      {
        "action": "ivs:CreateChannel",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-recording-configuration": [
      {
        "action": "ivs:CreateRecordingConfiguration",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-stream-key": [
      {
        "action": "ivs:CreateStreamKey",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-channel": [
      {
        "action": "ivs:DeleteChannel",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "Channel": "${arn}"
        }
      }
    ],
    "delete-playback-key-pair": [
      {
        "action": "ivs:DeletePlaybackKeyPair",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Playback-Key-Pair": "${arn}"
        }
      }
    ],
    "delete-recording-configuration": [
      {
        "action": "ivs:DeleteRecordingConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Recording-Configuration": "${arn}"
        }
      }
    ],
    "delete-stream-key": [
      {
        "action": "ivs:DeleteStreamKey",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Stream-Key": "${arn}"
        }
      }
    ],
    "get-channel": [
      {
        "action": "ivs:GetChannel",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Channel": "${arn}"
        }
      }
    ],
    "get-playback-key-pair": [
      {
        "action": "ivs:GetPlaybackKeyPair",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Playback-Key-Pair": "${arn}"
        }
      }
    ],
    "get-recording-configuration": [
      {
        "action": "ivs:GetRecordingConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Recording-Configuration": "${arn}"
        }
      }
    ],
    "get-stream": [
      {
        "action": "ivs:GetStream",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Channel": "${channelArn}"
        }
      }
    ],
    "get-stream-key": [
      {
        "action": "ivs:GetStreamKey",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Stream-Key": "${arn}"
        }
      }
    ],
    "get-stream-session": [
      {
        "action": "ivs:GetStreamSession",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Channel": "${channelArn}"
        }
      }
    ],
    "import-playback-key-pair": [
      {
        "action": "ivs:ImportPlaybackKeyPair",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-channels": [
      {
        "action": "ivs:ListChannels",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-playback-key-pairs": [
      {
        "action": "ivs:ListPlaybackKeyPairs",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-recording-configurations": [
      {
        "action": "ivs:ListRecordingConfigurations",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-stream-keys": [
      {
        "action": "ivs:ListStreamKeys",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "Channel": "${channelArn}"
        }
      }
    ],
    "list-stream-sessions": [
      {
        "action": "ivs:ListStreamSessions",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Channel": "${channelArn}"
        }
      }
    ],
    "list-streams": [
      {
        "action": "ivs:ListStreams",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "ivs:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Channel": "%%iftemplatematch%${resourceArn}%%",
          "Playback-Key-Pair": "%%iftemplatematch%${resourceArn}%%",
          "Stream-Key": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "put-metadata": [
      {
        "action": "ivs:PutMetadata",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Channel": "${channelArn}"
        }
      }
    ],
    "start-viewer-session-revocation": [
      {
        "action": "ivs:StartViewerSessionRevocation",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Channel": "${channelArn}"
        }
      }
    ],
    "stop-stream": [
      {
        "action": "ivs:StopStream",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Channel": "${channelArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "ivs:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Channel": "%%iftemplatematch%${resourceArn}%%",
          "Playback-Key-Pair": "%%iftemplatematch%${resourceArn}%%",
          "Stream-Key": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "ivs:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Channel": "%%iftemplatematch%${resourceArn}%%",
          "Playback-Key-Pair": "%%iftemplatematch%${resourceArn}%%",
          "Stream-Key": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-channel": [
      {
        "action": "ivs:UpdateChannel",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Channel": "${arn}"
        }
      }
    ]
  },
  "ivs-realtime": {
    "create-participant-token": [
      {
        "note": "NotFound",
        "action": "IVS RealTime:CreateParticipantToken",
        "resource_mappings": {}
      }
    ],
    "create-stage": [
      {
        "note": "NotFound",
        "action": "IVS RealTime:CreateStage",
        "resource_mappings": {}
      }
    ],
    "delete-stage": [
      {
        "note": "NotFound",
        "action": "IVS RealTime:DeleteStage",
        "resource_mappings": {}
      }
    ],
    "disconnect-participant": [
      {
        "note": "NotFound",
        "action": "IVS RealTime:DisconnectParticipant",
        "resource_mappings": {}
      }
    ],
    "get-participant": [
      {
        "note": "NotFound",
        "action": "IVS RealTime:GetParticipant",
        "resource_mappings": {}
      }
    ],
    "get-stage": [
      {
        "note": "NotFound",
        "action": "IVS RealTime:GetStage",
        "resource_mappings": {}
      }
    ],
    "get-stage-session": [
      {
        "note": "NotFound",
        "action": "IVS RealTime:GetStageSession",
        "resource_mappings": {}
      }
    ],
    "list-participant-events": [
      {
        "note": "NotFound",
        "action": "IVS RealTime:ListParticipantEvents",
        "resource_mappings": {}
      }
    ],
    "list-participants": [
      {
        "note": "NotFound",
        "action": "IVS RealTime:ListParticipants",
        "resource_mappings": {}
      }
    ],
    "list-stage-sessions": [
      {
        "note": "NotFound",
        "action": "IVS RealTime:ListStageSessions",
        "resource_mappings": {}
      }
    ],
    "list-stages": [
      {
        "note": "NotFound",
        "action": "IVS RealTime:ListStages",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "note": "NotFound",
        "action": "IVS RealTime:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "note": "NotFound",
        "action": "IVS RealTime:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "note": "NotFound",
        "action": "IVS RealTime:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-stage": [
      {
        "note": "NotFound",
        "action": "IVS RealTime:UpdateStage",
        "resource_mappings": {}
      }
    ]
  },
  "ivschat": {
    "create-chat-token": [
      {
        "action": "ivschat:CreateChatToken",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-logging-configuration": [
      {
        "action": "ivschat:CreateLoggingConfiguration",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-room": [
      {
        "action": "ivschat:CreateRoom",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-logging-configuration": [
      {
        "action": "ivschat:DeleteLoggingConfiguration",
        "resource_mappings": {
          "ResourceId": {
            "template": "${identifier}"
          }
        }
      }
    ],
    "delete-message": [
      {
        "action": "ivschat:DeleteMessage",
        "resource_mappings": {
          "ResourceId": {
            "template": "${roomIdentifier}"
          }
        }
      }
    ],
    "delete-room": [
      {
        "action": "ivschat:DeleteRoom",
        "resource_mappings": {
          "ResourceId": {
            "template": "${identifier}"
          }
        }
      }
    ],
    "disconnect-user": [
      {
        "action": "ivschat:DisconnectUser",
        "resource_mappings": {
          "ResourceId": {
            "template": "${roomIdentifier}"
          }
        }
      }
    ],
    "get-logging-configuration": [
      {
        "action": "ivschat:GetLoggingConfiguration",
        "resource_mappings": {
          "ResourceId": {
            "template": "${identifier}"
          }
        }
      }
    ],
    "get-room": [
      {
        "action": "ivschat:GetRoom",
        "resource_mappings": {
          "ResourceId": {
            "template": "${identifier}"
          }
        }
      }
    ],
    "list-logging-configurations": [
      {
        "action": "ivschat:ListLoggingConfigurations",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-rooms": [
      {
        "action": "ivschat:ListRooms",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "ivschat:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Room": "%%iftruthy%${resourceArn}%%"
        }
      }
    ],
    "send-event": [
      {
        "action": "ivschat:SendEvent",
        "resource_mappings": {
          "ResourceId": {
            "template": "${roomIdentifier}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "ivschat:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Room": "%%iftruthy%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "ivschat:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Room": "%%iftruthy%${resourceArn}%%"
        }
      }
    ],
    "update-logging-configuration": [
      {
        "action": "ivschat:UpdateLoggingConfiguration",
        "resource_mappings": {
          "ResourceId": {
            "template": "${identifier}"
          }
        }
      }
    ],
    "update-room": [
      {
        "action": "ivschat:UpdateRoom",
        "resource_mappings": {
          "ResourceId": {
            "template": "${identifier}"
          }
        }
      }
    ]
  },
  "kafka": {
    "batch-associate-scram-secret": [
      {
        "action": "kafka:BatchAssociateScramSecret",
        "resource_mappings": {}
      }
    ],
    "create-cluster": [
      {
        "action": "kafka:CreateCluster",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSecurityGroups",
        "resource_mappings": {}
      }
    ],
    "create-cluster-v2": [
      {
        "action": "kafka:CreateClusterV2",
        "resource_mappings": {}
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "*"
          },
          "CapacityReservationFleetId": {
            "template": "*"
          },
          "ClientVpnEndpointId": {
            "template": "*"
          },
          "CustomerGatewayId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "DhcpOptionsId": {
            "template": "*"
          },
          "EgressOnlyInternetGatewayId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "AllocationId": {
            "template": "*"
          },
          "ExportImageTaskId": {
            "template": "*"
          },
          "ExportTaskId": {
            "template": "*"
          },
          "FleetId": {
            "template": "*"
          },
          "FpgaImageId": {
            "template": "*"
          },
          "HostReservationId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "ImportImageTaskId": {
            "template": "*"
          },
          "ImportSnapshotTaskId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "InstanceEventWindowId": {
            "template": "*"
          },
          "InternetGatewayId": {
            "template": "*"
          },
          "IpamId": {
            "template": "*"
          },
          "IpamPoolId": {
            "template": "*"
          },
          "IpamScopeId": {
            "template": "*"
          },
          "Ipv4PoolEc2Id": {
            "template": "*"
          },
          "Ipv6PoolEc2Id": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "LocalGatewayId": {
            "template": "*"
          },
          "LocalGatewayRoutetableId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVpcAssociationId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "template": "*"
          },
          "NatGatewayId": {
            "template": "*"
          },
          "NaclId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeId": {
            "template": "*"
          },
          "NetworkInsightsAccessScopeAnalysisId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "PrefixListId": {
            "template": "*"
          },
          "ReplaceRootVolumeTaskId": {
            "template": "*"
          },
          "ReservationId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SecurityGroupRuleId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SpotFleetRequestId": {
            "template": "*"
          },
          "SpotInstanceRequestId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "TrafficMirrorFilterId": {
            "template": "*"
          },
          "TrafficMirrorSessionId": {
            "template": "*"
          },
          "TrafficMirrorTargetId": {
            "template": "*"
          },
          "TransitGatewayId": {
            "template": "*"
          },
          "TransitGatewayAttachmentId": {
            "template": "*"
          },
          "TransitGatewayConnectPeerId": {
            "template": "*"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "*"
          },
          "TransitGatewayRouteTableId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "VpcId": {
            "template": "*"
          },
          "VpcEndpointId": {
            "template": "*"
          },
          "VpcEndpointServiceId": {
            "template": "*"
          },
          "VpcFlowLogId": {
            "template": "*"
          },
          "VpcPeeringConnectionId": {
            "template": "*"
          },
          "VpnConnectionId": {
            "template": "*"
          },
          "VpnGatewayId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateVpcEndpoint",
        "resource_mappings": {
          "VpcId": {
            "template": "*"
          },
          "VpcEndpointId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DeleteVpcEndpoints",
        "resource_mappings": {
          "VpcEndpointId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeSecurityGroups",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSubnets",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeVpcAttribute",
        "resource_mappings": {
          "VpcId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeVpcEndpoints",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      },
      {
        "action": "iam:AttachRolePolicy",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PutRolePolicy",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "kms:CreateGrant",
        "resource_mappings": {
          "KeyId": {
            "template": "${Provisioned.EncryptionInfo.EncryptionAtRest.DataVolumeKMSKeyId}"
          }
        }
      },
      {
        "action": "kms:DescribeKey",
        "resource_mappings": {
          "KeyId": {
            "template": "${Provisioned.EncryptionInfo.EncryptionAtRest.DataVolumeKMSKeyId}"
          }
        }
      }
    ],
    "create-configuration": [
      {
        "action": "kafka:CreateConfiguration",
        "resource_mappings": {}
      }
    ],
    "create-replicator": [
      {
        "note": "NotFound",
        "action": "Kafka:CreateReplicator",
        "resource_mappings": {}
      }
    ],
    "create-vpc-connection": [
      {
        "note": "NotFound",
        "action": "Kafka:CreateVpcConnection",
        "resource_mappings": {}
      }
    ],
    "delete-cluster": [
      {
        "action": "kafka:DeleteCluster",
        "resource_mappings": {}
      }
    ],
    "delete-cluster-policy": [
      {
        "action": "kafka:DeleteClusterPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "${ClusterArn}"
        }
      }
    ],
    "delete-configuration": [
      {
        "action": "kafka:DeleteConfiguration",
        "resource_mappings": {}
      }
    ],
    "delete-replicator": [
      {
        "note": "NotFound",
        "action": "Kafka:DeleteReplicator",
        "resource_mappings": {}
      }
    ],
    "delete-vpc-connection": [
      {
        "action": "kafka:DeleteVpcConnection",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "vpc-connection": "${Arn}"
        }
      },
      {
        "action": "ec2:DeleteVpcEndpoints",
        "resource_mappings": {
          "VpcEndpointId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeVpcEndpoints",
        "resource_mappings": {}
      }
    ],
    "describe-cluster": [
      {
        "action": "kafka:DescribeCluster",
        "resource_mappings": {}
      }
    ],
    "describe-cluster-v2": [
      {
        "action": "kafka:DescribeClusterV2",
        "resource_mappings": {}
      }
    ],
    "describe-cluster-operation": [
      {
        "action": "kafka:DescribeClusterOperation",
        "resource_mappings": {}
      }
    ],
    "describe-cluster-operation-v2": [
      {
        "action": "kafka:DescribeClusterOperationV2",
        "resource_mappings": {}
      }
    ],
    "describe-configuration": [
      {
        "action": "kafka:DescribeConfiguration",
        "resource_mappings": {}
      }
    ],
    "describe-configuration-revision": [
      {
        "action": "kafka:DescribeConfigurationRevision",
        "resource_mappings": {}
      }
    ],
    "describe-replicator": [
      {
        "note": "NotFound",
        "action": "Kafka:DescribeReplicator",
        "resource_mappings": {}
      }
    ],
    "describe-vpc-connection": [
      {
        "action": "kafka:DescribeVpcConnection",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "vpc-connection": "${Arn}"
        }
      }
    ],
    "batch-disassociate-scram-secret": [
      {
        "action": "kafka:BatchDisassociateScramSecret",
        "resource_mappings": {}
      },
      {
        "action": "kms:RetireGrant",
        "resource_mappings": {
          "KeyId": {
            "template": "*"
          }
        }
      }
    ],
    "get-bootstrap-brokers": [
      {
        "action": "kafka:GetBootstrapBrokers",
        "resource_mappings": {}
      }
    ],
    "get-compatible-kafka-versions": [
      {
        "action": "kafka:GetCompatibleKafkaVersions",
        "resource_mappings": {}
      }
    ],
    "get-cluster-policy": [
      {
        "action": "kafka:GetClusterPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "${ClusterArn}"
        }
      }
    ],
    "list-cluster-operations": [
      {
        "action": "kafka:ListClusterOperations",
        "resource_mappings": {}
      }
    ],
    "list-cluster-operations-v2": [
      {
        "action": "kafka:ListClusterOperationsV2",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "${ClusterArn}"
        }
      }
    ],
    "list-clusters": [
      {
        "action": "kafka:ListClusters",
        "resource_mappings": {}
      }
    ],
    "list-clusters-v2": [
      {
        "action": "kafka:ListClustersV2",
        "resource_mappings": {}
      }
    ],
    "list-configuration-revisions": [
      {
        "action": "kafka:ListConfigurationRevisions",
        "resource_mappings": {}
      }
    ],
    "list-configurations": [
      {
        "action": "kafka:ListConfigurations",
        "resource_mappings": {}
      }
    ],
    "list-kafka-versions": [
      {
        "action": "kafka:ListKafkaVersions",
        "resource_mappings": {}
      }
    ],
    "list-nodes": [
      {
        "action": "kafka:ListNodes",
        "resource_mappings": {}
      }
    ],
    "list-replicators": [
      {
        "note": "NotFound",
        "action": "Kafka:ListReplicators",
        "resource_mappings": {}
      }
    ],
    "list-scram-secrets": [
      {
        "action": "kafka:ListScramSecrets",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "kafka:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "list-client-vpc-connections": [
      {
        "action": "kafka:ListClientVpcConnections",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "${ClusterArn}"
        }
      }
    ],
    "list-vpc-connections": [
      {
        "action": "kafka:ListVpcConnections",
        "resource_mappings": {}
      }
    ],
    "reject-client-vpc-connection": [
      {
        "action": "kafka:RejectClientVpcConnection",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "${ClusterArn}",
          "vpc-connection": "${VpcConnectionArn}"
        }
      }
    ],
    "put-cluster-policy": [
      {
        "action": "kafka:PutClusterPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "${ClusterArn}"
        }
      }
    ],
    "reboot-broker": [
      {
        "action": "kafka:RebootBroker",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "kafka:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "kafka:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-broker-count": [
      {
        "action": "kafka:UpdateBrokerCount",
        "resource_mappings": {}
      }
    ],
    "update-broker-type": [
      {
        "action": "kafka:UpdateBrokerType",
        "resource_mappings": {}
      }
    ],
    "update-broker-storage": [
      {
        "action": "kafka:UpdateBrokerStorage",
        "resource_mappings": {}
      }
    ],
    "update-configuration": [
      {
        "action": "kafka:UpdateConfiguration",
        "resource_mappings": {}
      }
    ],
    "update-connectivity": [
      {
        "action": "kafka:UpdateConnectivity",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeRouteTables",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSubnets",
        "resource_mappings": {}
      }
    ],
    "update-cluster-configuration": [
      {
        "action": "kafka:UpdateClusterConfiguration",
        "resource_mappings": {}
      }
    ],
    "update-cluster-kafka-version": [
      {
        "action": "kafka:UpdateClusterKafkaVersion",
        "resource_mappings": {}
      }
    ],
    "update-monitoring": [
      {
        "action": "kafka:UpdateMonitoring",
        "resource_mappings": {}
      }
    ],
    "update-replication-info": [
      {
        "note": "NotFound",
        "action": "Kafka:UpdateReplicationInfo",
        "resource_mappings": {}
      }
    ],
    "update-security": [
      {
        "action": "kafka:UpdateSecurity",
        "resource_mappings": {}
      },
      {
        "action": "kms:RetireGrant",
        "resource_mappings": {
          "KeyId": {
            "template": "${EncryptionInfo.EncryptionAtRest.DataVolumeKMSKeyId}"
          }
        }
      }
    ],
    "update-storage": [
      {
        "action": "kafka:UpdateStorage",
        "resource_mappings": {}
      }
    ]
  },
  "kafkaconnect": {
    "create-connector": [
      {
        "action": "kafkaconnect:CreateConnector",
        "resource_mappings": {}
      },
      {
        "action": "ec2:CreateNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "${kafkaCluster.apacheKafkaCluster.vpc.subnets[]}"
          },
          "SecurityGroupId": {
            "template": "${kafkaCluster.apacheKafkaCluster.vpc.securityGroups[]}"
          }
        }
      },
      {
        "action": "ec2:DescribeSecurityGroups",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSubnets",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      },
      {
        "action": "firehose:TagDeliveryStream",
        "resource_mappings": {
          "DeliveryStreamName": {
            "template": "${logDelivery.workerLogDelivery.firehose.deliveryStream}"
          }
        }
      },
      {
        "action": "iam:AttachRolePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${serviceExecutionRoleArn}"
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${serviceExecutionRoleArn}"
        }
      },
      {
        "action": "iam:PutRolePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${serviceExecutionRoleArn}"
        }
      },
      {
        "action": "logs:CreateLogDelivery",
        "resource_mappings": {}
      },
      {
        "action": "logs:DescribeLogGroups",
        "resource_mappings": {
          "LogGroupName": {
            "template": "${logDelivery.workerLogDelivery.cloudWatchLogs.logGroup}"
          }
        }
      },
      {
        "action": "logs:DescribeResourcePolicies",
        "resource_mappings": {}
      },
      {
        "action": "logs:GetLogDelivery",
        "resource_mappings": {}
      },
      {
        "action": "logs:ListLogDeliveries",
        "resource_mappings": {}
      },
      {
        "action": "logs:PutResourcePolicy",
        "resource_mappings": {}
      },
      {
        "action": "s3:GetBucketPolicy",
        "resource_mappings": {
          "BucketName": {
            "template": "${logDelivery.workerLogDelivery.s3.bucket}"
          }
        }
      },
      {
        "action": "s3:PutBucketPolicy",
        "resource_mappings": {
          "BucketName": {
            "template": "${logDelivery.workerLogDelivery.s3.bucket}"
          }
        }
      }
    ],
    "create-custom-plugin": [
      {
        "action": "kafkaconnect:CreateCustomPlugin",
        "resource_mappings": {}
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "object": "${location.s3Location.bucketArn}/${location.s3Location.fileKey}"
        }
      }
    ],
    "create-worker-configuration": [
      {
        "action": "kafkaconnect:CreateWorkerConfiguration",
        "resource_mappings": {}
      }
    ],
    "delete-connector": [
      {
        "action": "kafkaconnect:DeleteConnector",
        "resource_mappings": {}
      },
      {
        "action": "logs:DeleteLogDelivery",
        "resource_mappings": {}
      },
      {
        "action": "logs:ListLogDeliveries",
        "resource_mappings": {}
      }
    ],
    "delete-custom-plugin": [
      {
        "action": "kafkaconnect:DeleteCustomPlugin",
        "resource_mappings": {}
      }
    ],
    "describe-connector": [
      {
        "action": "kafkaconnect:DescribeConnector",
        "resource_mappings": {}
      }
    ],
    "describe-custom-plugin": [
      {
        "action": "kafkaconnect:DescribeCustomPlugin",
        "resource_mappings": {}
      }
    ],
    "describe-worker-configuration": [
      {
        "action": "kafkaconnect:DescribeWorkerConfiguration",
        "resource_mappings": {}
      }
    ],
    "list-connectors": [
      {
        "action": "kafkaconnect:ListConnectors",
        "resource_mappings": {}
      }
    ],
    "list-custom-plugins": [
      {
        "action": "kafkaconnect:ListCustomPlugins",
        "resource_mappings": {}
      }
    ],
    "list-worker-configurations": [
      {
        "action": "kafkaconnect:ListWorkerConfigurations",
        "resource_mappings": {}
      }
    ],
    "update-connector": [
      {
        "action": "kafkaconnect:UpdateConnector",
        "resource_mappings": {}
      }
    ]
  },
  "kendra": {
    "associate-entities-to-experience": [
      {
        "action": "kendra:AssociateEntitiesToExperience",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "ExperienceId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "associate-personas-to-entities": [
      {
        "action": "kendra:AssociatePersonasToEntities",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "ExperienceId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "batch-delete-document": [
      {
        "action": "kendra:BatchDeleteDocument",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          }
        }
      }
    ],
    "batch-delete-featured-results-set": [
      {
        "action": "kendra:BatchDeleteFeaturedResultsSet",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "FeaturedResultsSetId": {
            "template": "${FeaturedResultsSetIds[]}"
          }
        }
      }
    ],
    "batch-get-document-status": [
      {
        "action": "kendra:BatchGetDocumentStatus",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          }
        }
      }
    ],
    "batch-put-document": [
      {
        "action": "kendra:BatchPutDocument",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "clear-query-suggestions": [
      {
        "action": "kendra:ClearQuerySuggestions",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          }
        }
      }
    ],
    "create-access-control-configuration": [
      {
        "action": "kendra:CreateAccessControlConfiguration",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          }
        }
      }
    ],
    "create-data-source": [
      {
        "action": "kendra:CreateDataSource",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "create-experience": [
      {
        "action": "kendra:CreateExperience",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          }
        }
      }
    ],
    "create-faq": [
      {
        "action": "kendra:CreateFaq",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "create-featured-results-set": [
      {
        "action": "kendra:CreateFeaturedResultsSet",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          }
        }
      }
    ],
    "create-index": [
      {
        "action": "kendra:CreateIndex",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "create-query-suggestions-block-list": [
      {
        "action": "kendra:CreateQuerySuggestionsBlockList",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          }
        }
      }
    ],
    "create-thesaurus": [
      {
        "action": "kendra:CreateThesaurus",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          }
        }
      }
    ],
    "delete-access-control-configuration": [
      {
        "action": "kendra:DeleteAccessControlConfiguration",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "AccessControlConfigurationId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-data-source": [
      {
        "action": "kendra:DeleteDataSource",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "DataSourceId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-experience": [
      {
        "action": "kendra:DeleteExperience",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "ExperienceId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-faq": [
      {
        "action": "kendra:DeleteFaq",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "FaqId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-index": [
      {
        "action": "kendra:DeleteIndex",
        "resource_mappings": {
          "IndexId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-principal-mapping": [
      {
        "action": "kendra:DeletePrincipalMapping",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "DataSourceId": {
            "template": "${DataSourceId}"
          }
        }
      }
    ],
    "delete-query-suggestions-block-list": [
      {
        "action": "kendra:DeleteQuerySuggestionsBlockList",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "QuerySuggestionsBlockListId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-thesaurus": [
      {
        "action": "kendra:DeleteThesaurus",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "ThesaurusId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "describe-access-control-configuration": [
      {
        "action": "kendra:DescribeAccessControlConfiguration",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "AccessControlConfigurationId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "describe-data-source": [
      {
        "action": "kendra:DescribeDataSource",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "DataSourceId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "describe-experience": [
      {
        "action": "kendra:DescribeExperience",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "ExperienceId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "describe-faq": [
      {
        "action": "kendra:DescribeFaq",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "FaqId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "describe-featured-results-set": [
      {
        "action": "kendra:DescribeFeaturedResultsSet",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "FeaturedResultsSetId": {
            "template": "${FeaturedResultsSetId}"
          }
        }
      }
    ],
    "describe-index": [
      {
        "action": "kendra:DescribeIndex",
        "resource_mappings": {
          "IndexId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "describe-principal-mapping": [
      {
        "action": "kendra:DescribePrincipalMapping",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "DataSourceId": {
            "template": "${DataSourceId}"
          }
        }
      }
    ],
    "describe-query-suggestions-block-list": [
      {
        "action": "kendra:DescribeQuerySuggestionsBlockList",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "QuerySuggestionsBlockListId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "describe-query-suggestions-config": [
      {
        "action": "kendra:DescribeQuerySuggestionsConfig",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          }
        }
      }
    ],
    "describe-thesaurus": [
      {
        "action": "kendra:DescribeThesaurus",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "ThesaurusId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "disassociate-entities-from-experience": [
      {
        "action": "kendra:DisassociateEntitiesFromExperience",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "ExperienceId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "disassociate-personas-from-entities": [
      {
        "action": "kendra:DisassociatePersonasFromEntities",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "ExperienceId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-query-suggestions": [
      {
        "action": "kendra:GetQuerySuggestions",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          }
        }
      }
    ],
    "get-snapshots": [
      {
        "action": "kendra:GetSnapshots",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          }
        }
      }
    ],
    "list-access-control-configurations": [
      {
        "action": "kendra:ListAccessControlConfigurations",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          }
        }
      }
    ],
    "list-data-source-sync-jobs": [
      {
        "action": "kendra:ListDataSourceSyncJobs",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "DataSourceId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "list-data-sources": [
      {
        "action": "kendra:ListDataSources",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          }
        }
      }
    ],
    "list-entity-personas": [
      {
        "action": "kendra:ListEntityPersonas",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "ExperienceId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "list-experience-entities": [
      {
        "action": "kendra:ListExperienceEntities",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "ExperienceId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "list-experiences": [
      {
        "action": "kendra:ListExperiences",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          }
        }
      }
    ],
    "list-faqs": [
      {
        "action": "kendra:ListFaqs",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          }
        }
      }
    ],
    "list-featured-results-sets": [
      {
        "action": "kendra:ListFeaturedResultsSets",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          }
        }
      }
    ],
    "list-groups-older-than-ordering-id": [
      {
        "action": "kendra:ListGroupsOlderThanOrderingId",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "DataSourceId": {
            "template": "${DataSourceId}"
          }
        }
      }
    ],
    "list-indices": [
      {
        "action": "kendra:ListIndices",
        "resource_mappings": {}
      }
    ],
    "list-query-suggestions-block-lists": [
      {
        "action": "kendra:ListQuerySuggestionsBlockLists",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "kendra:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "data-source": "%%iftemplatematch%${ResourceARN}%%",
          "faq": "%%iftemplatematch%${ResourceARN}%%",
          "index": "%%iftemplatematch%${ResourceARN}%%",
          "thesaurus": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "list-thesauri": [
      {
        "action": "kendra:ListThesauri",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          }
        }
      }
    ],
    "put-principal-mapping": [
      {
        "action": "kendra:PutPrincipalMapping",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "DataSourceId": {
            "template": "${DataSourceId}"
          }
        }
      }
    ],
    "query": [
      {
        "action": "kendra:Query",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          }
        }
      }
    ],
    "retrieve": [
      {
        "action": "kendra:Retrieve",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          }
        }
      }
    ],
    "start-data-source-sync-job": [
      {
        "action": "kendra:Query",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          }
        }
      },
      {
        "action": "kendra:StartDataSourceSyncJob",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "DataSourceId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "stop-data-source-sync-job": [
      {
        "action": "kendra:StopDataSourceSyncJob",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "DataSourceId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "submit-feedback": [
      {
        "action": "kendra:SubmitFeedback",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "kendra:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "data-source": "%%iftemplatematch%${ResourceARN}%%",
          "faq": "%%iftemplatematch%${ResourceARN}%%",
          "index": "%%iftemplatematch%${ResourceARN}%%",
          "thesaurus": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "kendra:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "data-source": "%%iftemplatematch%${ResourceARN}%%",
          "faq": "%%iftemplatematch%${ResourceARN}%%",
          "index": "%%iftemplatematch%${ResourceARN}%%",
          "thesaurus": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "update-access-control-configuration": [
      {
        "action": "kendra:UpdateAccessControlConfiguration",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "AccessControlConfigurationId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "update-data-source": [
      {
        "action": "kendra:UpdateDataSource",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "DataSourceId": {
            "template": "${Id}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "update-experience": [
      {
        "action": "kendra:UpdateExperience",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          }
        }
      }
    ],
    "update-featured-results-set": [
      {
        "action": "kendra:UpdateFeaturedResultsSet",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "FeaturedResultsSetId": {
            "template": "${FeaturedResultsSetId}"
          }
        }
      }
    ],
    "update-index": [
      {
        "action": "kendra:UpdateIndex",
        "resource_mappings": {
          "IndexId": {
            "template": "${Id}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "update-query-suggestions-block-list": [
      {
        "action": "kendra:UpdateQuerySuggestionsBlockList",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "QuerySuggestionsBlockListId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "update-query-suggestions-config": [
      {
        "action": "kendra:UpdateQuerySuggestionsConfig",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          }
        }
      }
    ],
    "update-thesaurus": [
      {
        "action": "kendra:UpdateThesaurus",
        "resource_mappings": {
          "IndexId": {
            "template": "${IndexId}"
          },
          "ThesaurusId": {
            "template": "${Id}"
          }
        }
      }
    ]
  },
  "kendra-ranking": {
    "create-rescore-execution-plan": [
      {
        "action": "kendra-ranking:CreateRescoreExecutionPlan",
        "resource_mappings": {}
      }
    ],
    "delete-rescore-execution-plan": [
      {
        "action": "kendra-ranking:DeleteRescoreExecutionPlan",
        "resource_mappings": {
          "RescoreExecutionPlanId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "describe-rescore-execution-plan": [
      {
        "action": "kendra-ranking:DescribeRescoreExecutionPlan",
        "resource_mappings": {
          "RescoreExecutionPlanId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "list-rescore-execution-plans": [
      {
        "action": "kendra-ranking:ListRescoreExecutionPlans",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "kendra-ranking:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "rescore-execution-plan": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "rescore": [
      {
        "action": "kendra-ranking:Rescore",
        "resource_mappings": {
          "RescoreExecutionPlanId": {
            "template": "${RescoreExecutionPlanId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "kendra-ranking:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "rescore-execution-plan": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "kendra-ranking:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "rescore-execution-plan": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "update-rescore-execution-plan": [
      {
        "action": "kendra-ranking:UpdateRescoreExecutionPlan",
        "resource_mappings": {
          "RescoreExecutionPlanId": {
            "template": "${Id}"
          }
        }
      }
    ]
  },
  "keyspaces": {
    "create-keyspace": [
      {
        "action": "cassandra:Create",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "create-table": [
      {
        "action": "cassandra:Create",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "delete-keyspace": [
      {
        "action": "cassandra:Drop",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "delete-table": [
      {
        "action": "cassandra:Drop",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "get-keyspace": [
      {
        "action": "cassandra:Select",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "get-table": [
      {
        "action": "cassandra:Select",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "list-keyspaces": [
      {
        "action": "cassandra:Select",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "list-tables": [
      {
        "action": "cassandra:Select",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "cassandra:Select",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "restore-table": [
      {
        "action": "cassandra:Restore",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "cassandra:TagResource",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "cassandra:UntagResource",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "update-table": [
      {
        "action": "cassandra:Modify",
        "undocumented": true,
        "resource_mappings": {}
      }
    ]
  },
  "kinesis": {
    "add-tags-to-stream": [
      {
        "action": "kinesis:AddTagsToStream",
        "resource_mappings": {
          "StreamName": {
            "template": "${StreamName}"
          }
        }
      }
    ],
    "create-stream": [
      {
        "action": "kinesis:CreateStream",
        "resource_mappings": {
          "StreamName": {
            "template": "${StreamName}"
          }
        }
      }
    ],
    "decrease-stream-retention-period": [
      {
        "action": "kinesis:DecreaseStreamRetentionPeriod",
        "resource_mappings": {
          "StreamName": {
            "template": "${StreamName}"
          }
        }
      }
    ],
    "delete-stream": [
      {
        "action": "kinesis:DeleteStream",
        "resource_mappings": {
          "StreamName": {
            "template": "${StreamName}"
          }
        }
      }
    ],
    "deregister-stream-consumer": [
      {
        "action": "kinesis:DeregisterStreamConsumer",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "consumer": "${ConsumerARN}",
          "stream": "${StreamARN}"
        }
      }
    ],
    "describe-limits": [
      {
        "action": "kinesis:DescribeLimits",
        "resource_mappings": {}
      }
    ],
    "describe-stream": [
      {
        "action": "kinesis:DescribeStream",
        "resource_mappings": {
          "StreamName": {
            "template": "${StreamName}"
          }
        }
      }
    ],
    "describe-stream-consumer": [
      {
        "action": "kinesis:DescribeStreamConsumer",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "consumer": "${ConsumerARN}",
          "stream": "${StreamARN}"
        }
      }
    ],
    "describe-stream-summary": [
      {
        "action": "kinesis:DescribeStreamSummary",
        "resource_mappings": {
          "StreamName": {
            "template": "${StreamName}"
          }
        }
      }
    ],
    "disable-enhanced-monitoring": [
      {
        "action": "kinesis:DisableEnhancedMonitoring",
        "resource_mappings": {}
      }
    ],
    "enable-enhanced-monitoring": [
      {
        "action": "kinesis:EnableEnhancedMonitoring",
        "resource_mappings": {}
      }
    ],
    "get-records": [
      {
        "action": "kinesis:GetRecords",
        "resource_mappings": {
          "StreamName": {
            "template": "*"
          }
        }
      }
    ],
    "get-shard-iterator": [
      {
        "action": "kinesis:GetShardIterator",
        "resource_mappings": {
          "StreamName": {
            "template": "${StreamName}"
          }
        }
      }
    ],
    "increase-stream-retention-period": [
      {
        "action": "kinesis:IncreaseStreamRetentionPeriod",
        "resource_mappings": {
          "StreamName": {
            "template": "${StreamName}"
          }
        }
      }
    ],
    "list-shards": [
      {
        "action": "kinesis:ListShards",
        "resource_mappings": {}
      }
    ],
    "list-stream-consumers": [
      {
        "action": "kinesis:ListStreamConsumers",
        "resource_mappings": {}
      }
    ],
    "list-streams": [
      {
        "action": "kinesis:ListStreams",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-stream": [
      {
        "action": "kinesis:ListTagsForStream",
        "resource_mappings": {
          "StreamName": {
            "template": "${StreamName}"
          }
        }
      }
    ],
    "merge-shards": [
      {
        "action": "kinesis:MergeShards",
        "resource_mappings": {
          "StreamName": {
            "template": "${StreamName}"
          }
        }
      }
    ],
    "put-record": [
      {
        "action": "kinesis:PutRecord",
        "resource_mappings": {
          "StreamName": {
            "template": "${StreamName}"
          }
        }
      }
    ],
    "put-records": [
      {
        "action": "kinesis:PutRecords",
        "resource_mappings": {
          "StreamName": {
            "template": "${StreamName}"
          }
        }
      }
    ],
    "register-stream-consumer": [
      {
        "action": "kinesis:RegisterStreamConsumer",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "consumer": "${ConsumerName}",
          "stream": "${StreamARN}"
        }
      }
    ],
    "remove-tags-from-stream": [
      {
        "action": "kinesis:RemoveTagsFromStream",
        "resource_mappings": {
          "StreamName": {
            "template": "${StreamName}"
          }
        }
      }
    ],
    "split-shard": [
      {
        "action": "kinesis:SplitShard",
        "resource_mappings": {
          "StreamName": {
            "template": "${StreamName}"
          }
        }
      }
    ],
    "start-stream-encryption": [
      {
        "action": "kinesis:StartStreamEncryption",
        "resource_mappings": {
          "KeyId": {
            "template": "${KeyId}"
          },
          "StreamName": {
            "template": "${StreamName}"
          }
        }
      }
    ],
    "stop-stream-encryption": [
      {
        "action": "kinesis:StopStreamEncryption",
        "resource_mappings": {
          "KeyId": {
            "template": "${KeyId}"
          },
          "StreamName": {
            "template": "${StreamName}"
          }
        }
      }
    ],
    "update-shard-count": [
      {
        "action": "kinesis:UpdateShardCount",
        "resource_mappings": {}
      }
    ],
    "update-stream-mode": [
      {
        "action": "kinesis:UpdateStreamMode",
        "resource_mappings": {}
      }
    ],
    "wait": [
      {
        "action": "kinesis:DescribeStream",
        "resource_mappings": {
          "StreamName": {
            "template": "${StreamName}"
          }
        }
      }
    ]
  },
  "kinesis-video-archived-media": {
    "get-clip": [
      {
        "action": "kinesisvideo:GetClip",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stream": "${StreamARN}"
        }
      }
    ],
    "get-dash-streaming-session-url": [
      {
        "action": "kinesisvideo:GetDASHStreamingSessionURL",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stream": "${StreamARN}"
        }
      }
    ],
    "get-hls-streaming-session-url": [
      {
        "action": "kinesisvideo:GetHLSStreamingSessionURL",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stream": "${StreamARN}"
        }
      }
    ],
    "get-images": [
      {
        "action": "kinesisvideo:GetImages",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stream": "${StreamARN}"
        }
      }
    ],
    "get-media-for-fragment-list": [
      {
        "action": "kinesisvideo:GetMediaForFragmentList",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stream": "${StreamARN}"
        }
      }
    ],
    "list-fragments": [
      {
        "action": "kinesisvideo:ListFragments",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stream": "${StreamARN}"
        }
      }
    ]
  },
  "kinesis-video-media": {
    "get-media": [
      {
        "action": "kinesisvideo:GetMedia",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stream": "${StreamARN}"
        }
      }
    ]
  },
  "kinesis-video-signaling": {
    "get-ice-server-config": [
      {
        "action": "kinesisvideo:GetIceServerConfig",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channel": "${ChannelARN}"
        }
      }
    ],
    "send-alexa-offer-to-master": [
      {
        "action": "kinesisvideo:SendAlexaOfferToMaster",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channel": "${ChannelARN}"
        }
      }
    ]
  },
  "kinesis-video-webrtc-storage": {
    "join-storage-session": [
      {
        "note": "NotFound",
        "action": "Kinesis Video WebRTC Storage:JoinStorageSession",
        "resource_mappings": {}
      }
    ]
  },
  "kinesisanalytics": {
    "add-application-cloud-watch-logging-option": [
      {
        "action": "kinesisanalytics:AddApplicationCloudWatchLoggingOption",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${CloudWatchLoggingOption.RoleARN}"
        }
      }
    ],
    "add-application-input": [
      {
        "action": "kinesisanalytics:AddApplicationInput",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${Input.InputProcessingConfiguration.InputLambdaProcessor.RoleARN}%${Input.KinesisStreamsInput.RoleARN}%${Input.KinesisFirehoseInput.RoleARN}%%"
        }
      }
    ],
    "add-application-input-processing-configuration": [
      {
        "action": "kinesisanalytics:AddApplicationInputProcessingConfiguration",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${InputProcessingConfiguration.InputLambdaProcessor.RoleARN}"
        }
      }
    ],
    "add-application-output": [
      {
        "action": "kinesisanalytics:AddApplicationOutput",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${Output.KinesisStreamsOutput.RoleARN}%${Output.KinesisFirehoseOutput.RoleARN}%${Output.LambdaOutput.RoleARN}%%"
        }
      }
    ],
    "add-application-reference-data-source": [
      {
        "action": "kinesisanalytics:AddApplicationReferenceDataSource",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "create-application": [
      {
        "action": "kinesisanalytics:CreateApplication",
        "resource_mappings": {}
      }
    ],
    "delete-application": [
      {
        "action": "kinesisanalytics:DeleteApplication",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "delete-application-cloud-watch-logging-option": [
      {
        "action": "kinesisanalytics:DeleteApplicationCloudWatchLoggingOption",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "delete-application-input-processing-configuration": [
      {
        "action": "kinesisanalytics:DeleteApplicationInputProcessingConfiguration",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "delete-application-output": [
      {
        "action": "kinesisanalytics:DeleteApplicationOutput",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "delete-application-reference-data-source": [
      {
        "action": "kinesisanalytics:DeleteApplicationReferenceDataSource",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "describe-application": [
      {
        "action": "kinesisanalytics:DescribeApplication",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "discover-input-schema": [
      {
        "action": "kinesisanalytics:DiscoverInputSchema",
        "resource_mappings": {}
      }
    ],
    "list-applications": [
      {
        "action": "kinesisanalytics:ListApplications",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "kinesisanalytics:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "start-application": [
      {
        "action": "kinesisanalytics:StartApplication",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "stop-application": [
      {
        "action": "kinesisanalytics:StopApplication",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "kinesisanalytics:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "kinesisanalytics:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "update-application": [
      {
        "action": "kinesisanalytics:UpdateApplication",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ]
  },
  "kinesisanalyticsv2": {
    "add-application-cloud-watch-logging-option": [
      {
        "action": "kinesisanalytics:AddApplicationCloudWatchLoggingOption",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "add-application-input": [
      {
        "action": "kinesisanalytics:AddApplicationInput",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "add-application-input-processing-configuration": [
      {
        "action": "kinesisanalytics:AddApplicationInputProcessingConfiguration",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "add-application-output": [
      {
        "action": "kinesisanalytics:AddApplicationOutput",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "add-application-reference-data-source": [
      {
        "action": "kinesisanalytics:AddApplicationReferenceDataSource",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${ReferenceDataSource.S3ReferenceDataSource.ReferenceRoleARN}"
        }
      }
    ],
    "add-application-vpc-configuration": [
      {
        "action": "kinesisanalytics:AddApplicationVpcConfiguration",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "create-application": [
      {
        "action": "kinesisanalytics:CreateApplication",
        "resource_mappings": {}
      }
    ],
    "create-application-presigned-url": [
      {
        "action": "kinesisanalytics:CreateApplicationPresignedUrl",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "create-application-snapshot": [
      {
        "action": "kinesisanalytics:CreateApplicationSnapshot",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "delete-application": [
      {
        "action": "kinesisanalytics:DeleteApplication",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "delete-application-cloud-watch-logging-option": [
      {
        "action": "kinesisanalytics:DeleteApplicationCloudWatchLoggingOption",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "delete-application-input-processing-configuration": [
      {
        "action": "kinesisanalytics:DeleteApplicationInputProcessingConfiguration",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "delete-application-output": [
      {
        "action": "kinesisanalytics:DeleteApplicationOutput",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "delete-application-reference-data-source": [
      {
        "action": "kinesisanalytics:DeleteApplicationReferenceDataSource",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "delete-application-snapshot": [
      {
        "action": "kinesisanalytics:DeleteApplicationSnapshot",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "delete-application-vpc-configuration": [
      {
        "action": "kinesisanalytics:DeleteApplicationVpcConfiguration",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "describe-application": [
      {
        "action": "kinesisanalytics:DescribeApplication",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "describe-application-snapshot": [
      {
        "action": "kinesisanalytics:DescribeApplicationSnapshot",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "describe-application-version": [
      {
        "action": "kinesisanalytics:DescribeApplicationVersion",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "discover-input-schema": [
      {
        "action": "kinesisanalytics:DiscoverInputSchema",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${RoleARN}%${S3Configuration.RoleARN}%${InputProcessingConfiguration.InputLambdaProcessor.RoleARN}%%"
        }
      }
    ],
    "list-application-snapshots": [
      {
        "action": "kinesisanalytics:ListApplicationSnapshots",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "list-application-versions": [
      {
        "action": "kinesisanalytics:ListApplicationVersions",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "list-applications": [
      {
        "action": "kinesisanalytics:ListApplications",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "kinesisanalytics:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "rollback-application": [
      {
        "action": "kinesisanalytics:RollbackApplication",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "start-application": [
      {
        "action": "kinesisanalytics:StartApplication",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "stop-application": [
      {
        "action": "kinesisanalytics:StopApplication",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "kinesisanalytics:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "kinesisanalytics:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "update-application": [
      {
        "action": "kinesisanalytics:UpdateApplication",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ],
    "update-application-maintenance-configuration": [
      {
        "action": "kinesisanalytics:UpdateApplicationMaintenanceConfiguration",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${ApplicationName}"
          }
        }
      }
    ]
  },
  "kinesisvideo": {
    "create-signaling-channel": [
      {
        "action": "kinesisvideo:CreateSignalingChannel",
        "resource_mappings": {
          "ChannelName": {
            "template": "${ChannelName}"
          },
          "CreationTime": {
            "template": "*"
          }
        }
      }
    ],
    "create-stream": [
      {
        "action": "kinesisvideo:CreateStream",
        "resource_mappings": {
          "StreamName": {
            "template": "${StreamName}"
          },
          "CreationTime": {
            "template": "*"
          }
        }
      }
    ],
    "delete-edge-configuration": [
      {
        "action": "kinesisvideo:DeleteEdgeConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stream": "${StreamARN}"
        }
      }
    ],
    "delete-signaling-channel": [
      {
        "action": "kinesisvideo:DeleteSignalingChannel",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channel": "${ChannelARN}"
        }
      }
    ],
    "delete-stream": [
      {
        "action": "kinesisvideo:DeleteStream",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stream": "${StreamARN}"
        }
      }
    ],
    "describe-edge-configuration": [
      {
        "action": "kinesisvideo:DescribeEdgeConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stream": "${StreamARN}"
        }
      }
    ],
    "describe-image-generation-configuration": [
      {
        "action": "kinesisvideo:DescribeImageGenerationConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stream": "${StreamARN}"
        }
      }
    ],
    "describe-mapped-resource-configuration": [
      {
        "action": "kinesisvideo:DescribeMappedResourceConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stream": "${StreamARN}"
        }
      }
    ],
    "describe-media-storage-configuration": [
      {
        "action": "kinesisvideo:DescribeMediaStorageConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channel": "${ChannelARN}"
        }
      }
    ],
    "describe-notification-configuration": [
      {
        "action": "kinesisvideo:DescribeNotificationConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stream": "${StreamARN}"
        }
      }
    ],
    "describe-signaling-channel": [
      {
        "action": "kinesisvideo:DescribeSignalingChannel",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channel": "${ChannelARN}"
        }
      }
    ],
    "describe-stream": [
      {
        "action": "kinesisvideo:DescribeStream",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stream": "${StreamARN}"
        }
      }
    ],
    "get-data-endpoint": [
      {
        "action": "kinesisvideo:GetDataEndpoint",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stream": "${StreamARN}"
        }
      }
    ],
    "get-signaling-channel-endpoint": [
      {
        "action": "kinesisvideo:GetSignalingChannelEndpoint",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channel": "${ChannelARN}"
        }
      }
    ],
    "list-edge-agent-configurations": [
      {
        "action": "kinesisvideo:ListEdgeAgentConfigurations",
        "resource_mappings": {}
      }
    ],
    "list-signaling-channels": [
      {
        "action": "kinesisvideo:ListSignalingChannels",
        "resource_mappings": {}
      }
    ],
    "list-streams": [
      {
        "action": "kinesisvideo:ListStreams",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "kinesisvideo:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channel": "%%iftemplatematch%${ResourceARN}%%",
          "stream": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "list-tags-for-stream": [
      {
        "action": "kinesisvideo:ListTagsForStream",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stream": "${StreamARN}"
        }
      }
    ],
    "start-edge-configuration-update": [
      {
        "action": "kinesisvideo:StartEdgeConfigurationUpdate",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stream": "${StreamARN}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "kinesisvideo:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channel": "%%iftemplatematch%${ResourceARN}%%",
          "stream": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "tag-stream": [
      {
        "action": "kinesisvideo:TagStream",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stream": "${StreamARN}"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "kinesisvideo:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channel": "%%iftemplatematch%${ResourceARN}%%",
          "stream": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "untag-stream": [
      {
        "action": "kinesisvideo:UntagStream",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stream": "${StreamARN}"
        }
      }
    ],
    "update-data-retention": [
      {
        "action": "kinesisvideo:UpdateDataRetention",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stream": "${StreamARN}"
        }
      }
    ],
    "update-image-generation-configuration": [
      {
        "action": "kinesisvideo:UpdateImageGenerationConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stream": "${StreamARN}"
        }
      }
    ],
    "update-media-storage-configuration": [
      {
        "action": "kinesisvideo:UpdateMediaStorageConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channel": "${ChannelARN}"
        }
      }
    ],
    "update-notification-configuration": [
      {
        "action": "kinesisvideo:UpdateNotificationConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stream": "${StreamARN}"
        }
      }
    ],
    "update-signaling-channel": [
      {
        "action": "kinesisvideo:UpdateSignalingChannel",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channel": "${ChannelARN}"
        }
      }
    ],
    "update-stream": [
      {
        "action": "kinesisvideo:UpdateStream",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stream": "${StreamARN}"
        }
      }
    ]
  },
  "kms": {
    "cancel-key-deletion": [
      {
        "action": "kms:CancelKeyDeletion",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "connect-custom-key-store": [
      {
        "action": "kms:ConnectCustomKeyStore",
        "resource_mappings": {}
      }
    ],
    "create-alias": [
      {
        "action": "kms:CreateAlias",
        "resource_mappings": {
          "Alias": {
            "template": "${AliasName}"
          },
          "KeyId": {
            "template": "%%regex%${TargetKeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "create-custom-key-store": [
      {
        "action": "kms:CreateCustomKeyStore",
        "resource_mappings": {}
      },
      {
        "action": "cloudhsm:DescribeClusters",
        "resource_mappings": {}
      }
    ],
    "create-grant": [
      {
        "action": "kms:CreateGrant",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "create-key": [
      {
        "action": "kms:CreateKey",
        "resource_mappings": {}
      }
    ],
    "decrypt": [
      {
        "action": "kms:Decrypt",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "delete-alias": [
      {
        "action": "kms:DeleteAlias",
        "resource_mappings": {
          "Alias": {
            "template": "${AliasName}"
          },
          "KeyId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-custom-key-store": [
      {
        "action": "kms:DeleteCustomKeyStore",
        "resource_mappings": {}
      }
    ],
    "delete-imported-key-material": [
      {
        "action": "kms:DeleteImportedKeyMaterial",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "describe-custom-key-stores": [
      {
        "action": "kms:DescribeCustomKeyStores",
        "resource_mappings": {}
      }
    ],
    "describe-key": [
      {
        "action": "kms:DescribeKey",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "disable-key": [
      {
        "action": "kms:DisableKey",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "disable-key-rotation": [
      {
        "action": "kms:DisableKeyRotation",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "disconnect-custom-key-store": [
      {
        "action": "kms:DisconnectCustomKeyStore",
        "resource_mappings": {}
      }
    ],
    "enable-key": [
      {
        "action": "kms:EnableKey",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "enable-key-rotation": [
      {
        "action": "kms:EnableKeyRotation",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "encrypt": [
      {
        "action": "kms:Encrypt",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "generate-data-key": [
      {
        "action": "kms:GenerateDataKey",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "generate-data-key-pair": [
      {
        "action": "kms:GenerateDataKeyPair",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "generate-data-key-pair-without-plaintext": [
      {
        "action": "kms:GenerateDataKeyPairWithoutPlaintext",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "generate-data-key-without-plaintext": [
      {
        "action": "kms:GenerateDataKeyWithoutPlaintext",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "generate-mac": [
      {
        "action": "kms:GenerateMac",
        "resource_mappings": {
          "KeyId": {
            "template": "${KeyId}"
          }
        }
      }
    ],
    "generate-random": [
      {
        "action": "kms:GenerateRandom",
        "resource_mappings": {}
      }
    ],
    "get-key-policy": [
      {
        "action": "kms:GetKeyPolicy",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "get-key-rotation-status": [
      {
        "action": "kms:GetKeyRotationStatus",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "get-parameters-for-import": [
      {
        "action": "kms:GetParametersForImport",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "get-public-key": [
      {
        "action": "kms:GetPublicKey",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "import-key-material": [
      {
        "action": "kms:ImportKeyMaterial",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "list-aliases": [
      {
        "action": "kms:ListAliases",
        "resource_mappings": {}
      }
    ],
    "list-grants": [
      {
        "action": "kms:ListGrants",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "list-key-policies": [
      {
        "action": "kms:ListKeyPolicies",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "list-keys": [
      {
        "action": "kms:ListKeys",
        "resource_mappings": {}
      }
    ],
    "list-resource-tags": [
      {
        "action": "kms:ListResourceTags",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "list-retirable-grants": [
      {
        "action": "kms:ListRetirableGrants",
        "resource_mappings": {
          "KeyId": {
            "template": "*"
          }
        }
      }
    ],
    "put-key-policy": [
      {
        "action": "kms:PutKeyPolicy",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "re-encrypt": [
      {
        "action": "kms:ReEncryptFrom",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${SourceKeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      },
      {
        "action": "kms:ReEncryptTo",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${DestinationKeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "replicate-key": [
      {
        "action": "kms:ReplicateKey",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      },
      {
        "action": "kms:CreateKey",
        "resource_mappings": {}
      }
    ],
    "retire-grant": [
      {
        "action": "kms:RetireGrant",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "revoke-grant": [
      {
        "action": "kms:RevokeGrant",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "schedule-key-deletion": [
      {
        "action": "kms:ScheduleKeyDeletion",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "sign": [
      {
        "action": "kms:Sign",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "kms:TagResource",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "untag-resource": [
      {
        "action": "kms:UntagResource",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "update-alias": [
      {
        "action": "kms:UpdateAlias",
        "resource_mappings": {
          "Alias": {
            "template": "${AliasName}"
          },
          "KeyId": {
            "template": "%%regex%${TargetKeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "update-custom-key-store": [
      {
        "action": "kms:UpdateCustomKeyStore",
        "resource_mappings": {}
      }
    ],
    "update-key-description": [
      {
        "action": "kms:UpdateKeyDescription",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "update-primary-region": [
      {
        "action": "kms:UpdatePrimaryRegion",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "verify": [
      {
        "action": "kms:Verify",
        "resource_mappings": {
          "KeyId": {
            "template": "%%regex%${KeyId}%/^(?:.*\\/)?([0-9a-f-]+)$/g%%"
          }
        }
      }
    ],
    "verify-mac": [
      {
        "action": "kms:VerifyMac",
        "resource_mappings": {
          "KeyId": {
            "template": "${KeyId}"
          }
        }
      }
    ]
  },
  "lakeformation": {
    "add-lf-tags-to-resource": [
      {
        "action": "lakeformation:AddLFTagsToResource",
        "resource_mappings": {}
      }
    ],
    "assume-decorated-role-with-saml": [
      {
        "note": "NotFound",
        "action": "LakeFormation:AssumeDecoratedRoleWithSAML",
        "resource_mappings": {}
      }
    ],
    "batch-grant-permissions": [
      {
        "action": "lakeformation:BatchGrantPermissions",
        "resource_mappings": {}
      }
    ],
    "batch-revoke-permissions": [
      {
        "action": "lakeformation:BatchRevokePermissions",
        "resource_mappings": {}
      }
    ],
    "cancel-transaction": [
      {
        "action": "lakeformation:CancelTransaction",
        "resource_mappings": {}
      }
    ],
    "commit-transaction": [
      {
        "action": "lakeformation:CommitTransaction",
        "resource_mappings": {}
      }
    ],
    "create-data-cells-filter": [
      {
        "action": "lakeformation:CreateDataCellsFilter",
        "resource_mappings": {}
      }
    ],
    "create-lf-tag": [
      {
        "action": "lakeformation:CreateLFTag",
        "resource_mappings": {}
      }
    ],
    "create-lake-formation-opt-in": [
      {
        "note": "NotFound",
        "action": "LakeFormation:CreateLakeFormationOptIn",
        "resource_mappings": {}
      }
    ],
    "delete-data-cells-filter": [
      {
        "action": "lakeformation:DeleteDataCellsFilter",
        "resource_mappings": {}
      }
    ],
    "delete-lf-tag": [
      {
        "action": "lakeformation:DeleteLFTag",
        "resource_mappings": {}
      }
    ],
    "delete-lake-formation-opt-in": [
      {
        "note": "NotFound",
        "action": "LakeFormation:DeleteLakeFormationOptIn",
        "resource_mappings": {}
      }
    ],
    "delete-objects-on-cancel": [
      {
        "action": "lakeformation:DeleteObjectsOnCancel",
        "resource_mappings": {}
      }
    ],
    "deregister-resource": [
      {
        "action": "lakeformation:DeregisterResource",
        "resource_mappings": {}
      }
    ],
    "describe-resource": [
      {
        "action": "lakeformation:DescribeResource",
        "resource_mappings": {}
      }
    ],
    "describe-transaction": [
      {
        "action": "lakeformation:DescribeTransaction",
        "resource_mappings": {}
      }
    ],
    "extend-transaction": [
      {
        "action": "lakeformation:ExtendTransaction",
        "resource_mappings": {}
      }
    ],
    "get-data-cells-filter": [
      {
        "action": "lakeformation:GetDataCellsFilter",
        "resource_mappings": {}
      }
    ],
    "get-data-lake-settings": [
      {
        "action": "lakeformation:GetDataLakeSettings",
        "resource_mappings": {}
      }
    ],
    "get-effective-permissions-for-path": [
      {
        "action": "lakeformation:GetEffectivePermissionsForPath",
        "resource_mappings": {}
      }
    ],
    "get-lf-tag": [
      {
        "action": "lakeformation:GetLFTag",
        "resource_mappings": {}
      }
    ],
    "get-query-state": [
      {
        "action": "lakeformation:GetQueryState",
        "resource_mappings": {}
      },
      {
        "action": "lakeformation:StartQueryPlanning",
        "resource_mappings": {}
      }
    ],
    "get-query-statistics": [
      {
        "action": "lakeformation:GetQueryStatistics",
        "resource_mappings": {}
      },
      {
        "action": "lakeformation:StartQueryPlanning",
        "resource_mappings": {}
      }
    ],
    "get-resource-lf-tags": [
      {
        "action": "lakeformation:GetResourceLFTags",
        "resource_mappings": {}
      }
    ],
    "get-table-objects": [
      {
        "action": "lakeformation:GetTableObjects",
        "resource_mappings": {}
      }
    ],
    "get-temporary-glue-partition-credentials": [
      {
        "note": "NotFound",
        "action": "LakeFormation:GetTemporaryGluePartitionCredentials",
        "resource_mappings": {}
      }
    ],
    "get-temporary-glue-table-credentials": [
      {
        "note": "NotFound",
        "action": "LakeFormation:GetTemporaryGlueTableCredentials",
        "resource_mappings": {}
      }
    ],
    "get-work-unit-results": [
      {
        "action": "lakeformation:GetWorkUnitResults",
        "resource_mappings": {}
      },
      {
        "action": "lakeformation:GetWorkUnits",
        "resource_mappings": {}
      },
      {
        "action": "lakeformation:StartQueryPlanning",
        "resource_mappings": {}
      }
    ],
    "get-work-units": [
      {
        "action": "lakeformation:GetWorkUnits",
        "resource_mappings": {}
      },
      {
        "action": "lakeaformation:StartQueryPlanning",
        "resource_mappings": {}
      }
    ],
    "grant-permissions": [
      {
        "action": "lakeformation:GrantPermissions",
        "resource_mappings": {}
      }
    ],
    "list-data-cells-filter": [
      {
        "action": "lakeformation:ListDataCellsFilter",
        "resource_mappings": {}
      }
    ],
    "list-lf-tags": [
      {
        "action": "lakeformation:ListLFTags",
        "resource_mappings": {}
      }
    ],
    "list-lake-formation-opt-ins": [
      {
        "note": "NotFound",
        "action": "LakeFormation:ListLakeFormationOptIns",
        "resource_mappings": {}
      }
    ],
    "list-permissions": [
      {
        "action": "lakeformation:ListPermissions",
        "resource_mappings": {}
      }
    ],
    "list-resources": [
      {
        "action": "lakeformation:ListResources",
        "resource_mappings": {}
      }
    ],
    "list-table-storage-optimizers": [
      {
        "action": "lakeformation:ListTableStorageOptimizers",
        "resource_mappings": {}
      }
    ],
    "list-transactions": [
      {
        "action": "lakeformation:ListTransactions",
        "resource_mappings": {}
      }
    ],
    "put-data-lake-settings": [
      {
        "action": "lakeformation:PutDataLakeSettings",
        "resource_mappings": {}
      }
    ],
    "register-resource": [
      {
        "action": "lakeformation:RegisterResource",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${UseServiceLinkedRole}%arn:${Partition}:iam::${Account}:role/aws-service-role/lakeformation.amazonaws.com/AWSServiceRoleForLakeFormationDataAccess%%%"
        }
      }
    ],
    "remove-lf-tags-from-resource": [
      {
        "action": "lakeformation:RemoveLFTagsFromResource",
        "resource_mappings": {}
      }
    ],
    "revoke-permissions": [
      {
        "action": "lakeformation:RevokePermissions",
        "resource_mappings": {}
      }
    ],
    "search-databases-by-lf-tags": [
      {
        "action": "lakeformation:SearchDatabasesByLFTags",
        "resource_mappings": {}
      }
    ],
    "search-tables-by-lf-tags": [
      {
        "action": "lakeformation:SearchTablesByLFTags",
        "resource_mappings": {}
      }
    ],
    "start-query-planning": [
      {
        "action": "lakeformation:StartQueryPlanning",
        "resource_mappings": {}
      }
    ],
    "start-transaction": [
      {
        "action": "lakeformation:StartTransaction",
        "resource_mappings": {}
      }
    ],
    "update-data-cells-filter": [
      {
        "action": "lakeformation:UpdateDataCellsFilter",
        "resource_mappings": {}
      }
    ],
    "update-lf-tag": [
      {
        "action": "lakeformation:UpdateLFTag",
        "resource_mappings": {}
      }
    ],
    "update-resource": [
      {
        "action": "lakeformation:UpdateResource",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "update-table-objects": [
      {
        "action": "lakeformation:UpdateTableObjects",
        "resource_mappings": {}
      }
    ],
    "update-table-storage-optimizer": [
      {
        "action": "lakeformation:UpdateTableStorageOptimizer",
        "resource_mappings": {}
      }
    ]
  },
  "lambda": {
    "add-layer-version-permission": [
      {
        "action": "lambda:AddLayerVersionPermission",
        "resource_mappings": {
          "LayerName": {
            "template": "%%regex%${LayerName}%/^(?:^arn\\:aws\\:.+layer\\:)?([a-zA-Z0-9-_]+)$/g%%"
          },
          "LayerVersion": {
            "template": "${VersionNumber}"
          }
        }
      }
    ],
    "add-permission": [
      {
        "action": "lambda:AddPermission",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "create-alias": [
      {
        "action": "lambda:CreateAlias",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "create-code-signing-config": [
      {
        "action": "lambda:CreateCodeSigningConfig",
        "resource_mappings": {
          "CodeSigningConfigId": {
            "template": "*"
          }
        }
      }
    ],
    "create-event-source-mapping": [
      {
        "action": "lambda:CreateEventSourceMapping",
        "resource_mappings": {}
      }
    ],
    "create-function": [
      {
        "action": "lambda:CreateFunction",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${Role}"
        }
      }
    ],
    "create-function-url-config": [
      {
        "action": "lambda:CreateFunctionUrlConfig",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\\\:aws\\\\:.+function\\\\:|^[0-9]{12}\\\\:function\\\\:)?([^:]+?)(?:\\\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "delete-alias": [
      {
        "action": "lambda:DeleteAlias",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "delete-code-signing-config": [
      {
        "action": "lambda:DeleteCodeSigningConfig",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "code signing config": "${CodeSigningConfigArn}"
        }
      }
    ],
    "delete-event-source-mapping": [
      {
        "action": "lambda:DeleteEventSourceMapping",
        "resource_mappings": {
          "UUID": {
            "template": "${UUID}"
          }
        }
      }
    ],
    "delete-function": [
      {
        "action": "lambda:DeleteFunction",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "delete-function-code-signing-config": [
      {
        "action": "lambda:DeleteFunctionCodeSigningConfig",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "delete-function-concurrency": [
      {
        "action": "lambda:DeleteFunctionConcurrency",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "delete-function-event-invoke-config": [
      {
        "action": "lambda:DeleteFunctionEventInvokeConfig",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "delete-function-url-config": [
      {
        "action": "lambda:DeleteFunctionUrlConfig",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\\\:aws\\\\:.+function\\\\:|^[0-9]{12}\\\\:function\\\\:)?([^:]+?)(?:\\\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "delete-layer-version": [
      {
        "action": "lambda:DeleteLayerVersion",
        "resource_mappings": {
          "LayerName": {
            "template": "%%regex%${LayerName}%/^(?:^arn\\:aws\\:.+layer\\:)?([a-zA-Z0-9-_]+)$/g%%"
          },
          "LayerVersion": {
            "template": "${VersionNumber}"
          }
        }
      }
    ],
    "delete-provisioned-concurrency-config": [
      {
        "action": "lambda:DeleteProvisionedConcurrencyConfig",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          },
          "Alias": {
            "template": "%%regex%${Qualifier}%/^(?!^[0-9]+$)([a-zA-Z0-9-_]+)$/g%%"
          },
          "Version": {
            "template": "%%regex%${Qualifier}%/^([0-9]+)$/g%%"
          }
        }
      }
    ],
    "get-account-settings": [
      {
        "action": "lambda:GetAccountSettings",
        "resource_mappings": {}
      }
    ],
    "get-alias": [
      {
        "action": "lambda:GetAlias",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "get-code-signing-config": [
      {
        "action": "lambda:GetCodeSigningConfig",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "code signing config": "${CodeSigningConfigArn}"
        }
      }
    ],
    "get-event-source-mapping": [
      {
        "action": "lambda:GetEventSourceMapping",
        "resource_mappings": {
          "UUID": {
            "template": "${UUID}"
          }
        }
      }
    ],
    "get-function": [
      {
        "action": "lambda:GetFunction",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "get-function-code-signing-config": [
      {
        "action": "lambda:GetFunctionCodeSigningConfig",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "get-function-concurrency": [
      {
        "action": "lambda:GetFunctionConcurrency",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "get-function-configuration": [
      {
        "action": "lambda:GetFunctionConfiguration",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "get-function-event-invoke-config": [
      {
        "action": "lambda:GetFunctionEventInvokeConfig",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "get-function-url-config": [
      {
        "action": "lambda:GetFunctionUrlConfig",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\\\:aws\\\\:.+function\\\\:|^[0-9]{12}\\\\:function\\\\:)?([^:]+?)(?:\\\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "get-layer-version": [
      {
        "action": "lambda:GetLayerVersion",
        "resource_mappings": {
          "LayerName": {
            "template": "%%regex%${LayerName}%/^(?:^arn\\:aws\\:.+layer\\:)?([a-zA-Z0-9-_]+)$/g%%"
          },
          "LayerVersion": {
            "template": "${VersionNumber}"
          }
        }
      }
    ],
    "get-layer-version-by-arn": [
      {
        "action": "lambda:GetLayerVersion",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "layerVersion": "${Arn}"
        }
      }
    ],
    "get-layer-version-policy": [
      {
        "action": "lambda:GetLayerVersionPolicy",
        "resource_mappings": {
          "LayerName": {
            "template": "%%regex%${LayerName}%/^(?:^arn\\:aws\\:.+layer\\:)?([a-zA-Z0-9-_]+)$/g%%"
          },
          "LayerVersion": {
            "template": "${VersionNumber}"
          }
        }
      }
    ],
    "get-policy": [
      {
        "action": "lambda:GetPolicy",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "get-provisioned-concurrency-config": [
      {
        "action": "lambda:GetProvisionedConcurrencyConfig",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          },
          "Alias": {
            "template": "%%regex%${Qualifier}%/^(?!^[0-9]+$)([a-zA-Z0-9-_]+)$/g%%"
          },
          "Version": {
            "template": "%%regex%${Qualifier}%/^([0-9]+)$/g%%"
          }
        }
      }
    ],
    "get-runtime-management-config": [
      {
        "action": "lambda:GetRuntimeManagementConfig",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\\\:aws\\\\:.+function\\\\:|^[0-9]{12}\\\\:function\\\\:)?([^:]+?)(?:\\\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "invoke": [
      {
        "action": "lambda:InvokeFunction",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "invoke-async": [
      {
        "action": "lambda:InvokeAsync",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "list-aliases": [
      {
        "action": "lambda:ListAliases",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "list-code-signing-configs": [
      {
        "action": "lambda:ListCodeSigningConfigs",
        "resource_mappings": {}
      }
    ],
    "list-event-source-mappings": [
      {
        "action": "lambda:ListEventSourceMappings",
        "resource_mappings": {}
      }
    ],
    "list-function-event-invoke-configs": [
      {
        "action": "lambda:ListFunctionEventInvokeConfigs",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "list-function-url-configs": [
      {
        "action": "lambda:ListFunctionUrlConfigs",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\\\:aws\\\\:.+function\\\\:|^[0-9]{12}\\\\:function\\\\:)?([^:]+?)(?:\\\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "list-functions": [
      {
        "action": "lambda:ListFunctions",
        "resource_mappings": {}
      }
    ],
    "list-functions-by-code-signing-config": [
      {
        "action": "lambda:ListFunctionsByCodeSigningConfig",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "code signing config": "${CodeSigningConfigArn}"
        }
      }
    ],
    "list-layer-versions": [
      {
        "action": "lambda:ListLayerVersions",
        "resource_mappings": {}
      }
    ],
    "list-layers": [
      {
        "action": "lambda:ListLayers",
        "resource_mappings": {}
      }
    ],
    "list-provisioned-concurrency-configs": [
      {
        "action": "lambda:ListProvisionedConcurrencyConfigs",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "list-tags": [
      {
        "action": "lambda:ListTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "function": "%%iftemplatematch%${Resource}%%"
        }
      }
    ],
    "list-versions-by-function": [
      {
        "action": "lambda:ListVersionsByFunction",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "publish-layer-version": [
      {
        "action": "lambda:PublishLayerVersion",
        "resource_mappings": {
          "LayerName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "publish-version": [
      {
        "action": "lambda:PublishVersion",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "put-function-code-signing-config": [
      {
        "action": "lambda:PutFunctionCodeSigningConfig",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        },
        "resourcearn_mappings": {
          "code signing config": "${CodeSigningConfigArn}"
        }
      }
    ],
    "put-function-concurrency": [
      {
        "action": "lambda:PutFunctionConcurrency",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "put-function-event-invoke-config": [
      {
        "action": "lambda:PutFunctionEventInvokeConfig",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "put-provisioned-concurrency-config": [
      {
        "action": "lambda:PutProvisionedConcurrencyConfig",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          },
          "Alias": {
            "template": "%%regex%${Qualifier}%/^(?!^[0-9]+$)([a-zA-Z0-9-_]+)$/g%%"
          },
          "Version": {
            "template": "%%regex%${Qualifier}%/^([0-9]+)$/g%%"
          }
        }
      }
    ],
    "put-runtime-management-config": [
      {
        "action": "lambda:PutRuntimeManagementConfig",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\\\:aws\\\\:.+function\\\\:|^[0-9]{12}\\\\:function\\\\:)?([^:]+?)(?:\\\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "remove-layer-version-permission": [
      {
        "action": "lambda:RemoveLayerVersionPermission",
        "resource_mappings": {
          "LayerName": {
            "template": "%%regex%${LayerName}%/^(?:^arn\\:aws\\:.+layer\\:)?([a-zA-Z0-9-_]+)$/g%%"
          },
          "LayerVersion": {
            "template": "${VersionNumber}"
          }
        }
      }
    ],
    "remove-permission": [
      {
        "action": "lambda:RemovePermission",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "lambda:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "function": "%%iftemplatematch%${Resource}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "lambda:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "function": "%%iftemplatematch%${Resource}%%"
        }
      }
    ],
    "update-alias": [
      {
        "action": "lambda:UpdateAlias",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "update-code-signing-config": [
      {
        "action": "lambda:UpdateCodeSigningConfig",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "code signing config": "${CodeSigningConfigArn}"
        }
      }
    ],
    "update-event-source-mapping": [
      {
        "action": "lambda:UpdateEventSourceMapping",
        "resource_mappings": {
          "UUID": {
            "template": "${UUID}"
          }
        }
      }
    ],
    "update-function-code": [
      {
        "action": "lambda:UpdateFunctionCode",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "update-function-configuration": [
      {
        "action": "lambda:UpdateFunctionConfiguration",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${Role}"
        }
      }
    ],
    "update-function-event-invoke-config": [
      {
        "action": "lambda:UpdateFunctionEventInvokeConfig",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "update-function-url-config": [
      {
        "action": "lambda:UpdateFunctionUrlConfig",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\\\:aws\\\\:.+function\\\\:|^[0-9]{12}\\\\:function\\\\:)?([^:]+?)(?:\\\\:[^:]+)?$/g%%"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "lambda:GetFunctionConfiguration",
        "resource_mappings": {
          "FunctionName": {
            "template": "%%regex%${FunctionName}%/^(?:^arn\\:aws\\:.+function\\:|^[0-9]{12}\\:function\\:)?([^:]+?)(?:\\:[^:]+)?$/g%%"
          }
        }
      }
    ]
  },
  "lex-models": {
    "create-bot-version": [
      {
        "action": "lex:CreateBotVersion",
        "resource_mappings": {
          "BotName": {
            "template": "${name}"
          },
          "BotVersion": {
            "template": "*"
          },
          "BotId": {
            "template": "*"
          }
        }
      }
    ],
    "create-intent-version": [
      {
        "action": "lex:CreateIntentVersion",
        "resource_mappings": {
          "IntentName": {
            "template": "${name}"
          },
          "IntentVersion": {
            "template": "*"
          }
        }
      }
    ],
    "create-slot-type-version": [
      {
        "action": "lex:CreateSlotTypeVersion",
        "resource_mappings": {
          "SlotName": {
            "template": "${name}"
          },
          "SlotVersion": {
            "template": "*"
          }
        }
      }
    ],
    "delete-bot": [
      {
        "action": "lex:DeleteBot",
        "resource_mappings": {
          "BotName": {
            "template": "${name}"
          },
          "BotVersion": {
            "template": "*"
          },
          "BotId": {
            "template": "*"
          },
          "BotAliasId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-bot-alias": [
      {
        "action": "lex:DeleteBotAlias",
        "resource_mappings": {
          "BotName": {
            "template": "${botName}"
          },
          "BotAlias": {
            "template": "${name}"
          },
          "BotId": {
            "template": "*"
          },
          "BotAliasId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-bot-channel-association": [
      {
        "action": "lex:DeleteBotChannelAssociation",
        "resource_mappings": {
          "BotName": {
            "template": "${botName}"
          },
          "BotAlias": {
            "template": "${botAlias}"
          },
          "ChannelName": {
            "template": "${name}"
          }
        }
      }
    ],
    "delete-bot-version": [
      {
        "action": "lex:DeleteBotVersion",
        "resource_mappings": {
          "BotName": {
            "template": "${name}"
          },
          "BotVersion": {
            "template": "${version}"
          },
          "BotId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-intent": [
      {
        "action": "lex:DeleteIntent",
        "resource_mappings": {
          "IntentName": {
            "template": "${name}"
          },
          "IntentVersion": {
            "template": "*"
          },
          "BotId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-intent-version": [
      {
        "action": "lex:DeleteIntentVersion",
        "resource_mappings": {
          "IntentName": {
            "template": "${name}"
          },
          "IntentVersion": {
            "template": "${version}"
          }
        }
      }
    ],
    "delete-slot-type": [
      {
        "action": "lex:DeleteSlotType",
        "resource_mappings": {
          "SlotName": {
            "template": "${name}"
          },
          "SlotVersion": {
            "template": "*"
          },
          "BotId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-slot-type-version": [
      {
        "action": "lex:DeleteSlotTypeVersion",
        "resource_mappings": {
          "SlotName": {
            "template": "${name}"
          },
          "SlotVersion": {
            "template": "${version}"
          }
        }
      }
    ],
    "delete-utterances": [
      {
        "action": "lex:DeleteUtterances",
        "resource_mappings": {
          "BotName": {
            "template": "${botName}"
          },
          "BotVersion": {
            "template": "*"
          }
        }
      }
    ],
    "get-bot": [
      {
        "action": "lex:GetBot",
        "resource_mappings": {
          "BotName": {
            "template": "${name}"
          },
          "BotAlias": {
            "template": "*"
          },
          "BotVersion": {
            "template": "*"
          }
        }
      }
    ],
    "get-bot-alias": [
      {
        "action": "lex:GetBotAlias",
        "resource_mappings": {
          "BotName": {
            "template": "${botName}"
          },
          "BotAlias": {
            "template": "${name}"
          }
        }
      }
    ],
    "get-bot-aliases": [
      {
        "action": "lex:GetBotAliases",
        "resource_mappings": {}
      }
    ],
    "get-bot-channel-association": [
      {
        "action": "lex:GetBotChannelAssociation",
        "resource_mappings": {
          "BotName": {
            "template": "${botName}"
          },
          "BotAlias": {
            "template": "${botAlias}"
          },
          "ChannelName": {
            "template": "${name}"
          }
        }
      }
    ],
    "get-bot-channel-associations": [
      {
        "action": "lex:GetBotChannelAssociations",
        "resource_mappings": {
          "BotName": {
            "template": "${botName}"
          },
          "BotAlias": {
            "template": "${botAlias}"
          },
          "ChannelName": {
            "template": "*"
          }
        }
      }
    ],
    "get-bot-versions": [
      {
        "action": "lex:GetBotVersions",
        "resource_mappings": {
          "BotName": {
            "template": "${name}"
          },
          "BotVersion": {
            "template": "*"
          }
        }
      }
    ],
    "get-bots": [
      {
        "action": "lex:GetBots",
        "resource_mappings": {}
      }
    ],
    "get-builtin-intent": [
      {
        "action": "lex:GetBuiltinIntent",
        "resource_mappings": {}
      }
    ],
    "get-builtin-intents": [
      {
        "action": "lex:GetBuiltinIntents",
        "resource_mappings": {}
      }
    ],
    "get-builtin-slot-types": [
      {
        "action": "lex:GetBuiltinSlotTypes",
        "resource_mappings": {}
      }
    ],
    "get-export": [
      {
        "action": "lex:GetExport",
        "resource_mappings": {
          "BotName": {
            "template": "${name}"
          },
          "BotVersion": {
            "template": "${version}"
          }
        }
      }
    ],
    "get-import": [
      {
        "action": "lex:GetImport",
        "resource_mappings": {}
      }
    ],
    "get-intent": [
      {
        "action": "lex:GetIntent",
        "resource_mappings": {
          "IntentName": {
            "template": "${name}"
          },
          "IntentVersion": {
            "template": "${version}"
          }
        }
      }
    ],
    "get-intent-versions": [
      {
        "action": "lex:GetIntentVersions",
        "resource_mappings": {
          "IntentName": {
            "template": "${name}"
          },
          "IntentVersion": {
            "template": "*"
          }
        }
      }
    ],
    "get-intents": [
      {
        "action": "lex:GetIntents",
        "resource_mappings": {}
      }
    ],
    "get-migration": [
      {
        "action": "lex:GetMigration",
        "resource_mappings": {}
      }
    ],
    "get-migrations": [
      {
        "action": "lex:GetMigrations",
        "resource_mappings": {}
      }
    ],
    "get-slot-type": [
      {
        "action": "lex:GetSlotType",
        "resource_mappings": {
          "SlotName": {
            "template": "${name}"
          },
          "SlotVersion": {
            "template": "${version}"
          }
        }
      }
    ],
    "get-slot-type-versions": [
      {
        "action": "lex:GetSlotTypeVersions",
        "resource_mappings": {
          "SlotName": {
            "template": "${name}"
          },
          "SlotVersion": {
            "template": "*"
          }
        }
      }
    ],
    "get-slot-types": [
      {
        "action": "lex:GetSlotTypes",
        "resource_mappings": {}
      }
    ],
    "get-utterances-view": [
      {
        "action": "lex:GetUtterancesView",
        "resource_mappings": {
          "BotName": {
            "template": "${botName}"
          },
          "BotVersion": {
            "template": "${botVersions[]}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "lex:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "bot": "%%iftemplatematch%${resourceArn}%%",
          "bot alias": "%%iftemplatematch%${resourceArn}%%",
          "channel": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "put-bot": [
      {
        "action": "lex:PutBot",
        "resource_mappings": {
          "BotName": {
            "template": "${name}"
          },
          "BotVersion": {
            "template": "*"
          }
        }
      }
    ],
    "put-bot-alias": [
      {
        "action": "lex:PutBotAlias",
        "resource_mappings": {
          "BotName": {
            "template": "${botName}"
          },
          "BotAlias": {
            "template": "${name}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${conversationLogs.iamRoleArn}"
        }
      }
    ],
    "put-intent": [
      {
        "action": "lex:PutIntent",
        "resource_mappings": {
          "IntentName": {
            "template": "${name}"
          },
          "IntentVersion": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${kendraConfiguration.role}"
        }
      }
    ],
    "put-slot-type": [
      {
        "action": "lex:PutSlotType",
        "resource_mappings": {
          "SlotName": {
            "template": "${name}"
          },
          "SlotVersion": {
            "template": "*"
          }
        }
      }
    ],
    "start-import": [
      {
        "action": "lex:StartImport",
        "resource_mappings": {}
      }
    ],
    "start-migration": [
      {
        "action": "lex:StartMigration",
        "resource_mappings": {
          "BotName": {
            "template": "%%many%${v1BotName}%${v2BotName}%%"
          },
          "BotVersion": {
            "template": "${v1BotVersion}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "lex:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "bot": "%%iftemplatematch%${resourceArn}%%",
          "bot alias": "%%iftemplatematch%${resourceArn}%%",
          "channel": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "lex:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "bot": "%%iftemplatematch%${resourceArn}%%",
          "bot alias": "%%iftemplatematch%${resourceArn}%%",
          "channel": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ]
  },
  "lex-runtime": {
    "delete-session": [
      {
        "action": "lex:DeleteSession",
        "resource_mappings": {
          "BotName": {
            "template": "${botName}"
          },
          "BotAlias": {
            "template": "${botAlias}"
          },
          "BotVersion": {
            "template": "*"
          },
          "BotId": {
            "template": "*"
          },
          "BotAliasId": {
            "template": "*"
          }
        }
      }
    ],
    "get-session": [
      {
        "action": "lex:GetSession",
        "resource_mappings": {
          "BotName": {
            "template": "${botName}"
          },
          "BotAlias": {
            "template": "${botAlias}"
          },
          "BotVersion": {
            "template": "*"
          },
          "BotId": {
            "template": "*"
          },
          "BotAliasId": {
            "template": "*"
          }
        }
      }
    ],
    "post-content": [
      {
        "action": "lex:PostContent",
        "resource_mappings": {
          "BotName": {
            "template": "${botName}"
          },
          "BotAlias": {
            "template": "${botAlias}"
          },
          "BotVersion": {
            "template": "*"
          }
        }
      }
    ],
    "post-text": [
      {
        "action": "lex:PostText",
        "resource_mappings": {
          "BotName": {
            "template": "${botName}"
          },
          "BotAlias": {
            "template": "${botAlias}"
          },
          "BotVersion": {
            "template": "*"
          }
        }
      }
    ],
    "put-session": [
      {
        "action": "lex:PutSession",
        "resource_mappings": {
          "BotName": {
            "template": "${botName}"
          },
          "BotAlias": {
            "template": "${botAlias}"
          },
          "BotVersion": {
            "template": "*"
          },
          "BotId": {
            "template": "*"
          },
          "BotAliasId": {
            "template": "*"
          }
        }
      }
    ]
  },
  "lexv2-models": {
    "batch-create-custom-vocabulary-item": [
      {
        "action": "lex:BatchCreateCustomVocabularyItem",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "batch-delete-custom-vocabulary-item": [
      {
        "action": "lex:BatchDeleteCustomVocabularyItem",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "batch-update-custom-vocabulary-item": [
      {
        "action": "lex:BatchUpdateCustomVocabularyItem",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "build-bot-locale": [
      {
        "action": "lex:BuildBotLocale",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "create-bot": [
      {
        "action": "lex:PutBot",
        "resource_mappings": {
          "BotName": {
            "template": "${botName}"
          },
          "BotVersion": {
            "template": "*"
          }
        }
      }
    ],
    "create-bot-alias": [
      {
        "action": "lex:PutBotAlias",
        "resource_mappings": {
          "BotName": {
            "template": "*"
          },
          "BotAlias": {
            "template": "${botAliasName}"
          }
        }
      }
    ],
    "create-bot-locale": [
      {
        "action": "lex:CreateBotLocale",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "create-bot-version": [
      {
        "action": "lex:CreateBotVersion",
        "resource_mappings": {
          "BotName": {
            "template": "*"
          },
          "BotVersion": {
            "template": "*"
          },
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "create-export": [
      {
        "action": "lex:CreateExport",
        "resource_mappings": {
          "BotId": {
            "template": "%%many%${resourceSpecification.botExportSpecification.botId}%${resourceSpecification.botLocaleExportSpecification.botId}%%"
          }
        }
      }
    ],
    "create-intent": [
      {
        "action": "lex:PutIntent",
        "resource_mappings": {
          "IntentName": {
            "template": "${intentName}"
          },
          "IntentVersion": {
            "template": "*"
          }
        }
      }
    ],
    "create-resource-policy": [
      {
        "action": "lex:CreateResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "bot": "%%iftemplatematch%${resourceArn}%%",
          "bot alias": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "create-resource-policy-statement": [
      {
        "action": "lex:CreateResourcePolicy",
        "undocumented": true,
        "arn_override": {
          "template": "${resourceArn}"
        }
      }
    ],
    "create-slot": [
      {
        "action": "lex:CreateSlot",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "create-slot-type": [
      {
        "action": "lex:PutSlotType",
        "resource_mappings": {
          "SlotName": {
            "template": "${slotTypeName}"
          },
          "SlotVersion": {
            "template": "*"
          }
        }
      }
    ],
    "create-test-set-discrepancy-report": [
      {
        "action": "lex:CreateTestSetDiscrepancyReport",
        "resource_mappings": {
          "TestSetId": {
            "template": "${testSetId}"
          }
        }
      }
    ],
    "create-upload-url": [
      {
        "action": "lex:CreateUploadUrl",
        "resource_mappings": {}
      }
    ],
    "delete-bot": [
      {
        "action": "lex:DeleteBot",
        "resource_mappings": {
          "BotName": {
            "template": "*"
          },
          "BotVersion": {
            "template": "*"
          },
          "BotId": {
            "template": "${botId}"
          },
          "BotAliasId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-bot-alias": [
      {
        "action": "lex:DeleteBotAlias",
        "resource_mappings": {
          "BotName": {
            "template": "*"
          },
          "BotAlias": {
            "template": "*"
          },
          "BotId": {
            "template": "${botId}"
          },
          "BotAliasId": {
            "template": "${botAliasId}"
          }
        }
      }
    ],
    "delete-bot-locale": [
      {
        "action": "lex:DeleteBotLocale",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "delete-bot-version": [
      {
        "action": "lex:DeleteBotVersion",
        "resource_mappings": {
          "BotName": {
            "template": "*"
          },
          "BotVersion": {
            "template": "${botVersion}"
          },
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "delete-custom-vocabulary": [
      {
        "action": "lex:DeleteCustomVocabulary",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "delete-export": [
      {
        "action": "lex:DeleteExport",
        "resource_mappings": {
          "BotId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-import": [
      {
        "action": "lex:DeleteImport",
        "resource_mappings": {
          "BotId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-intent": [
      {
        "action": "lex:DeleteIntent",
        "resource_mappings": {
          "IntentName": {
            "template": "*"
          },
          "IntentVersion": {
            "template": "*"
          },
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "delete-resource-policy": [
      {
        "action": "lex:DeleteResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "bot": "%%iftemplatematch%${resourceArn}%%",
          "bot alias": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "delete-resource-policy-statement": [
      {
        "action": "lex:DeleteResourcePolicy",
        "undocumented": true,
        "arn_override": {
          "template": "${resourceArn}"
        }
      }
    ],
    "delete-slot": [
      {
        "action": "lex:DeleteSlot",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "delete-slot-type": [
      {
        "action": "lex:DeleteSlotType",
        "resource_mappings": {
          "SlotName": {
            "template": "*"
          },
          "SlotVersion": {
            "template": "*"
          },
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "delete-test-set": [
      {
        "action": "lex:DeleteTestSet",
        "resource_mappings": {
          "TestSetId": {
            "template": "${testSetId}"
          }
        }
      }
    ],
    "delete-utterances": [
      {
        "action": "lex:DeleteUtterances",
        "resource_mappings": {
          "BotName": {
            "template": "*"
          },
          "BotVersion": {
            "template": "*"
          }
        }
      }
    ],
    "describe-bot": [
      {
        "action": "lex:DescribeBot",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "describe-bot-alias": [
      {
        "action": "lex:DescribeBotAlias",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          },
          "BotAliasId": {
            "template": "${botAliasId}"
          }
        }
      }
    ],
    "describe-bot-locale": [
      {
        "action": "lex:DescribeBotLocale",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "describe-bot-recommendation": [
      {
        "action": "lex:DescribeBotRecommendation",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "describe-bot-version": [
      {
        "action": "lex:DescribeBotVersion",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "describe-custom-vocabulary-metadata": [
      {
        "action": "lex:DescribeCustomVocabularyMetadata",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "describe-export": [
      {
        "action": "lex:DescribeExport",
        "resource_mappings": {
          "BotId": {
            "template": "*"
          }
        }
      },
      {
        "action": "lex:DescribeBot",
        "resource_mappings": {
          "BotId": {
            "template": "*"
          }
        }
      },
      {
        "action": "lex:DescribeBotLocale",
        "resource_mappings": {
          "BotId": {
            "template": "*"
          }
        }
      },
      {
        "action": "lex:DescribeIntent",
        "resource_mappings": {
          "BotId": {
            "template": "*"
          }
        }
      },
      {
        "action": "lex:DescribeSlot",
        "resource_mappings": {
          "BotId": {
            "template": "*"
          }
        }
      },
      {
        "action": "lex:DescribeSlotType",
        "resource_mappings": {
          "BotId": {
            "template": "*"
          }
        }
      },
      {
        "action": "lex:ListBotLocales",
        "resource_mappings": {
          "BotId": {
            "template": "*"
          }
        }
      },
      {
        "action": "lex:ListIntents",
        "resource_mappings": {
          "BotId": {
            "template": "*"
          }
        }
      },
      {
        "action": "lex:ListSlotTypes",
        "resource_mappings": {
          "BotId": {
            "template": "*"
          }
        }
      },
      {
        "action": "lex:ListSlots",
        "resource_mappings": {
          "BotId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-import": [
      {
        "action": "lex:DescribeImport",
        "resource_mappings": {
          "BotId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-intent": [
      {
        "action": "lex:GetIntent",
        "resource_mappings": {
          "IntentName": {
            "template": "*"
          },
          "IntentVersion": {
            "template": "*"
          }
        }
      }
    ],
    "describe-resource-policy": [
      {
        "action": "lex:DescribeResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "bot": "%%iftemplatematch%${resourceArn}%%",
          "bot alias": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "describe-slot": [
      {
        "action": "lex:DescribeSlot",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "describe-slot-type": [
      {
        "action": "lex:GetSlotType",
        "resource_mappings": {
          "SlotName": {
            "template": "*"
          },
          "SlotVersion": {
            "template": "*"
          }
        }
      }
    ],
    "describe-test-execution": [
      {
        "action": "lex:DescribeTestExecution",
        "resource_mappings": {
          "TestSetId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-test-set": [
      {
        "action": "lex:DescribeTestSet",
        "resource_mappings": {
          "TestSetId": {
            "template": "${testSetId}"
          }
        }
      }
    ],
    "describe-test-set-discrepancy-report": [
      {
        "action": "lex:DescribeTestSetDiscrepancyReport",
        "resource_mappings": {
          "TestSetId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-test-set-generation": [
      {
        "action": "lex:DescribeTestSetGeneration",
        "resource_mappings": {
          "TestSetId": {
            "template": "*"
          }
        }
      }
    ],
    "get-test-execution-artifacts-url": [
      {
        "action": "lex:GetTestExecutionArtifactsUrl",
        "resource_mappings": {
          "TestSetId": {
            "template": "*"
          }
        }
      }
    ],
    "list-aggregated-utterances": [
      {
        "action": "lex:ListAggregatedUtterances",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "list-bot-aliases": [
      {
        "action": "lex:ListBotAliases",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "list-bot-locales": [
      {
        "action": "lex:ListBotLocales",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "list-bot-recommendations": [
      {
        "action": "lex:ListBotRecommendations",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "list-bot-versions": [
      {
        "action": "lex:GetBotVersions",
        "resource_mappings": {
          "BotName": {
            "template": "*"
          },
          "BotVersion": {
            "template": "*"
          }
        }
      }
    ],
    "list-bots": [
      {
        "action": "lex:GetBots",
        "resource_mappings": {}
      }
    ],
    "list-built-in-intents": [
      {
        "action": "lex:GetBuiltinIntents",
        "resource_mappings": {}
      }
    ],
    "list-built-in-slot-types": [
      {
        "action": "lex:GetBuiltinSlotTypes",
        "resource_mappings": {}
      }
    ],
    "list-custom-vocabulary-items": [
      {
        "action": "lex:ListCustomVocabularyItems",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "list-exports": [
      {
        "action": "lex:ListExports",
        "resource_mappings": {}
      }
    ],
    "list-imports": [
      {
        "action": "lex:ListImports",
        "resource_mappings": {}
      }
    ],
    "list-intent-metrics": [
      {
        "action": "lex:ListIntentMetrics",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "list-intent-paths": [
      {
        "action": "lex:ListIntentPaths",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "list-intent-stage-metrics": [
      {
        "action": "lex:ListIntentStageMetrics",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "list-intents": [
      {
        "action": "lex:GetIntents",
        "resource_mappings": {}
      }
    ],
    "list-recommended-intents": [
      {
        "action": "lex:ListRecommendedIntents",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "list-session-analytics-data": [
      {
        "action": "lex:ListSessionAnalyticsData",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "list-session-metrics": [
      {
        "action": "lex:ListSessionMetrics",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "list-slot-types": [
      {
        "action": "lex:GetSlotTypes",
        "resource_mappings": {}
      }
    ],
    "list-slots": [
      {
        "action": "lex:ListSlots",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "lex:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "bot": "%%iftemplatematch%${resourceARN}%%",
          "bot alias": "%%iftemplatematch%${resourceARN}%%",
          "channel": "%%iftemplatematch%${resourceARN}%%"
        }
      }
    ],
    "list-test-execution-result-items": [
      {
        "action": "lex:ListTestExecutionResultItems",
        "resource_mappings": {
          "TestSetId": {
            "template": "*"
          }
        }
      },
      {
        "action": "lex:ListTestSetRecords",
        "resource_mappings": {
          "TestSetId": {
            "template": "*"
          }
        }
      }
    ],
    "list-test-executions": [
      {
        "action": "lex:ListTestExecutions",
        "resource_mappings": {}
      }
    ],
    "list-test-set-records": [
      {
        "action": "lex:ListTestSetRecords",
        "resource_mappings": {
          "TestSetId": {
            "template": "${testSetId}"
          }
        }
      }
    ],
    "list-test-sets": [
      {
        "action": "lex:ListTestSets",
        "resource_mappings": {}
      }
    ],
    "list-utterance-analytics-data": [
      {
        "note": "NotFound",
        "action": "Lex Models V2:ListUtteranceAnalyticsData",
        "resource_mappings": {}
      }
    ],
    "list-utterance-metrics": [
      {
        "note": "NotFound",
        "action": "Lex Models V2:ListUtteranceMetrics",
        "resource_mappings": {}
      }
    ],
    "search-associated-transcripts": [
      {
        "action": "lex:SearchAssociatedTranscripts",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "start-bot-recommendation": [
      {
        "action": "lex:StartBotRecommendation",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "start-import": [
      {
        "note": "NotFound",
        "action": "Lex Models V2:StartImport",
        "resource_mappings": {}
      }
    ],
    "start-test-execution": [
      {
        "action": "lex:StartTestExecution",
        "resource_mappings": {
          "TestSetId": {
            "template": "${testSetId}"
          }
        }
      }
    ],
    "start-test-set-generation": [
      {
        "note": "NotFound",
        "action": "Lex Models V2:StartTestSetGeneration",
        "resource_mappings": {}
      }
    ],
    "stop-bot-recommendation": [
      {
        "action": "lex:StopBotRecommendation",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "lex:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "bot": "%%iftemplatematch%${resourceARN}%%",
          "bot alias": "%%iftemplatematch%${resourceARN}%%",
          "channel": "%%iftemplatematch%${resourceARN}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "lex:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "bot": "%%iftemplatematch%${resourceARN}%%",
          "bot alias": "%%iftemplatematch%${resourceARN}%%",
          "channel": "%%iftemplatematch%${resourceARN}%%"
        }
      }
    ],
    "update-bot": [
      {
        "action": "lex:PutBot",
        "resource_mappings": {
          "BotName": {
            "template": "*"
          },
          "BotVersion": {
            "template": "*"
          }
        }
      }
    ],
    "update-bot-alias": [
      {
        "action": "lex:PutBotAlias",
        "resource_mappings": {
          "BotName": {
            "template": "*"
          },
          "BotAlias": {
            "template": "*"
          }
        }
      }
    ],
    "update-bot-locale": [
      {
        "action": "lex:UpdateBotLocale",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "update-bot-recommendation": [
      {
        "action": "lex:UpdateBotRecommendation",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "update-export": [
      {
        "action": "lex:UpdateExport",
        "resource_mappings": {
          "BotId": {
            "template": "*"
          }
        }
      }
    ],
    "update-intent": [
      {
        "action": "lex:PutIntent",
        "resource_mappings": {
          "IntentName": {
            "template": "*"
          },
          "IntentVersion": {
            "template": "*"
          }
        }
      }
    ],
    "update-resource-policy": [
      {
        "action": "lex:UpdateResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "bot": "%%iftemplatematch%${resourceArn}%%",
          "bot alias": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-slot": [
      {
        "action": "lex:UpdateSlot",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          }
        }
      }
    ],
    "update-slot-type": [
      {
        "action": "lex:PutSlotType",
        "resource_mappings": {
          "SlotName": {
            "template": "*"
          },
          "SlotVersion": {
            "template": "*"
          }
        }
      }
    ],
    "update-test-set": [
      {
        "action": "lex:UpdateTestSet",
        "resource_mappings": {
          "TestSetId": {
            "template": "${testSetId}"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "lex:DescribeBotAlias",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          },
          "BotAliasId": {
            "template": "${botAliasId}"
          }
        }
      }
    ]
  },
  "lexv2-runtime": {
    "delete-session": [
      {
        "action": "lex:DeleteSession",
        "resource_mappings": {
          "BotName": {
            "template": "*"
          },
          "BotAlias": {
            "template": "*"
          },
          "BotVersion": {
            "template": "*"
          },
          "BotId": {
            "template": "${botId}"
          },
          "BotAliasId": {
            "template": "${botAliasId}"
          }
        }
      }
    ],
    "get-session": [
      {
        "action": "lex:GetSession",
        "resource_mappings": {
          "BotName": {
            "template": "*"
          },
          "BotAlias": {
            "template": "*"
          },
          "BotVersion": {
            "template": "*"
          },
          "BotId": {
            "template": "${botId}"
          },
          "BotAliasId": {
            "template": "${botAliasId}"
          }
        }
      }
    ],
    "put-session": [
      {
        "action": "lex:PutSession",
        "resource_mappings": {
          "BotName": {
            "template": "*"
          },
          "BotAlias": {
            "template": "*"
          },
          "BotVersion": {
            "template": "*"
          },
          "BotId": {
            "template": "${botId}"
          },
          "BotAliasId": {
            "template": "${botAliasId}"
          }
        }
      }
    ],
    "recognize-text": [
      {
        "action": "lex:RecognizeText",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          },
          "BotAliasId": {
            "template": "${botAliasId}"
          }
        }
      }
    ],
    "recognize-utterance": [
      {
        "action": "lex:RecognizeUtterance",
        "resource_mappings": {
          "BotId": {
            "template": "${botId}"
          },
          "BotAliasId": {
            "template": "${botAliasId}"
          }
        }
      }
    ]
  },
  "license-manager": {
    "accept-grant": [
      {
        "action": "license-manager:AcceptGrant",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "grant": "${GrantArn}"
        }
      }
    ],
    "check-in-license": [
      {
        "action": "license-manager:CheckInLicense",
        "resource_mappings": {}
      }
    ],
    "checkout-borrow-license": [
      {
        "action": "license-manager:CheckoutBorrowLicense",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "license": "${LicenseArn}"
        }
      }
    ],
    "checkout-license": [
      {
        "action": "license-manager:CheckoutLicense",
        "resource_mappings": {}
      }
    ],
    "create-grant": [
      {
        "action": "license-manager:CreateGrant",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "license": "${LicenseArn}"
        }
      }
    ],
    "create-grant-version": [
      {
        "action": "license-manager:CreateGrantVersion",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "grant": "${GrantArn}"
        }
      }
    ],
    "create-license": [
      {
        "action": "license-manager:CreateLicense",
        "resource_mappings": {}
      }
    ],
    "create-license-configuration": [
      {
        "action": "license-manager:CreateLicenseConfiguration",
        "resource_mappings": {}
      }
    ],
    "create-license-conversion-task-for-resource": [
      {
        "action": "license-manager:CreateLicenseConversionTaskForResource",
        "resource_mappings": {}
      }
    ],
    "create-license-manager-report-generator": [
      {
        "action": "license-manager:CreateLicenseManagerReportGenerator",
        "resource_mappings": {}
      }
    ],
    "create-license-version": [
      {
        "action": "license-manager:CreateLicenseVersion",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "license": "${LicenseArn}"
        }
      }
    ],
    "create-token": [
      {
        "action": "license-manager:CreateToken",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "license": "${LicenseArn}"
        }
      }
    ],
    "delete-grant": [
      {
        "action": "license-manager:DeleteGrant",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "grant": "${GrantArn}"
        }
      }
    ],
    "delete-license": [
      {
        "action": "license-manager:DeleteLicense",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "license": "${LicenseArn}"
        }
      }
    ],
    "delete-license-configuration": [
      {
        "action": "license-manager:DeleteLicenseConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "license-configuration": "${LicenseConfigurationArn}"
        }
      }
    ],
    "delete-license-manager-report-generator": [
      {
        "action": "license-manager:DeleteLicenseManagerReportGenerator",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "report-generator": "${LicenseManagerReportGeneratorArn}"
        }
      }
    ],
    "delete-token": [
      {
        "action": "license-manager:DeleteToken",
        "resource_mappings": {}
      }
    ],
    "extend-license-consumption": [
      {
        "action": "license-manager:ExtendLicenseConsumption",
        "resource_mappings": {}
      }
    ],
    "get-access-token": [
      {
        "action": "license-manager:GetAccessToken",
        "resource_mappings": {}
      }
    ],
    "get-grant": [
      {
        "action": "license-manager:GetGrant",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "grant": "${GrantArn}"
        }
      }
    ],
    "get-license": [
      {
        "action": "license-manager:GetLicense",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "license": "${LicenseArn}"
        }
      }
    ],
    "get-license-configuration": [
      {
        "action": "license-manager:GetLicenseConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "license-configuration": "${LicenseConfigurationArn}"
        }
      }
    ],
    "get-license-conversion-task": [
      {
        "action": "license-manager:GetLicenseConversionTask",
        "resource_mappings": {}
      }
    ],
    "get-license-manager-report-generator": [
      {
        "action": "license-manager:GetLicenseManagerReportGenerator",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "report-generator": "${LicenseManagerReportGeneratorArn}"
        }
      }
    ],
    "get-license-usage": [
      {
        "action": "license-manager:GetLicenseUsage",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "license": "${LicenseArn}"
        }
      }
    ],
    "get-service-settings": [
      {
        "action": "license-manager:GetServiceSettings",
        "resource_mappings": {}
      }
    ],
    "list-associations-for-license-configuration": [
      {
        "action": "license-manager:ListAssociationsForLicenseConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "license-configuration": "${LicenseConfigurationArn}"
        }
      }
    ],
    "list-distributed-grants": [
      {
        "action": "license-manager:ListDistributedGrants",
        "resource_mappings": {}
      }
    ],
    "list-failures-for-license-configuration-operations": [
      {
        "action": "license-manager:ListFailuresForLicenseConfigurationOperations",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "license-configuration": "${LicenseConfigurationArn}"
        }
      }
    ],
    "list-license-configurations": [
      {
        "action": "license-manager:ListLicenseConfigurations",
        "resource_mappings": {}
      }
    ],
    "list-license-conversion-tasks": [
      {
        "action": "license-manager:ListLicenseConversionTasks",
        "resource_mappings": {}
      }
    ],
    "list-license-manager-report-generators": [
      {
        "action": "license-manager:ListLicenseManagerReportGenerators",
        "resource_mappings": {
          "LicenseConfigurationId": {
            "template": "*"
          }
        }
      }
    ],
    "list-license-specifications-for-resource": [
      {
        "action": "license-manager:ListLicenseSpecificationsForResource",
        "resource_mappings": {}
      }
    ],
    "list-license-versions": [
      {
        "action": "license-manager:ListLicenseVersions",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "license": "${LicenseArn}"
        }
      }
    ],
    "list-licenses": [
      {
        "action": "license-manager:ListLicenses",
        "resource_mappings": {}
      }
    ],
    "list-received-grants": [
      {
        "action": "license-manager:ListReceivedGrants",
        "resource_mappings": {}
      }
    ],
    "list-received-grants-for-organization": [
      {
        "action": "license-manager:ListReceivedGrantsForOrganization",
        "resource_mappings": {}
      }
    ],
    "list-received-licenses": [
      {
        "action": "license-manager:ListReceivedLicenses",
        "resource_mappings": {}
      }
    ],
    "list-received-licenses-for-organization": [
      {
        "action": "license-manager:ListReceivedLicensesForOrganization",
        "resource_mappings": {}
      }
    ],
    "list-resource-inventory": [
      {
        "action": "license-manager:ListResourceInventory",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "license-manager:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "license-configuration": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "list-tokens": [
      {
        "action": "license-manager:ListTokens",
        "resource_mappings": {}
      }
    ],
    "list-usage-for-license-configuration": [
      {
        "action": "license-manager:ListUsageForLicenseConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "license-configuration": "${LicenseConfigurationArn}"
        }
      }
    ],
    "reject-grant": [
      {
        "action": "license-manager:RejectGrant",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "grant": "${GrantArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "license-manager:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "license-configuration": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "license-manager:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "license-configuration": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-license-configuration": [
      {
        "action": "license-manager:UpdateLicenseConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "license-configuration": "${LicenseConfigurationArn}"
        }
      }
    ],
    "update-license-manager-report-generator": [
      {
        "action": "license-manager:UpdateLicenseManagerReportGenerator",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "report-generator": "${LicenseManagerReportGeneratorArn}"
        }
      }
    ],
    "update-license-specifications-for-resource": [
      {
        "action": "license-manager:UpdateLicenseSpecificationsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "license-configuration": "%%many%${AddLicenseSpecifications[].LicenseConfigurationArn}%${RemoveLicenseSpecifications[].LicenseConfigurationArn}%%"
        }
      }
    ],
    "update-service-settings": [
      {
        "action": "license-manager:UpdateServiceSettings",
        "resource_mappings": {}
      }
    ]
  },
  "license-manager-linux-subscriptions": {
    "get-service-settings": [
      {
        "action": "license-manager-linux-subscriptions:GetServiceSettings",
        "resource_mappings": {}
      }
    ],
    "list-linux-subscription-instances": [
      {
        "action": "license-manager-linux-subscriptions:ListLinuxSubscriptionInstances",
        "resource_mappings": {}
      }
    ],
    "list-linux-subscriptions": [
      {
        "action": "license-manager-linux-subscriptions:ListLinuxSubscriptions",
        "resource_mappings": {}
      }
    ],
    "update-service-settings": [
      {
        "action": "license-manager-linux-subscriptions:UpdateServiceSettings",
        "resource_mappings": {}
      }
    ]
  },
  "license-manager-user-subscriptions": {
    "associate-user": [
      {
        "action": "license-manager-user-subscriptions:AssociateUser",
        "resource_mappings": {}
      }
    ],
    "deregister-identity-provider": [
      {
        "action": "license-manager-user-subscriptions:DeregisterIdentityProvider",
        "resource_mappings": {}
      }
    ],
    "disassociate-user": [
      {
        "action": "license-manager-user-subscriptions:DisassociateUser",
        "resource_mappings": {}
      }
    ],
    "list-identity-providers": [
      {
        "action": "license-manager-user-subscriptions:ListIdentityProviders",
        "resource_mappings": {}
      }
    ],
    "list-instances": [
      {
        "action": "license-manager-user-subscriptions:ListInstances",
        "resource_mappings": {}
      }
    ],
    "list-product-subscriptions": [
      {
        "action": "license-manager-user-subscriptions:ListProductSubscriptions",
        "resource_mappings": {}
      }
    ],
    "list-user-associations": [
      {
        "action": "license-manager-user-subscriptions:ListUserAssociations",
        "resource_mappings": {}
      }
    ],
    "register-identity-provider": [
      {
        "action": "license-manager-user-subscriptions:RegisterIdentityProvider",
        "resource_mappings": {}
      }
    ],
    "start-product-subscription": [
      {
        "action": "license-manager-user-subscriptions:StartProductSubscription",
        "resource_mappings": {}
      }
    ],
    "stop-product-subscription": [
      {
        "action": "license-manager-user-subscriptions:StopProductSubscription",
        "resource_mappings": {}
      }
    ],
    "update-identity-provider-settings": [
      {
        "action": "license-manager-user-subscriptions:UpdateIdentityProviderSettings",
        "resource_mappings": {}
      }
    ]
  },
  "lightsail": {
    "allocate-static-ip": [
      {
        "action": "lightsail:AllocateStaticIp",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "attach-certificate-to-distribution": [
      {
        "action": "lightsail:AttachCertificateToDistribution",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "attach-disk": [
      {
        "action": "lightsail:AttachDisk",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "attach-instances-to-load-balancer": [
      {
        "action": "lightsail:AttachInstancesToLoadBalancer",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "attach-load-balancer-tls-certificate": [
      {
        "action": "lightsail:AttachLoadBalancerTlsCertificate",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "attach-static-ip": [
      {
        "action": "lightsail:AttachStaticIp",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "close-instance-public-ports": [
      {
        "action": "lightsail:CloseInstancePublicPorts",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "copy-snapshot": [
      {
        "action": "lightsail:CopySnapshot",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-bucket": [
      {
        "action": "lightsail:CreateBucket",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-bucket-access-key": [
      {
        "action": "lightsail:CreateBucketAccessKey",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-certificate": [
      {
        "action": "lightsail:CreateCertificate",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-cloud-formation-stack": [
      {
        "action": "lightsail:CreateCloudFormationStack",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-contact-method": [
      {
        "action": "lightsail:CreateContactMethod",
        "resource_mappings": {}
      }
    ],
    "create-container-service": [
      {
        "action": "lightsail:CreateContainerService",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-container-service-deployment": [
      {
        "action": "lightsail:CreateContainerServiceDeployment",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-container-service-registry-login": [
      {
        "action": "lightsail:CreateContainerServiceRegistryLogin",
        "resource_mappings": {}
      }
    ],
    "create-disk": [
      {
        "action": "lightsail:CreateDisk",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-disk-from-snapshot": [
      {
        "action": "lightsail:CreateDiskFromSnapshot",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-disk-snapshot": [
      {
        "action": "lightsail:CreateDiskSnapshot",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-distribution": [
      {
        "action": "lightsail:CreateDistribution",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-domain": [
      {
        "action": "lightsail:CreateDomain",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-domain-entry": [
      {
        "action": "lightsail:CreateDomainEntry",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-gui-session-access-details": [
      {
        "action": "lightsail:CreateGUISessionAccessDetails",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-instance-snapshot": [
      {
        "action": "lightsail:CreateInstanceSnapshot",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-instances": [
      {
        "action": "lightsail:CreateInstances",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-instances-from-snapshot": [
      {
        "action": "lightsail:CreateInstancesFromSnapshot",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-key-pair": [
      {
        "action": "lightsail:CreateKeyPair",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-load-balancer": [
      {
        "action": "lightsail:CreateLoadBalancer",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-load-balancer-tls-certificate": [
      {
        "action": "lightsail:CreateLoadBalancerTlsCertificate",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-relational-database": [
      {
        "action": "lightsail:CreateRelationalDatabase",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-relational-database-from-snapshot": [
      {
        "action": "lightsail:CreateRelationalDatabaseFromSnapshot",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-relational-database-snapshot": [
      {
        "action": "lightsail:CreateRelationalDatabaseSnapshot",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-alarm": [
      {
        "action": "lightsail:DeleteAlarm",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-auto-snapshot": [
      {
        "action": "lightsail:DeleteAutoSnapshot",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-bucket": [
      {
        "action": "lightsail:DeleteBucket",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-bucket-access-key": [
      {
        "action": "lightsail:DeleteBucketAccessKey",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-certificate": [
      {
        "action": "lightsail:DeleteCertificate",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-contact-method": [
      {
        "action": "lightsail:DeleteContactMethod",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-container-image": [
      {
        "action": "lightsail:DeleteContainerImage",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-container-service": [
      {
        "action": "lightsail:DeleteContainerService",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-disk": [
      {
        "action": "lightsail:DeleteDisk",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-disk-snapshot": [
      {
        "action": "lightsail:DeleteDiskSnapshot",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-distribution": [
      {
        "action": "lightsail:DeleteDistribution",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-domain": [
      {
        "action": "lightsail:DeleteDomain",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-domain-entry": [
      {
        "action": "lightsail:DeleteDomainEntry",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-instance": [
      {
        "action": "lightsail:DeleteInstance",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-instance-snapshot": [
      {
        "action": "lightsail:DeleteInstanceSnapshot",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-key-pair": [
      {
        "action": "lightsail:DeleteKeyPair",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-known-host-keys": [
      {
        "action": "lightsail:DeleteKnownHostKeys",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-load-balancer": [
      {
        "action": "lightsail:DeleteLoadBalancer",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-load-balancer-tls-certificate": [
      {
        "action": "lightsail:DeleteLoadBalancerTlsCertificate",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-relational-database": [
      {
        "action": "lightsail:DeleteRelationalDatabase",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-relational-database-snapshot": [
      {
        "action": "lightsail:DeleteRelationalDatabaseSnapshot",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "detach-certificate-from-distribution": [
      {
        "action": "lightsail:DetachCertificateFromDistribution",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "detach-disk": [
      {
        "action": "lightsail:DetachDisk",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "detach-instances-from-load-balancer": [
      {
        "action": "lightsail:DetachInstancesFromLoadBalancer",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "detach-static-ip": [
      {
        "action": "lightsail:DetachStaticIp",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "disable-add-on": [
      {
        "action": "lightsail:DisableAddOn",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "download-default-key-pair": [
      {
        "action": "lightsail:DownloadDefaultKeyPair",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "enable-add-on": [
      {
        "action": "lightsail:EnableAddOn",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "export-snapshot": [
      {
        "action": "lightsail:ExportSnapshot",
        "resource_mappings": {}
      }
    ],
    "get-active-names": [
      {
        "action": "lightsail:GetActiveNames",
        "resource_mappings": {}
      }
    ],
    "get-alarms": [
      {
        "action": "lightsail:GetAlarms",
        "resource_mappings": {}
      }
    ],
    "get-auto-snapshots": [
      {
        "action": "lightsail:GetAutoSnapshots",
        "resource_mappings": {}
      }
    ],
    "get-blueprints": [
      {
        "action": "lightsail:GetBlueprints",
        "resource_mappings": {}
      }
    ],
    "get-bucket-access-keys": [
      {
        "action": "lightsail:GetBucketAccessKeys",
        "resource_mappings": {}
      }
    ],
    "get-bucket-bundles": [
      {
        "action": "lightsail:GetBucketBundles",
        "resource_mappings": {}
      }
    ],
    "get-bucket-metric-data": [
      {
        "action": "lightsail:GetBucketMetricData",
        "resource_mappings": {}
      }
    ],
    "get-buckets": [
      {
        "action": "lightsail:GetBuckets",
        "resource_mappings": {}
      }
    ],
    "get-bundles": [
      {
        "action": "lightsail:GetBundles",
        "resource_mappings": {}
      }
    ],
    "get-certificates": [
      {
        "action": "lightsail:GetCertificates",
        "resource_mappings": {}
      }
    ],
    "get-cloud-formation-stack-records": [
      {
        "action": "lightsail:GetCloudFormationStackRecords",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-contact-methods": [
      {
        "action": "lightsail:GetContactMethods",
        "resource_mappings": {}
      }
    ],
    "get-container-api-metadata": [
      {
        "action": "lightsail:GetContainerAPIMetadata",
        "resource_mappings": {}
      }
    ],
    "get-container-images": [
      {
        "action": "lightsail:GetContainerImages",
        "resource_mappings": {}
      }
    ],
    "get-container-log": [
      {
        "action": "lightsail:GetContainerLog",
        "resource_mappings": {}
      }
    ],
    "get-container-service-deployments": [
      {
        "action": "lightsail:GetContainerServiceDeployments",
        "resource_mappings": {}
      }
    ],
    "get-container-service-metric-data": [
      {
        "action": "lightsail:GetContainerServiceMetricData",
        "resource_mappings": {}
      }
    ],
    "get-container-service-powers": [
      {
        "action": "lightsail:GetContainerServicePowers",
        "resource_mappings": {}
      }
    ],
    "get-container-services": [
      {
        "action": "lightsail:GetContainerServices",
        "resource_mappings": {}
      }
    ],
    "get-cost-estimate": [
      {
        "action": "lightsail:GetCostEstimate",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-disk": [
      {
        "action": "lightsail:GetDisk",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-disk-snapshot": [
      {
        "action": "lightsail:GetDiskSnapshot",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-disk-snapshots": [
      {
        "action": "lightsail:GetDiskSnapshots",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-disks": [
      {
        "action": "lightsail:GetDisks",
        "resource_mappings": {}
      }
    ],
    "get-distribution-bundles": [
      {
        "action": "lightsail:GetDistributionBundles",
        "resource_mappings": {}
      }
    ],
    "get-distribution-latest-cache-reset": [
      {
        "action": "lightsail:GetDistributionLatestCacheReset",
        "resource_mappings": {}
      }
    ],
    "get-distribution-metric-data": [
      {
        "action": "lightsail:GetDistributionMetricData",
        "resource_mappings": {}
      }
    ],
    "get-distributions": [
      {
        "action": "lightsail:GetDistributions",
        "resource_mappings": {}
      }
    ],
    "get-domain": [
      {
        "action": "lightsail:GetDomain",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-domains": [
      {
        "action": "lightsail:GetDomains",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-export-snapshot-records": [
      {
        "action": "lightsail:GetExportSnapshotRecords",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-instance": [
      {
        "action": "lightsail:GetInstance",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-instance-access-details": [
      {
        "action": "lightsail:GetInstanceAccessDetails",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-instance-metric-data": [
      {
        "action": "lightsail:GetInstanceMetricData",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-instance-port-states": [
      {
        "action": "lightsail:GetInstancePortStates",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-instance-snapshot": [
      {
        "action": "lightsail:GetInstanceSnapshot",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-instance-snapshots": [
      {
        "action": "lightsail:GetInstanceSnapshots",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-instance-state": [
      {
        "action": "lightsail:GetInstanceState",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-instances": [
      {
        "action": "lightsail:GetInstances",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-key-pair": [
      {
        "action": "lightsail:GetKeyPair",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-key-pairs": [
      {
        "action": "lightsail:GetKeyPairs",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-load-balancer": [
      {
        "action": "lightsail:GetLoadBalancer",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-load-balancer-metric-data": [
      {
        "action": "lightsail:GetLoadBalancerMetricData",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-load-balancer-tls-certificates": [
      {
        "action": "lightsail:GetLoadBalancerTlsCertificates",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-load-balancer-tls-policies": [
      {
        "action": "lightsail:GetLoadBalancerTlsPolicies",
        "resource_mappings": {}
      }
    ],
    "get-load-balancers": [
      {
        "action": "lightsail:GetLoadBalancers",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-operation": [
      {
        "action": "lightsail:GetOperation",
        "resource_mappings": {}
      }
    ],
    "get-operations": [
      {
        "action": "lightsail:GetOperations",
        "resource_mappings": {}
      }
    ],
    "get-operations-for-resource": [
      {
        "action": "lightsail:GetOperationsForResource",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-regions": [
      {
        "action": "lightsail:GetRegions",
        "resource_mappings": {}
      }
    ],
    "get-relational-database": [
      {
        "action": "lightsail:GetRelationalDatabase",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-relational-database-blueprints": [
      {
        "action": "lightsail:GetRelationalDatabaseBlueprints",
        "resource_mappings": {}
      }
    ],
    "get-relational-database-bundles": [
      {
        "action": "lightsail:GetRelationalDatabaseBundles",
        "resource_mappings": {}
      }
    ],
    "get-relational-database-events": [
      {
        "action": "lightsail:GetRelationalDatabaseEvents",
        "resource_mappings": {}
      }
    ],
    "get-relational-database-log-events": [
      {
        "action": "lightsail:GetRelationalDatabaseLogEvents",
        "resource_mappings": {}
      }
    ],
    "get-relational-database-log-streams": [
      {
        "action": "lightsail:GetRelationalDatabaseLogStreams",
        "resource_mappings": {}
      }
    ],
    "get-relational-database-master-user-password": [
      {
        "action": "lightsail:GetRelationalDatabaseMasterUserPassword",
        "resource_mappings": {}
      }
    ],
    "get-relational-database-metric-data": [
      {
        "action": "lightsail:GetRelationalDatabaseMetricData",
        "resource_mappings": {}
      }
    ],
    "get-relational-database-parameters": [
      {
        "action": "lightsail:GetRelationalDatabaseParameters",
        "resource_mappings": {}
      }
    ],
    "get-relational-database-snapshot": [
      {
        "action": "lightsail:GetRelationalDatabaseSnapshot",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-relational-database-snapshots": [
      {
        "action": "lightsail:GetRelationalDatabaseSnapshots",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-relational-databases": [
      {
        "action": "lightsail:GetRelationalDatabases",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-static-ip": [
      {
        "action": "lightsail:GetStaticIp",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-static-ips": [
      {
        "action": "lightsail:GetStaticIps",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "import-key-pair": [
      {
        "action": "lightsail:ImportKeyPair",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "is-vpc-peered": [
      {
        "action": "lightsail:IsVpcPeered",
        "resource_mappings": {}
      }
    ],
    "open-instance-public-ports": [
      {
        "action": "lightsail:OpenInstancePublicPorts",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "peer-vpc": [
      {
        "action": "lightsail:PeerVpc",
        "resource_mappings": {}
      }
    ],
    "put-alarm": [
      {
        "action": "lightsail:PutAlarm",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "put-instance-public-ports": [
      {
        "action": "lightsail:PutInstancePublicPorts",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "reboot-instance": [
      {
        "action": "lightsail:RebootInstance",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "reboot-relational-database": [
      {
        "action": "lightsail:RebootRelationalDatabase",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "register-container-image": [
      {
        "action": "lightsail:RegisterContainerImage",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "release-static-ip": [
      {
        "action": "lightsail:ReleaseStaticIp",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "reset-distribution-cache": [
      {
        "action": "lightsail:ResetDistributionCache",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "send-contact-method-verification": [
      {
        "action": "lightsail:SendContactMethodVerification",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "set-ip-address-type": [
      {
        "action": "lightsail:SetIpAddressType",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "set-resource-access-for-bucket": [
      {
        "action": "lightsail:SetResourceAccessForBucket",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "start-gui-session": [
      {
        "action": "lightsail:StartGUISession",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "start-instance": [
      {
        "action": "lightsail:StartInstance",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "start-relational-database": [
      {
        "action": "lightsail:StartRelationalDatabase",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "stop-gui-session": [
      {
        "action": "lightsail:StopGUISession",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "stop-instance": [
      {
        "action": "lightsail:StopInstance",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "stop-relational-database": [
      {
        "action": "lightsail:StopRelationalDatabase",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "lightsail:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Disk": "%%iftemplatematch%${resourceArn}%%",
          "DiskSnapshot": "%%iftemplatematch%${resourceArn}%%",
          "Domain": "%%iftemplatematch%${resourceArn}%%",
          "Instance": "%%iftemplatematch%${resourceArn}%%",
          "InstanceSnapshot": "%%iftemplatematch%${resourceArn}%%",
          "KeyPair": "%%iftemplatematch%${resourceArn}%%",
          "LoadBalancer": "%%iftemplatematch%${resourceArn}%%",
          "RelationalDatabase": "%%iftemplatematch%${resourceArn}%%",
          "RelationalDatabaseSnapshot": "%%iftemplatematch%${resourceArn}%%",
          "StaticIp": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "test-alarm": [
      {
        "action": "lightsail:TestAlarm",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "unpeer-vpc": [
      {
        "action": "lightsail:UnpeerVpc",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "lightsail:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Disk": "%%iftemplatematch%${resourceArn}%%",
          "DiskSnapshot": "%%iftemplatematch%${resourceArn}%%",
          "Domain": "%%iftemplatematch%${resourceArn}%%",
          "Instance": "%%iftemplatematch%${resourceArn}%%",
          "InstanceSnapshot": "%%iftemplatematch%${resourceArn}%%",
          "KeyPair": "%%iftemplatematch%${resourceArn}%%",
          "LoadBalancer": "%%iftemplatematch%${resourceArn}%%",
          "RelationalDatabase": "%%iftemplatematch%${resourceArn}%%",
          "RelationalDatabaseSnapshot": "%%iftemplatematch%${resourceArn}%%",
          "StaticIp": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-bucket": [
      {
        "action": "lightsail:UpdateBucket",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "update-bucket-bundle": [
      {
        "action": "lightsail:UpdateBucketBundle",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "update-container-service": [
      {
        "action": "lightsail:UpdateContainerService",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "update-distribution": [
      {
        "action": "lightsail:UpdateDistribution",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "update-distribution-bundle": [
      {
        "action": "lightsail:UpdateDistributionBundle",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "update-domain-entry": [
      {
        "action": "lightsail:UpdateDomainEntry",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "update-instance-metadata-options": [
      {
        "action": "lightsail:UpdateInstanceMetadataOptions",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "update-load-balancer-attribute": [
      {
        "action": "lightsail:UpdateLoadBalancerAttribute",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "update-relational-database": [
      {
        "action": "lightsail:UpdateRelationalDatabase",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "update-relational-database-parameters": [
      {
        "action": "lightsail:UpdateRelationalDatabaseParameters",
        "resource_mappings": {}
      }
    ]
  },
  "location": {
    "associate-tracker-consumer": [
      {
        "action": "geo:AssociateTrackerConsumer",
        "resource_mappings": {
          "TrackerName": {
            "template": "${TrackerName}"
          }
        }
      }
    ],
    "batch-delete-device-position-history": [
      {
        "action": "geo:BatchDeleteDevicePositionHistory",
        "resource_mappings": {
          "TrackerName": {
            "template": "${TrackerName}"
          }
        }
      }
    ],
    "batch-delete-geofence": [
      {
        "action": "geo:BatchDeleteGeofence",
        "resource_mappings": {
          "GeofenceCollectionName": {
            "template": "${CollectionName}"
          }
        }
      }
    ],
    "batch-evaluate-geofences": [
      {
        "action": "geo:BatchEvaluateGeofences",
        "resource_mappings": {
          "GeofenceCollectionName": {
            "template": "${CollectionName}"
          }
        }
      }
    ],
    "batch-get-device-position": [
      {
        "action": "geo:BatchGetDevicePosition",
        "resource_mappings": {
          "TrackerName": {
            "template": "${TrackerName}"
          }
        }
      }
    ],
    "batch-put-geofence": [
      {
        "action": "geo:BatchPutGeofence",
        "resource_mappings": {
          "GeofenceCollectionName": {
            "template": "${CollectionName}"
          }
        }
      }
    ],
    "batch-update-device-position": [
      {
        "action": "geo:BatchUpdateDevicePosition",
        "resource_mappings": {
          "TrackerName": {
            "template": "${TrackerName}"
          }
        }
      }
    ],
    "calculate-route": [
      {
        "action": "geo:CalculateRoute",
        "resource_mappings": {
          "CalculatorName": {
            "template": "${CalculatorName}"
          }
        }
      }
    ],
    "calculate-route-matrix": [
      {
        "action": "geo:CalculateRouteMatrix",
        "resource_mappings": {
          "CalculatorName": {
            "template": "${CalculatorName}"
          }
        }
      }
    ],
    "create-geofence-collection": [
      {
        "action": "geo:CreateGeofenceCollection",
        "resource_mappings": {
          "GeofenceCollectionName": {
            "template": "${CollectionName}"
          }
        }
      }
    ],
    "create-key": [
      {
        "action": "geo:CreateKey",
        "resource_mappings": {}
      }
    ],
    "create-map": [
      {
        "action": "geo:CreateMap",
        "resource_mappings": {
          "MapName": {
            "template": "${MapName}"
          }
        }
      }
    ],
    "create-place-index": [
      {
        "action": "geo:CreatePlaceIndex",
        "resource_mappings": {
          "IndexName": {
            "template": "${IndexName}"
          }
        }
      }
    ],
    "create-route-calculator": [
      {
        "action": "geo:CreateRouteCalculator",
        "resource_mappings": {
          "CalculatorName": {
            "template": "${CalculatorName}"
          }
        }
      }
    ],
    "create-tracker": [
      {
        "action": "geo:CreateTracker",
        "resource_mappings": {
          "TrackerName": {
            "template": "${TrackerName}"
          }
        }
      }
    ],
    "delete-geofence-collection": [
      {
        "action": "geo:DeleteGeofenceCollection",
        "resource_mappings": {
          "GeofenceCollectionName": {
            "template": "${CollectionName}"
          }
        }
      }
    ],
    "delete-key": [
      {
        "action": "geo:DeleteKey",
        "resource_mappings": {
          "KeyName": {
            "template": "${KeyName}"
          }
        }
      }
    ],
    "delete-map": [
      {
        "action": "geo:DeleteMap",
        "resource_mappings": {
          "MapName": {
            "template": "${MapName}"
          }
        }
      }
    ],
    "delete-place-index": [
      {
        "action": "geo:DeletePlaceIndex",
        "resource_mappings": {
          "IndexName": {
            "template": "${IndexName}"
          }
        }
      }
    ],
    "delete-route-calculator": [
      {
        "action": "geo:DeleteRouteCalculator",
        "resource_mappings": {
          "CalculatorName": {
            "template": "${CalculatorName}"
          }
        }
      }
    ],
    "delete-tracker": [
      {
        "action": "geo:DeleteTracker",
        "resource_mappings": {
          "TrackerName": {
            "template": "${TrackerName}"
          }
        }
      }
    ],
    "describe-geofence-collection": [
      {
        "action": "geo:DescribeGeofenceCollection",
        "resource_mappings": {
          "GeofenceCollectionName": {
            "template": "${CollectionName}"
          }
        }
      }
    ],
    "describe-key": [
      {
        "action": "geo:DescribeKey",
        "resource_mappings": {
          "KeyName": {
            "template": "${KeyName}"
          }
        }
      }
    ],
    "describe-map": [
      {
        "action": "geo:DescribeMap",
        "resource_mappings": {
          "MapName": {
            "template": "${MapName}"
          }
        }
      }
    ],
    "describe-place-index": [
      {
        "action": "geo:DescribePlaceIndex",
        "resource_mappings": {
          "IndexName": {
            "template": "${IndexName}"
          }
        }
      }
    ],
    "describe-route-calculator": [
      {
        "action": "geo:DescribeRouteCalculator",
        "resource_mappings": {
          "CalculatorName": {
            "template": "${CalculatorName}"
          }
        }
      }
    ],
    "describe-tracker": [
      {
        "action": "geo:DescribeTracker",
        "resource_mappings": {
          "TrackerName": {
            "template": "${TrackerName}"
          }
        }
      }
    ],
    "disassociate-tracker-consumer": [
      {
        "action": "geo:DisassociateTrackerConsumer",
        "resource_mappings": {
          "TrackerName": {
            "template": "${TrackerName}"
          }
        }
      }
    ],
    "get-device-position": [
      {
        "action": "geo:GetDevicePosition",
        "resource_mappings": {
          "TrackerName": {
            "template": "${TrackerName}"
          }
        }
      }
    ],
    "get-device-position-history": [
      {
        "action": "geo:GetDevicePositionHistory",
        "resource_mappings": {
          "TrackerName": {
            "template": "${TrackerName}"
          }
        }
      }
    ],
    "get-geofence": [
      {
        "action": "geo:GetGeofence",
        "resource_mappings": {
          "GeofenceCollectionName": {
            "template": "${CollectionName}"
          }
        }
      }
    ],
    "get-map-glyphs": [
      {
        "action": "geo:GetMapGlyphs",
        "resource_mappings": {
          "MapName": {
            "template": "${MapName}"
          }
        }
      }
    ],
    "get-map-sprites": [
      {
        "action": "geo:GetMapSprites",
        "resource_mappings": {
          "MapName": {
            "template": "${MapName}"
          }
        }
      }
    ],
    "get-map-style-descriptor": [
      {
        "action": "geo:GetMapStyleDescriptor",
        "resource_mappings": {
          "MapName": {
            "template": "${MapName}"
          }
        }
      }
    ],
    "get-map-tile": [
      {
        "action": "geo:GetMapTile",
        "resource_mappings": {
          "MapName": {
            "template": "${MapName}"
          }
        }
      }
    ],
    "get-place": [
      {
        "action": "geo:GetPlace",
        "resource_mappings": {
          "IndexName": {
            "template": "${IndexName}"
          }
        }
      }
    ],
    "list-device-positions": [
      {
        "action": "geo:ListDevicePositions",
        "resource_mappings": {
          "TrackerName": {
            "template": "${TrackerName}"
          }
        }
      }
    ],
    "list-geofence-collections": [
      {
        "action": "geo:ListGeofenceCollections",
        "resource_mappings": {}
      }
    ],
    "list-geofences": [
      {
        "action": "geo:ListGeofences",
        "resource_mappings": {
          "GeofenceCollectionName": {
            "template": "${CollectionName}"
          }
        }
      }
    ],
    "list-keys": [
      {
        "action": "geo:ListKeys",
        "resource_mappings": {}
      }
    ],
    "list-maps": [
      {
        "action": "geo:ListMaps",
        "resource_mappings": {}
      }
    ],
    "list-place-indexes": [
      {
        "action": "geo:ListPlaceIndexes",
        "resource_mappings": {}
      }
    ],
    "list-route-calculators": [
      {
        "action": "geo:ListRouteCalculators",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "geo:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "geofence-collection": "%%iftemplatematch%${ResourceArn}%%",
          "map": "%%iftemplatematch%${ResourceArn}%%",
          "place-index": "%%iftemplatematch%${ResourceArn}%%",
          "route-calculator": "%%iftemplatematch%${ResourceArn}%%",
          "tracker": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "list-tracker-consumers": [
      {
        "action": "geo:ListTrackerConsumers",
        "resource_mappings": {
          "TrackerName": {
            "template": "${TrackerName}"
          }
        }
      }
    ],
    "list-trackers": [
      {
        "action": "geo:ListTrackers",
        "resource_mappings": {}
      }
    ],
    "put-geofence": [
      {
        "action": "geo:PutGeofence",
        "resource_mappings": {
          "GeofenceCollectionName": {
            "template": "${CollectionName}"
          }
        }
      }
    ],
    "search-place-index-for-position": [
      {
        "action": "geo:SearchPlaceIndexForPosition",
        "resource_mappings": {
          "IndexName": {
            "template": "${IndexName}"
          }
        }
      }
    ],
    "search-place-index-for-suggestions": [
      {
        "action": "geo:SearchPlaceIndexForSuggestions",
        "resource_mappings": {
          "IndexName": {
            "template": "${IndexName}"
          }
        }
      }
    ],
    "search-place-index-for-text": [
      {
        "action": "geo:SearchPlaceIndexForText",
        "resource_mappings": {
          "IndexName": {
            "template": "${IndexName}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "geo:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "geofence-collection": "%%iftemplatematch%${ResourceArn}%%",
          "map": "%%iftemplatematch%${ResourceArn}%%",
          "place-index": "%%iftemplatematch%${ResourceArn}%%",
          "route-calculator": "%%iftemplatematch%${ResourceArn}%%",
          "tracker": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "geo:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "geofence-collection": "%%iftemplatematch%${ResourceArn}%%",
          "map": "%%iftemplatematch%${ResourceArn}%%",
          "place-index": "%%iftemplatematch%${ResourceArn}%%",
          "route-calculator": "%%iftemplatematch%${ResourceArn}%%",
          "tracker": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-geofence-collection": [
      {
        "action": "geo:UpdateGeofenceCollection",
        "resource_mappings": {
          "GeofenceCollectionName": {
            "template": "${CollectionName}"
          }
        }
      }
    ],
    "update-key": [
      {
        "action": "geo:UpdateKey",
        "resource_mappings": {
          "KeyName": {
            "template": "${KeyName}"
          }
        }
      }
    ],
    "update-map": [
      {
        "action": "geo:UpdateMap",
        "resource_mappings": {
          "MapName": {
            "template": "${MapName}"
          }
        }
      }
    ],
    "update-place-index": [
      {
        "action": "geo:UpdatePlaceIndex",
        "resource_mappings": {
          "IndexName": {
            "template": "${IndexName}"
          }
        }
      }
    ],
    "update-route-calculator": [
      {
        "action": "geo:UpdateRouteCalculator",
        "resource_mappings": {
          "CalculatorName": {
            "template": "${CalculatorName}"
          }
        }
      }
    ],
    "update-tracker": [
      {
        "action": "geo:UpdateTracker",
        "resource_mappings": {
          "TrackerName": {
            "template": "${TrackerName}"
          }
        }
      }
    ]
  },
  "logs": {
    "associate-kms-key": [
      {
        "action": "logs:AssociateKmsKey",
        "resource_mappings": {
          "LogGroupName": {
            "template": "${logGroupName}"
          }
        }
      }
    ],
    "cancel-export-task": [
      {
        "action": "logs:CancelExportTask",
        "resource_mappings": {}
      }
    ],
    "create-export-task": [
      {
        "action": "logs:CreateExportTask",
        "resource_mappings": {
          "LogGroupName": {
            "template": "${logGroupName}"
          }
        }
      }
    ],
    "create-log-group": [
      {
        "action": "logs:CreateLogGroup",
        "resource_mappings": {
          "LogGroupName": {
            "template": "${logGroupName}"
          }
        }
      }
    ],
    "create-log-stream": [
      {
        "action": "logs:CreateLogStream",
        "resource_mappings": {
          "LogGroupName": {
            "template": "${logGroupName}"
          }
        }
      }
    ],
    "delete-account-policy": [
      {
        "action": "logs:DeleteAccountPolicy",
        "resource_mappings": {}
      }
    ],
    "delete-data-protection-policy": [
      {
        "action": "logs:DeleteDataProtectionPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "log-group": "%%iftemplatematch%${logGroupIdentifier}%%"
        }
      }
    ],
    "delete-destination": [
      {
        "action": "logs:DeleteDestination",
        "resource_mappings": {}
      }
    ],
    "delete-log-group": [
      {
        "action": "logs:DeleteLogGroup",
        "resource_mappings": {
          "LogGroupName": {
            "template": "${logGroupName}"
          }
        }
      }
    ],
    "delete-log-stream": [
      {
        "action": "logs:DeleteLogStream",
        "resource_mappings": {
          "LogGroupName": {
            "template": "${logGroupName}"
          },
          "LogStreamName": {
            "template": "${logStreamName}"
          }
        }
      }
    ],
    "delete-metric-filter": [
      {
        "action": "logs:DeleteMetricFilter",
        "resource_mappings": {
          "LogGroupName": {
            "template": "${logGroupName}"
          }
        }
      }
    ],
    "delete-query-definition": [
      {
        "action": "logs:DeleteQueryDefinition",
        "resource_mappings": {}
      }
    ],
    "delete-resource-policy": [
      {
        "action": "logs:DeleteResourcePolicy",
        "resource_mappings": {}
      }
    ],
    "delete-retention-policy": [
      {
        "action": "logs:DeleteRetentionPolicy",
        "resource_mappings": {
          "LogGroupName": {
            "template": "${logGroupName}"
          }
        }
      }
    ],
    "delete-subscription-filter": [
      {
        "action": "logs:DeleteSubscriptionFilter",
        "resource_mappings": {
          "LogGroupName": {
            "template": "${logGroupName}"
          }
        }
      }
    ],
    "describe-account-policies": [
      {
        "action": "logs:DescribeAccountPolicies",
        "resource_mappings": {}
      }
    ],
    "describe-destinations": [
      {
        "action": "logs:DescribeDestinations",
        "resource_mappings": {}
      }
    ],
    "describe-export-tasks": [
      {
        "action": "logs:DescribeExportTasks",
        "resource_mappings": {}
      }
    ],
    "describe-log-groups": [
      {
        "action": "logs:DescribeLogGroups",
        "resource_mappings": {
          "LogGroupName": {
            "template": "${logGroupNamePrefix}*"
          }
        }
      }
    ],
    "describe-log-streams": [
      {
        "action": "logs:DescribeLogStreams",
        "resource_mappings": {
          "LogGroupName": {
            "template": "${logGroupName}"
          }
        }
      }
    ],
    "describe-metric-filters": [
      {
        "action": "logs:DescribeMetricFilters",
        "resource_mappings": {
          "LogGroupName": {
            "template": "${logGroupName}"
          }
        }
      }
    ],
    "describe-queries": [
      {
        "action": "logs:DescribeQueries",
        "resource_mappings": {}
      }
    ],
    "describe-query-definitions": [
      {
        "action": "logs:DescribeQueryDefinitions",
        "resource_mappings": {}
      }
    ],
    "describe-resource-policies": [
      {
        "action": "logs:DescribeResourcePolicies",
        "resource_mappings": {}
      }
    ],
    "describe-subscription-filters": [
      {
        "action": "logs:DescribeSubscriptionFilters",
        "resource_mappings": {
          "LogGroupName": {
            "template": "${logGroupName}"
          }
        }
      }
    ],
    "disassociate-kms-key": [
      {
        "action": "logs:DisassociateKmsKey",
        "resource_mappings": {
          "LogGroupName": {
            "template": "${logGroupName}"
          }
        }
      }
    ],
    "filter-log-events": [
      {
        "action": "logs:FilterLogEvents",
        "resource_mappings": {
          "LogGroupName": {
            "template": "${logGroupName}"
          }
        }
      }
    ],
    "get-data-protection-policy": [
      {
        "action": "logs:GetDataProtectionPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "log-group": "%%iftemplatematch%${logGroupIdentifier}%%"
        }
      }
    ],
    "get-log-events": [
      {
        "action": "logs:GetLogEvents",
        "resource_mappings": {
          "LogGroupName": {
            "template": "${logGroupName}"
          },
          "LogStreamName": {
            "template": "${logStreamName}"
          }
        }
      }
    ],
    "get-log-group-fields": [
      {
        "action": "logs:GetLogGroupFields",
        "resource_mappings": {
          "LogGroupName": {
            "template": "${logGroupName}"
          }
        }
      }
    ],
    "get-log-record": [
      {
        "action": "logs:GetLogRecord",
        "resource_mappings": {}
      }
    ],
    "get-query-results": [
      {
        "action": "logs:GetQueryResults",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "logs:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "destination": "%%iftemplatematch%${resourceArn}%%",
          "log-group": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "list-tags-log-group": [
      {
        "action": "logs:ListTagsLogGroup",
        "resource_mappings": {
          "LogGroupName": {
            "template": "${logGroupName}"
          }
        }
      }
    ],
    "put-account-policy": [
      {
        "action": "logs:PutAccountPolicy",
        "resource_mappings": {}
      }
    ],
    "put-data-protection-policy": [
      {
        "action": "logs:PutDataProtectionPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "log-group": "%%iftemplatematch%${logGroupIdentifier}%%"
        }
      }
    ],
    "put-destination": [
      {
        "action": "logs:PutDestination",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${roleArn}"
        }
      }
    ],
    "put-destination-policy": [
      {
        "action": "logs:PutDestinationPolicy",
        "resource_mappings": {}
      }
    ],
    "put-log-events": [
      {
        "action": "logs:PutLogEvents",
        "resource_mappings": {
          "LogGroupName": {
            "template": "${logGroupName}"
          },
          "LogStreamName": {
            "template": "${logStreamName}"
          }
        }
      }
    ],
    "put-metric-filter": [
      {
        "action": "logs:PutMetricFilter",
        "resource_mappings": {
          "LogGroupName": {
            "template": "${logGroupName}"
          }
        }
      }
    ],
    "put-query-definition": [
      {
        "action": "logs:PutQueryDefinition",
        "resource_mappings": {}
      }
    ],
    "put-resource-policy": [
      {
        "action": "logs:PutResourcePolicy",
        "resource_mappings": {}
      }
    ],
    "put-retention-policy": [
      {
        "action": "logs:PutRetentionPolicy",
        "resource_mappings": {
          "LogGroupName": {
            "template": "${logGroupName}"
          }
        }
      }
    ],
    "put-subscription-filter": [
      {
        "action": "logs:PutSubscriptionFilter",
        "resource_mappings": {
          "LogGroupName": {
            "template": "${logGroupName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${roleArn}"
        }
      }
    ],
    "start-query": [
      {
        "action": "logs:StartQuery",
        "resource_mappings": {
          "LogGroupName": {
            "template": "%%many%${logGroupName}%${logGroupName[]}%%"
          }
        }
      }
    ],
    "stop-query": [
      {
        "action": "logs:StopQuery",
        "resource_mappings": {}
      }
    ],
    "tag-log-group": [
      {
        "action": "logs:TagLogGroup",
        "resource_mappings": {
          "LogGroupName": {
            "template": "${logGroupName}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "logs:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "destination": "%%iftemplatematch%${resourceArn}%%",
          "log-group": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "test-metric-filter": [
      {
        "action": "logs:TestMetricFilter",
        "resource_mappings": {}
      }
    ],
    "untag-log-group": [
      {
        "action": "logs:UntagLogGroup",
        "resource_mappings": {
          "LogGroupName": {
            "template": "${logGroupName}"
          }
        }
      }
    ],
    "untag-resource": [
      {
        "action": "logs:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "destination": "%%iftemplatematch%${resourceArn}%%",
          "log-group": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ]
  },
  "lookoutequipment": {
    "create-dataset": [
      {
        "action": "lookoutequipment:CreateDataset",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "DatasetName": {
            "template": "${DatasetName}"
          },
          "DatasetId": {
            "template": "*"
          }
        }
      }
    ],
    "create-inference-scheduler": [
      {
        "action": "lookoutequipment:CreateInferenceScheduler",
        "resource_mappings": {
          "InferenceSchedulerName": {
            "template": "${InferenceSchedulerName}"
          },
          "InferenceSchedulerId": {
            "template": "*"
          },
          "ModelName": {
            "template": "${ModelName}"
          },
          "ModelId": {
            "template": "*"
          }
        }
      }
    ],
    "create-label": [
      {
        "action": "lookoutequipment:CreateLabel",
        "resource_mappings": {
          "LabelGroupName": {
            "template": "${LabelGroupName}"
          },
          "LabelGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "create-label-group": [
      {
        "action": "lookoutequipment:CreateLabelGroup",
        "resource_mappings": {
          "LabelGroupName": {
            "template": "${LabelGroupName}"
          },
          "LabelGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "create-model": [
      {
        "action": "lookoutequipment:CreateModel",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "DatasetName": {
            "template": "${DatasetName}"
          },
          "DatasetId": {
            "template": "*"
          },
          "ModelName": {
            "template": "${ModelName}"
          },
          "ModelId": {
            "template": "*"
          }
        }
      }
    ],
    "create-retraining-scheduler": [
      {
        "note": "NotFound",
        "action": "LookoutEquipment:CreateRetrainingScheduler",
        "resource_mappings": {}
      }
    ],
    "delete-dataset": [
      {
        "action": "lookoutequipment:DeleteDataset",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "DatasetName": {
            "template": "${DatasetName}"
          },
          "DatasetId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-inference-scheduler": [
      {
        "action": "lookoutequipment:DeleteInferenceScheduler",
        "resource_mappings": {
          "InferenceSchedulerName": {
            "template": "${InferenceSchedulerName}"
          },
          "InferenceSchedulerId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-label": [
      {
        "action": "lookoutequipment:DeleteLabel",
        "resource_mappings": {
          "LabelGroupName": {
            "template": "${LabelGroupName}"
          },
          "LabelGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-label-group": [
      {
        "action": "lookoutequipment:DeleteLabelGroup",
        "resource_mappings": {
          "LabelGroupName": {
            "template": "${LabelGroupName}"
          },
          "LabelGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-model": [
      {
        "action": "lookoutequipment:DeleteModel",
        "resource_mappings": {
          "ModelName": {
            "template": "${ModelName}"
          },
          "ModelId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-resource-policy": [
      {
        "action": "lookoutequipment:DeleteResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dataset": "%%iftemplatematch%${ResourceArn}%%",
          "model": "%%iftemplatematch%${ResourceArn}%%",
          "model-version": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "delete-retraining-scheduler": [
      {
        "note": "NotFound",
        "action": "LookoutEquipment:DeleteRetrainingScheduler",
        "resource_mappings": {}
      }
    ],
    "describe-data-ingestion-job": [
      {
        "action": "lookoutequipment:DescribeDataIngestionJob",
        "resource_mappings": {}
      }
    ],
    "describe-dataset": [
      {
        "action": "lookoutequipment:DescribeDataset",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "DatasetName": {
            "template": "${DatasetName}"
          },
          "DatasetId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-inference-scheduler": [
      {
        "action": "lookoutequipment:DescribeInferenceScheduler",
        "resource_mappings": {
          "InferenceSchedulerName": {
            "template": "${InferenceSchedulerName}"
          },
          "InferenceSchedulerId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-label": [
      {
        "action": "lookoutequipment:Describelabel",
        "resource_mappings": {
          "LabelGroupName": {
            "template": "${LabelGroupName}"
          },
          "LabelGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-label-group": [
      {
        "action": "lookoutequipment:DescribeLabelGroup",
        "resource_mappings": {
          "LabelGroupName": {
            "template": "${LabelGroupName}"
          },
          "LabelGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-model": [
      {
        "action": "lookoutequipment:DescribeModel",
        "resource_mappings": {
          "ModelName": {
            "template": "${ModelName}"
          },
          "ModelId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-model-version": [
      {
        "action": "lookoutequipment:DescribeModelVersion",
        "resource_mappings": {
          "ModelName": {
            "template": "${ModelName}"
          },
          "ModelId": {
            "template": "*"
          },
          "ModelVersionNumber": {
            "template": "${ModelVersion}"
          }
        }
      }
    ],
    "describe-resource-policy": [
      {
        "action": "lookoutequipment:DescribeResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dataset": "%%iftemplatematch%${ResourceArn}%%",
          "model": "%%iftemplatematch%${ResourceArn}%%",
          "model-version": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "describe-retraining-scheduler": [
      {
        "note": "NotFound",
        "action": "LookoutEquipment:DescribeRetrainingScheduler",
        "resource_mappings": {}
      }
    ],
    "import-dataset": [
      {
        "action": "lookoutequipment:ImportDataset",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dataset": "${SourceDatasetArn}"
        }
      }
    ],
    "import-model-version": [
      {
        "action": "lookoutequipment:ImportModelVersion",
        "resource_mappings": {
          "DatasetName": {
            "template": "${DatasetName}"
          },
          "DatasetId": {
            "template": "*"
          },
          "ModelName": {
            "template": "${ModelName}"
          },
          "ModelId": {
            "template": "*"
          },
          "LabelGroupName": {
            "template": "${LabelsInputConfiguration.LabelGroupName}"
          },
          "LabelGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "list-data-ingestion-jobs": [
      {
        "action": "lookoutequipment:ListDataIngestionJobs",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "DatasetName": {
            "template": "${DatasetName}"
          },
          "DatasetId": {
            "template": "*"
          }
        }
      }
    ],
    "list-datasets": [
      {
        "action": "lookoutequipment:ListDatasets",
        "resource_mappings": {}
      }
    ],
    "list-inference-events": [
      {
        "action": "lookoutequipment:ListInferenceEvents",
        "resource_mappings": {
          "InferenceSchedulerName": {
            "template": "${InferenceSchedulerName}"
          },
          "InferenceSchedulerId": {
            "template": "*"
          }
        }
      }
    ],
    "list-inference-executions": [
      {
        "action": "lookoutequipment:ListInferenceExecutions",
        "resource_mappings": {
          "InferenceSchedulerName": {
            "template": "${InferenceSchedulerName}"
          },
          "InferenceSchedulerId": {
            "template": "*"
          }
        }
      }
    ],
    "list-inference-schedulers": [
      {
        "action": "lookoutequipment:ListInferenceSchedulers",
        "resource_mappings": {}
      }
    ],
    "list-label-groups": [
      {
        "action": "lookoutequipment:ListLabelGroups",
        "resource_mappings": {
          "LabelGroupName": {
            "template": "${LabelGroupNameBeginsWith}*"
          },
          "LabelGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "list-labels": [
      {
        "action": "lookoutequipment:ListLabels",
        "resource_mappings": {
          "LabelGroupName": {
            "template": "${LabelGroupName}"
          },
          "LabelGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "list-model-versions": [
      {
        "action": "lookoutequipment:ListModelVersions",
        "resource_mappings": {
          "ModelName": {
            "template": "${ModelName}"
          },
          "ModelId": {
            "template": "*"
          }
        }
      }
    ],
    "list-models": [
      {
        "action": "lookoutequipment:ListModels",
        "resource_mappings": {}
      }
    ],
    "list-retraining-schedulers": [
      {
        "note": "NotFound",
        "action": "LookoutEquipment:ListRetrainingSchedulers",
        "resource_mappings": {}
      }
    ],
    "list-sensor-statistics": [
      {
        "action": "lookoutequipment:ListSensorStatistics",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "DatasetName": {
            "template": "${DatasetName}"
          },
          "DatasetId": {
            "template": "*"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "lookoutequipment:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dataset": "%%iftemplatematch%${ResourceArn}%%",
          "inference-scheduler": "%%iftemplatematch%${ResourceArn}%%",
          "model": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "put-resource-policy": [
      {
        "action": "lookoutequipment:PutResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dataset": "%%iftemplatematch%${ResourceArn}%%",
          "model": "%%iftemplatematch%${ResourceArn}%%",
          "model-version": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "start-data-ingestion-job": [
      {
        "action": "lookoutequipment:StartDataIngestionJob",
        "resource_mappings": {
          "AccountId": {
            "template": "${Account}"
          },
          "DatasetName": {
            "template": "${DatasetName}"
          },
          "DatasetId": {
            "template": "*"
          }
        }
      }
    ],
    "start-inference-scheduler": [
      {
        "action": "lookoutequipment:StartInferenceScheduler",
        "resource_mappings": {
          "InferenceSchedulerName": {
            "template": "${InferenceSchedulerName}"
          },
          "InferenceSchedulerId": {
            "template": "*"
          }
        }
      }
    ],
    "start-retraining-scheduler": [
      {
        "note": "NotFound",
        "action": "LookoutEquipment:StartRetrainingScheduler",
        "resource_mappings": {}
      }
    ],
    "stop-inference-scheduler": [
      {
        "action": "lookoutequipment:StopInferenceScheduler",
        "resource_mappings": {
          "InferenceSchedulerName": {
            "template": "${InferenceSchedulerName}"
          },
          "InferenceSchedulerId": {
            "template": "*"
          }
        }
      }
    ],
    "stop-retraining-scheduler": [
      {
        "note": "NotFound",
        "action": "LookoutEquipment:StopRetrainingScheduler",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "lookoutequipment:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dataset": "%%iftemplatematch%${ResourceArn}%%",
          "inference-scheduler": "%%iftemplatematch%${ResourceArn}%%",
          "model": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "lookoutequipment:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dataset": "%%iftemplatematch%${ResourceArn}%%",
          "inference-scheduler": "%%iftemplatematch%${ResourceArn}%%",
          "model": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-active-model-version": [
      {
        "action": "lookoutequipment:UpdateActiveModelVersion",
        "resource_mappings": {
          "ModelName": {
            "template": "${ModelName}"
          },
          "ModelId": {
            "template": "*"
          },
          "ModelVersionNumber": {
            "template": "${ModelVersion}"
          }
        }
      }
    ],
    "update-inference-scheduler": [
      {
        "action": "lookoutequipment:UpdateInferenceScheduler",
        "resource_mappings": {
          "InferenceSchedulerName": {
            "template": "${InferenceSchedulerName}"
          },
          "InferenceSchedulerId": {
            "template": "*"
          }
        }
      }
    ],
    "update-label-group": [
      {
        "action": "lookoutequipment:UpdateLabelGroup",
        "resource_mappings": {
          "LabelGroupName": {
            "template": "${LabelGroupName}"
          },
          "LabelGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "update-model": [
      {
        "note": "NotFound",
        "action": "LookoutEquipment:UpdateModel",
        "resource_mappings": {}
      }
    ],
    "update-retraining-scheduler": [
      {
        "note": "NotFound",
        "action": "LookoutEquipment:UpdateRetrainingScheduler",
        "resource_mappings": {}
      }
    ]
  },
  "lookoutmetrics": {
    "activate-anomaly-detector": [
      {
        "action": "lookoutmetrics:ActivateAnomalyDetector",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "AnomalyDetector": "${AnomalyDetectorArn}"
        }
      }
    ],
    "back-test-anomaly-detector": [
      {
        "action": "lookoutmetrics:BackTestAnomalyDetector",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "AnomalyDetector": "${AnomalyDetectorArn}"
        }
      }
    ],
    "create-alert": [
      {
        "action": "lookoutmetrics:CreateAlert",
        "resource_mappings": {
          "AlertName": {
            "template": "${AlertName}"
          }
        },
        "resourcearn_mappings": {
          "AnomalyDetector": "${AnomalyDetectorArn}"
        }
      }
    ],
    "create-anomaly-detector": [
      {
        "action": "lookoutmetrics:CreateAnomalyDetector",
        "resource_mappings": {
          "AnomalyDetectorName": {
            "template": "${AnomalyDetectorName}"
          }
        }
      }
    ],
    "create-metric-set": [
      {
        "action": "lookoutmetrics:CreateMetricSet",
        "resource_mappings": {
          "AnomalyDetectorName": {
            "template": "%%regex%${AnomalyDetectorArn}%/AnomalyDetector:(.+)/g%%"
          },
          "MetricSetName": {
            "template": "${MetricSetName}"
          }
        },
        "resourcearn_mappings": {
          "AnomalyDetector": "${AnomalyDetectorArn}"
        }
      }
    ],
    "deactivate-anomaly-detector": [
      {
        "action": "lookoutmetrics:DeactivateAnomalyDetector",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "AnomalyDetector": "${AnomalyDetectorArn}"
        }
      }
    ],
    "delete-alert": [
      {
        "action": "lookoutmetrics:DeleteAlert",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Alert": "${AlertArn}"
        }
      }
    ],
    "delete-anomaly-detector": [
      {
        "action": "lookoutmetrics:DeleteAnomalyDetector",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "AnomalyDetector": "${AnomalyDetectorArn}"
        }
      }
    ],
    "describe-alert": [
      {
        "action": "lookoutmetrics:DescribeAlert",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Alert": "${AlertArn}"
        }
      }
    ],
    "describe-anomaly-detection-executions": [
      {
        "action": "lookoutmetrics:DescribeAnomalyDetectionExecutions",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "AnomalyDetector": "${AnomalyDetectorArn}"
        }
      }
    ],
    "describe-anomaly-detector": [
      {
        "action": "lookoutmetrics:DescribeAnomalyDetector",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "AnomalyDetector": "${AnomalyDetectorArn}"
        }
      }
    ],
    "describe-metric-set": [
      {
        "action": "lookoutmetrics:DescribeMetricSet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "MetricSet": "${MetricSetArn}"
        }
      }
    ],
    "detect-metric-set-config": [
      {
        "action": "lookoutmetrics:DetectMetricSetConfig",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "AnomalyDetector": "${AnomalyDetectorArn}"
        }
      }
    ],
    "get-anomaly-group": [
      {
        "action": "lookoutmetrics:GetAnomalyGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "AnomalyDetector": "${AnomalyDetectorArn}"
        }
      }
    ],
    "get-data-quality-metrics": [
      {
        "action": "lookoutmetrics:GetDataQualityMetrics",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "AnomalyDetector": "${AnomalyDetectorArn}"
        }
      }
    ],
    "get-feedback": [
      {
        "action": "lookoutmetrics:GetFeedback",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "AnomalyDetector": "${AnomalyDetectorArn}"
        }
      }
    ],
    "get-sample-data": [
      {
        "action": "lookoutmetrics:GetSampleData",
        "resource_mappings": {}
      }
    ],
    "list-alerts": [
      {
        "action": "lookoutmetrics:ListAlerts",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "AnomalyDetector": "${AnomalyDetectorArn}"
        }
      }
    ],
    "list-anomaly-detectors": [
      {
        "action": "lookoutmetrics:ListAnomalyDetectors",
        "resource_mappings": {}
      }
    ],
    "list-anomaly-group-related-metrics": [
      {
        "action": "lookoutmetrics:ListAnomalyGroupRelatedMetrics",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "AnomalyDetector": "${AnomalyDetectorArn}"
        }
      }
    ],
    "list-anomaly-group-summaries": [
      {
        "action": "lookoutmetrics:ListAnomalyGroupSummaries",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "AnomalyDetector": "${AnomalyDetectorArn}"
        }
      }
    ],
    "list-anomaly-group-time-series": [
      {
        "action": "lookoutmetrics:ListAnomalyGroupTimeSeries",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "AnomalyDetector": "${AnomalyDetectorArn}"
        }
      }
    ],
    "list-metric-sets": [
      {
        "action": "lookoutmetrics:ListMetricSets",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "AnomalyDetector": "${AnomalyDetectorArn}"
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "lookoutmetrics:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Alert": "%%iftemplatematch%${ResourceArn}%%",
          "AnomalyDetector": "%%iftemplatematch%${ResourceArn}%%",
          "MetricSet": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "put-feedback": [
      {
        "action": "lookoutmetrics:PutFeedback",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "AnomalyDetector": "${AnomalyDetectorArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "lookoutmetrics:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Alert": "%%iftemplatematch%${ResourceArn}%%",
          "AnomalyDetector": "%%iftemplatematch%${ResourceArn}%%",
          "MetricSet": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "lookoutmetrics:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Alert": "%%iftemplatematch%${ResourceArn}%%",
          "AnomalyDetector": "%%iftemplatematch%${ResourceArn}%%",
          "MetricSet": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-alert": [
      {
        "action": "lookoutmetrics:UpdateAlert",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Alert": "${AlertArn}"
        }
      }
    ],
    "update-anomaly-detector": [
      {
        "action": "lookoutmetrics:UpdateAnomalyDetector",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "AnomalyDetector": "${AnomalyDetectorArn}"
        }
      }
    ],
    "update-metric-set": [
      {
        "action": "lookoutmetrics:UpdateMetricSet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "MetricSet": "${MetricSetArn}"
        }
      }
    ]
  },
  "lookoutvision": {
    "create-dataset": [
      {
        "action": "lookoutvision:CreateDataset",
        "resource_mappings": {}
      }
    ],
    "create-model": [
      {
        "action": "lookoutvision:CreateModel",
        "resource_mappings": {
          "ProjectName": {
            "template": "${ProjectName}"
          },
          "ModelVersion": {
            "template": "*"
          }
        }
      }
    ],
    "create-project": [
      {
        "action": "lookoutvision:CreateProject",
        "resource_mappings": {
          "ProjectName": {
            "template": "${ProjectName}"
          }
        }
      }
    ],
    "delete-dataset": [
      {
        "action": "lookoutvision:DeleteDataset",
        "resource_mappings": {}
      }
    ],
    "delete-model": [
      {
        "action": "lookoutvision:DeleteModel",
        "resource_mappings": {
          "ProjectName": {
            "template": "${ProjectName}"
          },
          "ModelVersion": {
            "template": "${ModelVersion}"
          }
        }
      }
    ],
    "delete-project": [
      {
        "action": "lookoutvision:DeleteProject",
        "resource_mappings": {
          "ProjectName": {
            "template": "${ProjectName}"
          }
        }
      }
    ],
    "describe-dataset": [
      {
        "action": "lookoutvision:DescribeDataset",
        "resource_mappings": {}
      }
    ],
    "describe-model": [
      {
        "action": "lookoutvision:DescribeModel",
        "resource_mappings": {
          "ProjectName": {
            "template": "${ProjectName}"
          },
          "ModelVersion": {
            "template": "${ModelVersion}"
          }
        }
      }
    ],
    "describe-model-packaging-job": [
      {
        "action": "lookoutvision:DescribeModelPackagingJob",
        "resource_mappings": {}
      }
    ],
    "describe-project": [
      {
        "action": "lookoutvision:DescribeProject",
        "resource_mappings": {
          "ProjectName": {
            "template": "${ProjectName}"
          }
        }
      }
    ],
    "detect-anomalies": [
      {
        "action": "lookoutvision:DetectAnomalies",
        "resource_mappings": {
          "ProjectName": {
            "template": "${ProjectName}"
          },
          "ModelVersion": {
            "template": "${ModelVersion}"
          }
        }
      }
    ],
    "list-dataset-entries": [
      {
        "action": "lookoutvision:ListDatasetEntries",
        "resource_mappings": {}
      }
    ],
    "list-model-packaging-jobs": [
      {
        "action": "lookoutvision:ListModelPackagingJobs",
        "resource_mappings": {}
      }
    ],
    "list-models": [
      {
        "action": "lookoutvision:ListModels",
        "resource_mappings": {}
      }
    ],
    "list-projects": [
      {
        "action": "lookoutvision:ListProjects",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "lookoutvision:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "model": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "start-model": [
      {
        "action": "lookoutvision:StartModel",
        "resource_mappings": {
          "ProjectName": {
            "template": "${ProjectName}"
          },
          "ModelVersion": {
            "template": "${ModelVersion}"
          }
        }
      }
    ],
    "start-model-packaging-job": [
      {
        "action": "lookoutvision:StartModelPackagingJob",
        "resource_mappings": {
          "ProjectName": {
            "template": "${ProjectName}"
          },
          "ModelVersion": {
            "template": "${ModelVersion}"
          }
        }
      }
    ],
    "stop-model": [
      {
        "action": "lookoutvision:StopModel",
        "resource_mappings": {
          "ProjectName": {
            "template": "${ProjectName}"
          },
          "ModelVersion": {
            "template": "${ModelVersion}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "lookoutvision:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "model": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "lookoutvision:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "model": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-dataset-entries": [
      {
        "action": "lookoutvision:UpdateDatasetEntries",
        "resource_mappings": {}
      }
    ]
  },
  "m2": {
    "cancel-batch-job-execution": [
      {
        "action": "m2:CancelBatchJobExecution",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      }
    ],
    "create-application": [
      {
        "action": "m2:CreateApplication",
        "resource_mappings": {}
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      },
      {
        "action": "s3:ListBucket",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          }
        }
      }
    ],
    "create-data-set-import-task": [
      {
        "action": "m2:CreateDataSetImportTask",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      }
    ],
    "create-deployment": [
      {
        "action": "m2:CreateDeployment",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          },
          "EnvironmentId": {
            "template": "${environmentId}"
          }
        }
      },
      {
        "action": "elasticloadbalancing:CreateListener",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "*"
          },
          "LoadBalancerId": {
            "template": "*"
          }
        }
      },
      {
        "action": "elasticloadbalancing:CreateTargetGroup",
        "resource_mappings": {
          "TargetGroupName": {
            "template": "*"
          },
          "TargetGroupId": {
            "template": "*"
          }
        }
      },
      {
        "action": "elasticloadbalancing:RegisterTargets",
        "resource_mappings": {
          "TargetGroupName": {
            "template": "*"
          },
          "TargetGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "create-environment": [
      {
        "action": "m2:CreateEnvironment",
        "resource_mappings": {}
      },
      {
        "action": "ec2:CreateNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "${subnetIds[]}"
          },
          "SecurityGroupId": {
            "template": "${securityGroupIds[]}"
          }
        }
      },
      {
        "action": "ec2:CreateNetworkInterfacePermission",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeNetworkInterfaces",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSecurityGroups",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSubnets",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeVpcAttribute",
        "resource_mappings": {
          "VpcId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      },
      {
        "action": "ec2:ModifyNetworkInterfaceAttribute",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "${securityGroupIds[]}"
          }
        }
      },
      {
        "action": "elasticfilesystem:DescribeMountTargets",
        "resource_mappings": {
          "FileSystemId": {
            "template": "${storageConfigurations[].efs.fileSystemId}"
          },
          "AccessPointId": {
            "template": "*"
          }
        }
      },
      {
        "action": "elasticloadbalancing:CreateLoadBalancer",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "*"
          },
          "LoadBalancerId": {
            "template": "*"
          }
        }
      },
      {
        "action": "fsx:DescribeFileSystems",
        "resource_mappings": {}
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "delete-application": [
      {
        "action": "m2:DeleteApplication",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      },
      {
        "action": "elasticloadbalancing:DeleteListener",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "*"
          },
          "LoadBalancerId": {
            "template": "*"
          },
          "ListenerId": {
            "template": "*"
          }
        }
      },
      {
        "action": "elasticloadbalancing:DeleteTargetGroup",
        "resource_mappings": {
          "TargetGroupName": {
            "template": "*"
          },
          "TargetGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-application-from-environment": [
      {
        "action": "m2:DeleteApplicationFromEnvironment",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      },
      {
        "action": "elasticloadbalancing:DeleteListener",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "*"
          },
          "LoadBalancerId": {
            "template": "*"
          },
          "ListenerId": {
            "template": "*"
          }
        }
      },
      {
        "action": "elasticloadbalancing:DeleteTargetGroup",
        "resource_mappings": {
          "TargetGroupName": {
            "template": "*"
          },
          "TargetGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-environment": [
      {
        "action": "m2:DeleteEnvironment",
        "resource_mappings": {
          "EnvironmentId": {
            "template": "${environmentId}"
          }
        }
      },
      {
        "action": "elasticloadbalancing:DeleteLoadBalancer",
        "resource_mappings": {
          "LoadBalancerName": {
            "template": "*"
          },
          "LoadBalancerId": {
            "template": "*"
          }
        }
      }
    ],
    "get-application": [
      {
        "action": "m2:GetApplication",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      }
    ],
    "get-application-version": [
      {
        "action": "m2:GetApplicationVersion",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      }
    ],
    "get-batch-job-execution": [
      {
        "action": "m2:GetBatchJobExecution",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      }
    ],
    "get-data-set-details": [
      {
        "action": "m2:GetDataSetDetails",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      }
    ],
    "get-data-set-import-task": [
      {
        "action": "m2:GetDataSetImportTask",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      }
    ],
    "get-deployment": [
      {
        "action": "m2:GetDeployment",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      }
    ],
    "get-environment": [
      {
        "action": "m2:GetEnvironment",
        "resource_mappings": {
          "EnvironmentId": {
            "template": "${environmentId}"
          }
        }
      }
    ],
    "get-signed-bluinsights-url": [
      {
        "action": "m2:GetSignedBluinsightsUrl",
        "resource_mappings": {}
      }
    ],
    "list-application-versions": [
      {
        "action": "m2:ListApplicationVersions",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      }
    ],
    "list-applications": [
      {
        "action": "m2:ListApplications",
        "resource_mappings": {
          "EnvironmentId": {
            "template": "${environmentId}"
          }
        }
      }
    ],
    "list-batch-job-definitions": [
      {
        "action": "m2:ListBatchJobDefinitions",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      }
    ],
    "list-batch-job-executions": [
      {
        "action": "m2:ListBatchJobExecutions",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      }
    ],
    "list-data-set-import-history": [
      {
        "action": "m2:ListDataSetImportHistory",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      }
    ],
    "list-data-sets": [
      {
        "action": "m2:ListDataSets",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      }
    ],
    "list-deployments": [
      {
        "action": "m2:ListDeployments",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      }
    ],
    "list-engine-versions": [
      {
        "action": "m2:ListEngineVersions",
        "resource_mappings": {}
      }
    ],
    "list-environments": [
      {
        "action": "m2:ListEnvironments",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "m2:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "start-application": [
      {
        "action": "m2:StartApplication",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      }
    ],
    "start-batch-job": [
      {
        "action": "m2:StartBatchJob",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      }
    ],
    "stop-application": [
      {
        "action": "m2:StopApplication",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "m2:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Application": "%%iftemplatematch%${resourceArn}%%",
          "Environment": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "m2:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Application": "%%iftemplatematch%${resourceArn}%%",
          "Environment": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-application": [
      {
        "action": "m2:UpdateApplication",
        "resource_mappings": {
          "ApplicationId": {
            "template": "${applicationId}"
          }
        }
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      },
      {
        "action": "s3:ListBucket",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          }
        }
      }
    ],
    "update-environment": [
      {
        "action": "m2:UpdateEnvironment",
        "resource_mappings": {
          "EnvironmentId": {
            "template": "${environmentId}"
          }
        }
      }
    ]
  },
  "machinelearning": {
    "add-tags": [
      {
        "action": "machinelearning:AddTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "batchprediction": "%%iftemplatematch%${ResourceId}%%",
          "datasource": "%%iftemplatematch%${ResourceId}%%",
          "evaluation": "%%iftemplatematch%${ResourceId}%%",
          "mlmodel": "%%iftemplatematch%${ResourceId}%%"
        }
      }
    ],
    "create-batch-prediction": [
      {
        "action": "machinelearning:CreateBatchPrediction",
        "resource_mappings": {
          "BatchPredictionId": {
            "template": "${BatchPredictionId}"
          },
          "DatasourceId": {
            "template": "${BatchPredictionDataSourceId}"
          },
          "MlModelId": {
            "template": "${MLModelId}"
          }
        }
      }
    ],
    "create-data-source-from-rds": [
      {
        "action": "machinelearning:CreateDataSourceFromRDS",
        "resource_mappings": {
          "DatasourceId": {
            "template": "${DataSourceId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${RDSData.ResourceRole}%${RDSData.ServiceRole}%${RoleARN}%%"
        }
      }
    ],
    "create-data-source-from-redshift": [
      {
        "action": "machinelearning:CreateDataSourceFromRedshift",
        "resource_mappings": {
          "DatasourceId": {
            "template": "${DataSourceId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleARN}"
        }
      }
    ],
    "create-data-source-from-s3": [
      {
        "action": "machinelearning:CreateDataSourceFromS3",
        "resource_mappings": {
          "DatasourceId": {
            "template": "${DataSourceId}"
          }
        }
      }
    ],
    "create-evaluation": [
      {
        "action": "machinelearning:CreateEvaluation",
        "resource_mappings": {
          "DatasourceId": {
            "template": "${EvaluationDataSourceId}"
          },
          "EvaluationId": {
            "template": "${EvaluationId}"
          },
          "MlModelId": {
            "template": "${MLModelId}"
          }
        }
      }
    ],
    "create-ml-model": [
      {
        "action": "machinelearning:CreateMLModel",
        "resource_mappings": {
          "DatasourceId": {
            "template": "${TrainingDataSourceId}"
          },
          "MlModelId": {
            "template": "${MLModelId}"
          }
        }
      }
    ],
    "create-realtime-endpoint": [
      {
        "action": "machinelearning:CreateRealtimeEndpoint",
        "resource_mappings": {
          "MlModelId": {
            "template": "${MLModelId}"
          }
        }
      }
    ],
    "delete-batch-prediction": [
      {
        "action": "machinelearning:DeleteBatchPrediction",
        "resource_mappings": {
          "BatchPredictionId": {
            "template": "${BatchPredictionId}"
          }
        }
      }
    ],
    "delete-data-source": [
      {
        "action": "machinelearning:DeleteDataSource",
        "resource_mappings": {
          "DatasourceId": {
            "template": "${DataSourceId}"
          }
        }
      }
    ],
    "delete-evaluation": [
      {
        "action": "machinelearning:DeleteEvaluation",
        "resource_mappings": {
          "EvaluationId": {
            "template": "${EvaluationId}"
          }
        }
      }
    ],
    "delete-ml-model": [
      {
        "action": "machinelearning:DeleteMLModel",
        "resource_mappings": {
          "MlModelId": {
            "template": "${MLModelId}"
          }
        }
      }
    ],
    "delete-realtime-endpoint": [
      {
        "action": "machinelearning:DeleteRealtimeEndpoint",
        "resource_mappings": {
          "MlModelId": {
            "template": "${MLModelId}"
          }
        }
      }
    ],
    "delete-tags": [
      {
        "action": "machinelearning:DeleteTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "batchprediction": "%%iftemplatematch%${ResourceId}%%",
          "datasource": "%%iftemplatematch%${ResourceId}%%",
          "evaluation": "%%iftemplatematch%${ResourceId}%%",
          "mlmodel": "%%iftemplatematch%${ResourceId}%%"
        }
      }
    ],
    "describe-batch-predictions": [
      {
        "action": "machinelearning:DescribeBatchPredictions",
        "resource_mappings": {}
      }
    ],
    "describe-data-sources": [
      {
        "action": "machinelearning:DescribeDataSources",
        "resource_mappings": {}
      }
    ],
    "describe-evaluations": [
      {
        "action": "machinelearning:DescribeEvaluations",
        "resource_mappings": {}
      }
    ],
    "describe-ml-models": [
      {
        "action": "machinelearning:DescribeMLModels",
        "resource_mappings": {}
      }
    ],
    "describe-tags": [
      {
        "action": "machinelearning:DescribeTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "batchprediction": "%%iftemplatematch%${ResourceId}%%",
          "datasource": "%%iftemplatematch%${ResourceId}%%",
          "evaluation": "%%iftemplatematch%${ResourceId}%%",
          "mlmodel": "%%iftemplatematch%${ResourceId}%%"
        }
      }
    ],
    "get-batch-prediction": [
      {
        "action": "machinelearning:GetBatchPrediction",
        "resource_mappings": {
          "BatchPredictionId": {
            "template": "${BatchPredictionId}"
          }
        }
      }
    ],
    "get-data-source": [
      {
        "action": "machinelearning:GetDataSource",
        "resource_mappings": {
          "DatasourceId": {
            "template": "${DataSourceId}"
          }
        }
      }
    ],
    "get-evaluation": [
      {
        "action": "machinelearning:GetEvaluation",
        "resource_mappings": {
          "DatasourceId": {
            "template": "*"
          }
        }
      }
    ],
    "get-ml-model": [
      {
        "action": "machinelearning:GetMLModel",
        "resource_mappings": {
          "MlModelId": {
            "template": "${MLModelId}"
          }
        }
      }
    ],
    "predict": [
      {
        "action": "machinelearning:Predict",
        "resource_mappings": {
          "MlModelId": {
            "template": "${MLModelId}"
          }
        }
      }
    ],
    "update-batch-prediction": [
      {
        "action": "machinelearning:UpdateBatchPrediction",
        "resource_mappings": {
          "BatchPredictionId": {
            "template": "${BatchPredictionId}"
          }
        }
      }
    ],
    "update-data-source": [
      {
        "action": "machinelearning:UpdateDataSource",
        "resource_mappings": {
          "DatasourceId": {
            "template": "${DataSourceId}"
          }
        }
      }
    ],
    "update-evaluation": [
      {
        "action": "machinelearning:UpdateEvaluation",
        "resource_mappings": {
          "EvaluationId": {
            "template": "${EvaluationId}"
          }
        }
      }
    ],
    "update-ml-model": [
      {
        "action": "machinelearning:UpdateMLModel",
        "resource_mappings": {
          "MlModelId": {
            "template": "${MLModelId}"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "machinelearning:DescribeBatchPredictions",
        "resource_mappings": {}
      }
    ]
  },
  "macie": {
    "associate-member-account": [
      {
        "action": "macie:AssociateMemberAccount",
        "resource_mappings": {}
      }
    ],
    "associate-s3-resources": [
      {
        "action": "macie:AssociateS3Resources",
        "resource_mappings": {}
      }
    ],
    "disassociate-member-account": [
      {
        "action": "macie:DisassociateMemberAccount",
        "resource_mappings": {}
      }
    ],
    "disassociate-s3-resources": [
      {
        "action": "macie:DisassociateS3Resources",
        "resource_mappings": {}
      }
    ],
    "list-member-accounts": [
      {
        "action": "macie:ListMemberAccounts",
        "resource_mappings": {}
      }
    ],
    "list-s3-resources": [
      {
        "action": "macie:ListS3Resources",
        "resource_mappings": {}
      }
    ],
    "update-s3-resources": [
      {
        "action": "macie:UpdateS3Resources",
        "resource_mappings": {}
      }
    ]
  },
  "macie2": {
    "accept-invitation": [
      {
        "action": "macie2:AcceptInvitation",
        "resource_mappings": {}
      }
    ],
    "batch-get-custom-data-identifiers": [
      {
        "action": "macie2:BatchGetCustomDataIdentifiers",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ids[]}"
          }
        }
      }
    ],
    "create-allow-list": [
      {
        "action": "macie2:CreateAllowList",
        "resource_mappings": {}
      }
    ],
    "create-classification-job": [
      {
        "action": "macie2:CreateClassificationJob",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-custom-data-identifier": [
      {
        "action": "macie2:CreateCustomDataIdentifier",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-findings-filter": [
      {
        "action": "macie2:CreateFindingsFilter",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-invitations": [
      {
        "action": "macie2:CreateInvitations",
        "resource_mappings": {}
      }
    ],
    "create-member": [
      {
        "action": "macie2:CreateMember",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-sample-findings": [
      {
        "action": "macie2:CreateSampleFindings",
        "resource_mappings": {}
      }
    ],
    "decline-invitations": [
      {
        "action": "macie2:DeclineInvitations",
        "resource_mappings": {}
      }
    ],
    "delete-allow-list": [
      {
        "action": "macie2:DeleteAllowList",
        "resource_mappings": {
          "ResourceId": {
            "template": "${id}"
          }
        }
      }
    ],
    "delete-custom-data-identifier": [
      {
        "action": "macie2:DeleteCustomDataIdentifier",
        "resource_mappings": {
          "ResourceId": {
            "template": "${id}"
          }
        }
      }
    ],
    "delete-findings-filter": [
      {
        "action": "macie2:DeleteFindingsFilter",
        "resource_mappings": {
          "ResourceId": {
            "template": "${id}"
          }
        }
      }
    ],
    "delete-invitations": [
      {
        "action": "macie2:DeleteInvitations",
        "resource_mappings": {}
      }
    ],
    "delete-member": [
      {
        "action": "macie2:DeleteMember",
        "resource_mappings": {
          "ResourceId": {
            "template": "${id}"
          }
        }
      }
    ],
    "describe-buckets": [
      {
        "action": "macie2:DescribeBuckets",
        "resource_mappings": {}
      }
    ],
    "describe-classification-job": [
      {
        "action": "macie2:DescribeClassificationJob",
        "resource_mappings": {
          "ResourceId": {
            "template": "${jobId}"
          }
        }
      }
    ],
    "describe-organization-configuration": [
      {
        "action": "macie2:DescribeOrganizationConfiguration",
        "resource_mappings": {}
      }
    ],
    "disable-macie": [
      {
        "action": "macie2:DisableMacie",
        "resource_mappings": {}
      }
    ],
    "disable-organization-admin-account": [
      {
        "action": "macie2:DisableOrganizationAdminAccount",
        "resource_mappings": {}
      }
    ],
    "disassociate-from-administrator-account": [
      {
        "action": "macie2:DisassociateFromAdministratorAccount",
        "resource_mappings": {}
      }
    ],
    "disassociate-from-master-account": [
      {
        "action": "macie2:DisassociateFromMasterAccount",
        "resource_mappings": {}
      }
    ],
    "disassociate-member": [
      {
        "action": "macie2:DisassociateMember",
        "resource_mappings": {
          "ResourceId": {
            "template": "${id}"
          }
        }
      }
    ],
    "enable-macie": [
      {
        "action": "macie2:EnableMacie",
        "resource_mappings": {}
      }
    ],
    "enable-organization-admin-account": [
      {
        "action": "macie2:EnableOrganizationAdminAccount",
        "resource_mappings": {}
      }
    ],
    "get-administrator-account": [
      {
        "action": "macie2:GetAdministratorAccount",
        "resource_mappings": {}
      }
    ],
    "get-allow-list": [
      {
        "action": "macie2:GetAllowList",
        "resource_mappings": {
          "ResourceId": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-automated-discovery-configuration": [
      {
        "action": "macie2:GetAutomatedDiscoveryConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-bucket-statistics": [
      {
        "action": "macie2:GetBucketStatistics",
        "resource_mappings": {}
      }
    ],
    "get-classification-export-configuration": [
      {
        "action": "macie2:GetClassificationExportConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-classification-scope": [
      {
        "action": "macie2:GetClassificationScope",
        "resource_mappings": {}
      }
    ],
    "get-custom-data-identifier": [
      {
        "action": "macie2:GetCustomDataIdentifier",
        "resource_mappings": {
          "ResourceId": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-finding-statistics": [
      {
        "action": "macie2:GetFindingStatistics",
        "resource_mappings": {}
      }
    ],
    "get-findings": [
      {
        "action": "macie2:GetFindings",
        "resource_mappings": {}
      }
    ],
    "get-findings-filter": [
      {
        "action": "macie2:GetFindingsFilter",
        "resource_mappings": {
          "ResourceId": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-findings-publication-configuration": [
      {
        "action": "macie2:GetFindingsPublicationConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-invitations-count": [
      {
        "action": "macie2:GetInvitationsCount",
        "resource_mappings": {}
      }
    ],
    "get-macie-session": [
      {
        "action": "macie2:GetMacieSession",
        "resource_mappings": {}
      }
    ],
    "get-master-account": [
      {
        "action": "macie2:GetMasterAccount",
        "resource_mappings": {}
      }
    ],
    "get-member": [
      {
        "action": "macie2:GetMember",
        "resource_mappings": {
          "ResourceId": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-resource-profile": [
      {
        "action": "macie2:GetResourceProfile",
        "resource_mappings": {}
      }
    ],
    "get-reveal-configuration": [
      {
        "action": "macie2:GetRevealConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-sensitive-data-occurrences": [
      {
        "action": "macie2:GetSensitiveDataOccurrences",
        "resource_mappings": {}
      }
    ],
    "get-sensitive-data-occurrences-availability": [
      {
        "action": "macie2:GetSensitiveDataOccurrencesAvailability",
        "resource_mappings": {}
      }
    ],
    "get-sensitivity-inspection-template": [
      {
        "action": "macie2:GetSensitivityInspectionTemplate",
        "resource_mappings": {}
      }
    ],
    "get-usage-statistics": [
      {
        "action": "macie2:GetUsageStatistics",
        "resource_mappings": {}
      }
    ],
    "get-usage-totals": [
      {
        "action": "macie2:GetUsageTotals",
        "resource_mappings": {}
      }
    ],
    "list-allow-lists": [
      {
        "action": "macie2:ListAllowLists",
        "resource_mappings": {}
      }
    ],
    "list-classification-jobs": [
      {
        "action": "macie2:ListClassificationJobs",
        "resource_mappings": {}
      }
    ],
    "list-classification-scopes": [
      {
        "action": "macie2:ListClassificationScopes",
        "resource_mappings": {}
      }
    ],
    "list-custom-data-identifiers": [
      {
        "action": "macie2:ListCustomDataIdentifiers",
        "resource_mappings": {}
      }
    ],
    "list-findings": [
      {
        "action": "macie2:ListFindings",
        "resource_mappings": {}
      }
    ],
    "list-findings-filters": [
      {
        "action": "macie2:ListFindingsFilters",
        "resource_mappings": {}
      }
    ],
    "list-invitations": [
      {
        "action": "macie2:ListInvitations",
        "resource_mappings": {}
      }
    ],
    "list-managed-data-identifiers": [
      {
        "action": "macie2:ListManagedDataIdentifiers",
        "resource_mappings": {}
      }
    ],
    "list-members": [
      {
        "action": "macie2:ListMembers",
        "resource_mappings": {}
      }
    ],
    "list-organization-admin-accounts": [
      {
        "action": "macie2:ListOrganizationAdminAccounts",
        "resource_mappings": {}
      }
    ],
    "list-resource-profile-artifacts": [
      {
        "action": "macie2:ListResourceProfileArtifacts",
        "resource_mappings": {}
      }
    ],
    "list-resource-profile-detections": [
      {
        "action": "macie2:ListResourceProfileDetections",
        "resource_mappings": {}
      }
    ],
    "list-sensitivity-inspection-templates": [
      {
        "action": "macie2:ListSensitivityInspectionTemplates",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "macie2:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "put-classification-export-configuration": [
      {
        "action": "macie2:PutClassificationExportConfiguration",
        "resource_mappings": {}
      }
    ],
    "put-findings-publication-configuration": [
      {
        "action": "macie2:PutFindingsPublicationConfiguration",
        "resource_mappings": {}
      }
    ],
    "search-resources": [
      {
        "action": "macie2:SearchResources",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "macie2:TagResource",
        "resource_mappings": {}
      }
    ],
    "test-custom-data-identifier": [
      {
        "action": "macie2:TestCustomDataIdentifier",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "macie2:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-allow-list": [
      {
        "action": "macie2:UpdateAllowList",
        "resource_mappings": {
          "ResourceId": {
            "template": "${id}"
          }
        }
      }
    ],
    "update-automated-discovery-configuration": [
      {
        "action": "macie2:UpdateAutomatedDiscoveryConfiguration",
        "resource_mappings": {}
      }
    ],
    "update-classification-job": [
      {
        "action": "macie2:UpdateClassificationJob",
        "resource_mappings": {
          "ResourceId": {
            "template": "${jobId}"
          }
        }
      }
    ],
    "update-classification-scope": [
      {
        "action": "macie2:UpdateClassificationScope",
        "resource_mappings": {}
      }
    ],
    "update-findings-filter": [
      {
        "action": "macie2:UpdateFindingsFilter",
        "resource_mappings": {
          "ResourceId": {
            "template": "${id}"
          }
        }
      }
    ],
    "update-macie-session": [
      {
        "action": "macie2:UpdateMacieSession",
        "resource_mappings": {}
      }
    ],
    "update-member-session": [
      {
        "action": "macie2:UpdateMemberSession",
        "resource_mappings": {}
      }
    ],
    "update-organization-configuration": [
      {
        "action": "macie2:UpdateOrganizationConfiguration",
        "resource_mappings": {}
      }
    ],
    "update-resource-profile": [
      {
        "action": "macie2:UpdateResourceProfile",
        "resource_mappings": {}
      }
    ],
    "update-resource-profile-detections": [
      {
        "action": "macie2:UpdateResourceProfileDetections",
        "resource_mappings": {}
      }
    ],
    "update-reveal-configuration": [
      {
        "action": "macie2:UpdateRevealConfiguration",
        "resource_mappings": {}
      }
    ],
    "update-sensitivity-inspection-template": [
      {
        "action": "macie2:UpdateSensitivityInspectionTemplate",
        "resource_mappings": {}
      }
    ],
    "wait": [
      {
        "action": "macie2:GetSensitiveDataOccurrences",
        "resource_mappings": {}
      }
    ]
  },
  "managedblockchain": {
    "create-accessor": [
      {
        "action": "managedblockchain:CreateAccessor",
        "resource_mappings": {}
      }
    ],
    "create-member": [
      {
        "action": "managedblockchain:CreateMember",
        "resource_mappings": {
          "NetworkId": {
            "template": "${NetworkId}"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "create-network": [
      {
        "action": "managedblockchain:CreateNetwork",
        "resource_mappings": {}
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "create-node": [
      {
        "action": "managedblockchain:CreateNode",
        "resource_mappings": {
          "MemberId": {
            "template": "${MemberId}"
          },
          "NetworkId": {
            "template": "${NetworkId}"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "create-proposal": [
      {
        "action": "managedblockchain:CreateProposal",
        "resource_mappings": {
          "NetworkId": {
            "template": "${NetworkId}"
          }
        }
      }
    ],
    "delete-accessor": [
      {
        "action": "managedblockchain:DeleteAccessor",
        "resource_mappings": {
          "AccessorId": {
            "template": "${AccessorId}"
          }
        }
      }
    ],
    "delete-member": [
      {
        "action": "managedblockchain:DeleteMember",
        "resource_mappings": {
          "MemberId": {
            "template": "${MemberId}"
          }
        }
      }
    ],
    "delete-node": [
      {
        "action": "managedblockchain:DeleteNode",
        "resource_mappings": {
          "NodeId": {
            "template": "${NodeId}"
          }
        }
      }
    ],
    "get-accessor": [
      {
        "action": "managedblockchain:GetAccessor",
        "resource_mappings": {
          "AccessorId": {
            "template": "${AccessorId}"
          }
        }
      }
    ],
    "get-member": [
      {
        "action": "managedblockchain:GetMember",
        "resource_mappings": {
          "MemberId": {
            "template": "${MemberId}"
          }
        }
      }
    ],
    "get-network": [
      {
        "action": "managedblockchain:GetNetwork",
        "resource_mappings": {
          "NetworkId": {
            "template": "${NetworkId}"
          }
        }
      }
    ],
    "get-node": [
      {
        "action": "managedblockchain:GetNode",
        "resource_mappings": {
          "NodeId": {
            "template": "${NodeId}"
          }
        }
      }
    ],
    "get-proposal": [
      {
        "action": "managedblockchain:GetProposal",
        "resource_mappings": {
          "ProposalId": {
            "template": "${ProposalId}"
          }
        }
      }
    ],
    "list-accessors": [
      {
        "action": "managedblockchain:ListAccessors",
        "resource_mappings": {}
      }
    ],
    "list-invitations": [
      {
        "action": "managedblockchain:ListInvitations",
        "resource_mappings": {}
      }
    ],
    "list-members": [
      {
        "action": "managedblockchain:ListMembers",
        "resource_mappings": {
          "NetworkId": {
            "template": "${NetworkId}"
          }
        }
      }
    ],
    "list-networks": [
      {
        "action": "managedblockchain:ListNetworks",
        "resource_mappings": {}
      }
    ],
    "list-nodes": [
      {
        "action": "managedblockchain:ListNodes",
        "resource_mappings": {
          "MemberId": {
            "template": "${MemberId}"
          },
          "NetworkId": {
            "template": "${NetworkId}"
          }
        }
      }
    ],
    "list-proposal-votes": [
      {
        "action": "managedblockchain:ListProposalVotes",
        "resource_mappings": {
          "ProposalId": {
            "template": "${ProposalId}"
          }
        }
      }
    ],
    "list-proposals": [
      {
        "action": "managedblockchain:ListProposals",
        "resource_mappings": {
          "NetworkId": {
            "template": "${NetworkId}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "managedblockchain:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "invitation": "%%iftemplatematch%${ResourceArn}%%",
          "member": "%%iftemplatematch%${ResourceArn}%%",
          "network": "%%iftemplatematch%${ResourceArn}%%",
          "node": "%%iftemplatematch%${ResourceArn}%%",
          "proposal": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "reject-invitation": [
      {
        "action": "managedblockchain:RejectInvitation",
        "resource_mappings": {
          "InvitationId": {
            "template": "${InvitationId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "managedblockchain:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "invitation": "%%iftemplatematch%${ResourceArn}%%",
          "member": "%%iftemplatematch%${ResourceArn}%%",
          "network": "%%iftemplatematch%${ResourceArn}%%",
          "node": "%%iftemplatematch%${ResourceArn}%%",
          "proposal": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "managedblockchain:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "invitation": "%%iftemplatematch%${ResourceArn}%%",
          "member": "%%iftemplatematch%${ResourceArn}%%",
          "network": "%%iftemplatematch%${ResourceArn}%%",
          "node": "%%iftemplatematch%${ResourceArn}%%",
          "proposal": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-member": [
      {
        "action": "managedblockchain:UpdateMember",
        "resource_mappings": {
          "MemberId": {
            "template": "${MemberId}"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "update-node": [
      {
        "action": "managedblockchain:UpdateNode",
        "resource_mappings": {
          "NodeId": {
            "template": "${NodeId}"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "vote-on-proposal": [
      {
        "action": "managedblockchain:VoteOnProposal",
        "resource_mappings": {
          "ProposalId": {
            "template": "${ProposalId}"
          }
        }
      }
    ]
  },
  "managedblockchain-query": {
    "batch-get-token-balance": [
      {
        "note": "NotFound",
        "action": "ManagedBlockchain Query:BatchGetTokenBalance",
        "resource_mappings": {}
      }
    ],
    "get-asset-contract": [
      {
        "note": "NotFound",
        "action": "ManagedBlockchain Query:GetAssetContract",
        "resource_mappings": {}
      }
    ],
    "get-token-balance": [
      {
        "note": "NotFound",
        "action": "ManagedBlockchain Query:GetTokenBalance",
        "resource_mappings": {}
      }
    ],
    "get-transaction": [
      {
        "note": "NotFound",
        "action": "ManagedBlockchain Query:GetTransaction",
        "resource_mappings": {}
      }
    ],
    "list-asset-contracts": [
      {
        "note": "NotFound",
        "action": "ManagedBlockchain Query:ListAssetContracts",
        "resource_mappings": {}
      }
    ],
    "list-token-balances": [
      {
        "note": "NotFound",
        "action": "ManagedBlockchain Query:ListTokenBalances",
        "resource_mappings": {}
      }
    ],
    "list-transaction-events": [
      {
        "note": "NotFound",
        "action": "ManagedBlockchain Query:ListTransactionEvents",
        "resource_mappings": {}
      }
    ],
    "list-transactions": [
      {
        "note": "NotFound",
        "action": "ManagedBlockchain Query:ListTransactions",
        "resource_mappings": {}
      }
    ]
  },
  "marketplace-catalog": {
    "cancel-change-set": [
      {
        "action": "aws-marketplace:CancelChangeSet",
        "resource_mappings": {}
      }
    ],
    "delete-resource-policy": [
      {
        "action": "aws-marketplace:DeleteResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Entity": "${ResourceArn}"
        }
      }
    ],
    "describe-change-set": [
      {
        "action": "aws-marketplace:DescribeChangeSet",
        "resource_mappings": {}
      }
    ],
    "describe-entity": [
      {
        "action": "aws-marketplace:DescribeEntity",
        "resource_mappings": {}
      }
    ],
    "get-resource-policy": [
      {
        "action": "aws-marketplace:GetResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Entity": "${ResourceArn}"
        }
      }
    ],
    "list-change-sets": [
      {
        "action": "aws-marketplace:ListChangeSets",
        "resource_mappings": {}
      }
    ],
    "list-entities": [
      {
        "action": "aws-marketplace:ListEntities",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "aws-marketplace:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ChangeSet": "%%iftemplatematch%${ResourceArn}%%",
          "Entity": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "put-resource-policy": [
      {
        "action": "aws-marketplace:PutResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Entity": "${ResourceArn}"
        }
      }
    ],
    "start-change-set": [
      {
        "action": "aws-marketplace:StartChangeSet",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "aws-marketplace:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ChangeSet": "%%iftemplatematch%${ResourceArn}%%",
          "Entity": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "aws-marketplace:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ChangeSet": "%%iftemplatematch%${ResourceArn}%%",
          "Entity": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ]
  },
  "marketplace-entitlement": {
    "get-entitlements": [
      {
        "action": "aws-marketplace:GetEntitlements",
        "resource_mappings": {}
      }
    ]
  },
  "marketplacecommerceanalytics": {
    "generate-data-set": [
      {
        "action": "marketplacecommerceanalytics:GenerateDataSet",
        "resource_mappings": {}
      }
    ],
    "start-support-data-export": [
      {
        "action": "marketplacecommerceanalytics:StartSupportDataExport",
        "resource_mappings": {}
      }
    ]
  },
  "mediaconnect": {
    "add-bridge-outputs": [
      {
        "action": "mediaconnect:AddBridgeOutputs",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Bridge": "${BridgeArn}"
        }
      }
    ],
    "add-bridge-sources": [
      {
        "action": "mediaconnect:AddBridgeSources",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Bridge": "${BridgeArn}"
        }
      }
    ],
    "add-flow-media-streams": [
      {
        "action": "mediaconnect:AddFlowMediaStreams",
        "resource_mappings": {}
      }
    ],
    "add-flow-outputs": [
      {
        "action": "mediaconnect:AddFlowOutputs",
        "resource_mappings": {}
      }
    ],
    "add-flow-sources": [
      {
        "action": "mediaconnect:AddFlowSources",
        "resource_mappings": {}
      }
    ],
    "add-flow-vpc-interfaces": [
      {
        "action": "mediaconnect:AddFlowVpcInterfaces",
        "resource_mappings": {}
      }
    ],
    "create-bridge": [
      {
        "action": "mediaconnect:CreateBridge",
        "resource_mappings": {
          "FlowId": {
            "template": "*"
          },
          "FlowName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "create-flow": [
      {
        "action": "mediaconnect:CreateFlow",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${Source.Decryption.RoleArn}"
        }
      }
    ],
    "create-gateway": [
      {
        "action": "mediaconnect:CreateGateway",
        "resource_mappings": {
          "GatewayId": {
            "template": "*"
          },
          "GatewayName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-bridge": [
      {
        "action": "mediaconnect:DeleteBridge",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Bridge": "${BridgeArn}"
        }
      }
    ],
    "delete-flow": [
      {
        "action": "mediaconnect:DeleteFlow",
        "resource_mappings": {}
      }
    ],
    "delete-gateway": [
      {
        "action": "mediaconnect:DeleteGateway",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Gateway": "${GatewayArn}"
        }
      }
    ],
    "deregister-gateway-instance": [
      {
        "action": "mediaconnect:DeregisterGatewayInstance",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "GatewayInstance": "${GatewayInstanceArn}"
        }
      }
    ],
    "describe-bridge": [
      {
        "action": "mediaconnect:DescribeBridge",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Bridge": "${BridgeArn}"
        }
      }
    ],
    "describe-flow": [
      {
        "action": "mediaconnect:DescribeFlow",
        "resource_mappings": {}
      }
    ],
    "describe-gateway": [
      {
        "action": "mediaconnect:DescribeGateway",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Gateway": "${GatewayArn}"
        }
      }
    ],
    "describe-gateway-instance": [
      {
        "action": "mediaconnect:DescribeGatewayInstance",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "GatewayInstance": "${GatewayInstanceArn}"
        }
      }
    ],
    "describe-offering": [
      {
        "action": "mediaconnect:DescribeOffering",
        "resource_mappings": {}
      }
    ],
    "describe-reservation": [
      {
        "action": "mediaconnect:DescribeReservation",
        "resource_mappings": {}
      }
    ],
    "grant-flow-entitlements": [
      {
        "action": "mediaconnect:GrantFlowEntitlements",
        "resource_mappings": {}
      }
    ],
    "list-bridges": [
      {
        "action": "mediaconnect:ListBridges",
        "resource_mappings": {
          "FlowId": {
            "template": "*"
          },
          "FlowName": {
            "template": "*"
          }
        }
      }
    ],
    "list-entitlements": [
      {
        "action": "mediaconnect:ListEntitlements",
        "resource_mappings": {}
      }
    ],
    "list-flows": [
      {
        "action": "mediaconnect:ListFlows",
        "resource_mappings": {}
      }
    ],
    "list-gateway-instances": [
      {
        "action": "mediaconnect:ListGatewayInstances",
        "resource_mappings": {
          "GatewayId": {
            "template": "*"
          },
          "GatewayName": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-gateways": [
      {
        "action": "mediaconnect:ListGateways",
        "resource_mappings": {}
      }
    ],
    "list-offerings": [
      {
        "action": "mediaconnect:ListOfferings",
        "resource_mappings": {}
      }
    ],
    "list-reservations": [
      {
        "action": "mediaconnect:ListReservations",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "mediaconnect:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "purchase-offering": [
      {
        "action": "mediaconnect:PurchaseOffering",
        "resource_mappings": {}
      }
    ],
    "remove-bridge-output": [
      {
        "action": "mediaconnect:RemoveBridgeOutput",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Bridge": "${BridgeArn}"
        }
      }
    ],
    "remove-bridge-source": [
      {
        "action": "mediaconnect:RemoveBridgeSource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Bridge": "${BridgeArn}"
        }
      }
    ],
    "remove-flow-media-stream": [
      {
        "action": "mediaconnect:RemoveFlowMediaStream",
        "resource_mappings": {}
      }
    ],
    "remove-flow-output": [
      {
        "action": "mediaconnect:RemoveFlowOutput",
        "resource_mappings": {}
      }
    ],
    "remove-flow-source": [
      {
        "action": "mediaconnect:RemoveFlowSource",
        "resource_mappings": {}
      }
    ],
    "remove-flow-vpc-interface": [
      {
        "action": "mediaconnect:RemoveFlowVpcInterface",
        "resource_mappings": {}
      }
    ],
    "revoke-flow-entitlement": [
      {
        "action": "mediaconnect:RevokeFlowEntitlement",
        "resource_mappings": {}
      }
    ],
    "start-flow": [
      {
        "action": "mediaconnect:StartFlow",
        "resource_mappings": {}
      }
    ],
    "stop-flow": [
      {
        "action": "mediaconnect:StopFlow",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "mediaconnect:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "mediaconnect:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-bridge": [
      {
        "action": "mediaconnect:UpdateBridge",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Bridge": "${BridgeArn}"
        }
      }
    ],
    "update-bridge-output": [
      {
        "action": "mediaconnect:UpdateBridgeOutput",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Bridge": "${BridgeArn}"
        }
      }
    ],
    "update-bridge-source": [
      {
        "action": "mediaconnect:UpdateBridgeSource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Bridge": "${BridgeArn}"
        }
      }
    ],
    "update-bridge-state": [
      {
        "action": "mediaconnect:UpdateBridgeState",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Bridge": "${BridgeArn}"
        }
      }
    ],
    "update-flow": [
      {
        "action": "mediaconnect:UpdateFlow",
        "resource_mappings": {}
      }
    ],
    "update-flow-entitlement": [
      {
        "action": "mediaconnect:UpdateFlowEntitlement",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${Encryption.RoleArn}"
        }
      }
    ],
    "update-flow-media-stream": [
      {
        "action": "mediaconnect:UpdateFlowMediaStream",
        "resource_mappings": {}
      }
    ],
    "update-flow-output": [
      {
        "action": "mediaconnect:UpdateFlowOutput",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${Encryption.RoleArn}"
        }
      }
    ],
    "update-flow-source": [
      {
        "action": "mediaconnect:UpdateFlowSource",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${Decryption.RoleArn}"
        }
      }
    ],
    "update-gateway-instance": [
      {
        "action": "mediaconnect:UpdateGatewayInstance",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "GatewayInstance": "${GatewayInstanceArn}"
        }
      }
    ],
    "wait": [
      {
        "action": "mediaconnect:DescribeFlow",
        "resource_mappings": {}
      }
    ]
  },
  "mediaconvert": {
    "associate-certificate": [
      {
        "action": "mediaconvert:AssociateCertificate",
        "resource_mappings": {}
      }
    ],
    "cancel-job": [
      {
        "action": "mediaconvert:CancelJob",
        "resource_mappings": {
          "JobId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "create-job": [
      {
        "action": "mediaconvert:CreateJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "JobTemplate": "${JobTemplate}",
          "Preset": "${Settings.OutputGroups[].Outputs[].Preset}",
          "Queue": "%%many%${Queue}%${HopDestinations[].Queue}%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${Role}"
        }
      }
    ],
    "create-job-template": [
      {
        "action": "mediaconvert:CreateJobTemplate",
        "resource_mappings": {
          "PresetName": {
            "template": "*"
          },
          "QueueName": {
            "template": "*"
          }
        }
      }
    ],
    "create-preset": [
      {
        "action": "mediaconvert:CreatePreset",
        "resource_mappings": {}
      }
    ],
    "create-queue": [
      {
        "action": "mediaconvert:CreateQueue",
        "resource_mappings": {}
      }
    ],
    "delete-job-template": [
      {
        "action": "mediaconvert:DeleteJobTemplate",
        "resource_mappings": {
          "JobTemplateName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-policy": [
      {
        "action": "mediaconvert:DeletePolicy",
        "resource_mappings": {}
      }
    ],
    "delete-preset": [
      {
        "action": "mediaconvert:DeletePreset",
        "resource_mappings": {
          "PresetName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-queue": [
      {
        "action": "mediaconvert:DeleteQueue",
        "resource_mappings": {
          "QueueName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "describe-endpoints": [
      {
        "action": "mediaconvert:DescribeEndpoints",
        "resource_mappings": {}
      }
    ],
    "disassociate-certificate": [
      {
        "action": "mediaconvert:DisassociateCertificate",
        "resource_mappings": {}
      }
    ],
    "get-job": [
      {
        "action": "mediaconvert:GetJob",
        "resource_mappings": {
          "JobId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-job-template": [
      {
        "action": "mediaconvert:GetJobTemplate",
        "resource_mappings": {
          "JobTemplateName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-policy": [
      {
        "action": "mediaconvert:GetPolicy",
        "resource_mappings": {}
      }
    ],
    "get-preset": [
      {
        "action": "mediaconvert:GetPreset",
        "resource_mappings": {
          "PresetName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-queue": [
      {
        "action": "mediaconvert:GetQueue",
        "resource_mappings": {
          "QueueName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "list-job-templates": [
      {
        "action": "mediaconvert:ListJobTemplates",
        "resource_mappings": {}
      }
    ],
    "list-jobs": [
      {
        "action": "mediaconvert:ListJobs",
        "resource_mappings": {
          "QueueName": {
            "template": "${Queue}"
          }
        }
      }
    ],
    "list-presets": [
      {
        "action": "mediaconvert:ListPresets",
        "resource_mappings": {}
      }
    ],
    "list-queues": [
      {
        "action": "mediaconvert:ListQueues",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "mediaconvert:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "JobTemplate": "%%iftemplatematch%${Arn}%%",
          "Preset": "%%iftemplatematch%${Arn}%%",
          "Queue": "%%iftemplatematch%${Arn}%%"
        }
      }
    ],
    "put-policy": [
      {
        "action": "mediaconvert:PutPolicy",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "mediaconvert:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "JobTemplate": "%%iftemplatematch%${Arn}%%",
          "Preset": "%%iftemplatematch%${Arn}%%",
          "Queue": "%%iftemplatematch%${Arn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "mediaconvert:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "JobTemplate": "%%iftemplatematch%${Arn}%%",
          "Preset": "%%iftemplatematch%${Arn}%%",
          "Queue": "%%iftemplatematch%${Arn}%%"
        }
      }
    ],
    "update-job-template": [
      {
        "action": "mediaconvert:UpdateJobTemplate",
        "resource_mappings": {
          "JobTemplateName": {
            "template": "${Name}"
          },
          "PresetName": {
            "template": "*"
          },
          "QueueName": {
            "template": "*"
          }
        }
      }
    ],
    "update-preset": [
      {
        "action": "mediaconvert:UpdatePreset",
        "resource_mappings": {
          "PresetName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "update-queue": [
      {
        "action": "mediaconvert:UpdateQueue",
        "resource_mappings": {
          "QueueName": {
            "template": "${Name}"
          }
        }
      }
    ]
  },
  "medialive": {
    "accept-input-device-transfer": [
      {
        "action": "medialive:AcceptInputDeviceTransfer",
        "resource_mappings": {}
      }
    ],
    "batch-delete": [
      {
        "action": "medialive:BatchDelete",
        "resource_mappings": {}
      }
    ],
    "batch-start": [
      {
        "action": "medialive:BatchStart",
        "resource_mappings": {}
      }
    ],
    "batch-stop": [
      {
        "action": "medialive:BatchStop",
        "resource_mappings": {}
      }
    ],
    "batch-update-schedule": [
      {
        "action": "medialive:BatchUpdateSchedule",
        "resource_mappings": {}
      }
    ],
    "cancel-input-device-transfer": [
      {
        "action": "medialive:CancelInputDeviceTransfer",
        "resource_mappings": {}
      }
    ],
    "claim-device": [
      {
        "action": "medialive:ClaimDevice",
        "resource_mappings": {}
      }
    ],
    "create-channel": [
      {
        "action": "medialive:CreateChannel",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "create-input": [
      {
        "action": "medialive:CreateInput",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "create-input-security-group": [
      {
        "action": "medialive:CreateInputSecurityGroup",
        "resource_mappings": {}
      }
    ],
    "create-multiplex": [
      {
        "action": "medialive:CreateMultiplex",
        "resource_mappings": {}
      }
    ],
    "create-multiplex-program": [
      {
        "action": "medialive:CreateMultiplexProgram",
        "resource_mappings": {}
      }
    ],
    "create-partner-input": [
      {
        "action": "medialive:CreatePartnerInput",
        "resource_mappings": {}
      }
    ],
    "create-tags": [
      {
        "action": "medialive:CreateTags",
        "resource_mappings": {}
      }
    ],
    "delete-channel": [
      {
        "action": "medialive:DeleteChannel",
        "resource_mappings": {}
      }
    ],
    "delete-input": [
      {
        "action": "medialive:DeleteInput",
        "resource_mappings": {}
      }
    ],
    "delete-input-security-group": [
      {
        "action": "medialive:DeleteInputSecurityGroup",
        "resource_mappings": {}
      }
    ],
    "delete-multiplex": [
      {
        "action": "medialive:DeleteMultiplex",
        "resource_mappings": {}
      }
    ],
    "delete-multiplex-program": [
      {
        "action": "medialive:DeleteMultiplexProgram",
        "resource_mappings": {}
      }
    ],
    "delete-reservation": [
      {
        "action": "medialive:DeleteReservation",
        "resource_mappings": {}
      }
    ],
    "delete-schedule": [
      {
        "action": "medialive:DeleteSchedule",
        "resource_mappings": {}
      }
    ],
    "delete-tags": [
      {
        "action": "medialive:DeleteTags",
        "resource_mappings": {}
      }
    ],
    "describe-channel": [
      {
        "action": "medialive:DescribeChannel",
        "resource_mappings": {}
      }
    ],
    "describe-input": [
      {
        "action": "medialive:DescribeInput",
        "resource_mappings": {}
      }
    ],
    "describe-input-device": [
      {
        "action": "medialive:DescribeInputDevice",
        "resource_mappings": {}
      }
    ],
    "describe-input-device-thumbnail": [
      {
        "action": "medialive:DescribeInputDeviceThumbnail",
        "resource_mappings": {}
      }
    ],
    "describe-input-security-group": [
      {
        "action": "medialive:DescribeInputSecurityGroup",
        "resource_mappings": {}
      }
    ],
    "describe-multiplex": [
      {
        "action": "medialive:DescribeMultiplex",
        "resource_mappings": {}
      }
    ],
    "describe-multiplex-program": [
      {
        "action": "medialive:DescribeMultiplexProgram",
        "resource_mappings": {}
      }
    ],
    "describe-offering": [
      {
        "action": "medialive:DescribeOffering",
        "resource_mappings": {}
      }
    ],
    "describe-reservation": [
      {
        "action": "medialive:DescribeReservation",
        "resource_mappings": {}
      }
    ],
    "describe-schedule": [
      {
        "action": "medialive:DescribeSchedule",
        "resource_mappings": {}
      }
    ],
    "describe-account-configuration": [
      {
        "action": "medialive:DescribeAccountConfiguration",
        "resource_mappings": {}
      }
    ],
    "describe-thumbnails": [
      {
        "action": "medialive:DescribeThumbnails",
        "resource_mappings": {
          "ChannelId": {
            "template": "${ChannelId}"
          }
        }
      }
    ],
    "list-channels": [
      {
        "action": "medialive:ListChannels",
        "resource_mappings": {}
      }
    ],
    "list-input-device-transfers": [
      {
        "action": "medialive:ListInputDeviceTransfers",
        "resource_mappings": {}
      }
    ],
    "list-input-devices": [
      {
        "action": "medialive:ListInputDevices",
        "resource_mappings": {}
      }
    ],
    "list-input-security-groups": [
      {
        "action": "medialive:ListInputSecurityGroups",
        "resource_mappings": {}
      }
    ],
    "list-inputs": [
      {
        "action": "medialive:ListInputs",
        "resource_mappings": {}
      }
    ],
    "list-multiplex-programs": [
      {
        "action": "medialive:ListMultiplexPrograms",
        "resource_mappings": {}
      }
    ],
    "list-multiplexes": [
      {
        "action": "medialive:ListMultiplexes",
        "resource_mappings": {}
      }
    ],
    "list-offerings": [
      {
        "action": "medialive:ListOfferings",
        "resource_mappings": {}
      }
    ],
    "list-reservations": [
      {
        "action": "medialive:ListReservations",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "medialive:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "purchase-offering": [
      {
        "action": "medialive:PurchaseOffering",
        "resource_mappings": {}
      }
    ],
    "reboot-input-device": [
      {
        "action": "medialive:RebootInputDevice",
        "resource_mappings": {
          "DeviceId": {
            "template": "${InputDeviceId}"
          }
        }
      }
    ],
    "reject-input-device-transfer": [
      {
        "action": "medialive:RejectInputDeviceTransfer",
        "resource_mappings": {}
      }
    ],
    "update-account-configuration": [
      {
        "action": "medialive:UpdateAccountConfiguration",
        "resource_mappings": {}
      }
    ],
    "start-channel": [
      {
        "action": "medialive:StartChannel",
        "resource_mappings": {}
      }
    ],
    "start-input-device": [
      {
        "note": "NotFound",
        "action": "MediaLive:StartInputDevice",
        "resource_mappings": {}
      }
    ],
    "start-input-device-maintenance-window": [
      {
        "action": "medialive:StartInputDeviceMaintenanceWindow",
        "resource_mappings": {
          "DeviceId": {
            "template": "${InputDeviceId}"
          }
        }
      }
    ],
    "start-multiplex": [
      {
        "action": "medialive:StartMultiplex",
        "resource_mappings": {}
      }
    ],
    "stop-channel": [
      {
        "action": "medialive:StopChannel",
        "resource_mappings": {}
      }
    ],
    "stop-input-device": [
      {
        "note": "NotFound",
        "action": "MediaLive:StopInputDevice",
        "resource_mappings": {}
      }
    ],
    "stop-multiplex": [
      {
        "action": "medialive:StopMultiplex",
        "resource_mappings": {}
      }
    ],
    "transfer-input-device": [
      {
        "action": "medialive:TransferInputDevice",
        "resource_mappings": {}
      }
    ],
    "update-channel": [
      {
        "action": "medialive:UpdateChannel",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "update-channel-class": [
      {
        "action": "medialive:UpdateChannelClass",
        "resource_mappings": {}
      }
    ],
    "update-input": [
      {
        "action": "medialive:UpdateInput",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "update-input-device": [
      {
        "action": "medialive:UpdateInputDevice",
        "resource_mappings": {}
      }
    ],
    "update-input-security-group": [
      {
        "action": "medialive:UpdateInputSecurityGroup",
        "resource_mappings": {}
      }
    ],
    "update-multiplex": [
      {
        "action": "medialive:UpdateMultiplex",
        "resource_mappings": {}
      }
    ],
    "update-multiplex-program": [
      {
        "action": "medialive:UpdateMultiplexProgram",
        "resource_mappings": {}
      }
    ],
    "update-reservation": [
      {
        "action": "medialive:UpdateReservation",
        "resource_mappings": {}
      }
    ],
    "wait": [
      {
        "action": "medialive:DescribeChannel",
        "resource_mappings": {}
      }
    ]
  },
  "mediapackage": {
    "configure-logs": [
      {
        "action": "mediapackage:UpdateChannel",
        "resource_mappings": {
          "ChannelIdentifier": {
            "template": "${Id}"
          }
        }
      }
    ],
    "create-channel": [
      {
        "action": "mediapackage:CreateChannel",
        "resource_mappings": {}
      }
    ],
    "create-harvest-job": [
      {
        "action": "mediapackage:CreateHarvestJob",
        "resource_mappings": {}
      }
    ],
    "create-origin-endpoint": [
      {
        "action": "mediapackage:CreateOriginEndpoint",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${Authorization.SecretsRoleArn}%${CmafPackage.Encryption.SpekeKeyProvider.RoleArn}%${DashPackage.Encryption.SpekeKeyProvider.RoleArn}%${HlsPackage.Encryption.SpekeKeyProvider.RoleArn}%${MssPackage.Encryption.SpekeKeyProvider.RoleArn}%%"
        }
      }
    ],
    "delete-channel": [
      {
        "action": "mediapackage:DeleteChannel",
        "resource_mappings": {
          "ChannelIdentifier": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-origin-endpoint": [
      {
        "action": "mediapackage:DeleteOriginEndpoint",
        "resource_mappings": {
          "OriginEndpointIdentifier": {
            "template": "${Id}"
          }
        }
      }
    ],
    "describe-channel": [
      {
        "action": "mediapackage:DescribeChannel",
        "resource_mappings": {
          "ChannelIdentifier": {
            "template": "${Id}"
          }
        }
      }
    ],
    "describe-harvest-job": [
      {
        "action": "mediapackage:DescribeHarvestJob",
        "resource_mappings": {
          "HarvestJobIdentifier": {
            "template": "${Id}"
          }
        }
      }
    ],
    "describe-origin-endpoint": [
      {
        "action": "mediapackage:DescribeOriginEndpoint",
        "resource_mappings": {
          "OriginEndpointIdentifier": {
            "template": "${Id}"
          }
        }
      }
    ],
    "list-channels": [
      {
        "action": "mediapackage:ListChannels",
        "resource_mappings": {}
      }
    ],
    "list-harvest-jobs": [
      {
        "action": "mediapackage:ListHarvestJobs",
        "resource_mappings": {}
      }
    ],
    "list-origin-endpoints": [
      {
        "action": "mediapackage:ListOriginEndpoints",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "mediapackage:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channels": "%%iftemplatematch%${ResourceArn}%%",
          "harvest_jobs": "%%iftemplatematch%${ResourceArn}%%",
          "origin_endpoints": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "rotate-channel-credentials": [
      {
        "action": "mediapackage:RotateChannelCredentials",
        "resource_mappings": {
          "ChannelIdentifier": {
            "template": "${Id}"
          }
        }
      }
    ],
    "rotate-ingest-endpoint-credentials": [
      {
        "action": "mediapackage:RotateIngestEndpointCredentials",
        "resource_mappings": {
          "ChannelIdentifier": {
            "template": "${Id}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "mediapackage:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channels": "%%iftemplatematch%${ResourceArn}%%",
          "harvest_jobs": "%%iftemplatematch%${ResourceArn}%%",
          "origin_endpoints": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "mediapackage:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "channels": "%%iftemplatematch%${ResourceArn}%%",
          "harvest_jobs": "%%iftemplatematch%${ResourceArn}%%",
          "origin_endpoints": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-channel": [
      {
        "action": "mediapackage:UpdateChannel",
        "resource_mappings": {
          "ChannelIdentifier": {
            "template": "${Id}"
          }
        }
      }
    ],
    "update-origin-endpoint": [
      {
        "action": "mediapackage:UpdateOriginEndpoint",
        "resource_mappings": {
          "OriginEndpointIdentifier": {
            "template": "${Id}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${Authorization.SecretsRoleArn}%${CmafPackage.Encryption.SpekeKeyProvider.RoleArn}%${DashPackage.Encryption.SpekeKeyProvider.RoleArn}%${HlsPackage.Encryption.SpekeKeyProvider.RoleArn}%${MssPackage.Encryption.SpekeKeyProvider.RoleArn}%%"
        }
      }
    ]
  },
  "mediapackage-vod": {
    "configure-logs": [
      {
        "action": "mediapackage-vod:ConfigureLogs",
        "resource_mappings": {
          "PackagingGroupIdentifier": {
            "template": "${Id}"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "create-asset": [
      {
        "action": "mediapackage-vod:CreateAsset",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${SourceRoleArn}"
        }
      }
    ],
    "create-packaging-configuration": [
      {
        "action": "mediapackage-vod:CreatePackagingConfiguration",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${CmafPackage.Encryption.SpekeKeyProvider.RoleArn}%${DashPackage.Encryption.SpekeKeyProvider.RoleArn}%${HlsPackage.Encryption.SpekeKeyProvider.RoleArn}%${MssPackage.Encryption.SpekeKeyProvider.RoleArn}%%"
        }
      }
    ],
    "create-packaging-group": [
      {
        "action": "mediapackage-vod:CreatePackagingGroup",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${Authorization.SecretsRoleArn}"
        }
      }
    ],
    "delete-asset": [
      {
        "action": "mediapackage-vod:DeleteAsset",
        "resource_mappings": {
          "AssetIdentifier": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-packaging-configuration": [
      {
        "action": "mediapackage-vod:DeletePackagingConfiguration",
        "resource_mappings": {
          "PackagingConfigurationIdentifier": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-packaging-group": [
      {
        "action": "mediapackage-vod:DeletePackagingGroup",
        "resource_mappings": {
          "PackagingGroupIdentifier": {
            "template": "${Id}"
          }
        }
      }
    ],
    "describe-asset": [
      {
        "action": "mediapackage-vod:DescribeAsset",
        "resource_mappings": {
          "AssetIdentifier": {
            "template": "${Id}"
          }
        }
      }
    ],
    "describe-packaging-configuration": [
      {
        "action": "mediapackage-vod:DescribePackagingConfiguration",
        "resource_mappings": {
          "PackagingConfigurationIdentifier": {
            "template": "${Id}"
          }
        }
      }
    ],
    "describe-packaging-group": [
      {
        "action": "mediapackage-vod:DescribePackagingGroup",
        "resource_mappings": {
          "PackagingGroupIdentifier": {
            "template": "${Id}"
          }
        }
      }
    ],
    "list-assets": [
      {
        "action": "mediapackage-vod:ListAssets",
        "resource_mappings": {}
      }
    ],
    "list-packaging-configurations": [
      {
        "action": "mediapackage-vod:ListPackagingConfigurations",
        "resource_mappings": {}
      }
    ],
    "list-packaging-groups": [
      {
        "action": "mediapackage-vod:ListPackagingGroups",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "mediapackage-vod:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "assets": "%%iftemplatematch%${ResourceArn}%%",
          "packaging-configurations": "%%iftemplatematch%${ResourceArn}%%",
          "packaging-groups": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "mediapackage-vod:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "assets": "%%iftemplatematch%${ResourceArn}%%",
          "packaging-configurations": "%%iftemplatematch%${ResourceArn}%%",
          "packaging-groups": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "mediapackage-vod:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "assets": "%%iftemplatematch%${ResourceArn}%%",
          "packaging-configurations": "%%iftemplatematch%${ResourceArn}%%",
          "packaging-groups": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-packaging-group": [
      {
        "action": "mediapackage-vod:UpdatePackagingGroup",
        "resource_mappings": {
          "PackagingGroupIdentifier": {
            "template": "${Id}"
          }
        }
      }
    ]
  },
  "mediapackagev2": {
    "create-channel": [
      {
        "action": "mediapackagev2:CreateChannel",
        "resource_mappings": {
          "ChannelGroupName": {
            "template": "${ChannelGroupName}"
          },
          "ChannelName": {
            "template": "${ChannelName}"
          }
        }
      }
    ],
    "create-channel-group": [
      {
        "action": "mediapackagev2:CreateChannelGroup",
        "resource_mappings": {
          "ChannelGroupName": {
            "template": "${ChannelGroupName}"
          }
        }
      }
    ],
    "create-origin-endpoint": [
      {
        "action": "mediapackagev2:CreateOriginEndpoint",
        "resource_mappings": {
          "ChannelGroupName": {
            "template": "${ChannelGroupName}"
          },
          "ChannelName": {
            "template": "${ChannelName}"
          },
          "OriginEndpointName": {
            "template": "${OriginEndpointName}"
          }
        }
      }
    ],
    "delete-channel": [
      {
        "action": "mediapackagev2:DeleteChannel",
        "resource_mappings": {
          "ChannelGroupName": {
            "template": "${ChannelGroupName}"
          },
          "ChannelName": {
            "template": "${ChannelName}"
          }
        }
      }
    ],
    "delete-channel-group": [
      {
        "action": "mediapackagev2:DeleteChannelGroup",
        "resource_mappings": {
          "ChannelGroupName": {
            "template": "${ChannelGroupName}"
          }
        }
      }
    ],
    "delete-channel-policy": [
      {
        "action": "mediapackagev2:DeleteChannelPolicy",
        "resource_mappings": {
          "ChannelGroupName": {
            "template": "${ChannelGroupName}"
          },
          "ChannelName": {
            "template": "${ChannelName}"
          }
        }
      }
    ],
    "delete-origin-endpoint": [
      {
        "action": "mediapackagev2:DeleteOriginEndpoint",
        "resource_mappings": {
          "ChannelGroupName": {
            "template": "${ChannelGroupName}"
          },
          "ChannelName": {
            "template": "${ChannelName}"
          },
          "OriginEndpointName": {
            "template": "${OriginEndpointName}"
          }
        }
      }
    ],
    "delete-origin-endpoint-policy": [
      {
        "action": "mediapackagev2:DeleteOriginEndpointPolicy",
        "resource_mappings": {
          "ChannelGroupName": {
            "template": "${ChannelGroupName}"
          },
          "ChannelName": {
            "template": "${ChannelName}"
          },
          "OriginEndpointName": {
            "template": "${OriginEndpointName}"
          }
        }
      }
    ],
    "get-channel": [
      {
        "action": "mediapackagev2:GetChannel",
        "resource_mappings": {
          "ChannelGroupName": {
            "template": "${ChannelGroupName}"
          },
          "ChannelName": {
            "template": "${ChannelName}"
          }
        }
      }
    ],
    "get-channel-group": [
      {
        "action": "mediapackagev2:GetChannelGroup",
        "resource_mappings": {
          "ChannelGroupName": {
            "template": "${ChannelGroupName}"
          }
        }
      }
    ],
    "get-channel-policy": [
      {
        "action": "mediapackagev2:GetChannelPolicy",
        "resource_mappings": {
          "ChannelGroupName": {
            "template": "${ChannelGroupName}"
          },
          "ChannelName": {
            "template": "${ChannelName}"
          }
        }
      }
    ],
    "get-origin-endpoint": [
      {
        "action": "mediapackagev2:GetOriginEndpoint",
        "resource_mappings": {
          "ChannelGroupName": {
            "template": "${ChannelGroupName}"
          },
          "ChannelName": {
            "template": "${ChannelName}"
          },
          "OriginEndpointName": {
            "template": "${OriginEndpointName}"
          }
        }
      }
    ],
    "get-origin-endpoint-policy": [
      {
        "action": "mediapackagev2:GetOriginEndpointPolicy",
        "resource_mappings": {
          "ChannelGroupName": {
            "template": "${ChannelGroupName}"
          },
          "ChannelName": {
            "template": "${ChannelName}"
          },
          "OriginEndpointName": {
            "template": "${OriginEndpointName}"
          }
        }
      }
    ],
    "list-channel-groups": [
      {
        "action": "mediapackagev2:ListChannelGroups",
        "resource_mappings": {}
      }
    ],
    "list-channels": [
      {
        "action": "mediapackagev2:ListChannels",
        "resource_mappings": {
          "ChannelGroupName": {
            "template": "${ChannelGroupName}"
          }
        }
      }
    ],
    "list-origin-endpoints": [
      {
        "action": "mediapackagev2:ListOriginEndpoints",
        "resource_mappings": {
          "ChannelGroupName": {
            "template": "${ChannelGroupName}"
          },
          "ChannelName": {
            "template": "${ChannelName}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "mediapackagev2:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Channel": "%%iftemplatematch%${ResourceArn}%%",
          "ChannelGroup": "%%iftemplatematch%${ResourceArn}%%",
          "OriginEndpoint": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "put-channel-policy": [
      {
        "action": "mediapackagev2:PutChannelPolicy",
        "resource_mappings": {
          "ChannelGroupName": {
            "template": "${ChannelGroupName}"
          },
          "ChannelName": {
            "template": "${ChannelName}"
          }
        }
      }
    ],
    "put-origin-endpoint-policy": [
      {
        "action": "mediapackagev2:PutOriginEndpointPolicy",
        "resource_mappings": {
          "ChannelGroupName": {
            "template": "${ChannelGroupName}"
          },
          "ChannelName": {
            "template": "${ChannelName}"
          },
          "OriginEndpointName": {
            "template": "${OriginEndpointName}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "mediapackagev2:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Channel": "%%iftemplatematch%${ResourceArn}%%",
          "ChannelGroup": "%%iftemplatematch%${ResourceArn}%%",
          "OriginEndpoint": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "mediapackagev2:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Channel": "%%iftemplatematch%${ResourceArn}%%",
          "ChannelGroup": "%%iftemplatematch%${ResourceArn}%%",
          "OriginEndpoint": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-channel": [
      {
        "action": "mediapackagev2:UpdateChannel",
        "resource_mappings": {
          "ChannelGroupName": {
            "template": "${ChannelGroupName}"
          },
          "ChannelName": {
            "template": "${ChannelName}"
          }
        }
      }
    ],
    "update-channel-group": [
      {
        "action": "mediapackagev2:UpdateChannelGroup",
        "resource_mappings": {
          "ChannelGroupName": {
            "template": "${ChannelGroupName}"
          }
        }
      }
    ],
    "update-origin-endpoint": [
      {
        "action": "mediapackagev2:UpdateOriginEndpoint",
        "resource_mappings": {
          "ChannelGroupName": {
            "template": "${ChannelGroupName}"
          },
          "ChannelName": {
            "template": "${ChannelName}"
          },
          "OriginEndpointName": {
            "template": "${OriginEndpointName}"
          }
        }
      }
    ]
  },
  "mediastore": {
    "create-container": [
      {
        "action": "mediastore:CreateContainer",
        "resource_mappings": {}
      }
    ],
    "delete-container": [
      {
        "action": "mediastore:DeleteContainer",
        "resource_mappings": {}
      }
    ],
    "delete-container-policy": [
      {
        "action": "mediastore:DeleteContainerPolicy",
        "resource_mappings": {}
      }
    ],
    "delete-cors-policy": [
      {
        "action": "mediastore:DeleteCorsPolicy",
        "resource_mappings": {}
      }
    ],
    "delete-lifecycle-policy": [
      {
        "action": "mediastore:DeleteLifecyclePolicy",
        "resource_mappings": {}
      }
    ],
    "delete-metric-policy": [
      {
        "action": "mediastore:DeleteMetricPolicy",
        "resource_mappings": {}
      }
    ],
    "describe-container": [
      {
        "action": "mediastore:DescribeContainer",
        "resource_mappings": {}
      }
    ],
    "get-container-policy": [
      {
        "action": "mediastore:GetContainerPolicy",
        "resource_mappings": {}
      }
    ],
    "get-cors-policy": [
      {
        "action": "mediastore:GetCorsPolicy",
        "resource_mappings": {}
      }
    ],
    "get-lifecycle-policy": [
      {
        "action": "mediastore:GetLifecyclePolicy",
        "resource_mappings": {}
      }
    ],
    "get-metric-policy": [
      {
        "action": "mediastore:GetMetricPolicy",
        "resource_mappings": {}
      }
    ],
    "list-containers": [
      {
        "action": "mediastore:ListContainers",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "mediastore:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "put-container-policy": [
      {
        "action": "mediastore:PutContainerPolicy",
        "resource_mappings": {}
      }
    ],
    "put-cors-policy": [
      {
        "action": "mediastore:PutCorsPolicy",
        "resource_mappings": {}
      }
    ],
    "put-lifecycle-policy": [
      {
        "action": "mediastore:PutLifecyclePolicy",
        "resource_mappings": {}
      }
    ],
    "put-metric-policy": [
      {
        "action": "mediastore:PutMetricPolicy",
        "resource_mappings": {}
      }
    ],
    "start-access-logging": [
      {
        "action": "mediastore:StartAccessLogging",
        "resource_mappings": {}
      }
    ],
    "stop-access-logging": [
      {
        "action": "mediastore:StopAccessLogging",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "mediastore:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "mediastore:UntagResource",
        "resource_mappings": {}
      }
    ]
  },
  "mediastore-data": {
    "delete-object": [
      {
        "action": "mediastore:DeleteObject",
        "resource_mappings": {}
      }
    ],
    "describe-object": [
      {
        "action": "mediastore:DescribeObject",
        "resource_mappings": {}
      }
    ],
    "get-object": [
      {
        "action": "mediastore:GetObject",
        "resource_mappings": {}
      }
    ],
    "list-items": [
      {
        "action": "mediastore:ListItems",
        "resource_mappings": {}
      }
    ],
    "put-object": [
      {
        "action": "mediastore:PutObject",
        "resource_mappings": {}
      }
    ]
  },
  "mediatailor": {
    "configure-logs-for-channel": [
      {
        "action": "mediatailor:ConfigureLogsForChannel",
        "resource_mappings": {
          "ChannelName": {
            "template": "${ChannelName}"
          }
        }
      }
    ],
    "configure-logs-for-playback-configuration": [
      {
        "action": "mediatailor:ConfigureLogsForPlaybackConfiguration",
        "resource_mappings": {
          "ResourceId": {
            "template": "${PlaybackConfigurationName}"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "create-channel": [
      {
        "action": "mediatailor:CreateChannel",
        "resource_mappings": {}
      }
    ],
    "create-live-source": [
      {
        "action": "mediatailor:CreateLiveSource",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-prefetch-schedule": [
      {
        "action": "mediatailor:CreatePrefetchSchedule",
        "resource_mappings": {
          "ResourceId": {
            "template": "${PlaybackConfigurationName}"
          }
        }
      }
    ],
    "create-program": [
      {
        "action": "mediatailor:CreateProgram",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ChannelName}"
          }
        }
      }
    ],
    "create-source-location": [
      {
        "action": "mediatailor:CreateSourceLocation",
        "resource_mappings": {}
      }
    ],
    "create-vod-source": [
      {
        "action": "mediatailor:CreateVodSource",
        "resource_mappings": {
          "ResourceId": {
            "template": "${SourceLocationName}"
          }
        }
      }
    ],
    "delete-channel": [
      {
        "action": "mediatailor:DeleteChannel",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ChannelName}"
          }
        }
      }
    ],
    "delete-channel-policy": [
      {
        "action": "mediatailor:DeleteChannelPolicy",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ChannelName}"
          }
        }
      }
    ],
    "delete-live-source": [
      {
        "action": "mediatailor:DeleteLiveSource",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-playback-configuration": [
      {
        "action": "mediatailor:DeletePlaybackConfiguration",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-prefetch-schedule": [
      {
        "action": "mediatailor:DeletePrefetchSchedule",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-program": [
      {
        "action": "mediatailor:DeleteProgram",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ProgramName}"
          }
        }
      }
    ],
    "delete-source-location": [
      {
        "action": "mediatailor:DeleteSourceLocation",
        "resource_mappings": {
          "ResourceId": {
            "template": "${SourceLocationName}"
          }
        }
      }
    ],
    "delete-vod-source": [
      {
        "action": "mediatailor:DeleteVodSource",
        "resource_mappings": {
          "ResourceId": {
            "template": "${VodSourceName}"
          }
        }
      }
    ],
    "describe-channel": [
      {
        "action": "mediatailor:DescribeChannel",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ChannelName}"
          }
        }
      }
    ],
    "describe-live-source": [
      {
        "action": "mediatailor:DescribeLiveSource",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-program": [
      {
        "action": "mediatailor:DescribeProgram",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ProgramName}"
          }
        }
      }
    ],
    "describe-source-location": [
      {
        "action": "mediatailor:DescribeSourceLocation",
        "resource_mappings": {
          "ResourceId": {
            "template": "${SourceLocationName}"
          }
        }
      }
    ],
    "describe-vod-source": [
      {
        "action": "mediatailor:DescribeVodSource",
        "resource_mappings": {
          "ResourceId": {
            "template": "${VodSourceName}"
          }
        }
      }
    ],
    "get-channel-policy": [
      {
        "action": "mediatailor:GetChannelPolicy",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ChannelName}"
          }
        }
      }
    ],
    "get-channel-schedule": [
      {
        "action": "mediatailor:GetChannelSchedule",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ChannelName}"
          }
        }
      }
    ],
    "get-playback-configuration": [
      {
        "action": "mediatailor:GetPlaybackConfiguration",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-prefetch-schedule": [
      {
        "action": "mediatailor:GetPrefetchSchedule",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "list-alerts": [
      {
        "action": "mediatailor:ListAlerts",
        "resource_mappings": {}
      }
    ],
    "list-channels": [
      {
        "action": "mediatailor:ListChannels",
        "resource_mappings": {}
      }
    ],
    "list-live-sources": [
      {
        "action": "mediatailor:ListLiveSources",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-playback-configurations": [
      {
        "action": "mediatailor:ListPlaybackConfigurations",
        "resource_mappings": {}
      }
    ],
    "list-prefetch-schedules": [
      {
        "action": "mediatailor:ListPrefetchSchedules",
        "resource_mappings": {
          "ResourceId": {
            "template": "${PlaybackConfigurationName}"
          }
        }
      }
    ],
    "list-source-locations": [
      {
        "action": "mediatailor:ListSourceLocations",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "mediatailor:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "list-vod-sources": [
      {
        "action": "mediatailor:ListVodSources",
        "resource_mappings": {
          "ResourceId": {
            "template": "${SourceLocationName}"
          }
        }
      }
    ],
    "put-channel-policy": [
      {
        "action": "mediatailor:PutChannelPolicy",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ChannelName}"
          }
        }
      }
    ],
    "put-playback-configuration": [
      {
        "action": "mediatailor:PutPlaybackConfiguration",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "start-channel": [
      {
        "action": "mediatailor:StartChannel",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ChannelName}"
          }
        }
      }
    ],
    "stop-channel": [
      {
        "action": "mediatailor:StopChannel",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ChannelName}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "mediatailor:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "mediatailor:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-channel": [
      {
        "action": "mediatailor:UpdateChannel",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ChannelName}"
          }
        }
      }
    ],
    "update-live-source": [
      {
        "action": "mediatailor:UpdateLiveSource",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "update-program": [
      {
        "action": "mediatailor:UpdateProgram",
        "resource_mappings": {
          "ChannelName": {
            "template": "${ChannelName}"
          },
          "ProgramName": {
            "template": "${ProgramName}"
          }
        }
      }
    ],
    "update-source-location": [
      {
        "action": "mediatailor:UpdateSourceLocation",
        "resource_mappings": {
          "ResourceId": {
            "template": "${SourceLocationName}"
          }
        }
      }
    ],
    "update-vod-source": [
      {
        "action": "mediatailor:UpdateVodSource",
        "resource_mappings": {
          "ResourceId": {
            "template": "${VodSourceName}"
          }
        }
      }
    ]
  },
  "medical-imaging": {
    "copy-image-set": [
      {
        "note": "NotFound",
        "action": "Medical Imaging:CopyImageSet",
        "resource_mappings": {}
      }
    ],
    "create-datastore": [
      {
        "note": "NotFound",
        "action": "Medical Imaging:CreateDatastore",
        "resource_mappings": {}
      }
    ],
    "delete-datastore": [
      {
        "note": "NotFound",
        "action": "Medical Imaging:DeleteDatastore",
        "resource_mappings": {}
      }
    ],
    "delete-image-set": [
      {
        "note": "NotFound",
        "action": "Medical Imaging:DeleteImageSet",
        "resource_mappings": {}
      }
    ],
    "get-dicom-import-job": [
      {
        "note": "NotFound",
        "action": "Medical Imaging:GetDICOMImportJob",
        "resource_mappings": {}
      }
    ],
    "get-datastore": [
      {
        "note": "NotFound",
        "action": "Medical Imaging:GetDatastore",
        "resource_mappings": {}
      }
    ],
    "get-image-frame": [
      {
        "note": "NotFound",
        "action": "Medical Imaging:GetImageFrame",
        "resource_mappings": {}
      }
    ],
    "get-image-set": [
      {
        "note": "NotFound",
        "action": "Medical Imaging:GetImageSet",
        "resource_mappings": {}
      }
    ],
    "get-image-set-metadata": [
      {
        "note": "NotFound",
        "action": "Medical Imaging:GetImageSetMetadata",
        "resource_mappings": {}
      }
    ],
    "list-dicom-import-jobs": [
      {
        "note": "NotFound",
        "action": "Medical Imaging:ListDICOMImportJobs",
        "resource_mappings": {}
      }
    ],
    "list-datastores": [
      {
        "note": "NotFound",
        "action": "Medical Imaging:ListDatastores",
        "resource_mappings": {}
      }
    ],
    "list-image-set-versions": [
      {
        "note": "NotFound",
        "action": "Medical Imaging:ListImageSetVersions",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "note": "NotFound",
        "action": "Medical Imaging:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "search-image-sets": [
      {
        "note": "NotFound",
        "action": "Medical Imaging:SearchImageSets",
        "resource_mappings": {}
      }
    ],
    "start-dicom-import-job": [
      {
        "note": "NotFound",
        "action": "Medical Imaging:StartDICOMImportJob",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "note": "NotFound",
        "action": "Medical Imaging:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "note": "NotFound",
        "action": "Medical Imaging:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-image-set-metadata": [
      {
        "note": "NotFound",
        "action": "Medical Imaging:UpdateImageSetMetadata",
        "resource_mappings": {}
      }
    ]
  },
  "memorydb": {
    "batch-update-cluster": [
      {
        "action": "memorydb:BatchUpdateCluster",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterNames[]}"
          }
        }
      },
      {
        "action": "ec2:CreateNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DeleteNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeNetworkInterfaces",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSubnets",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      }
    ],
    "copy-snapshot": [
      {
        "action": "memorydb:CopySnapshot",
        "resource_mappings": {
          "SnapshotName": {
            "template": "%%many%${SourceSnapshotName}%${TargetSnapshotName}%%"
          }
        }
      },
      {
        "action": "memorydb:TagResource",
        "resource_mappings": {
          "AclName": {
            "template": "*"
          },
          "ClusterName": {
            "template": "*"
          },
          "ParameterGroupName": {
            "template": "*"
          },
          "SnapshotName": {
            "template": "*"
          },
          "SubnetGroupName": {
            "template": "*"
          },
          "UserName": {
            "template": "*"
          }
        }
      },
      {
        "action": "s3:DeleteObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      },
      {
        "action": "s3:GetBucketAcl",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          }
        }
      },
      {
        "action": "s3:PutObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      }
    ],
    "create-acl": [
      {
        "action": "memorydb:CreateAcl",
        "resource_mappings": {
          "UserName": {
            "template": "${UserNames[]}"
          }
        }
      },
      {
        "action": "memorydb:TagResource",
        "resource_mappings": {
          "AclName": {
            "template": "*"
          },
          "ClusterName": {
            "template": "*"
          },
          "ParameterGroupName": {
            "template": "*"
          },
          "SnapshotName": {
            "template": "*"
          },
          "SubnetGroupName": {
            "template": "*"
          },
          "UserName": {
            "template": "*"
          }
        }
      }
    ],
    "create-cluster": [
      {
        "action": "memorydb:CreateCluster",
        "resource_mappings": {
          "AclName": {
            "template": "${ACLName}"
          },
          "ParameterGroupName": {
            "template": "${ParameterGroupName}"
          },
          "SubnetGroupName": {
            "template": "${SubnetGroupName}"
          }
        },
        "resourcearn_mappings": {
          "snapshot": "${SnapshotArns[]}"
        }
      },
      {
        "action": "ec2:CreateNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DeleteNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeNetworkInterfaces",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSubnets",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      },
      {
        "action": "memorydb:TagResource",
        "resource_mappings": {
          "AclName": {
            "template": "*"
          },
          "ClusterName": {
            "template": "*"
          },
          "ParameterGroupName": {
            "template": "*"
          },
          "SnapshotName": {
            "template": "*"
          },
          "SubnetGroupName": {
            "template": "*"
          },
          "UserName": {
            "template": "*"
          }
        }
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      }
    ],
    "create-parameter-group": [
      {
        "action": "memorydb:CreateParameterGroup",
        "resource_mappings": {}
      },
      {
        "action": "memorydb:TagResource",
        "resource_mappings": {
          "AclName": {
            "template": "*"
          },
          "ClusterName": {
            "template": "*"
          },
          "ParameterGroupName": {
            "template": "*"
          },
          "SnapshotName": {
            "template": "*"
          },
          "SubnetGroupName": {
            "template": "*"
          },
          "UserName": {
            "template": "*"
          }
        }
      }
    ],
    "create-snapshot": [
      {
        "action": "memorydb:CreateSnapshot",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterName}"
          }
        }
      },
      {
        "action": "memorydb:TagResource",
        "resource_mappings": {
          "AclName": {
            "template": "*"
          },
          "ClusterName": {
            "template": "*"
          },
          "ParameterGroupName": {
            "template": "*"
          },
          "SnapshotName": {
            "template": "*"
          },
          "SubnetGroupName": {
            "template": "*"
          },
          "UserName": {
            "template": "*"
          }
        }
      },
      {
        "action": "s3:DeleteObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      },
      {
        "action": "s3:GetBucketAcl",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          }
        }
      },
      {
        "action": "s3:PutObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      }
    ],
    "create-subnet-group": [
      {
        "action": "memorydb:CreateSubnetGroup",
        "resource_mappings": {}
      },
      {
        "action": "memorydb:TagResource",
        "resource_mappings": {
          "AclName": {
            "template": "*"
          },
          "ClusterName": {
            "template": "*"
          },
          "ParameterGroupName": {
            "template": "*"
          },
          "SnapshotName": {
            "template": "*"
          },
          "SubnetGroupName": {
            "template": "*"
          },
          "UserName": {
            "template": "*"
          }
        }
      }
    ],
    "create-user": [
      {
        "action": "memorydb:CreateUser",
        "resource_mappings": {}
      },
      {
        "action": "memorydb:TagResource",
        "resource_mappings": {
          "AclName": {
            "template": "*"
          },
          "ClusterName": {
            "template": "*"
          },
          "ParameterGroupName": {
            "template": "*"
          },
          "SnapshotName": {
            "template": "*"
          },
          "SubnetGroupName": {
            "template": "*"
          },
          "UserName": {
            "template": "*"
          }
        }
      }
    ],
    "delete-acl": [
      {
        "action": "memorydb:DeleteAcl",
        "resource_mappings": {
          "AclName": {
            "template": "${ACLName}"
          }
        }
      }
    ],
    "delete-cluster": [
      {
        "action": "memorydb:DeleteCluster",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterName}"
          },
          "SnapshotName": {
            "template": "${FinalSnapshotName}"
          }
        }
      },
      {
        "action": "ec2:CreateNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DeleteNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeNetworkInterfaces",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSubnets",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      }
    ],
    "delete-parameter-group": [
      {
        "action": "memorydb:DeleteParameterGroup",
        "resource_mappings": {
          "ParameterGroupName": {
            "template": "${ParameterGroupName}"
          }
        }
      }
    ],
    "delete-snapshot": [
      {
        "action": "memorydb:DeleteSnapshot",
        "resource_mappings": {
          "SnapshotName": {
            "template": "${SnapshotName}"
          }
        }
      }
    ],
    "delete-subnet-group": [
      {
        "action": "memorydb:DeleteSubnetGroup",
        "resource_mappings": {
          "SubnetGroupName": {
            "template": "${SubnetGroupName}"
          }
        }
      },
      {
        "action": "ec2:CreateNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DeleteNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeNetworkInterfaces",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSubnets",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      }
    ],
    "delete-user": [
      {
        "action": "memorydb:DeleteUser",
        "resource_mappings": {
          "UserName": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "describe-acls": [
      {
        "action": "memorydb:DescribeAcls",
        "resource_mappings": {
          "AclName": {
            "template": "${ACLName}"
          }
        }
      }
    ],
    "describe-clusters": [
      {
        "action": "memorydb:DescribeClusters",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterName}"
          }
        }
      }
    ],
    "describe-engine-versions": [
      {
        "action": "memorydb:DescribeEngineVersions",
        "resource_mappings": {}
      }
    ],
    "describe-events": [
      {
        "action": "memorydb:DescribeEvents",
        "resource_mappings": {}
      }
    ],
    "describe-parameter-groups": [
      {
        "action": "memorydb:DescribeParameterGroups",
        "resource_mappings": {
          "ParameterGroupName": {
            "template": "${ParameterGroupName}"
          }
        }
      }
    ],
    "describe-parameters": [
      {
        "action": "memorydb:DescribeParameters",
        "resource_mappings": {
          "ParameterGroupName": {
            "template": "${ParameterGroupName}"
          }
        }
      }
    ],
    "describe-reserved-nodes": [
      {
        "action": "memorydb:DescribeReservedNodes",
        "resource_mappings": {
          "ReservationID": {
            "template": "${ReservationId}"
          }
        }
      }
    ],
    "describe-reserved-nodes-offerings": [
      {
        "action": "memorydb:DescribeReservedNodesOfferings",
        "resource_mappings": {}
      }
    ],
    "describe-service-updates": [
      {
        "action": "memorydb:DescribeServiceUpdates",
        "resource_mappings": {}
      }
    ],
    "describe-snapshots": [
      {
        "action": "memorydb:DescribeSnapshots",
        "resource_mappings": {
          "SnapshotName": {
            "template": "${SnapshotName}"
          }
        }
      }
    ],
    "describe-subnet-groups": [
      {
        "action": "memorydb:DescribeSubnetGroups",
        "resource_mappings": {
          "SubnetGroupName": {
            "template": "${SubnetGroupName}"
          }
        }
      }
    ],
    "describe-users": [
      {
        "action": "memorydb:DescribeUsers",
        "resource_mappings": {
          "UserName": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "failover-shard": [
      {
        "action": "memorydb:FailoverShard",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterName}"
          }
        }
      },
      {
        "action": "ec2:CreateNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DeleteNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeNetworkInterfaces",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSubnets",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      }
    ],
    "list-allowed-node-type-updates": [
      {
        "action": "memorydb:ListAllowedNodeTypeUpdates",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterName}"
          }
        }
      }
    ],
    "list-tags": [
      {
        "action": "memorydb:ListTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "acl": "%%iftemplatematch%${ResourceArn}%%",
          "cluster": "%%iftemplatematch%${ResourceArn}%%",
          "parametergroup": "%%iftemplatematch%${ResourceArn}%%",
          "snapshot": "%%iftemplatematch%${ResourceArn}%%",
          "subnetgroup": "%%iftemplatematch%${ResourceArn}%%",
          "user": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "purchase-reserved-nodes-offering": [
      {
        "action": "memorydb:PurchaseReservedNodesOffering",
        "resource_mappings": {
          "ReservationID": {
            "template": "${ReservationId}"
          }
        }
      },
      {
        "action": "memorydb:TagResource",
        "resource_mappings": {
          "AclName": {
            "template": "*"
          },
          "ClusterName": {
            "template": "*"
          },
          "ParameterGroupName": {
            "template": "*"
          },
          "ReservationID": {
            "template": "*"
          },
          "SnapshotName": {
            "template": "*"
          },
          "SubnetGroupName": {
            "template": "*"
          },
          "UserName": {
            "template": "*"
          }
        }
      }
    ],
    "reset-parameter-group": [
      {
        "action": "memorydb:ResetParameterGroup",
        "resource_mappings": {
          "ParameterGroupName": {
            "template": "${ParameterGroupName}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "memorydb:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "acl": "%%iftemplatematch%${ResourceArn}%%",
          "cluster": "%%iftemplatematch%${ResourceArn}%%",
          "parametergroup": "%%iftemplatematch%${ResourceArn}%%",
          "snapshot": "%%iftemplatematch%${ResourceArn}%%",
          "subnetgroup": "%%iftemplatematch%${ResourceArn}%%",
          "user": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "memorydb:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "acl": "%%iftemplatematch%${ResourceArn}%%",
          "cluster": "%%iftemplatematch%${ResourceArn}%%",
          "parametergroup": "%%iftemplatematch%${ResourceArn}%%",
          "snapshot": "%%iftemplatematch%${ResourceArn}%%",
          "subnetgroup": "%%iftemplatematch%${ResourceArn}%%",
          "user": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-acl": [
      {
        "action": "memorydb:UpdateAcl",
        "resource_mappings": {
          "AclName": {
            "template": "${ACLName}"
          },
          "UserName": {
            "template": "%%many%${UserNamesToAdd[]}%${UserNamesToRemove[]}%%"
          }
        }
      }
    ],
    "update-cluster": [
      {
        "action": "memorydb:UpdateCluster",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterName}"
          },
          "AclName": {
            "template": "${ACLName}"
          },
          "ParameterGroupName": {
            "template": "${ParameterGroupName}"
          }
        }
      },
      {
        "action": "ec2:CreateNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DeleteNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeNetworkInterfaces",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSubnets",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      }
    ],
    "update-parameter-group": [
      {
        "action": "memorydb:UpdateParameterGroup",
        "resource_mappings": {
          "ParameterGroupName": {
            "template": "${ParameterGroupName}"
          }
        }
      }
    ],
    "update-subnet-group": [
      {
        "action": "memorydb:UpdateSubnetGroup",
        "resource_mappings": {
          "SubnetGroupName": {
            "template": "${SubnetGroupName}"
          }
        }
      }
    ],
    "update-user": [
      {
        "action": "memorydb:UpdateUser",
        "resource_mappings": {
          "UserName": {
            "template": "${UserName}"
          }
        }
      }
    ]
  },
  "meteringmarketplace": {
    "batch-meter-usage": [
      {
        "action": "aws-marketplace:BatchMeterUsage",
        "resource_mappings": {}
      }
    ],
    "meter-usage": [
      {
        "action": "aws-marketplace:MeterUsage",
        "resource_mappings": {}
      }
    ],
    "register-usage": [
      {
        "action": "aws-marketplace:RegisterUsage",
        "resource_mappings": {}
      }
    ],
    "resolve-customer": [
      {
        "action": "aws-marketplace:ResolveCustomer",
        "resource_mappings": {}
      }
    ]
  },
  "mgh": {
    "associate-created-artifact": [
      {
        "action": "mgh:AssociateCreatedArtifact",
        "resource_mappings": {
          "Stream": {
            "template": "${ProgressUpdateStream}"
          },
          "Task": {
            "template": "${MigrationTaskName}"
          }
        }
      }
    ],
    "associate-discovered-resource": [
      {
        "action": "mgh:AssociateDiscoveredResource",
        "resource_mappings": {
          "Stream": {
            "template": "${ProgressUpdateStream}"
          },
          "Task": {
            "template": "${MigrationTaskName}"
          }
        }
      }
    ],
    "create-progress-update-stream": [
      {
        "action": "mgh:CreateProgressUpdateStream",
        "resource_mappings": {
          "Stream": {
            "template": "${ProgressUpdateStreamName}"
          }
        }
      }
    ],
    "delete-progress-update-stream": [
      {
        "action": "mgh:DeleteProgressUpdateStream",
        "resource_mappings": {
          "Stream": {
            "template": "${ProgressUpdateStreamName}"
          }
        }
      }
    ],
    "describe-application-state": [
      {
        "action": "mgh:DescribeApplicationState",
        "resource_mappings": {}
      }
    ],
    "describe-migration-task": [
      {
        "action": "mgh:DescribeMigrationTask",
        "resource_mappings": {
          "Stream": {
            "template": "${ProgressUpdateStream}"
          },
          "Task": {
            "template": "${MigrationTaskName}"
          }
        }
      }
    ],
    "disassociate-created-artifact": [
      {
        "action": "mgh:DisassociateCreatedArtifact",
        "resource_mappings": {
          "Stream": {
            "template": "${ProgressUpdateStream}"
          },
          "Task": {
            "template": "${MigrationTaskName}"
          }
        }
      }
    ],
    "disassociate-discovered-resource": [
      {
        "action": "mgh:DisassociateDiscoveredResource",
        "resource_mappings": {
          "Stream": {
            "template": "${ProgressUpdateStream}"
          },
          "Task": {
            "template": "${MigrationTaskName}"
          }
        }
      }
    ],
    "import-migration-task": [
      {
        "action": "mgh:ImportMigrationTask",
        "resource_mappings": {
          "Stream": {
            "template": "${ProgressUpdateStream}"
          },
          "Task": {
            "template": "${MigrationTaskName}"
          }
        }
      }
    ],
    "list-application-states": [
      {
        "action": "mgh:ListApplicationStates",
        "resource_mappings": {}
      }
    ],
    "list-created-artifacts": [
      {
        "action": "mgh:ListCreatedArtifacts",
        "resource_mappings": {
          "Stream": {
            "template": "${ProgressUpdateStream}"
          },
          "Task": {
            "template": "${MigrationTaskName}"
          }
        }
      }
    ],
    "list-discovered-resources": [
      {
        "action": "mgh:ListDiscoveredResources",
        "resource_mappings": {
          "Stream": {
            "template": "${ProgressUpdateStream}"
          },
          "Task": {
            "template": "${MigrationTaskName}"
          }
        }
      }
    ],
    "list-migration-tasks": [
      {
        "action": "mgh:ListMigrationTasks",
        "resource_mappings": {}
      }
    ],
    "list-progress-update-streams": [
      {
        "action": "mgh:ListProgressUpdateStreams",
        "resource_mappings": {}
      }
    ],
    "notify-application-state": [
      {
        "action": "mgh:NotifyApplicationState",
        "resource_mappings": {}
      }
    ],
    "notify-migration-task-state": [
      {
        "action": "mgh:NotifyMigrationTaskState",
        "resource_mappings": {
          "Stream": {
            "template": "${ProgressUpdateStream}"
          },
          "Task": {
            "template": "${MigrationTaskName}"
          }
        }
      }
    ],
    "put-resource-attributes": [
      {
        "action": "mgh:PutResourceAttributes",
        "resource_mappings": {
          "Stream": {
            "template": "${ProgressUpdateStream}"
          },
          "Task": {
            "template": "${MigrationTaskName}"
          }
        }
      }
    ]
  },
  "mgn": {
    "archive-application": [
      {
        "action": "mgn:ArchiveApplication",
        "resource_mappings": {
          "ApplicationID": {
            "template": "${applicationID}"
          }
        }
      }
    ],
    "archive-wave": [
      {
        "action": "mgn:ArchiveWave",
        "resource_mappings": {
          "WaveID": {
            "template": "${waveID}"
          }
        }
      }
    ],
    "associate-applications": [
      {
        "action": "mgn:AssociateApplications",
        "resource_mappings": {
          "ApplicationID": {
            "template": "${applicationIDs[]}"
          },
          "WaveID": {
            "template": "${waveID}"
          }
        }
      }
    ],
    "associate-source-servers": [
      {
        "action": "mgn:AssociateSourceServers",
        "resource_mappings": {
          "ApplicationID": {
            "template": "${applicationID}"
          },
          "SourceServerID": {
            "template": "${sourceServerIDs[]}"
          }
        }
      }
    ],
    "change-server-life-cycle-state": [
      {
        "action": "mgn:ChangeServerLifeCycleState",
        "resource_mappings": {
          "sourceServerID": {
            "template": "${sourceServerID}"
          }
        }
      }
    ],
    "create-application": [
      {
        "action": "mgn:CreateApplication",
        "resource_mappings": {}
      }
    ],
    "create-connector": [
      {
        "note": "NotFound",
        "action": "mgn:CreateConnector",
        "resource_mappings": {}
      }
    ],
    "create-launch-configuration-template": [
      {
        "action": "mgn:CreateLaunchConfigurationTemplate",
        "resource_mappings": {}
      }
    ],
    "create-replication-configuration-template": [
      {
        "action": "mgn:CreateReplicationConfigurationTemplate",
        "resource_mappings": {}
      }
    ],
    "create-wave": [
      {
        "action": "mgn:CreateWave",
        "resource_mappings": {}
      }
    ],
    "delete-application": [
      {
        "action": "mgn:DeleteApplication",
        "resource_mappings": {
          "ApplicationID": {
            "template": "${applicationID}"
          }
        }
      }
    ],
    "delete-connector": [
      {
        "note": "NotFound",
        "action": "mgn:DeleteConnector",
        "resource_mappings": {}
      }
    ],
    "delete-job": [
      {
        "action": "mgn:DeleteJob",
        "resource_mappings": {
          "jobID": {
            "template": "${jobID}"
          }
        }
      }
    ],
    "delete-launch-configuration-template": [
      {
        "action": "mgn:DeleteLaunchConfigurationTemplate",
        "resource_mappings": {
          "LaunchConfigurationTemplateID": {
            "template": "${launchConfigurationTemplateID}"
          }
        }
      }
    ],
    "delete-replication-configuration-template": [
      {
        "action": "mgn:DeleteReplicationConfigurationTemplate",
        "resource_mappings": {
          "replicationConfigurationTemplateID": {
            "template": "${replicationConfigurationTemplateID}"
          }
        }
      }
    ],
    "delete-source-server": [
      {
        "action": "mgn:DeleteSourceServer",
        "resource_mappings": {
          "sourceServerID": {
            "template": "${sourceServerID}"
          }
        }
      }
    ],
    "delete-vcenter-client": [
      {
        "action": "mgn:DeleteVcenterClient",
        "resource_mappings": {
          "VcenterClientID": {
            "template": "${vcenterClientID}"
          }
        }
      }
    ],
    "delete-wave": [
      {
        "action": "mgn:DeleteWave",
        "resource_mappings": {
          "WaveID": {
            "template": "${waveID}"
          }
        }
      }
    ],
    "describe-job-log-items": [
      {
        "action": "mgn:DescribeJobLogItems",
        "resource_mappings": {
          "jobID": {
            "template": "${jobID}"
          }
        }
      }
    ],
    "describe-jobs": [
      {
        "action": "mgn:DescribeJobs",
        "resource_mappings": {}
      }
    ],
    "describe-launch-configuration-templates": [
      {
        "action": "mgn:DescribeLaunchConfigurationTemplates",
        "resource_mappings": {}
      }
    ],
    "describe-replication-configuration-templates": [
      {
        "action": "mgn:DescribeReplicationConfigurationTemplates",
        "resource_mappings": {}
      }
    ],
    "describe-source-servers": [
      {
        "action": "mgn:DescribeSourceServers",
        "resource_mappings": {}
      }
    ],
    "describe-vcenter-clients": [
      {
        "action": "mgn:DescribeVcenterClients",
        "resource_mappings": {}
      }
    ],
    "disassociate-applications": [
      {
        "action": "mgn:DisassociateApplications",
        "resource_mappings": {
          "ApplicationID": {
            "template": "${applicationIDs[]}"
          },
          "WaveID": {
            "template": "${waveID}"
          }
        }
      }
    ],
    "disassociate-source-servers": [
      {
        "action": "mgn:DisassociateSourceServers",
        "resource_mappings": {
          "ApplicationID": {
            "template": "${applicationID}"
          },
          "SourceServerID": {
            "template": "${sourceServerIDs[]}"
          }
        }
      }
    ],
    "disconnect-from-service": [
      {
        "action": "mgn:DisconnectFromService",
        "resource_mappings": {
          "sourceServerID": {
            "template": "${sourceServerID}"
          }
        }
      }
    ],
    "finalize-cutover": [
      {
        "action": "mgn:FinalizeCutover",
        "resource_mappings": {
          "sourceServerID": {
            "template": "${sourceServerID}"
          }
        }
      }
    ],
    "get-launch-configuration": [
      {
        "action": "mgn:GetLaunchConfiguration",
        "resource_mappings": {
          "sourceServerID": {
            "template": "${sourceServerID}"
          }
        }
      }
    ],
    "get-replication-configuration": [
      {
        "action": "mgn:GetReplicationConfiguration",
        "resource_mappings": {
          "sourceServerID": {
            "template": "${sourceServerID}"
          }
        }
      }
    ],
    "initialize-service": [
      {
        "action": "mgn:InitializeService",
        "resource_mappings": {}
      },
      {
        "action": "iam:AddRoleToInstanceProfile",
        "resource_mappings": {
          "InstanceProfileNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:CreateInstanceProfile",
        "resource_mappings": {
          "InstanceProfileNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:GetInstanceProfile",
        "resource_mappings": {
          "InstanceProfileNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "list-applications": [
      {
        "action": "mgn:ListApplications",
        "resource_mappings": {}
      }
    ],
    "list-connectors": [
      {
        "note": "NotFound",
        "action": "mgn:ListConnectors",
        "resource_mappings": {}
      }
    ],
    "list-export-errors": [
      {
        "action": "mgn:ListExportErrors",
        "resource_mappings": {
          "ExportID": {
            "template": "${exportID}"
          }
        }
      }
    ],
    "list-exports": [
      {
        "action": "mgn:ListExports",
        "resource_mappings": {}
      }
    ],
    "list-import-errors": [
      {
        "action": "mgn:ListImportErrors",
        "resource_mappings": {
          "ImportID": {
            "template": "${importID}"
          }
        }
      }
    ],
    "list-imports": [
      {
        "action": "mgn:ListImports",
        "resource_mappings": {}
      }
    ],
    "list-managed-accounts": [
      {
        "action": "mgn:ListManagedAccounts",
        "resource_mappings": {}
      }
    ],
    "list-source-server-actions": [
      {
        "action": "mgn:ListSourceServerActions",
        "resource_mappings": {
          "SourceServerID": {
            "template": "${sourceServerID}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "mgn:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "list-template-actions": [
      {
        "action": "mgn:ListTemplateActions",
        "resource_mappings": {
          "LaunchConfigurationTemplateID": {
            "template": "${launchConfigurationTemplateID}"
          }
        }
      }
    ],
    "list-waves": [
      {
        "action": "mgn:ListWaves",
        "resource_mappings": {}
      }
    ],
    "mark-as-archived": [
      {
        "action": "mgn:MarkAsArchived",
        "resource_mappings": {
          "sourceServerID": {
            "template": "${sourceServerID}"
          }
        }
      }
    ],
    "pause-replication": [
      {
        "action": "mgn:PauseReplication",
        "resource_mappings": {
          "SourceServerID": {
            "template": "${sourceServerID}"
          }
        }
      }
    ],
    "put-source-server-action": [
      {
        "action": "mgn:PutSourceServerAction",
        "resource_mappings": {
          "SourceServerID": {
            "template": "${sourceServerID}"
          }
        }
      }
    ],
    "put-template-action": [
      {
        "action": "mgn:PutTemplateAction",
        "resource_mappings": {
          "LaunchConfigurationTemplateID": {
            "template": "${launchConfigurationTemplateID}"
          }
        }
      }
    ],
    "remove-source-server-action": [
      {
        "action": "mgn:RemoveSourceServerAction",
        "resource_mappings": {
          "SourceServerID": {
            "template": "${sourceServerID}"
          }
        }
      }
    ],
    "remove-template-action": [
      {
        "action": "mgn:RemoveTemplateAction",
        "resource_mappings": {
          "LaunchConfigurationTemplateID": {
            "template": "${launchConfigurationTemplateID}"
          }
        }
      }
    ],
    "resume-replication": [
      {
        "action": "mgn:ResumeReplication",
        "resource_mappings": {
          "SourceServerID": {
            "template": "${sourceServerID}"
          }
        }
      }
    ],
    "retry-data-replication": [
      {
        "action": "mgn:RetryDataReplication",
        "resource_mappings": {
          "sourceServerID": {
            "template": "${sourceServerID}"
          }
        }
      }
    ],
    "start-cutover": [
      {
        "action": "mgn:StartCutover",
        "resource_mappings": {
          "sourceServerID": {
            "template": "${sourceServerIDs[]}"
          }
        }
      },
      {
        "action": "ec2:AttachVolume",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:AuthorizeSecurityGroupEgress",
        "resource_mappings": {
          "SecurityGroupId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:AuthorizeSecurityGroupIngress",
        "resource_mappings": {
          "SecurityGroupId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateLaunchTemplate",
        "resource_mappings": {
          "LaunchTemplateId": {
            "template": "*"
          },
          "CapacityReservationId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateLaunchTemplateVersion",
        "resource_mappings": {
          "LaunchTemplateId": {
            "template": "*"
          },
          "CapacityReservationId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateSecurityGroup",
        "resource_mappings": {
          "SecurityGroupId": {
            "template": "*"
          },
          "VpcId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateSnapshot",
        "resource_mappings": {
          "SnapshotId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "*"
          },
          "ClientVpnEndpointId": {
            "template": "*"
          },
          "CustomerGatewayId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "DhcpOptionsId": {
            "template": "*"
          },
          "EgressOnlyInternetGatewayId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "AllocationId": {
            "template": "*"
          },
          "ExportImageTaskId": {
            "template": "*"
          },
          "ExportTaskId": {
            "template": "*"
          },
          "FleetId": {
            "template": "*"
          },
          "FpgaImageId": {
            "template": "*"
          },
          "HostReservationId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "ImportImageTaskId": {
            "template": "*"
          },
          "ImportSnapshotTaskId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "InternetGatewayId": {
            "template": "*"
          },
          "Ipv4PoolEc2Id": {
            "template": "*"
          },
          "Ipv6PoolEc2Id": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "LocalGatewayId": {
            "template": "*"
          },
          "LocalGatewayRoutetableId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVpcAssociationId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "template": "*"
          },
          "NatGatewayId": {
            "template": "*"
          },
          "NaclId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "PrefixListId": {
            "template": "*"
          },
          "ReservationId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SpotFleetRequestId": {
            "template": "*"
          },
          "SpotInstanceRequestId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "TrafficMirrorFilterId": {
            "template": "*"
          },
          "TrafficMirrorSessionId": {
            "template": "*"
          },
          "TrafficMirrorTargetId": {
            "template": "*"
          },
          "TransitGatewayId": {
            "template": "*"
          },
          "TransitGatewayAttachmentId": {
            "template": "*"
          },
          "TransitGatewayConnectPeerId": {
            "template": "*"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "*"
          },
          "TransitGatewayRouteTableId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "VpcId": {
            "template": "*"
          },
          "VpcEndpointId": {
            "template": "*"
          },
          "VpcEndpointServiceId": {
            "template": "*"
          },
          "VpcFlowLogId": {
            "template": "*"
          },
          "VpcPeeringConnectionId": {
            "template": "*"
          },
          "VpnConnectionId": {
            "template": "*"
          },
          "VpnGatewayId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateVolume",
        "resource_mappings": {
          "VolumeId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DeleteLaunchTemplateVersions",
        "resource_mappings": {
          "LaunchTemplateId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DeleteSnapshot",
        "resource_mappings": {
          "SnapshotId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DeleteVolume",
        "resource_mappings": {
          "VolumeId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeAccountAttributes",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeAvailabilityZones",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeImages",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeInstanceAttribute",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeInstanceStatus",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeInstanceTypes",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeInstances",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeLaunchTemplateVersions",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeLaunchTemplates",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSecurityGroups",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSnapshots",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSubnets",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeVolumes",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DetachVolume",
        "resource_mappings": {
          "VolumeId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:ModifyInstanceAttribute",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:ModifyLaunchTemplate",
        "resource_mappings": {
          "LaunchTemplateId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:ReportInstanceStatus",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:RevokeSecurityGroupEgress",
        "resource_mappings": {
          "SecurityGroupId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:RunInstances",
        "resource_mappings": {
          "ImageId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "CapacityReservationId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "ElasticInferenceAcceleratorId": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:StartInstances",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:StopInstances",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:TerminateInstances",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "mgn:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "start-export": [
      {
        "action": "mgn:StartExport",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeLaunchTemplateVersions",
        "resource_mappings": {}
      },
      {
        "action": "mgn:DescribeSourceServers",
        "resource_mappings": {}
      },
      {
        "action": "mgn:GetLaunchConfiguration",
        "resource_mappings": {
          "SourceServerID": {
            "template": "*"
          }
        }
      },
      {
        "action": "mgn:ListApplications",
        "resource_mappings": {}
      },
      {
        "action": "mgn:ListWaves",
        "resource_mappings": {}
      },
      {
        "action": "s3:PutObject",
        "resource_mappings": {
          "BucketName": {
            "template": "${s3Bucket}"
          },
          "ObjectName": {
            "template": "${s3Key}"
          }
        }
      }
    ],
    "start-import": [
      {
        "note": "NotFound",
        "action": "mgn:StartImport",
        "resource_mappings": {}
      }
    ],
    "start-replication": [
      {
        "action": "mgn:StartReplication",
        "resource_mappings": {
          "SourceServerID": {
            "template": "${sourceServerID}"
          }
        }
      }
    ],
    "start-test": [
      {
        "action": "mgn:StartTest",
        "resource_mappings": {
          "sourceServerID": {
            "template": "${sourceServerIDs[]}"
          }
        }
      },
      {
        "action": "ec2:AttachVolume",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:AuthorizeSecurityGroupEgress",
        "resource_mappings": {
          "SecurityGroupId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:AuthorizeSecurityGroupIngress",
        "resource_mappings": {
          "SecurityGroupId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateLaunchTemplate",
        "resource_mappings": {
          "LaunchTemplateId": {
            "template": "*"
          },
          "CapacityReservationId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateLaunchTemplateVersion",
        "resource_mappings": {
          "LaunchTemplateId": {
            "template": "*"
          },
          "CapacityReservationId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateSecurityGroup",
        "resource_mappings": {
          "SecurityGroupId": {
            "template": "*"
          },
          "VpcId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateSnapshot",
        "resource_mappings": {
          "SnapshotId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "*"
          },
          "ClientVpnEndpointId": {
            "template": "*"
          },
          "CustomerGatewayId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "DhcpOptionsId": {
            "template": "*"
          },
          "EgressOnlyInternetGatewayId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "AllocationId": {
            "template": "*"
          },
          "ExportImageTaskId": {
            "template": "*"
          },
          "ExportTaskId": {
            "template": "*"
          },
          "FleetId": {
            "template": "*"
          },
          "FpgaImageId": {
            "template": "*"
          },
          "HostReservationId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "ImportImageTaskId": {
            "template": "*"
          },
          "ImportSnapshotTaskId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "InternetGatewayId": {
            "template": "*"
          },
          "Ipv4PoolEc2Id": {
            "template": "*"
          },
          "Ipv6PoolEc2Id": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "LocalGatewayId": {
            "template": "*"
          },
          "LocalGatewayRoutetableId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVpcAssociationId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "template": "*"
          },
          "NatGatewayId": {
            "template": "*"
          },
          "NaclId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "PrefixListId": {
            "template": "*"
          },
          "ReservationId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SpotFleetRequestId": {
            "template": "*"
          },
          "SpotInstanceRequestId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "TrafficMirrorFilterId": {
            "template": "*"
          },
          "TrafficMirrorSessionId": {
            "template": "*"
          },
          "TrafficMirrorTargetId": {
            "template": "*"
          },
          "TransitGatewayId": {
            "template": "*"
          },
          "TransitGatewayAttachmentId": {
            "template": "*"
          },
          "TransitGatewayConnectPeerId": {
            "template": "*"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "*"
          },
          "TransitGatewayRouteTableId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "VpcId": {
            "template": "*"
          },
          "VpcEndpointId": {
            "template": "*"
          },
          "VpcEndpointServiceId": {
            "template": "*"
          },
          "VpcFlowLogId": {
            "template": "*"
          },
          "VpcPeeringConnectionId": {
            "template": "*"
          },
          "VpnConnectionId": {
            "template": "*"
          },
          "VpnGatewayId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateVolume",
        "resource_mappings": {
          "VolumeId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DeleteLaunchTemplateVersions",
        "resource_mappings": {
          "LaunchTemplateId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DeleteSnapshot",
        "resource_mappings": {
          "SnapshotId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DeleteVolume",
        "resource_mappings": {
          "VolumeId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeAccountAttributes",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeAvailabilityZones",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeImages",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeInstanceAttribute",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeInstanceStatus",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeInstanceTypes",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeInstances",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeLaunchTemplateVersions",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeLaunchTemplates",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSecurityGroups",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSnapshots",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSubnets",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeVolumes",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DetachVolume",
        "resource_mappings": {
          "VolumeId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:ModifyInstanceAttribute",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:ModifyLaunchTemplate",
        "resource_mappings": {
          "LaunchTemplateId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:ReportInstanceStatus",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:RevokeSecurityGroupEgress",
        "resource_mappings": {
          "SecurityGroupId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:RunInstances",
        "resource_mappings": {
          "ImageId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "CapacityReservationId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "ElasticInferenceAcceleratorId": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:StartInstances",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:StopInstances",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:TerminateInstances",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "mgn:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "stop-replication": [
      {
        "action": "mgn:StopReplication",
        "resource_mappings": {
          "SourceServerID": {
            "template": "${sourceServerID}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "mgn:TagResource",
        "resource_mappings": {}
      }
    ],
    "terminate-target-instances": [
      {
        "action": "mgn:TerminateTargetInstances",
        "resource_mappings": {
          "sourceServerID": {
            "template": "${sourceServerIDs[]}"
          }
        }
      },
      {
        "action": "ec2:DeleteVolume",
        "resource_mappings": {
          "VolumeId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeInstances",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeVolumes",
        "resource_mappings": {}
      },
      {
        "action": "ec2:TerminateInstances",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          }
        }
      }
    ],
    "unarchive-application": [
      {
        "action": "mgn:UnarchiveApplication",
        "resource_mappings": {
          "ApplicationID": {
            "template": "${applicationID}"
          }
        }
      }
    ],
    "unarchive-wave": [
      {
        "action": "mgn:UnarchiveWave",
        "resource_mappings": {
          "WaveID": {
            "template": "${waveID}"
          }
        }
      }
    ],
    "untag-resource": [
      {
        "action": "mgn:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-application": [
      {
        "action": "mgn:UpdateApplication",
        "resource_mappings": {
          "ApplicationID": {
            "template": "${applicationID}"
          }
        }
      }
    ],
    "update-connector": [
      {
        "note": "NotFound",
        "action": "mgn:UpdateConnector",
        "resource_mappings": {}
      }
    ],
    "update-launch-configuration": [
      {
        "action": "mgn:UpdateLaunchConfiguration",
        "resource_mappings": {
          "sourceServerID": {
            "template": "${sourceServerID}"
          }
        }
      }
    ],
    "update-launch-configuration-template": [
      {
        "action": "mgn:UpdateLaunchConfigurationTemplate",
        "resource_mappings": {
          "LaunchConfigurationTemplateID": {
            "template": "${launchConfigurationTemplateID}"
          }
        }
      }
    ],
    "update-replication-configuration": [
      {
        "action": "mgn:UpdateReplicationConfiguration",
        "resource_mappings": {
          "sourceServerID": {
            "template": "${sourceServerID}"
          }
        }
      }
    ],
    "update-replication-configuration-template": [
      {
        "action": "mgn:UpdateReplicationConfigurationTemplate",
        "resource_mappings": {
          "replicationConfigurationTemplateID": {
            "template": "${replicationConfigurationTemplateID}"
          }
        }
      }
    ],
    "update-source-server": [
      {
        "note": "NotFound",
        "action": "mgn:UpdateSourceServer",
        "resource_mappings": {}
      }
    ],
    "update-source-server-replication-type": [
      {
        "action": "mgn:UpdateSourceServerReplicationType",
        "resource_mappings": {
          "SourceServerID": {
            "template": "${sourceServerID}"
          }
        }
      }
    ],
    "update-wave": [
      {
        "action": "mgn:UpdateWave",
        "resource_mappings": {
          "WaveID": {
            "template": "${waveID}"
          }
        }
      }
    ]
  },
  "migration-hub-refactor-spaces": {
    "create-application": [
      {
        "action": "refactor-spaces:CreateApplication",
        "resource_mappings": {}
      }
    ],
    "create-environment": [
      {
        "action": "refactor-spaces:CreateEnvironment",
        "resource_mappings": {}
      }
    ],
    "create-route": [
      {
        "action": "refactor-spaces:CreateRoute",
        "resource_mappings": {}
      }
    ],
    "create-service": [
      {
        "action": "refactor-spaces:CreateService",
        "resource_mappings": {}
      }
    ],
    "delete-application": [
      {
        "action": "refactor-spaces:DeleteApplication",
        "resource_mappings": {
          "EnvironmentId": {
            "template": "${EnvironmentIdentifier}"
          },
          "ApplicationId": {
            "template": "${ApplicationIdentifier}"
          }
        }
      }
    ],
    "delete-environment": [
      {
        "action": "refactor-spaces:DeleteEnvironment",
        "resource_mappings": {
          "EnvironmentId": {
            "template": "${EnvironmentIdentifier}"
          }
        }
      }
    ],
    "delete-resource-policy": [
      {
        "action": "refactor-spaces:DeleteResourcePolicy",
        "resource_mappings": {}
      }
    ],
    "delete-route": [
      {
        "action": "refactor-spaces:DeleteRoute",
        "resource_mappings": {
          "EnvironmentId": {
            "template": "${EnvironmentIdentifier}"
          },
          "ApplicationId": {
            "template": "${ApplicationIdentifier}"
          },
          "RouteId": {
            "template": "${RouteIdentifier}"
          }
        }
      }
    ],
    "delete-service": [
      {
        "action": "refactor-spaces:DeleteService",
        "resource_mappings": {
          "EnvironmentId": {
            "template": "${EnvironmentIdentifier}"
          },
          "ApplicationId": {
            "template": "${ApplicationIdentifier}"
          },
          "ServiceId": {
            "template": "${ServiceIdentifier}"
          }
        }
      }
    ],
    "get-application": [
      {
        "action": "refactor-spaces:GetApplication",
        "resource_mappings": {
          "EnvironmentId": {
            "template": "${EnvironmentIdentifier}"
          },
          "ApplicationId": {
            "template": "${ApplicationIdentifier}"
          }
        }
      }
    ],
    "get-environment": [
      {
        "action": "refactor-spaces:GetEnvironment",
        "resource_mappings": {
          "EnvironmentId": {
            "template": "${EnvironmentIdentifier}"
          }
        }
      }
    ],
    "get-resource-policy": [
      {
        "action": "refactor-spaces:GetResourcePolicy",
        "resource_mappings": {}
      }
    ],
    "get-route": [
      {
        "action": "refactor-spaces:GetRoute",
        "resource_mappings": {
          "EnvironmentId": {
            "template": "${EnvironmentIdentifier}"
          },
          "ApplicationId": {
            "template": "${ApplicationIdentifier}"
          },
          "RouteId": {
            "template": "${RouteIdentifier}"
          }
        }
      }
    ],
    "get-service": [
      {
        "action": "refactor-spaces:GetService",
        "resource_mappings": {
          "EnvironmentId": {
            "template": "${EnvironmentIdentifier}"
          },
          "ApplicationId": {
            "template": "${ApplicationIdentifier}"
          },
          "ServiceId": {
            "template": "${ServiceIdentifier}"
          }
        }
      }
    ],
    "list-applications": [
      {
        "action": "refactor-spaces:ListApplications",
        "resource_mappings": {
          "EnvironmentId": {
            "template": "${EnvironmentIdentifier}"
          }
        }
      }
    ],
    "list-environment-vpcs": [
      {
        "action": "refactor-spaces:ListEnvironmentVpcs",
        "resource_mappings": {
          "EnvironmentId": {
            "template": "${EnvironmentIdentifier}"
          }
        }
      }
    ],
    "list-environments": [
      {
        "action": "refactor-spaces:ListEnvironments",
        "resource_mappings": {}
      }
    ],
    "list-routes": [
      {
        "action": "refactor-spaces:ListRoutes",
        "resource_mappings": {
          "EnvironmentId": {
            "template": "${EnvironmentIdentifier}"
          }
        }
      }
    ],
    "list-services": [
      {
        "action": "refactor-spaces:ListServices",
        "resource_mappings": {
          "EnvironmentId": {
            "template": "${EnvironmentIdentifier}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "refactor-spaces:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "put-resource-policy": [
      {
        "action": "refactor-spaces:PutResourcePolicy",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "refactor-spaces:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "%%iftruthy%${ResourceArn}%%",
          "environment": "%%iftruthy%${ResourceArn}%%",
          "route": "%%iftruthy%${ResourceArn}%%",
          "service": "%%iftruthy%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "refactor-spaces:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "%%iftruthy%${ResourceArn}%%",
          "environment": "%%iftruthy%${ResourceArn}%%",
          "route": "%%iftruthy%${ResourceArn}%%",
          "service": "%%iftruthy%${ResourceArn}%%"
        }
      }
    ],
    "update-route": [
      {
        "action": "refactor-spaces:UpdateRoute",
        "resource_mappings": {
          "EnvironmentId": {
            "template": "${EnvironmentIdentifier}"
          },
          "ApplicationId": {
            "template": "${ApplicationIdentifier}"
          },
          "RouteId": {
            "template": "${RouteIdentifier}"
          }
        }
      }
    ]
  },
  "migrationhub-config": {
    "create-home-region-control": [
      {
        "action": "mgh:CreateHomeRegionControl",
        "resource_mappings": {}
      }
    ],
    "delete-home-region-control": [
      {
        "note": "NotFound",
        "action": "MigrationHub Config:DeleteHomeRegionControl",
        "resource_mappings": {}
      }
    ],
    "describe-home-region-controls": [
      {
        "action": "mgh:DescribeHomeRegionControls",
        "resource_mappings": {}
      }
    ],
    "get-home-region": [
      {
        "action": "mgh:GetHomeRegion",
        "resource_mappings": {}
      }
    ]
  },
  "migrationhuborchestrator": {
    "create-workflow": [
      {
        "action": "migrationhub-orchestrator:CreateWorkflow",
        "resource_mappings": {}
      }
    ],
    "create-workflow-step": [
      {
        "action": "migrationhub-orchestrator:CreateWorkflowStep",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workflowId}"
          }
        }
      }
    ],
    "create-workflow-step-group": [
      {
        "action": "migrationhub-orchestrator:CreateWorkflowStepGroup",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workflowId}"
          }
        }
      }
    ],
    "delete-workflow": [
      {
        "action": "migrationhub-orchestrator:DeleteWorkflow",
        "resource_mappings": {
          "ResourceId": {
            "template": "${id}"
          }
        }
      }
    ],
    "delete-workflow-step": [
      {
        "action": "migrationhub-orchestrator:DeleteWorkflowStep",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workflowId}"
          }
        }
      }
    ],
    "delete-workflow-step-group": [
      {
        "action": "migrationhub-orchestrator:DeleteWorkflowStepGroup",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workflowId}"
          }
        }
      }
    ],
    "get-template": [
      {
        "action": "migrationhub-orchestrator:GetTemplate",
        "resource_mappings": {}
      }
    ],
    "get-template-step": [
      {
        "action": "migrationhub-orchestrator:GetTemplateStep",
        "resource_mappings": {}
      }
    ],
    "get-template-step-group": [
      {
        "action": "migrationhub-orchestrator:GetTemplateStepGroup",
        "resource_mappings": {}
      }
    ],
    "get-workflow": [
      {
        "action": "migrationhub-orchestrator:GetWorkflow",
        "resource_mappings": {
          "ResourceId": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-workflow-step": [
      {
        "action": "migrationhub-orchestrator:GetWorkflowStep",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workflowId}"
          }
        }
      }
    ],
    "get-workflow-step-group": [
      {
        "action": "migrationhub-orchestrator:GetWorkflowStepGroup",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workflowId}"
          }
        }
      }
    ],
    "list-plugins": [
      {
        "action": "migrationhub-orchestrator:ListPlugins",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "migrationhub-orchestrator:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "workflow": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "list-template-step-groups": [
      {
        "action": "migrationhub-orchestrator:ListTemplateStepGroups",
        "resource_mappings": {}
      }
    ],
    "list-template-steps": [
      {
        "action": "migrationhub-orchestrator:ListTemplateSteps",
        "resource_mappings": {}
      }
    ],
    "list-templates": [
      {
        "action": "migrationhub-orchestrator:ListTemplates",
        "resource_mappings": {}
      }
    ],
    "list-workflow-step-groups": [
      {
        "action": "migrationhub-orchestrator:ListWorkflowStepGroups",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workflowId}"
          }
        }
      }
    ],
    "list-workflow-steps": [
      {
        "action": "migrationhub-orchestrator:ListWorkflowSteps",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workflowId}"
          }
        }
      }
    ],
    "list-workflows": [
      {
        "action": "migrationhub-orchestrator:ListWorkflows",
        "resource_mappings": {}
      }
    ],
    "retry-workflow-step": [
      {
        "action": "migrationhub-orchestrator:RetryWorkflowStep",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workflowId}"
          }
        }
      }
    ],
    "start-workflow": [
      {
        "action": "migrationhub-orchestrator:StartWorkflow",
        "resource_mappings": {
          "ResourceId": {
            "template": "${id}"
          }
        }
      }
    ],
    "stop-workflow": [
      {
        "action": "migrationhub-orchestrator:StopWorkflow",
        "resource_mappings": {
          "ResourceId": {
            "template": "${id}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "migrationhub-orchestrator:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "workflow": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "migrationhub-orchestrator:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "workflow": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-workflow": [
      {
        "action": "migrationhub-orchestrator:UpdateWorkflow",
        "resource_mappings": {
          "ResourceId": {
            "template": "${id}"
          }
        }
      }
    ],
    "update-workflow-step": [
      {
        "action": "migrationhub-orchestrator:UpdateWorkflowStep",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workflowId}"
          }
        }
      }
    ],
    "update-workflow-step-group": [
      {
        "action": "migrationhub-orchestrator:UpdateWorkflowStepGroup",
        "resource_mappings": {
          "ResourceId": {
            "template": "${workflowId}"
          }
        }
      }
    ]
  },
  "migrationhubstrategy": {
    "get-application-component-details": [
      {
        "action": "migrationhub-strategy:GetApplicationComponentDetails",
        "resource_mappings": {}
      }
    ],
    "get-application-component-strategies": [
      {
        "action": "migrationhub-strategy:GetApplicationComponentStrategies",
        "resource_mappings": {}
      }
    ],
    "get-assessment": [
      {
        "action": "migrationhub-strategy:GetAssessment",
        "resource_mappings": {}
      }
    ],
    "get-import-file-task": [
      {
        "action": "migrationhub-strategy:GetImportFileTask",
        "resource_mappings": {}
      }
    ],
    "get-latest-assessment-id": [
      {
        "action": "migrationhub-strategy:GetLatestAssessmentId",
        "resource_mappings": {}
      }
    ],
    "get-portfolio-preferences": [
      {
        "action": "migrationhub-strategy:GetPortfolioPreferences",
        "resource_mappings": {}
      }
    ],
    "get-portfolio-summary": [
      {
        "action": "migrationhub-strategy:GetPortfolioSummary",
        "resource_mappings": {}
      }
    ],
    "get-recommendation-report-details": [
      {
        "action": "migrationhub-strategy:GetRecommendationReportDetails",
        "resource_mappings": {}
      }
    ],
    "get-server-details": [
      {
        "action": "migrationhub-strategy:GetServerDetails",
        "resource_mappings": {}
      }
    ],
    "get-server-strategies": [
      {
        "action": "migrationhub-strategy:GetServerStrategies",
        "resource_mappings": {}
      }
    ],
    "list-analyzable-servers": [
      {
        "note": "NotFound",
        "action": "MigrationHubStrategy:ListAnalyzableServers",
        "resource_mappings": {}
      }
    ],
    "list-application-components": [
      {
        "action": "migrationhub-strategy:ListApplicationComponents",
        "resource_mappings": {}
      }
    ],
    "list-collectors": [
      {
        "action": "migrationhub-strategy:ListCollectors",
        "resource_mappings": {}
      }
    ],
    "list-import-file-task": [
      {
        "action": "migrationhub-strategy:ListImportFileTask",
        "resource_mappings": {}
      }
    ],
    "list-servers": [
      {
        "action": "migrationhub-strategy:ListServers",
        "resource_mappings": {}
      }
    ],
    "put-portfolio-preferences": [
      {
        "action": "migrationhub-strategy:PutPortfolioPreferences",
        "resource_mappings": {}
      }
    ],
    "start-assessment": [
      {
        "action": "migrationhub-strategy:StartAssessment",
        "resource_mappings": {}
      }
    ],
    "start-import-file-task": [
      {
        "action": "migrationhub-strategy:StartImportFileTask",
        "resource_mappings": {}
      }
    ],
    "start-recommendation-report-generation": [
      {
        "action": "migrationhub-strategy:StartRecommendationReportGeneration",
        "resource_mappings": {}
      }
    ],
    "stop-assessment": [
      {
        "action": "migrationhub-strategy:StopAssessment",
        "resource_mappings": {}
      }
    ],
    "update-application-component-config": [
      {
        "action": "migrationhub-strategy:UpdateApplicationComponentConfig",
        "resource_mappings": {}
      }
    ],
    "update-server-config": [
      {
        "action": "migrationhub-strategy:UpdateServerConfig",
        "resource_mappings": {}
      }
    ]
  },
  "mobile": {
    "create-project": [
      {
        "action": "mobilehub:CreateProject",
        "resource_mappings": {}
      }
    ],
    "delete-project": [
      {
        "action": "mobilehub:DeleteProject",
        "resource_mappings": {
          "ProjectId": {
            "template": "${projectId}"
          }
        }
      }
    ],
    "describe-bundle": [
      {
        "action": "mobilehub:DescribeBundle",
        "resource_mappings": {}
      }
    ],
    "describe-project": [
      {
        "action": "mobilehub:GetProject",
        "resource_mappings": {
          "ProjectId": {
            "template": "${projectId}"
          }
        }
      }
    ],
    "export-bundle": [
      {
        "action": "mobilehub:ExportBundle",
        "resource_mappings": {}
      }
    ],
    "export-project": [
      {
        "action": "mobilehub:ExportProject",
        "resource_mappings": {
          "ProjectId": {
            "template": "${projectId}"
          }
        }
      }
    ],
    "list-bundles": [
      {
        "action": "mobilehub:ListBundles",
        "resource_mappings": {}
      }
    ],
    "list-projects": [
      {
        "action": "mobilehub:ListProjects",
        "resource_mappings": {}
      }
    ],
    "update-project": [
      {
        "action": "mobilehub:UpdateProject",
        "resource_mappings": {
          "ProjectId": {
            "template": "${projectId}"
          }
        }
      }
    ]
  },
  "mq": {
    "create-broker": [
      {
        "action": "mq:CreateBroker",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "${SubnetIds[]}"
          },
          "SecurityGroupId": {
            "template": "${SecurityGroups[]}"
          }
        }
      }
    ],
    "create-configuration": [
      {
        "action": "mq:CreateConfiguration",
        "resource_mappings": {}
      }
    ],
    "create-tags": [
      {
        "action": "mq:CreateTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "brokers": "%%iftemplatematch%${ResourceArn}%%",
          "configurations": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "create-user": [
      {
        "action": "mq:CreateUser",
        "resource_mappings": {
          "broker-id": {
            "template": "${BrokerId}"
          }
        }
      }
    ],
    "delete-broker": [
      {
        "action": "mq:DeleteBroker",
        "resource_mappings": {
          "broker-id": {
            "template": "${BrokerId}"
          }
        }
      },
      {
        "action": "ec2:DeleteNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-tags": [
      {
        "action": "mq:DeleteTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "brokers": "%%iftemplatematch%${ResourceArn}%%",
          "configurations": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "delete-user": [
      {
        "action": "mq:DeleteUser",
        "resource_mappings": {
          "broker-id": {
            "template": "${BrokerId}"
          }
        }
      }
    ],
    "describe-broker": [
      {
        "action": "mq:DescribeBroker",
        "resource_mappings": {
          "broker-id": {
            "template": "${BrokerId}"
          }
        }
      }
    ],
    "describe-broker-engine-types": [
      {
        "action": "mq:DescribeBrokerEngineTypes",
        "resource_mappings": {}
      }
    ],
    "describe-broker-instance-options": [
      {
        "action": "mq:DescribeBrokerInstanceOptions",
        "resource_mappings": {}
      }
    ],
    "describe-configuration": [
      {
        "action": "mq:DescribeConfiguration",
        "resource_mappings": {
          "configuration-id": {
            "template": "${ConfigurationId}"
          }
        }
      }
    ],
    "describe-configuration-revision": [
      {
        "action": "mq:DescribeConfigurationRevision",
        "resource_mappings": {
          "configuration-id": {
            "template": "${ConfigurationId}"
          }
        }
      }
    ],
    "describe-user": [
      {
        "action": "mq:DescribeUser",
        "resource_mappings": {
          "broker-id": {
            "template": "${BrokerId}"
          }
        }
      }
    ],
    "list-brokers": [
      {
        "action": "mq:ListBrokers",
        "resource_mappings": {}
      }
    ],
    "list-configuration-revisions": [
      {
        "action": "mq:ListConfigurationRevisions",
        "resource_mappings": {
          "configuration-id": {
            "template": "${ConfigurationId}"
          }
        }
      }
    ],
    "list-configurations": [
      {
        "action": "mq:ListConfigurations",
        "resource_mappings": {}
      }
    ],
    "list-tags": [
      {
        "action": "mq:ListTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "brokers": "%%iftemplatematch%${ResourceArn}%%",
          "configurations": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "list-users": [
      {
        "action": "mq:ListUsers",
        "resource_mappings": {
          "broker-id": {
            "template": "${BrokerId}"
          }
        }
      }
    ],
    "promote": [
      {
        "action": "mq:Promote",
        "resource_mappings": {
          "BrokerName": {
            "template": "*"
          },
          "BrokerId": {
            "template": "${BrokerId}"
          }
        }
      }
    ],
    "reboot-broker": [
      {
        "action": "mq:RebootBroker",
        "resource_mappings": {
          "broker-id": {
            "template": "${BrokerId}"
          }
        }
      }
    ],
    "update-broker": [
      {
        "action": "mq:UpdateBroker",
        "resource_mappings": {
          "broker-id": {
            "template": "${BrokerId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${LdapServerMetadata.RoleBase}%${LdapServerMetadata.RoleName}%${LdapServerMetadata.RoleSearchMatching}%${LdapServerMetadata.RoleSearchSubtree}%${LdapServerMetadata.UserRoleName}%%"
        }
      }
    ],
    "update-configuration": [
      {
        "action": "mq:UpdateConfiguration",
        "resource_mappings": {
          "configuration-id": {
            "template": "${ConfigurationId}"
          }
        }
      }
    ],
    "update-user": [
      {
        "action": "mq:UpdateUser",
        "resource_mappings": {
          "broker-id": {
            "template": "${BrokerId}"
          }
        }
      }
    ]
  },
  "mturk": {
    "accept-qualification-request": [
      {
        "action": "mechanicalturk:AcceptQualificationRequest",
        "resource_mappings": {}
      }
    ],
    "approve-assignment": [
      {
        "action": "mechanicalturk:ApproveAssignment",
        "resource_mappings": {}
      }
    ],
    "associate-qualification-with-worker": [
      {
        "action": "mechanicalturk:AssociateQualificationWithWorker",
        "resource_mappings": {}
      }
    ],
    "create-additional-assignments-for-hit": [
      {
        "action": "mechanicalturk:CreateAdditionalAssignmentsForHIT",
        "resource_mappings": {}
      }
    ],
    "create-hit": [
      {
        "action": "mechanicalturk:CreateHIT",
        "resource_mappings": {}
      }
    ],
    "create-hit-type": [
      {
        "action": "mechanicalturk:CreateHITType",
        "resource_mappings": {}
      }
    ],
    "create-hit-with-hit-type": [
      {
        "action": "mechanicalturk:CreateHITWithHITType",
        "resource_mappings": {}
      }
    ],
    "create-qualification-type": [
      {
        "action": "mechanicalturk:CreateQualificationType",
        "resource_mappings": {}
      }
    ],
    "create-worker-block": [
      {
        "action": "mechanicalturk:CreateWorkerBlock",
        "resource_mappings": {}
      }
    ],
    "delete-hit": [
      {
        "action": "mechanicalturk:DeleteHIT",
        "resource_mappings": {}
      }
    ],
    "delete-qualification-type": [
      {
        "action": "mechanicalturk:DeleteQualificationType",
        "resource_mappings": {}
      }
    ],
    "delete-worker-block": [
      {
        "action": "mechanicalturk:DeleteWorkerBlock",
        "resource_mappings": {}
      }
    ],
    "disassociate-qualification-from-worker": [
      {
        "action": "mechanicalturk:DisassociateQualificationFromWorker",
        "resource_mappings": {}
      }
    ],
    "get-account-balance": [
      {
        "action": "mechanicalturk:GetAccountBalance",
        "resource_mappings": {}
      }
    ],
    "get-assignment": [
      {
        "action": "mechanicalturk:GetAssignment",
        "resource_mappings": {}
      }
    ],
    "get-file-upload-url": [
      {
        "action": "mechanicalturk:GetFileUploadURL",
        "resource_mappings": {}
      }
    ],
    "get-hit": [
      {
        "action": "mechanicalturk:GetHIT",
        "resource_mappings": {}
      }
    ],
    "get-qualification-score": [
      {
        "action": "mechanicalturk:GetQualificationScore",
        "resource_mappings": {}
      }
    ],
    "get-qualification-type": [
      {
        "action": "mechanicalturk:GetQualificationType",
        "resource_mappings": {}
      }
    ],
    "list-assignments-for-hit": [
      {
        "action": "mechanicalturk:ListAssignmentsForHIT",
        "resource_mappings": {}
      }
    ],
    "list-bonus-payments": [
      {
        "action": "mechanicalturk:ListBonusPayments",
        "resource_mappings": {}
      }
    ],
    "list-hits": [
      {
        "action": "mechanicalturk:ListHITs",
        "resource_mappings": {}
      }
    ],
    "list-hits-for-qualification-type": [
      {
        "action": "mechanicalturk:ListHITsForQualificationType",
        "resource_mappings": {}
      }
    ],
    "list-qualification-requests": [
      {
        "action": "mechanicalturk:ListQualificationRequests",
        "resource_mappings": {}
      }
    ],
    "list-qualification-types": [
      {
        "action": "mechanicalturk:ListQualificationTypes",
        "resource_mappings": {}
      }
    ],
    "list-review-policy-results-for-hit": [
      {
        "action": "mechanicalturk:ListReviewPolicyResultsForHIT",
        "resource_mappings": {}
      }
    ],
    "list-reviewable-hits": [
      {
        "action": "mechanicalturk:ListReviewableHITs",
        "resource_mappings": {}
      }
    ],
    "list-worker-blocks": [
      {
        "action": "mechanicalturk:ListWorkerBlocks",
        "resource_mappings": {}
      }
    ],
    "list-workers-with-qualification-type": [
      {
        "action": "mechanicalturk:ListWorkersWithQualificationType",
        "resource_mappings": {}
      }
    ],
    "notify-workers": [
      {
        "action": "mechanicalturk:NotifyWorkers",
        "resource_mappings": {}
      }
    ],
    "reject-assignment": [
      {
        "action": "mechanicalturk:RejectAssignment",
        "resource_mappings": {}
      }
    ],
    "reject-qualification-request": [
      {
        "action": "mechanicalturk:RejectQualificationRequest",
        "resource_mappings": {}
      }
    ],
    "send-bonus": [
      {
        "action": "mechanicalturk:SendBonus",
        "resource_mappings": {}
      }
    ],
    "send-test-event-notification": [
      {
        "action": "mechanicalturk:SendTestEventNotification",
        "resource_mappings": {}
      }
    ],
    "update-expiration-for-hit": [
      {
        "action": "mechanicalturk:UpdateExpirationForHIT",
        "resource_mappings": {}
      }
    ],
    "update-hit-review-status": [
      {
        "action": "mechanicalturk:UpdateHITReviewStatus",
        "resource_mappings": {}
      }
    ],
    "update-hit-type-of-hit": [
      {
        "action": "mechanicalturk:UpdateHITTypeOfHIT",
        "resource_mappings": {}
      }
    ],
    "update-notification-settings": [
      {
        "action": "mechanicalturk:UpdateNotificationSettings",
        "resource_mappings": {}
      }
    ],
    "update-qualification-type": [
      {
        "action": "mechanicalturk:UpdateQualificationType",
        "resource_mappings": {}
      }
    ],
    "list-hi-ts-for-qualification-type": [
      {
        "action": "mechanicalturk:ListHITsForQualificationType",
        "resource_mappings": {}
      }
    ]
  },
  "mwaa": {
    "create-cli-token": [
      {
        "action": "airflow:CreateCliToken",
        "resource_mappings": {
          "EnvironmentName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "create-environment": [
      {
        "action": "airflow:CreateEnvironment",
        "resource_mappings": {
          "EnvironmentName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "create-web-login-token": [
      {
        "action": "airflow:CreateWebLoginToken",
        "resource_mappings": {
          "EnvironmentName": {
            "template": "${Name}"
          },
          "RoleName": {
            "template": "*"
          }
        }
      }
    ],
    "delete-environment": [
      {
        "action": "airflow:DeleteEnvironment",
        "resource_mappings": {
          "EnvironmentName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-environment": [
      {
        "action": "airflow:GetEnvironment",
        "resource_mappings": {
          "EnvironmentName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "list-environments": [
      {
        "action": "airflow:ListEnvironments",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "airflow:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "environment": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "publish-metrics": [
      {
        "action": "airflow:PublishMetrics",
        "resource_mappings": {
          "EnvironmentName": {
            "template": "${EnvironmentName}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "airflow:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "environment": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "airflow:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "environment": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-environment": [
      {
        "action": "airflow:UpdateEnvironment",
        "resource_mappings": {
          "EnvironmentName": {
            "template": "${Name}"
          }
        }
      }
    ]
  },
  "neptune": {
    "add-role-to-db-cluster": [
      {
        "action": "rds:AddRoleToDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "add-source-identifier-to-subscription": [
      {
        "action": "rds:AddSourceIdentifierToSubscription",
        "resource_mappings": {
          "SubscriptionName": {
            "template": "${SubscriptionName}"
          }
        }
      }
    ],
    "add-tags-to-resource": [
      {
        "action": "rds:AddTagsToResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "db": "%%iftemplatematch%${ResourceName}%%",
          "es": "%%iftemplatematch%${ResourceName}%%",
          "og": "%%iftemplatematch%${ResourceName}%%",
          "pg": "%%iftemplatematch%${ResourceName}%%",
          "proxy": "%%iftemplatematch%${ResourceName}%%",
          "ri": "%%iftemplatematch%${ResourceName}%%",
          "secgrp": "%%iftemplatematch%${ResourceName}%%",
          "snapshot": "%%iftemplatematch%${ResourceName}%%",
          "subgrp": "%%iftemplatematch%${ResourceName}%%",
          "target-group": "%%iftemplatematch%${ResourceName}%%"
        }
      }
    ],
    "apply-pending-maintenance-action": [
      {
        "action": "rds:ApplyPendingMaintenanceAction",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "%%iftemplatematch%${ResourceIdentifier}%%",
          "db": "%%iftemplatematch%${ResourceIdentifier}%%"
        }
      }
    ],
    "copy-db-cluster-parameter-group": [
      {
        "action": "rds:CopyDBClusterParameterGroup",
        "resource_mappings": {
          "ClusterParameterGroupName": {
            "template": "%%many%${SourceDBClusterParameterGroupIdentifier}%${TargetDBClusterParameterGroupIdentifier}%%"
          }
        }
      }
    ],
    "copy-db-cluster-snapshot": [
      {
        "action": "rds:CopyDBClusterSnapshot",
        "resource_mappings": {
          "ClusterSnapshotName": {
            "template": "%%many%${SourceDBClusterSnapshotIdentifier}%${TargetDBClusterSnapshotIdentifier}%%"
          }
        }
      },
      {
        "action": "rds:AddTagsToResource",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "copy-db-parameter-group": [
      {
        "action": "rds:CopyDBParameterGroup",
        "resource_mappings": {
          "ParameterGroupName": {
            "template": "%%many%${SourceDBParameterGroupIdentifier}%${TargetDBParameterGroupIdentifier}%%"
          }
        }
      },
      {
        "action": "rds:AddTagsToResource",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "create-db-cluster": [
      {
        "action": "rds:CreateDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          },
          "ClusterParameterGroupName": {
            "template": "${DBClusterParameterGroupName}"
          },
          "OptionGroupName": {
            "template": "${OptionGroupName}"
          },
          "SubnetGroupName": {
            "template": "${DBSubnetGroupName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "rds:AddTagsToResource",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "create-db-cluster-endpoint": [
      {
        "action": "rds:CreateDBClusterEndpoint",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          },
          "DbClusterEndpoint": {
            "template": "${DBClusterEndpointIdentifier}"
          }
        }
      }
    ],
    "create-db-cluster-parameter-group": [
      {
        "action": "rds:CreateDBClusterParameterGroup",
        "resource_mappings": {
          "ClusterParameterGroupName": {
            "template": "${DBClusterParameterGroupName}"
          }
        }
      }
    ],
    "create-db-cluster-snapshot": [
      {
        "action": "rds:CreateDBClusterSnapshot",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          },
          "ClusterSnapshotName": {
            "template": "${DBClusterSnapshotIdentifier}"
          }
        }
      }
    ],
    "create-db-instance": [
      {
        "action": "rds:CreateDBInstance",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          },
          "OptionGroupName": {
            "template": "${OptionGroupName}"
          },
          "ParameterGroupName": {
            "template": "${DBParameterGroupName}"
          },
          "SecurityGroupName": {
            "template": "${DBSecurityGroups[]}"
          },
          "SubnetGroupName": {
            "template": "${DBSubnetGroupName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "rds:AddTagsToResource",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "create-db-parameter-group": [
      {
        "action": "rds:CreateDBParameterGroup",
        "resource_mappings": {
          "ParameterGroupName": {
            "template": "${DBParameterGroupName}"
          }
        }
      }
    ],
    "create-db-subnet-group": [
      {
        "action": "rds:CreateDBSubnetGroup",
        "resource_mappings": {
          "SubnetGroupName": {
            "template": "${DBSubnetGroupName}"
          }
        }
      }
    ],
    "create-event-subscription": [
      {
        "action": "rds:CreateEventSubscription",
        "resource_mappings": {
          "SubscriptionName": {
            "template": "${SubscriptionName}"
          }
        }
      }
    ],
    "create-global-cluster": [
      {
        "action": "rds:CreateGlobalCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${SourceDBClusterIdentifier}"
          },
          "GlobalCluster": {
            "template": "${GlobalClusterIdentifier}"
          }
        }
      }
    ],
    "delete-db-cluster": [
      {
        "action": "rds:DeleteDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          },
          "ClusterSnapshotName": {
            "template": "${FinalDBSnapshotIdentifier}"
          }
        }
      }
    ],
    "delete-db-cluster-endpoint": [
      {
        "action": "rds:DeleteDBClusterEndpoint",
        "resource_mappings": {
          "DbClusterEndpoint": {
            "template": "${DBClusterEndpointIdentifier}"
          }
        }
      }
    ],
    "delete-db-cluster-parameter-group": [
      {
        "action": "rds:DeleteDBClusterParameterGroup",
        "resource_mappings": {
          "ClusterParameterGroupName": {
            "template": "${DBClusterParameterGroupName}"
          }
        }
      }
    ],
    "delete-db-cluster-snapshot": [
      {
        "action": "rds:DeleteDBClusterSnapshot",
        "resource_mappings": {
          "ClusterSnapshotName": {
            "template": "${DBClusterSnapshotIdentifier}"
          }
        }
      }
    ],
    "delete-db-instance": [
      {
        "action": "rds:DeleteDBInstance",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          }
        }
      }
    ],
    "delete-db-parameter-group": [
      {
        "action": "rds:DeleteDBParameterGroup",
        "resource_mappings": {
          "ParameterGroupName": {
            "template": "${DBParameterGroupName}"
          }
        }
      }
    ],
    "delete-db-subnet-group": [
      {
        "action": "rds:DeleteDBSubnetGroup",
        "resource_mappings": {
          "SubnetGroupName": {
            "template": "${DBSubnetGroupName}"
          }
        }
      }
    ],
    "delete-event-subscription": [
      {
        "action": "rds:DeleteEventSubscription",
        "resource_mappings": {
          "SubscriptionName": {
            "template": "${SubscriptionName}"
          }
        }
      }
    ],
    "delete-global-cluster": [
      {
        "action": "rds:DeleteGlobalCluster",
        "resource_mappings": {
          "GlobalCluster": {
            "template": "${GlobalClusterIdentifier}"
          }
        }
      }
    ],
    "describe-db-cluster-endpoints": [
      {
        "action": "rds:DescribeDBClusterEndpoints",
        "resource_mappings": {
          "DbClusterEndpoint": {
            "template": "${DBClusterEndpointIdentifier}"
          },
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          }
        }
      }
    ],
    "describe-db-cluster-parameter-groups": [
      {
        "action": "rds:DescribeDBClusterParameterGroups",
        "resource_mappings": {
          "ClusterParameterGroupName": {
            "template": "${DBClusterParameterGroupName}"
          }
        }
      }
    ],
    "describe-db-cluster-parameters": [
      {
        "action": "rds:DescribeDBClusterParameters",
        "resource_mappings": {
          "ClusterParameterGroupName": {
            "template": "${DBClusterParameterGroupName}"
          }
        }
      }
    ],
    "describe-db-cluster-snapshot-attributes": [
      {
        "action": "rds:DescribeDBClusterSnapshotAttributes",
        "resource_mappings": {
          "ClusterSnapshotName": {
            "template": "${DBClusterSnapshotIdentifier}"
          }
        }
      }
    ],
    "describe-db-cluster-snapshots": [
      {
        "action": "rds:DescribeDBClusterSnapshots",
        "resource_mappings": {
          "ClusterSnapshotName": {
            "template": "${DBClusterSnapshotIdentifier}"
          }
        }
      }
    ],
    "describe-db-clusters": [
      {
        "action": "rds:DescribeDBClusters",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          }
        }
      }
    ],
    "describe-db-engine-versions": [
      {
        "action": "rds:DescribeDBEngineVersions",
        "resource_mappings": {}
      }
    ],
    "describe-db-instances": [
      {
        "action": "rds:DescribeDBInstances",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          }
        }
      }
    ],
    "describe-db-parameter-groups": [
      {
        "action": "rds:DescribeDBParameterGroups",
        "resource_mappings": {
          "ParameterGroupName": {
            "template": "${DBParameterGroupName}"
          }
        }
      }
    ],
    "describe-db-parameters": [
      {
        "action": "rds:DescribeDBParameters",
        "resource_mappings": {
          "ParameterGroupName": {
            "template": "${DBParameterGroupName}"
          }
        }
      }
    ],
    "describe-db-subnet-groups": [
      {
        "action": "rds:DescribeDBSubnetGroups",
        "resource_mappings": {
          "SubnetGroupName": {
            "template": "${DBSubnetGroupName}"
          }
        }
      }
    ],
    "describe-engine-default-cluster-parameters": [
      {
        "action": "rds:DescribeEngineDefaultClusterParameters",
        "resource_mappings": {}
      }
    ],
    "describe-engine-default-parameters": [
      {
        "action": "rds:DescribeEngineDefaultParameters",
        "resource_mappings": {}
      }
    ],
    "describe-event-categories": [
      {
        "action": "rds:DescribeEventCategories",
        "resource_mappings": {}
      }
    ],
    "describe-event-subscriptions": [
      {
        "action": "rds:DescribeEventSubscriptions",
        "resource_mappings": {
          "SubscriptionName": {
            "template": "${SubscriptionName}"
          }
        }
      }
    ],
    "describe-events": [
      {
        "action": "rds:DescribeEvents",
        "resource_mappings": {}
      }
    ],
    "describe-global-clusters": [
      {
        "action": "rds:DescribeGlobalClusters",
        "resource_mappings": {
          "GlobalCluster": {
            "template": "${GlobalClusterIdentifier}"
          }
        }
      }
    ],
    "describe-orderable-db-instance-options": [
      {
        "action": "rds:DescribeOrderableDBInstanceOptions",
        "resource_mappings": {}
      }
    ],
    "describe-pending-maintenance-actions": [
      {
        "action": "rds:DescribePendingMaintenanceActions",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "%%iftemplatematch%${ResourceIdentifier}%%",
          "db": "%%iftemplatematch%${ResourceIdentifier}%%"
        }
      }
    ],
    "describe-valid-db-instance-modifications": [
      {
        "action": "rds:DescribeValidDBInstanceModifications",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          }
        }
      }
    ],
    "failover-db-cluster": [
      {
        "action": "rds:FailoverDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          }
        }
      }
    ],
    "failover-global-cluster": [
      {
        "action": "rds:FailoverGlobalCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${TargetDbClusterIdentifier}"
          },
          "GlobalCluster": {
            "template": "${GlobalClusterIdentifier}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "rds:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "db": "%%iftemplatematch%${ResourceName}%%",
          "es": "%%iftemplatematch%${ResourceName}%%",
          "og": "%%iftemplatematch%${ResourceName}%%",
          "pg": "%%iftemplatematch%${ResourceName}%%",
          "proxy": "%%iftemplatematch%${ResourceName}%%",
          "ri": "%%iftemplatematch%${ResourceName}%%",
          "secgrp": "%%iftemplatematch%${ResourceName}%%",
          "snapshot": "%%iftemplatematch%${ResourceName}%%",
          "subgrp": "%%iftemplatematch%${ResourceName}%%",
          "target-group": "%%iftemplatematch%${ResourceName}%%"
        }
      }
    ],
    "modify-db-cluster": [
      {
        "action": "rds:ModifyDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "%%many%${DBClusterIdentifier}%${NewDBClusterIdentifier}%%"
          },
          "ClusterParameterGroupName": {
            "template": "${DBClusterParameterGroupName}"
          },
          "OptionGroupName": {
            "template": "${OptionGroupName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "modify-db-cluster-endpoint": [
      {
        "action": "rds:ModifyDBClusterEndpoint",
        "resource_mappings": {
          "DbClusterEndpoint": {
            "template": "${DBClusterEndpointIdentifier}"
          }
        }
      }
    ],
    "modify-db-cluster-parameter-group": [
      {
        "action": "rds:ModifyDBClusterParameterGroup",
        "resource_mappings": {
          "ClusterParameterGroupName": {
            "template": "${DBClusterParameterGroupName}"
          }
        }
      }
    ],
    "modify-db-cluster-snapshot-attribute": [
      {
        "action": "rds:ModifyDBClusterSnapshotAttribute",
        "resource_mappings": {
          "ClusterSnapshotName": {
            "template": "${DBClusterSnapshotIdentifier}"
          }
        }
      }
    ],
    "modify-db-instance": [
      {
        "action": "rds:ModifyDBInstance",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "%%many%${DBInstanceIdentifier}%${NewDBInstanceIdentifier}%%"
          },
          "OptionGroupName": {
            "template": "${OptionGroupName}"
          },
          "ParameterGroupName": {
            "template": "${DBParameterGroupName}"
          },
          "SecurityGroupName": {
            "template": "${DBSecurityGroups[]}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "modify-db-parameter-group": [
      {
        "action": "rds:ModifyDBParameterGroup",
        "resource_mappings": {
          "ParameterGroupName": {
            "template": "${DBParameterGroupName}"
          }
        }
      }
    ],
    "modify-db-subnet-group": [
      {
        "action": "rds:ModifyDBSubnetGroup",
        "resource_mappings": {
          "SubnetGroupName": {
            "template": "${DBSubnetGroupName}"
          }
        }
      }
    ],
    "modify-event-subscription": [
      {
        "action": "rds:ModifyEventSubscription",
        "resource_mappings": {
          "SubscriptionName": {
            "template": "${SubscriptionName}"
          }
        }
      }
    ],
    "modify-global-cluster": [
      {
        "action": "rds:ModifyGlobalCluster",
        "resource_mappings": {
          "GlobalCluster": {
            "template": "%%many%${GlobalClusterIdentifier}%${NewGlobalClusterIdentifier}%%"
          }
        }
      }
    ],
    "promote-read-replica-db-cluster": [
      {
        "action": "rds:PromoteReadReplicaDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          }
        }
      }
    ],
    "reboot-db-instance": [
      {
        "action": "rds:RebootDBInstance",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          }
        }
      }
    ],
    "remove-from-global-cluster": [
      {
        "action": "rds:RemoveFromGlobalCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DbClusterIdentifier}"
          },
          "GlobalCluster": {
            "template": "${GlobalClusterIdentifier}"
          }
        }
      }
    ],
    "remove-role-from-db-cluster": [
      {
        "action": "rds:RemoveRoleFromDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "remove-source-identifier-from-subscription": [
      {
        "action": "rds:RemoveSourceIdentifierFromSubscription",
        "resource_mappings": {
          "SubscriptionName": {
            "template": "${SubscriptionName}"
          }
        }
      }
    ],
    "remove-tags-from-resource": [
      {
        "action": "rds:RemoveTagsFromResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "db": "%%iftemplatematch%${ResourceName}%%",
          "es": "%%iftemplatematch%${ResourceName}%%",
          "og": "%%iftemplatematch%${ResourceName}%%",
          "pg": "%%iftemplatematch%${ResourceName}%%",
          "proxy": "%%iftemplatematch%${ResourceName}%%",
          "ri": "%%iftemplatematch%${ResourceName}%%",
          "secgrp": "%%iftemplatematch%${ResourceName}%%",
          "snapshot": "%%iftemplatematch%${ResourceName}%%",
          "subgrp": "%%iftemplatematch%${ResourceName}%%",
          "target-group": "%%iftemplatematch%${ResourceName}%%"
        }
      }
    ],
    "reset-db-cluster-parameter-group": [
      {
        "action": "rds:ResetDBClusterParameterGroup",
        "resource_mappings": {
          "ClusterParameterGroupName": {
            "template": "${DBClusterParameterGroupName}"
          }
        }
      }
    ],
    "reset-db-parameter-group": [
      {
        "action": "rds:ResetDBParameterGroup",
        "resource_mappings": {
          "ParameterGroupName": {
            "template": "${DBParameterGroupName}"
          }
        }
      }
    ],
    "restore-db-cluster-from-snapshot": [
      {
        "action": "rds:RestoreDBClusterFromSnapshot",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          },
          "ClusterSnapshotName": {
            "template": "${SnapshotIdentifier}"
          },
          "OptionGroupName": {
            "template": "${OptionGroupName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "rds:AddTagsToResource",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "restore-db-cluster-to-point-in-time": [
      {
        "action": "rds:RestoreDBClusterToPointInTime",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "%%many%${DBClusterIdentifier}%${SourceDBClusterIdentifier}%%"
          },
          "OptionGroupName": {
            "template": "${OptionGroupName}"
          },
          "SubnetGroupName": {
            "template": "${DBSubnetGroupName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "rds:AddTagsToResource",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "start-db-cluster": [
      {
        "action": "rds:StartDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          }
        }
      }
    ],
    "stop-db-cluster": [
      {
        "action": "rds:StopDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "rds:DescribeDBInstances",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          }
        }
      }
    ]
  },
  "neptunedata": {
    "cancel-gremlin-query": [
      {
        "note": "NotFound",
        "action": "neptunedata:CancelGremlinQuery",
        "resource_mappings": {}
      }
    ],
    "cancel-loader-job": [
      {
        "note": "NotFound",
        "action": "neptunedata:CancelLoaderJob",
        "resource_mappings": {}
      }
    ],
    "cancel-ml-data-processing-job": [
      {
        "note": "NotFound",
        "action": "neptunedata:CancelMLDataProcessingJob",
        "resource_mappings": {}
      }
    ],
    "cancel-ml-model-training-job": [
      {
        "note": "NotFound",
        "action": "neptunedata:CancelMLModelTrainingJob",
        "resource_mappings": {}
      }
    ],
    "cancel-ml-model-transform-job": [
      {
        "note": "NotFound",
        "action": "neptunedata:CancelMLModelTransformJob",
        "resource_mappings": {}
      }
    ],
    "cancel-open-cypher-query": [
      {
        "note": "NotFound",
        "action": "neptunedata:CancelOpenCypherQuery",
        "resource_mappings": {}
      }
    ],
    "create-ml-endpoint": [
      {
        "note": "NotFound",
        "action": "neptunedata:CreateMLEndpoint",
        "resource_mappings": {}
      }
    ],
    "delete-ml-endpoint": [
      {
        "note": "NotFound",
        "action": "neptunedata:DeleteMLEndpoint",
        "resource_mappings": {}
      }
    ],
    "delete-propertygraph-statistics": [
      {
        "note": "NotFound",
        "action": "neptunedata:DeletePropertygraphStatistics",
        "resource_mappings": {}
      }
    ],
    "delete-sparql-statistics": [
      {
        "note": "NotFound",
        "action": "neptunedata:DeleteSparqlStatistics",
        "resource_mappings": {}
      }
    ],
    "execute-fast-reset": [
      {
        "note": "NotFound",
        "action": "neptunedata:ExecuteFastReset",
        "resource_mappings": {}
      }
    ],
    "execute-gremlin-explain-query": [
      {
        "note": "NotFound",
        "action": "neptunedata:ExecuteGremlinExplainQuery",
        "resource_mappings": {}
      }
    ],
    "execute-gremlin-profile-query": [
      {
        "note": "NotFound",
        "action": "neptunedata:ExecuteGremlinProfileQuery",
        "resource_mappings": {}
      }
    ],
    "execute-gremlin-query": [
      {
        "note": "NotFound",
        "action": "neptunedata:ExecuteGremlinQuery",
        "resource_mappings": {}
      }
    ],
    "execute-open-cypher-explain-query": [
      {
        "note": "NotFound",
        "action": "neptunedata:ExecuteOpenCypherExplainQuery",
        "resource_mappings": {}
      }
    ],
    "execute-open-cypher-query": [
      {
        "note": "NotFound",
        "action": "neptunedata:ExecuteOpenCypherQuery",
        "resource_mappings": {}
      }
    ],
    "get-engine-status": [
      {
        "note": "NotFound",
        "action": "neptunedata:GetEngineStatus",
        "resource_mappings": {}
      }
    ],
    "get-gremlin-query-status": [
      {
        "note": "NotFound",
        "action": "neptunedata:GetGremlinQueryStatus",
        "resource_mappings": {}
      }
    ],
    "get-loader-job-status": [
      {
        "note": "NotFound",
        "action": "neptunedata:GetLoaderJobStatus",
        "resource_mappings": {}
      }
    ],
    "get-ml-data-processing-job": [
      {
        "note": "NotFound",
        "action": "neptunedata:GetMLDataProcessingJob",
        "resource_mappings": {}
      }
    ],
    "get-ml-endpoint": [
      {
        "note": "NotFound",
        "action": "neptunedata:GetMLEndpoint",
        "resource_mappings": {}
      }
    ],
    "get-ml-model-training-job": [
      {
        "note": "NotFound",
        "action": "neptunedata:GetMLModelTrainingJob",
        "resource_mappings": {}
      }
    ],
    "get-ml-model-transform-job": [
      {
        "note": "NotFound",
        "action": "neptunedata:GetMLModelTransformJob",
        "resource_mappings": {}
      }
    ],
    "get-open-cypher-query-status": [
      {
        "note": "NotFound",
        "action": "neptunedata:GetOpenCypherQueryStatus",
        "resource_mappings": {}
      }
    ],
    "get-propertygraph-statistics": [
      {
        "note": "NotFound",
        "action": "neptunedata:GetPropertygraphStatistics",
        "resource_mappings": {}
      }
    ],
    "get-propertygraph-stream": [
      {
        "note": "NotFound",
        "action": "neptunedata:GetPropertygraphStream",
        "resource_mappings": {}
      }
    ],
    "get-propertygraph-summary": [
      {
        "note": "NotFound",
        "action": "neptunedata:GetPropertygraphSummary",
        "resource_mappings": {}
      }
    ],
    "get-rdf-graph-summary": [
      {
        "note": "NotFound",
        "action": "neptunedata:GetRDFGraphSummary",
        "resource_mappings": {}
      }
    ],
    "get-sparql-statistics": [
      {
        "note": "NotFound",
        "action": "neptunedata:GetSparqlStatistics",
        "resource_mappings": {}
      }
    ],
    "get-sparql-stream": [
      {
        "note": "NotFound",
        "action": "neptunedata:GetSparqlStream",
        "resource_mappings": {}
      }
    ],
    "list-gremlin-queries": [
      {
        "note": "NotFound",
        "action": "neptunedata:ListGremlinQueries",
        "resource_mappings": {}
      }
    ],
    "list-loader-jobs": [
      {
        "note": "NotFound",
        "action": "neptunedata:ListLoaderJobs",
        "resource_mappings": {}
      }
    ],
    "list-ml-data-processing-jobs": [
      {
        "note": "NotFound",
        "action": "neptunedata:ListMLDataProcessingJobs",
        "resource_mappings": {}
      }
    ],
    "list-ml-endpoints": [
      {
        "note": "NotFound",
        "action": "neptunedata:ListMLEndpoints",
        "resource_mappings": {}
      }
    ],
    "list-ml-model-training-jobs": [
      {
        "note": "NotFound",
        "action": "neptunedata:ListMLModelTrainingJobs",
        "resource_mappings": {}
      }
    ],
    "list-ml-model-transform-jobs": [
      {
        "note": "NotFound",
        "action": "neptunedata:ListMLModelTransformJobs",
        "resource_mappings": {}
      }
    ],
    "list-open-cypher-queries": [
      {
        "note": "NotFound",
        "action": "neptunedata:ListOpenCypherQueries",
        "resource_mappings": {}
      }
    ],
    "manage-propertygraph-statistics": [
      {
        "note": "NotFound",
        "action": "neptunedata:ManagePropertygraphStatistics",
        "resource_mappings": {}
      }
    ],
    "manage-sparql-statistics": [
      {
        "note": "NotFound",
        "action": "neptunedata:ManageSparqlStatistics",
        "resource_mappings": {}
      }
    ],
    "start-loader-job": [
      {
        "note": "NotFound",
        "action": "neptunedata:StartLoaderJob",
        "resource_mappings": {}
      }
    ],
    "start-ml-data-processing-job": [
      {
        "note": "NotFound",
        "action": "neptunedata:StartMLDataProcessingJob",
        "resource_mappings": {}
      }
    ],
    "start-ml-model-training-job": [
      {
        "note": "NotFound",
        "action": "neptunedata:StartMLModelTrainingJob",
        "resource_mappings": {}
      }
    ],
    "start-ml-model-transform-job": [
      {
        "note": "NotFound",
        "action": "neptunedata:StartMLModelTransformJob",
        "resource_mappings": {}
      }
    ]
  },
  "network-firewall": {
    "associate-firewall-policy": [
      {
        "action": "network-firewall:AssociateFirewallPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Firewall": "${FirewallArn}",
          "FirewallPolicy": "${FirewallPolicyArn}"
        }
      }
    ],
    "associate-subnets": [
      {
        "action": "network-firewall:AssociateSubnets",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Firewall": "${FirewallArn}"
        }
      }
    ],
    "create-firewall": [
      {
        "action": "network-firewall:CreateFirewall",
        "resource_mappings": {
          "Name": {
            "template": "${FirewallName}"
          }
        },
        "resourcearn_mappings": {
          "FirewallPolicy": "${FirewallPolicyArn}"
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "create-firewall-policy": [
      {
        "action": "network-firewall:CreateFirewallPolicy",
        "resource_mappings": {
          "Name": {
            "template": "${FirewallPolicyName}"
          }
        },
        "resourcearn_mappings": {
          "StatefulRuleGroup": "${FirewallPolicy.StatefulRuleGroupReferences[].ResourceArn}",
          "StatelessRuleGroup": "${FirewallPolicy.StatelessRuleGroupReferences[].ResourceArn}"
        }
      }
    ],
    "create-rule-group": [
      {
        "action": "network-firewall:CreateRuleGroup",
        "resource_mappings": {
          "Name": {
            "template": "*"
          }
        }
      }
    ],
    "create-tls-inspection-configuration": [
      {
        "action": "network-firewall:CreateTLSInspectionConfiguration",
        "resource_mappings": {
          "Name": {
            "template": "${TLSInspectionConfigurationName}"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "delete-firewall": [
      {
        "action": "network-firewall:DeleteFirewall",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Firewall": "${FirewallArn}"
        }
      }
    ],
    "delete-firewall-policy": [
      {
        "action": "network-firewall:DeleteFirewallPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "FirewallPolicy": "${FirewallPolicyArn}"
        }
      }
    ],
    "delete-resource-policy": [
      {
        "action": "network-firewall:DeleteResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "FirewallPolicy": "%%iftemplatematch%${ResourceArn}%%",
          "StatefulRuleGroup": "%%iftemplatematch%${ResourceArn}%%",
          "StatelessRuleGroup": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "delete-rule-group": [
      {
        "action": "network-firewall:DeleteRuleGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "StatefulRuleGroup": "%%iftemplatematch%${RuleGroupArn}%%",
          "StatelessRuleGroup": "%%iftemplatematch%${RuleGroupArn}%%"
        }
      }
    ],
    "delete-tls-inspection-configuration": [
      {
        "action": "network-firewall:DeleteTLSInspectionConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "TLSInspectionConfiguration": "${TLSInspectionConfigurationArn}"
        }
      }
    ],
    "describe-firewall": [
      {
        "action": "network-firewall:DescribeFirewall",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Firewall": "${FirewallArn}"
        }
      }
    ],
    "describe-firewall-policy": [
      {
        "action": "network-firewall:DescribeFirewallPolicy",
        "resource_mappings": {
          "Name": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "FirewallPolicy": "${FirewallPolicyArn}"
        }
      }
    ],
    "describe-logging-configuration": [
      {
        "action": "network-firewall:DescribeLoggingConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Firewall": "${FirewallArn}"
        }
      }
    ],
    "describe-resource-policy": [
      {
        "action": "network-firewall:DescribeResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "FirewallPolicy": "%%iftemplatematch%${ResourceArn}%%",
          "StatefulRuleGroup": "%%iftemplatematch%${ResourceArn}%%",
          "StatelessRuleGroup": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "describe-rule-group": [
      {
        "action": "network-firewall:DescribeRuleGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "StatefulRuleGroup": "%%iftemplatematch%${RuleGroupArn}%%",
          "StatelessRuleGroup": "%%iftemplatematch%${RuleGroupArn}%%"
        }
      }
    ],
    "describe-rule-group-metadata": [
      {
        "action": "network-firewall:DescribeRuleGroupMetadata",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "StatefulRuleGroup": "%%iftemplatematch%${RuleGroupArn}%%",
          "StatelessRuleGroup": "%%iftemplatematch%${RuleGroupArn}%%"
        }
      }
    ],
    "describe-tls-inspection-configuration": [
      {
        "action": "network-firewall:DescribeTLSInspectionConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "TLSInspectionConfiguration": "${TLSInspectionConfigurationArn}"
        }
      }
    ],
    "disassociate-subnets": [
      {
        "action": "network-firewall:DisassociateSubnets",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Firewall": "${FirewallArn}"
        }
      }
    ],
    "list-firewall-policies": [
      {
        "action": "network-firewall:ListFirewallPolicies",
        "resource_mappings": {
          "Name": {
            "template": "*"
          }
        }
      }
    ],
    "list-firewalls": [
      {
        "action": "network-firewall:ListFirewalls",
        "resource_mappings": {
          "Name": {
            "template": "*"
          }
        }
      }
    ],
    "list-rule-groups": [
      {
        "action": "network-firewall:ListRuleGroups",
        "resource_mappings": {}
      }
    ],
    "list-tls-inspection-configurations": [
      {
        "action": "network-firewall:ListTLSInspectionConfigurations",
        "resource_mappings": {
          "Name": {
            "template": "*"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "network-firewall:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Firewall": "%%iftemplatematch%${ResourceArn}%%",
          "FirewallPolicy": "%%iftemplatematch%${ResourceArn}%%",
          "StatefulRuleGroup": "%%iftemplatematch%${ResourceArn}%%",
          "StatelessRuleGroup": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "put-resource-policy": [
      {
        "action": "network-firewall:PutResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "FirewallPolicy": "%%iftemplatematch%${ResourceArn}%%",
          "StatefulRuleGroup": "%%iftemplatematch%${ResourceArn}%%",
          "StatelessRuleGroup": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "network-firewall:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Firewall": "%%iftemplatematch%${ResourceArn}%%",
          "FirewallPolicy": "%%iftemplatematch%${ResourceArn}%%",
          "StatefulRuleGroup": "%%iftemplatematch%${ResourceArn}%%",
          "StatelessRuleGroup": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "network-firewall:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Firewall": "%%iftemplatematch%${ResourceArn}%%",
          "FirewallPolicy": "%%iftemplatematch%${ResourceArn}%%",
          "StatefulRuleGroup": "%%iftemplatematch%${ResourceArn}%%",
          "StatelessRuleGroup": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-firewall-delete-protection": [
      {
        "action": "network-firewall:UpdateFirewallDeleteProtection",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Firewall": "${FirewallArn}"
        }
      }
    ],
    "update-firewall-description": [
      {
        "action": "network-firewall:UpdateFirewallDescription",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Firewall": "${FirewallArn}"
        }
      }
    ],
    "update-firewall-encryption-configuration": [
      {
        "action": "network-firewall:UpdateFirewallEncryptionConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Firewall": "${FirewallArn}"
        }
      }
    ],
    "update-firewall-policy": [
      {
        "action": "network-firewall:UpdateFirewallPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "FirewallPolicy": "${FirewallPolicyArn}",
          "StatefulRuleGroup": "${FirewallPolicy.StatefulRuleGroupReferences[].ResourceArn}",
          "StatelessRuleGroup": "${FirewallPolicy.StatelessRuleGroupReferences[].ResourceArn}"
        }
      }
    ],
    "update-firewall-policy-change-protection": [
      {
        "action": "network-firewall:UpdateFirewallPolicyChangeProtection",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Firewall": "${FirewallArn}"
        }
      }
    ],
    "update-logging-configuration": [
      {
        "action": "network-firewall:UpdateLoggingConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Firewall": "${FirewallArn}"
        }
      }
    ],
    "update-rule-group": [
      {
        "action": "network-firewall:UpdateRuleGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "StatefulRuleGroup": "%%iftemplatematch%${RuleGroupArn}%%",
          "StatelessRuleGroup": "%%iftemplatematch%${RuleGroupArn}%%"
        }
      }
    ],
    "update-subnet-change-protection": [
      {
        "action": "network-firewall:UpdateSubnetChangeProtection",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Firewall": "${FirewallArn}"
        }
      }
    ],
    "update-tls-inspection-configuration": [
      {
        "action": "network-firewall:UpdateTLSInspectionConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "TLSInspectionConfiguration": "${TLSInspectionConfigurationArn}"
        }
      }
    ]
  },
  "networkmanager": {
    "accept-attachment": [
      {
        "action": "networkmanager:AcceptAttachment",
        "resource_mappings": {
          "ResourceId": {
            "template": "${AttachmentId}"
          }
        }
      }
    ],
    "associate-connect-peer": [
      {
        "action": "networkmanager:AssociateConnectPeer",
        "resource_mappings": {
          "GlobalNetworkId": {
            "template": "${GlobalNetworkId}"
          },
          "ResourceId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "associate-customer-gateway": [
      {
        "action": "networkmanager:AssociateCustomerGateway",
        "resource_mappings": {
          "GlobalNetworkId": {
            "template": "${GlobalNetworkId}"
          },
          "ResourceId": {
            "template": "${LinkId}"
          }
        }
      }
    ],
    "associate-link": [
      {
        "action": "networkmanager:AssociateLink",
        "resource_mappings": {
          "GlobalNetworkId": {
            "template": "${GlobalNetworkId}"
          },
          "ResourceId": {
            "template": "${LinkId}"
          }
        }
      }
    ],
    "associate-transit-gateway-connect-peer": [
      {
        "action": "networkmanager:AssociateTransitGatewayConnectPeer",
        "resource_mappings": {
          "GlobalNetworkId": {
            "template": "${GlobalNetworkId}"
          },
          "ResourceId": {
            "template": "${LinkId}"
          }
        }
      }
    ],
    "create-connect-attachment": [
      {
        "action": "networkmanager:CreateConnectAttachment",
        "resource_mappings": {
          "ResourceId": {
            "template": "${CoreNetworkId}"
          }
        }
      }
    ],
    "create-connect-peer": [
      {
        "action": "networkmanager:CreateConnectPeer",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ConnectAttachmentId}"
          }
        }
      }
    ],
    "create-connection": [
      {
        "action": "networkmanager:CreateConnection",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "create-core-network": [
      {
        "action": "networkmanager:CreateCoreNetwork",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "create-device": [
      {
        "action": "networkmanager:CreateDevice",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "create-global-network": [
      {
        "action": "networkmanager:CreateGlobalNetwork",
        "resource_mappings": {}
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "create-link": [
      {
        "action": "networkmanager:CreateLink",
        "resource_mappings": {
          "ResourceId": {
            "template": "${SiteId}"
          },
          "GlobalNetworkId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "create-site": [
      {
        "action": "networkmanager:CreateSite",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "create-site-to-site-vpn-attachment": [
      {
        "action": "networkmanager:CreateSiteToSiteVpnAttachment",
        "resource_mappings": {
          "ResourceId": {
            "template": "${CoreNetworkId}"
          }
        }
      }
    ],
    "create-transit-gateway-peering": [
      {
        "action": "networkmanager:CreateTransitGatewayPeering",
        "resource_mappings": {
          "ResourceId": {
            "template": "${CoreNetworkId}"
          }
        }
      }
    ],
    "create-transit-gateway-route-table-attachment": [
      {
        "action": "networkmanager:CreateTransitGatewayRouteTableAttachment",
        "resource_mappings": {
          "ResourceId": {
            "template": "${PeeringId}"
          }
        }
      }
    ],
    "create-vpc-attachment": [
      {
        "action": "networkmanager:CreateVpcAttachment",
        "resource_mappings": {
          "ResourceId": {
            "template": "${CoreNetworkId}"
          }
        }
      }
    ],
    "delete-attachment": [
      {
        "action": "networkmanager:DeleteAttachment",
        "resource_mappings": {
          "ResourceId": {
            "template": "${AttachmentId}"
          }
        }
      }
    ],
    "delete-connect-peer": [
      {
        "action": "networkmanager:DeleteConnectPeer",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ConnectPeerId}"
          }
        }
      }
    ],
    "delete-connection": [
      {
        "action": "networkmanager:DeleteConnection",
        "resource_mappings": {
          "GlobalNetworkId": {
            "template": "${GlobalNetworkId}"
          },
          "ResourceId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "delete-core-network": [
      {
        "action": "networkmanager:DeleteCoreNetwork",
        "resource_mappings": {
          "ResourceId": {
            "template": "${CoreNetworkId}"
          }
        }
      }
    ],
    "delete-core-network-policy-version": [
      {
        "action": "networkmanager:DeleteCoreNetworkPolicyVersion",
        "resource_mappings": {
          "ResourceId": {
            "template": "${CoreNetworkId}"
          }
        }
      }
    ],
    "delete-device": [
      {
        "action": "networkmanager:DeleteDevice",
        "resource_mappings": {
          "GlobalNetworkId": {
            "template": "${GlobalNetworkId}"
          },
          "ResourceId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "delete-global-network": [
      {
        "action": "networkmanager:DeleteGlobalNetwork",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "delete-link": [
      {
        "action": "networkmanager:DeleteLink",
        "resource_mappings": {
          "ResourceId": {
            "template": "${LinkId}"
          },
          "GlobalNetworkId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "delete-peering": [
      {
        "action": "networkmanager:DeletePeering",
        "resource_mappings": {
          "ResourceId": {
            "template": "${PeeringId}"
          }
        }
      }
    ],
    "delete-resource-policy": [
      {
        "action": "networkmanager:DeleteResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "core-network": "${ResourceArn}"
        }
      }
    ],
    "delete-site": [
      {
        "action": "networkmanager:DeleteSite",
        "resource_mappings": {
          "ResourceId": {
            "template": "${SiteId}"
          },
          "GlobalNetworkId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "deregister-transit-gateway": [
      {
        "action": "networkmanager:DeregisterTransitGateway",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "describe-global-networks": [
      {
        "action": "networkmanager:DescribeGlobalNetworks",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GlobalNetworkIds[]}"
          }
        }
      }
    ],
    "disassociate-connect-peer": [
      {
        "action": "networkmanager:DisassociateConnectPeer",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "disassociate-customer-gateway": [
      {
        "action": "networkmanager:DisassociateCustomerGateway",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "disassociate-link": [
      {
        "action": "networkmanager:DisassociateLink",
        "resource_mappings": {
          "GlobalNetworkId": {
            "template": "${GlobalNetworkId}"
          },
          "ResourceId": {
            "template": "${LinkId}"
          }
        }
      }
    ],
    "disassociate-transit-gateway-connect-peer": [
      {
        "action": "networkmanager:DisassociateTransitGatewayConnectPeer",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "execute-core-network-change-set": [
      {
        "action": "networkmanager:ExecuteCoreNetworkChangeSet",
        "resource_mappings": {
          "ResourceId": {
            "template": "${CoreNetworkId}"
          }
        }
      }
    ],
    "get-connect-attachment": [
      {
        "action": "networkmanager:GetConnectAttachment",
        "resource_mappings": {
          "ResourceId": {
            "template": "${AttachmentId}"
          }
        }
      }
    ],
    "get-connect-peer": [
      {
        "action": "networkmanager:GetConnectPeer",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ConnectPeerId}"
          }
        }
      }
    ],
    "get-connect-peer-associations": [
      {
        "action": "networkmanager:GetConnectPeerAssociations",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "get-connections": [
      {
        "action": "networkmanager:GetConnections",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ConnectionIds[]}"
          },
          "GlobalNetworkId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "get-core-network": [
      {
        "action": "networkmanager:GetCoreNetwork",
        "resource_mappings": {
          "ResourceId": {
            "template": "${CoreNetworkId}"
          }
        }
      }
    ],
    "get-core-network-change-events": [
      {
        "action": "networkmanager:GetCoreNetworkChangeEvents",
        "resource_mappings": {
          "ResourceId": {
            "template": "${CoreNetworkId}"
          }
        }
      }
    ],
    "get-core-network-change-set": [
      {
        "action": "networkmanager:GetCoreNetworkChangeSet",
        "resource_mappings": {
          "ResourceId": {
            "template": "${CoreNetworkId}"
          }
        }
      }
    ],
    "get-core-network-policy": [
      {
        "action": "networkmanager:GetCoreNetworkPolicy",
        "resource_mappings": {
          "ResourceId": {
            "template": "${CoreNetworkId}"
          }
        }
      }
    ],
    "get-customer-gateway-associations": [
      {
        "action": "networkmanager:GetCustomerGatewayAssociations",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "get-devices": [
      {
        "action": "networkmanager:GetDevices",
        "resource_mappings": {
          "ResourceId": {
            "template": "${DeviceIds[]}"
          },
          "GlobalNetworkId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "get-link-associations": [
      {
        "action": "networkmanager:GetLinkAssociations",
        "resource_mappings": {
          "ResourceId": {
            "template": "${LinkId}"
          },
          "GlobalNetworkId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "get-links": [
      {
        "action": "networkmanager:GetLinks",
        "resource_mappings": {
          "ResourceId": {
            "template": "${LinkIds[]}"
          },
          "GlobalNetworkId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "get-network-resource-counts": [
      {
        "action": "networkmanager:GetNetworkResourceCounts",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "get-network-resource-relationships": [
      {
        "action": "networkmanager:GetNetworkResourceRelationships",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "get-network-resources": [
      {
        "action": "networkmanager:GetNetworkResources",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "get-network-routes": [
      {
        "action": "networkmanager:GetNetworkRoutes",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "get-network-telemetry": [
      {
        "action": "networkmanager:GetNetworkTelemetry",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "get-resource-policy": [
      {
        "action": "networkmanager:GetResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "core-network": "${ResourceArn}"
        }
      }
    ],
    "get-route-analysis": [
      {
        "action": "networkmanager:GetRouteAnalysis",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "get-site-to-site-vpn-attachment": [
      {
        "action": "networkmanager:GetSiteToSiteVpnAttachment",
        "resource_mappings": {
          "ResourceId": {
            "template": "${AttachmentId}"
          }
        }
      }
    ],
    "get-sites": [
      {
        "action": "networkmanager:GetSites",
        "resource_mappings": {
          "ResourceId": {
            "template": "${SiteIds[]}"
          },
          "GlobalNetworkId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "get-transit-gateway-connect-peer-associations": [
      {
        "action": "networkmanager:GetTransitGatewayConnectPeerAssociations",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "get-transit-gateway-peering": [
      {
        "action": "networkmanager:GetTransitGatewayPeering",
        "resource_mappings": {
          "ResourceId": {
            "template": "${PeeringId}"
          }
        }
      }
    ],
    "get-transit-gateway-registrations": [
      {
        "action": "networkmanager:GetTransitGatewayRegistrations",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "get-transit-gateway-route-table-attachment": [
      {
        "action": "networkmanager:GetTransitGatewayRouteTableAttachment",
        "resource_mappings": {
          "ResourceId": {
            "template": "${AttachmentId}"
          }
        }
      }
    ],
    "get-vpc-attachment": [
      {
        "action": "networkmanager:GetVpcAttachment",
        "resource_mappings": {
          "ResourceId": {
            "template": "${AttachmentId}"
          }
        }
      }
    ],
    "list-attachments": [
      {
        "action": "networkmanager:ListAttachments",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-connect-peers": [
      {
        "action": "networkmanager:ListConnectPeers",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-core-network-policy-versions": [
      {
        "action": "networkmanager:ListCoreNetworkPolicyVersions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${CoreNetworkId}"
          }
        }
      }
    ],
    "list-core-networks": [
      {
        "action": "networkmanager:ListCoreNetworks",
        "resource_mappings": {}
      }
    ],
    "list-organization-service-access-status": [
      {
        "action": "networkmanager:ListOrganizationServiceAccessStatus",
        "resource_mappings": {}
      }
    ],
    "list-peerings": [
      {
        "action": "networkmanager:ListPeerings",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "networkmanager:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "connection": "%%iftemplatematch%${ResourceArn}%%",
          "device": "%%iftemplatematch%${ResourceArn}%%",
          "global-network": "%%iftemplatematch%${ResourceArn}%%",
          "link": "%%iftemplatematch%${ResourceArn}%%",
          "site": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "put-core-network-policy": [
      {
        "action": "networkmanager:PutCoreNetworkPolicy",
        "resource_mappings": {
          "ResourceId": {
            "template": "${CoreNetworkId}"
          }
        }
      }
    ],
    "put-resource-policy": [
      {
        "action": "networkmanager:PutResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "core-network": "${ResourceArn}"
        }
      }
    ],
    "register-transit-gateway": [
      {
        "action": "networkmanager:RegisterTransitGateway",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "reject-attachment": [
      {
        "action": "networkmanager:RejectAttachment",
        "resource_mappings": {
          "ResourceId": {
            "template": "${AttachmentId}"
          }
        }
      }
    ],
    "restore-core-network-policy-version": [
      {
        "action": "networkmanager:RestoreCoreNetworkPolicyVersion",
        "resource_mappings": {
          "ResourceId": {
            "template": "${CoreNetworkId}"
          }
        }
      }
    ],
    "start-organization-service-access-update": [
      {
        "action": "networkmanager:StartOrganizationServiceAccessUpdate",
        "resource_mappings": {}
      }
    ],
    "start-route-analysis": [
      {
        "action": "networkmanager:StartRouteAnalysis",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "networkmanager:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "connection": "%%iftemplatematch%${ResourceArn}%%",
          "device": "%%iftemplatematch%${ResourceArn}%%",
          "global-network": "%%iftemplatematch%${ResourceArn}%%",
          "link": "%%iftemplatematch%${ResourceArn}%%",
          "site": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "networkmanager:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "connection": "%%iftemplatematch%${ResourceArn}%%",
          "device": "%%iftemplatematch%${ResourceArn}%%",
          "global-network": "%%iftemplatematch%${ResourceArn}%%",
          "link": "%%iftemplatematch%${ResourceArn}%%",
          "site": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-connection": [
      {
        "action": "networkmanager:UpdateConnection",
        "resource_mappings": {
          "GlobalNetworkId": {
            "template": "${GlobalNetworkId}"
          },
          "ResourceId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "update-core-network": [
      {
        "action": "networkmanager:UpdateCoreNetwork",
        "resource_mappings": {
          "ResourceId": {
            "template": "${CoreNetworkId}"
          }
        }
      }
    ],
    "update-device": [
      {
        "action": "networkmanager:UpdateDevice",
        "resource_mappings": {
          "GlobalNetworkId": {
            "template": "${GlobalNetworkId}"
          },
          "ResourceId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "update-global-network": [
      {
        "action": "networkmanager:UpdateGlobalNetwork",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "update-link": [
      {
        "action": "networkmanager:UpdateLink",
        "resource_mappings": {
          "ResourceId": {
            "template": "${LinkId}"
          },
          "GlobalNetworkId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "update-network-resource-metadata": [
      {
        "action": "networkmanager:UpdateNetworkResourceMetadata",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "update-site": [
      {
        "action": "networkmanager:UpdateSite",
        "resource_mappings": {
          "ResourceId": {
            "template": "${SiteId}"
          },
          "GlobalNetworkId": {
            "template": "${GlobalNetworkId}"
          }
        }
      }
    ],
    "update-vpc-attachment": [
      {
        "action": "networkmanager:UpdateVpcAttachment",
        "resource_mappings": {
          "ResourceId": {
            "template": "${AttachmentId}"
          }
        }
      }
    ]
  },
  "nimble": {
    "accept-eulas": [
      {
        "action": "nimble:AcceptEulas",
        "resource_mappings": {
          "eulaId": {
            "template": "${eulaIds}[]"
          }
        }
      }
    ],
    "create-launch-profile": [
      {
        "action": "nimble:CreateLaunchProfile",
        "resource_mappings": {
          "studioId": {
            "template": "${studioId}"
          }
        }
      },
      {
        "action": "ec2:CreateNetworkInterfacePermission",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:RunInstances",
        "resource_mappings": {
          "ImageId": {
            "template": "${streamConfiguration.streamingImageIds}[]"
          },
          "InstanceId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "${ec2SubnetIds}[]"
          },
          "VolumeId": {
            "template": "*"
          },
          "CapacityReservationId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "ElasticInferenceAcceleratorId": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          }
        }
      }
    ],
    "create-streaming-image": [
      {
        "action": "nimble:CreateStreamingImage",
        "resource_mappings": {
          "studioId": {
            "template": "${studioId}"
          }
        }
      },
      {
        "action": "ec2:DescribeImages",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSnapshots",
        "resource_mappings": {}
      },
      {
        "action": "ec2:ModifyInstanceAttribute",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:ModifySnapshotAttribute",
        "resource_mappings": {
          "SnapshotId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:RegisterImage",
        "resource_mappings": {}
      }
    ],
    "create-streaming-session": [
      {
        "action": "nimble:CreateStreamingSession",
        "resource_mappings": {
          "launchProfileId": {
            "template": "${launchProfileId}"
          }
        }
      },
      {
        "action": "ec2:CreateNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateNetworkInterfacePermission",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "nimble:GetLaunchProfile",
        "resource_mappings": {
          "launchProfileId": {
            "template": "${launchProfileId}"
          }
        }
      },
      {
        "action": "nimble:GetLaunchProfileInitialization",
        "resource_mappings": {
          "launchProfileId": {
            "template": "${launchProfileId}"
          }
        }
      },
      {
        "action": "nimble:ListEulaAcceptances",
        "resource_mappings": {
          "eulaAcceptanceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-streaming-session-stream": [
      {
        "action": "nimble:CreateStreamingSessionStream",
        "resource_mappings": {
          "streamingSessionId": {
            "template": "${sessionId}"
          }
        }
      }
    ],
    "create-studio": [
      {
        "action": "nimble:CreateStudio",
        "resource_mappings": {
          "studioId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "%%many%${adminRoleArn}%${userRoleArn}%%"
        }
      },
      {
        "action": "sso:CreateManagedApplicationInstance",
        "resource_mappings": {}
      }
    ],
    "create-studio-component": [
      {
        "action": "nimble:CreateStudioComponent",
        "resource_mappings": {
          "studioId": {
            "template": "${studioId}"
          }
        }
      },
      {
        "action": "ds:AuthorizeApplication",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${configuration.activeDirectoryConfiguration.directoryId}"
          }
        }
      },
      {
        "action": "ds:DescribeDirectories",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSecurityGroups",
        "resource_mappings": {}
      },
      {
        "action": "fsx:DescribeFileSystems",
        "resource_mappings": {}
      }
    ],
    "delete-launch-profile": [
      {
        "action": "nimble:DeleteLaunchProfile",
        "resource_mappings": {
          "launchProfileId": {
            "template": "${launchProfileId}"
          }
        }
      }
    ],
    "delete-launch-profile-member": [
      {
        "action": "nimble:DeleteLaunchProfileMember",
        "resource_mappings": {
          "launchProfileId": {
            "template": "${launchProfileId}"
          }
        }
      }
    ],
    "delete-streaming-image": [
      {
        "action": "nimble:DeleteStreamingImage",
        "resource_mappings": {
          "streamingImageId": {
            "template": "${streamingImageId}"
          }
        }
      },
      {
        "action": "ec2:DeleteSnapshot",
        "resource_mappings": {
          "SnapshotId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DeregisterImage",
        "resource_mappings": {
          "ImageId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:ModifyInstanceAttribute",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:ModifySnapshotAttribute",
        "resource_mappings": {
          "SnapshotId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-streaming-session": [
      {
        "action": "nimble:DeleteStreamingSession",
        "resource_mappings": {
          "streamingSessionId": {
            "template": "${sessionId}"
          }
        }
      },
      {
        "action": "ec2:DeleteNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-studio": [
      {
        "action": "nimble:DeleteStudio",
        "resource_mappings": {
          "studioId": {
            "template": "${studioId}"
          }
        }
      },
      {
        "action": "sso:DeleteManagedApplicationInstance",
        "resource_mappings": {}
      }
    ],
    "delete-studio-component": [
      {
        "action": "nimble:DeleteStudioComponent",
        "resource_mappings": {
          "studioComponentId": {
            "template": "${studioComponentId}"
          }
        }
      },
      {
        "action": "ds:UnauthorizeApplication",
        "resource_mappings": {
          "DirectoryId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-studio-member": [
      {
        "action": "nimble:DeleteStudioMember",
        "resource_mappings": {
          "studioId": {
            "template": "${studioId}"
          }
        }
      }
    ],
    "get-eula": [
      {
        "action": "nimble:GetEula",
        "resource_mappings": {
          "eulaId": {
            "template": "${eulaId}"
          }
        }
      }
    ],
    "get-launch-profile": [
      {
        "action": "nimble:GetLaunchProfile",
        "resource_mappings": {
          "launchProfileId": {
            "template": "${launchProfileId}"
          }
        }
      }
    ],
    "get-launch-profile-details": [
      {
        "action": "nimble:GetLaunchProfileDetails",
        "resource_mappings": {
          "launchProfileId": {
            "template": "${launchProfileId}"
          }
        }
      }
    ],
    "get-launch-profile-initialization": [
      {
        "action": "nimble:GetLaunchProfileInitialization",
        "resource_mappings": {
          "launchProfileId": {
            "template": "${launchProfileId}"
          }
        }
      },
      {
        "action": "ds:DescribeDirectories",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSecurityGroups",
        "resource_mappings": {}
      },
      {
        "action": "fsx:DescribeFileSystems",
        "resource_mappings": {}
      }
    ],
    "get-launch-profile-member": [
      {
        "action": "nimble:GetLaunchProfileMember",
        "resource_mappings": {
          "launchProfileId": {
            "template": "${launchProfileId}"
          }
        }
      }
    ],
    "get-streaming-image": [
      {
        "action": "nimble:GetStreamingImage",
        "resource_mappings": {
          "streamingImageId": {
            "template": "${streamingImageId}"
          }
        }
      }
    ],
    "get-streaming-session": [
      {
        "action": "nimble:GetStreamingSession",
        "resource_mappings": {
          "streamingSessionId": {
            "template": "${sessionId}"
          }
        }
      }
    ],
    "get-streaming-session-backup": [
      {
        "action": "nimble:GetStreamingSessionBackup",
        "resource_mappings": {
          "StreamingSessionBackupId": {
            "template": "${backupId}"
          }
        }
      }
    ],
    "get-streaming-session-stream": [
      {
        "action": "nimble:GetStreamingSessionStream",
        "resource_mappings": {
          "streamingSessionId": {
            "template": "${sessionId}"
          }
        }
      }
    ],
    "get-studio": [
      {
        "action": "nimble:GetStudio",
        "resource_mappings": {
          "studioId": {
            "template": "${studioId}"
          }
        }
      }
    ],
    "get-studio-component": [
      {
        "action": "nimble:GetStudioComponent",
        "resource_mappings": {
          "studioComponentId": {
            "template": "${studioComponentId}"
          }
        }
      }
    ],
    "get-studio-member": [
      {
        "action": "nimble:GetStudioMember",
        "resource_mappings": {
          "studioId": {
            "template": "${studioId}"
          }
        }
      }
    ],
    "list-eula-acceptances": [
      {
        "action": "nimble:ListEulaAcceptances",
        "resource_mappings": {
          "eulaAcceptanceId": {
            "template": "${eulaIds}[]"
          }
        }
      }
    ],
    "list-eulas": [
      {
        "action": "nimble:ListEulas",
        "resource_mappings": {
          "eulaId": {
            "template": "${eulaIds}[]"
          }
        }
      }
    ],
    "list-launch-profile-members": [
      {
        "action": "nimble:ListLaunchProfileMembers",
        "resource_mappings": {
          "launchProfileId": {
            "template": "${launchProfileId}"
          }
        }
      }
    ],
    "list-launch-profiles": [
      {
        "action": "nimble:ListLaunchProfiles",
        "resource_mappings": {
          "studioId": {
            "template": "${studioId}"
          }
        }
      }
    ],
    "list-streaming-images": [
      {
        "action": "nimble:ListStreamingImages",
        "resource_mappings": {
          "studioId": {
            "template": "${studioId}"
          }
        }
      }
    ],
    "list-streaming-session-backups": [
      {
        "action": "nimble:ListStreamingSessionBackups",
        "resource_mappings": {
          "StudioId": {
            "template": "${studioId}"
          }
        }
      }
    ],
    "list-streaming-sessions": [
      {
        "action": "nimble:ListStreamingSessions",
        "resource_mappings": {
          "studioId": {
            "template": "${studioId}"
          }
        }
      }
    ],
    "list-studio-components": [
      {
        "action": "nimble:ListStudioComponents",
        "resource_mappings": {
          "studioId": {
            "template": "${studioId}"
          }
        }
      }
    ],
    "list-studio-members": [
      {
        "action": "nimble:ListStudioMembers",
        "resource_mappings": {
          "studioId": {
            "template": "${studioId}"
          }
        }
      }
    ],
    "list-studios": [
      {
        "action": "nimble:ListStudios",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "nimble:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "launch-profile": "%%iftemplatematch%${resourceArn}%%",
          "streaming-image": "%%iftemplatematch%${resourceArn}%%",
          "streaming-session": "%%iftemplatematch%${resourceArn}%%",
          "studio": "%%iftemplatematch%${resourceArn}%%",
          "studio-component": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "put-launch-profile-members": [
      {
        "action": "nimble:PutLaunchProfileMembers",
        "resource_mappings": {
          "launchProfileId": {
            "template": "${launchProfileId}"
          }
        }
      },
      {
        "action": "sso-directory:DescribeUsers",
        "resource_mappings": {}
      }
    ],
    "put-studio-members": [
      {
        "action": "nimble:PutStudioMembers",
        "resource_mappings": {
          "studioId": {
            "template": "${studioId}"
          }
        }
      },
      {
        "action": "sso-directory:DescribeUsers",
        "resource_mappings": {}
      }
    ],
    "start-streaming-session": [
      {
        "action": "nimble:StartStreamingSession",
        "resource_mappings": {
          "StreamingSessionId": {
            "template": "${sessionId}"
          }
        }
      },
      {
        "action": "nimble:GetLaunchProfile",
        "resource_mappings": {
          "LaunchProfileId": {
            "template": "*"
          }
        }
      },
      {
        "action": "nimble:GetLaunchProfileMember",
        "resource_mappings": {
          "LaunchProfileId": {
            "template": "*"
          }
        }
      }
    ],
    "start-studio-sso-configuration-repair": [
      {
        "action": "nimble:StartStudioSSOConfigurationRepair",
        "resource_mappings": {
          "studioId": {
            "template": "${studioId}"
          }
        }
      },
      {
        "action": "sso:CreateManagedApplicationInstance",
        "resource_mappings": {}
      },
      {
        "action": "sso:GetManagedApplicationInstance",
        "resource_mappings": {}
      }
    ],
    "stop-streaming-session": [
      {
        "action": "nimble:StopStreamingSession",
        "resource_mappings": {
          "StreamingSessionId": {
            "template": "${sessionId}"
          }
        }
      },
      {
        "action": "nimble:GetLaunchProfile",
        "resource_mappings": {
          "LaunchProfileId": {
            "template": "*"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "nimble:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "launch-profile": "%%iftemplatematch%${resourceArn}%%",
          "streaming-image": "%%iftemplatematch%${resourceArn}%%",
          "streaming-session": "%%iftemplatematch%${resourceArn}%%",
          "studio": "%%iftemplatematch%${resourceArn}%%",
          "studio-component": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "nimble:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "launch-profile": "%%iftemplatematch%${resourceArn}%%",
          "streaming-image": "%%iftemplatematch%${resourceArn}%%",
          "streaming-session": "%%iftemplatematch%${resourceArn}%%",
          "studio": "%%iftemplatematch%${resourceArn}%%",
          "studio-component": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-launch-profile": [
      {
        "action": "nimble:UpdateLaunchProfile",
        "resource_mappings": {
          "launchProfileId": {
            "template": "${launchProfileId}"
          }
        }
      }
    ],
    "update-launch-profile-member": [
      {
        "action": "nimble:UpdateLaunchProfileMember",
        "resource_mappings": {
          "launchProfileId": {
            "template": "${launchProfileId}"
          }
        }
      }
    ],
    "update-streaming-image": [
      {
        "action": "nimble:UpdateStreamingImage",
        "resource_mappings": {
          "streamingImageId": {
            "template": "${streamingImageId}"
          }
        }
      }
    ],
    "update-studio": [
      {
        "action": "nimble:UpdateStudio",
        "resource_mappings": {
          "studioId": {
            "template": "${studioId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "%%many%${adminRoleArn}%${userRoleArn}%%"
        }
      }
    ],
    "update-studio-component": [
      {
        "action": "nimble:UpdateStudioComponent",
        "resource_mappings": {
          "studioComponentId": {
            "template": "${studioComponentId}"
          }
        }
      },
      {
        "action": "ds:AuthorizeApplication",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${configuration.activeDirectoryConfiguration.directoryId}"
          }
        }
      },
      {
        "action": "ds:DescribeDirectories",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeSecurityGroups",
        "resource_mappings": {}
      },
      {
        "action": "fsx:DescribeFileSystems",
        "resource_mappings": {}
      }
    ],
    "wait": [
      {
        "action": "nimble:GetLaunchProfile",
        "resource_mappings": {
          "launchProfileId": {
            "template": "${launchProfileId}"
          }
        }
      }
    ]
  },
  "oam": {
    "create-link": [
      {
        "action": "oam:CreateLink",
        "resource_mappings": {
          "ResourceId": {
            "template": "${SinkIdentifier}"
          }
        }
      },
      {
        "action": "oam:TagResource",
        "resource_mappings": {
          "ResourceId": {
            "template": "${SinkIdentifier}"
          }
        }
      }
    ],
    "create-sink": [
      {
        "action": "oam:CreateSink",
        "resource_mappings": {}
      },
      {
        "action": "oam:TagResource",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-link": [
      {
        "action": "oam:DeleteLink",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Identifier}"
          }
        }
      }
    ],
    "delete-sink": [
      {
        "action": "oam:DeleteSink",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Identifier}"
          }
        }
      }
    ],
    "get-link": [
      {
        "action": "oam:GetLink",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Identifier}"
          }
        }
      }
    ],
    "get-sink": [
      {
        "action": "oam:GetSink",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Identifier}"
          }
        }
      }
    ],
    "get-sink-policy": [
      {
        "action": "oam:GetSinkPolicy",
        "resource_mappings": {
          "ResourceId": {
            "template": "${SinkIdentifier}"
          }
        }
      }
    ],
    "list-attached-links": [
      {
        "action": "oam:ListAttachedLinks",
        "resource_mappings": {
          "ResourceId": {
            "template": "${SinkIdentifier}"
          }
        }
      }
    ],
    "list-links": [
      {
        "action": "oam:ListLinks",
        "resource_mappings": {}
      }
    ],
    "list-sinks": [
      {
        "action": "oam:ListSinks",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "oam:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Link": "%%iftemplatematch%${ResourceArn}%%",
          "Sink": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "put-sink-policy": [
      {
        "action": "oam:PutSinkPolicy",
        "resource_mappings": {
          "ResourceId": {
            "template": "${SinkIdentifier}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "oam:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Link": "%%iftemplatematch%${ResourceArn}%%",
          "Sink": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "oam:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Link": "%%iftemplatematch%${ResourceArn}%%",
          "Sink": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-link": [
      {
        "action": "oam:UpdateLink",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Identifier}"
          }
        }
      }
    ]
  },
  "omics": {
    "abort-multipart-read-set-upload": [
      {
        "action": "omics:AbortMultipartReadSetUpload",
        "resource_mappings": {
          "SequenceStoreId": {
            "template": "${sequenceStoreId}"
          }
        }
      }
    ],
    "accept-share": [
      {
        "action": "omics:AcceptShare",
        "resource_mappings": {}
      }
    ],
    "batch-delete-read-set": [
      {
        "action": "omics:BatchDeleteReadSet",
        "resource_mappings": {
          "SequenceStoreId": {
            "template": "${sequenceStoreId}"
          }
        }
      }
    ],
    "cancel-annotation-import-job": [
      {
        "action": "omics:CancelAnnotationImportJob",
        "resource_mappings": {
          "AnnotationImportJobId": {
            "template": "${jobId}"
          }
        }
      }
    ],
    "cancel-run": [
      {
        "action": "omics:CancelRun",
        "resource_mappings": {
          "Id": {
            "template": "${id}"
          }
        }
      }
    ],
    "cancel-variant-import-job": [
      {
        "action": "omics:CancelVariantImportJob",
        "resource_mappings": {
          "VariantImportJobId": {
            "template": "${jobId}"
          }
        }
      }
    ],
    "complete-multipart-read-set-upload": [
      {
        "action": "omics:CompleteMultipartReadSetUpload",
        "resource_mappings": {
          "SequenceStoreId": {
            "template": "${sequenceStoreId}"
          }
        }
      }
    ],
    "create-annotation-store": [
      {
        "action": "omics:CreateAnnotationStore",
        "resource_mappings": {}
      }
    ],
    "create-annotation-store-version": [
      {
        "note": "NotFound",
        "action": "Omics:CreateAnnotationStoreVersion",
        "resource_mappings": {}
      }
    ],
    "create-multipart-read-set-upload": [
      {
        "action": "omics:CreateMultipartReadSetUpload",
        "resource_mappings": {
          "SequenceStoreId": {
            "template": "${sequenceStoreId}"
          }
        }
      }
    ],
    "create-reference-store": [
      {
        "action": "omics:CreateReferenceStore",
        "resource_mappings": {}
      }
    ],
    "create-run-group": [
      {
        "action": "omics:CreateRunGroup",
        "resource_mappings": {}
      }
    ],
    "create-sequence-store": [
      {
        "action": "omics:CreateSequenceStore",
        "resource_mappings": {}
      }
    ],
    "create-share": [
      {
        "action": "omics:CreateShare",
        "resource_mappings": {}
      }
    ],
    "create-variant-store": [
      {
        "action": "omics:CreateVariantStore",
        "resource_mappings": {}
      }
    ],
    "create-workflow": [
      {
        "action": "omics:CreateWorkflow",
        "resource_mappings": {}
      }
    ],
    "delete-annotation-store": [
      {
        "action": "omics:DeleteAnnotationStore",
        "resource_mappings": {
          "AnnotationStoreId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-annotation-store-versions": [
      {
        "note": "NotFound",
        "action": "Omics:DeleteAnnotationStoreVersions",
        "resource_mappings": {}
      }
    ],
    "delete-reference": [
      {
        "action": "omics:DeleteReference",
        "resource_mappings": {
          "ReferenceStoreId": {
            "template": "${referenceStoreId}"
          },
          "ReferenceId": {
            "template": "${id}"
          }
        }
      }
    ],
    "delete-reference-store": [
      {
        "action": "omics:DeleteReferenceStore",
        "resource_mappings": {
          "ReferenceStoreId": {
            "template": "${id}"
          }
        }
      }
    ],
    "delete-run": [
      {
        "action": "omics:DeleteRun",
        "resource_mappings": {
          "Id": {
            "template": "${id}"
          }
        }
      }
    ],
    "delete-run-group": [
      {
        "action": "omics:DeleteRunGroup",
        "resource_mappings": {
          "Id": {
            "template": "${id}"
          }
        }
      }
    ],
    "delete-sequence-store": [
      {
        "action": "omics:DeleteSequenceStore",
        "resource_mappings": {
          "SequenceStoreId": {
            "template": "${id}"
          }
        }
      }
    ],
    "delete-share": [
      {
        "action": "omics:DeleteShare",
        "resource_mappings": {}
      }
    ],
    "delete-variant-store": [
      {
        "action": "omics:DeleteVariantStore",
        "resource_mappings": {
          "VariantStoreId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-workflow": [
      {
        "action": "omics:DeleteWorkflow",
        "resource_mappings": {
          "Id": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-annotation-import-job": [
      {
        "action": "omics:GetAnnotationImportJob",
        "resource_mappings": {
          "AnnotationImportJobId": {
            "template": "${jobId}"
          }
        }
      }
    ],
    "get-annotation-store": [
      {
        "action": "omics:GetAnnotationStore",
        "resource_mappings": {
          "AnnotationStoreId": {
            "template": "*"
          }
        }
      }
    ],
    "get-annotation-store-version": [
      {
        "note": "NotFound",
        "action": "Omics:GetAnnotationStoreVersion",
        "resource_mappings": {}
      }
    ],
    "get-read-set": [
      {
        "action": "omics:GetReadSet",
        "resource_mappings": {
          "SequenceStoreId": {
            "template": "${sequenceStoreId}"
          },
          "ReadSetId": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-read-set-activation-job": [
      {
        "action": "omics:GetReadSetActivationJob",
        "resource_mappings": {
          "SequenceStoreId": {
            "template": "${sequenceStoreId}"
          }
        }
      }
    ],
    "get-read-set-export-job": [
      {
        "action": "omics:GetReadSetExportJob",
        "resource_mappings": {
          "SequenceStoreId": {
            "template": "${sequenceStoreId}"
          }
        }
      }
    ],
    "get-read-set-import-job": [
      {
        "action": "omics:GetReadSetImportJob",
        "resource_mappings": {
          "SequenceStoreId": {
            "template": "${sequenceStoreId}"
          }
        }
      }
    ],
    "get-read-set-metadata": [
      {
        "action": "omics:GetReadSetMetadata",
        "resource_mappings": {
          "SequenceStoreId": {
            "template": "${sequenceStoreId}"
          },
          "ReadSetId": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-reference": [
      {
        "action": "omics:GetReference",
        "resource_mappings": {
          "ReferenceStoreId": {
            "template": "${referenceStoreId}"
          },
          "ReferenceId": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-reference-import-job": [
      {
        "action": "omics:GetReferenceImportJob",
        "resource_mappings": {
          "ReferenceStoreId": {
            "template": "${referenceStoreId}"
          }
        }
      }
    ],
    "get-reference-metadata": [
      {
        "action": "omics:GetReferenceMetadata",
        "resource_mappings": {
          "ReferenceStoreId": {
            "template": "${referenceStoreId}"
          },
          "ReferenceId": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-reference-store": [
      {
        "action": "omics:GetReferenceStore",
        "resource_mappings": {
          "ReferenceStoreId": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-run": [
      {
        "action": "omics:GetRun",
        "resource_mappings": {
          "Id": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-run-group": [
      {
        "action": "omics:GetRunGroup",
        "resource_mappings": {
          "Id": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-run-task": [
      {
        "action": "omics:GetRunTask",
        "resource_mappings": {
          "Id": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-sequence-store": [
      {
        "action": "omics:GetSequenceStore",
        "resource_mappings": {
          "SequenceStoreId": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-share": [
      {
        "action": "omics:GetShare",
        "resource_mappings": {}
      }
    ],
    "get-variant-import-job": [
      {
        "action": "omics:GetVariantImportJob",
        "resource_mappings": {
          "VariantImportJobId": {
            "template": "${jobId}"
          }
        }
      }
    ],
    "get-variant-store": [
      {
        "action": "omics:GetVariantStore",
        "resource_mappings": {
          "VariantStoreId": {
            "template": "*"
          }
        }
      }
    ],
    "get-workflow": [
      {
        "action": "omics:GetWorkflow",
        "resource_mappings": {
          "Id": {
            "template": "${id}"
          }
        }
      }
    ],
    "list-annotation-import-jobs": [
      {
        "action": "omics:ListAnnotationImportJobs",
        "resource_mappings": {}
      }
    ],
    "list-annotation-store-versions": [
      {
        "note": "NotFound",
        "action": "Omics:ListAnnotationStoreVersions",
        "resource_mappings": {}
      }
    ],
    "list-annotation-stores": [
      {
        "action": "omics:ListAnnotationStores",
        "resource_mappings": {}
      }
    ],
    "list-multipart-read-set-uploads": [
      {
        "action": "omics:ListMultipartReadSetUploads",
        "resource_mappings": {
          "SequenceStoreId": {
            "template": "${sequenceStoreId}"
          }
        }
      }
    ],
    "list-read-set-activation-jobs": [
      {
        "action": "omics:ListReadSetActivationJobs",
        "resource_mappings": {
          "SequenceStoreId": {
            "template": "${sequenceStoreId}"
          }
        }
      }
    ],
    "list-read-set-export-jobs": [
      {
        "action": "omics:ListReadSetExportJobs",
        "resource_mappings": {
          "SequenceStoreId": {
            "template": "${sequenceStoreId}"
          }
        }
      }
    ],
    "list-read-set-import-jobs": [
      {
        "action": "omics:ListReadSetImportJobs",
        "resource_mappings": {
          "SequenceStoreId": {
            "template": "${sequenceStoreId}"
          }
        }
      }
    ],
    "list-read-set-upload-parts": [
      {
        "action": "omics:ListReadSetUploadParts",
        "resource_mappings": {
          "SequenceStoreId": {
            "template": "${sequenceStoreId}"
          }
        }
      }
    ],
    "list-read-sets": [
      {
        "action": "omics:ListReadSets",
        "resource_mappings": {
          "SequenceStoreId": {
            "template": "${sequenceStoreId}"
          }
        }
      }
    ],
    "list-reference-import-jobs": [
      {
        "action": "omics:ListReferenceImportJobs",
        "resource_mappings": {
          "ReferenceStoreId": {
            "template": "${referenceStoreId}"
          }
        }
      }
    ],
    "list-reference-stores": [
      {
        "action": "omics:ListReferenceStores",
        "resource_mappings": {}
      }
    ],
    "list-references": [
      {
        "action": "omics:ListReferences",
        "resource_mappings": {
          "ReferenceStoreId": {
            "template": "${referenceStoreId}"
          }
        }
      }
    ],
    "list-run-groups": [
      {
        "action": "omics:ListRunGroups",
        "resource_mappings": {}
      }
    ],
    "list-run-tasks": [
      {
        "action": "omics:ListRunTasks",
        "resource_mappings": {
          "Id": {
            "template": "${id}"
          }
        }
      }
    ],
    "list-runs": [
      {
        "action": "omics:ListRuns",
        "resource_mappings": {}
      }
    ],
    "list-sequence-stores": [
      {
        "action": "omics:ListSequenceStores",
        "resource_mappings": {}
      }
    ],
    "list-shares": [
      {
        "action": "omics:ListShares",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "omics:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "list-variant-import-jobs": [
      {
        "action": "omics:ListVariantImportJobs",
        "resource_mappings": {}
      }
    ],
    "list-variant-stores": [
      {
        "action": "omics:ListVariantStores",
        "resource_mappings": {}
      }
    ],
    "list-workflows": [
      {
        "action": "omics:ListWorkflows",
        "resource_mappings": {}
      }
    ],
    "start-annotation-import-job": [
      {
        "action": "omics:StartAnnotationImportJob",
        "resource_mappings": {}
      }
    ],
    "start-read-set-activation-job": [
      {
        "action": "omics:StartReadSetActivationJob",
        "resource_mappings": {
          "SequenceStoreId": {
            "template": "${sequenceStoreId}"
          }
        }
      }
    ],
    "start-read-set-export-job": [
      {
        "action": "omics:StartReadSetExportJob",
        "resource_mappings": {
          "SequenceStoreId": {
            "template": "${sequenceStoreId}"
          }
        }
      }
    ],
    "start-read-set-import-job": [
      {
        "action": "omics:StartReadSetImportJob",
        "resource_mappings": {
          "SequenceStoreId": {
            "template": "${sequenceStoreId}"
          }
        }
      }
    ],
    "start-reference-import-job": [
      {
        "action": "omics:StartReferenceImportJob",
        "resource_mappings": {
          "ReferenceStoreId": {
            "template": "${referenceStoreId}"
          }
        }
      }
    ],
    "start-run": [
      {
        "action": "omics:StartRun",
        "resource_mappings": {}
      }
    ],
    "start-variant-import-job": [
      {
        "action": "omics:StartVariantImportJob",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "omics:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "readSet": "%%iftemplatematch%${resourceArn}%%",
          "reference": "%%iftemplatematch%${resourceArn}%%",
          "referenceStore": "%%iftemplatematch%${resourceArn}%%",
          "run": "%%iftemplatematch%${resourceArn}%%",
          "runGroup": "%%iftemplatematch%${resourceArn}%%",
          "sequenceStore": "%%iftemplatematch%${resourceArn}%%",
          "workflow": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "omics:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "readSet": "%%iftemplatematch%${resourceArn}%%",
          "reference": "%%iftemplatematch%${resourceArn}%%",
          "referenceStore": "%%iftemplatematch%${resourceArn}%%",
          "run": "%%iftemplatematch%${resourceArn}%%",
          "runGroup": "%%iftemplatematch%${resourceArn}%%",
          "sequenceStore": "%%iftemplatematch%${resourceArn}%%",
          "workflow": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-annotation-store": [
      {
        "action": "omics:UpdateAnnotationStore",
        "resource_mappings": {
          "AnnotationStoreId": {
            "template": "*"
          }
        }
      }
    ],
    "update-annotation-store-version": [
      {
        "note": "NotFound",
        "action": "Omics:UpdateAnnotationStoreVersion",
        "resource_mappings": {}
      }
    ],
    "update-run-group": [
      {
        "action": "omics:UpdateRunGroup",
        "resource_mappings": {
          "Id": {
            "template": "${id}"
          }
        }
      }
    ],
    "update-variant-store": [
      {
        "action": "omics:UpdateVariantStore",
        "resource_mappings": {
          "VariantStoreId": {
            "template": "*"
          }
        }
      }
    ],
    "update-workflow": [
      {
        "action": "omics:UpdateWorkflow",
        "resource_mappings": {
          "Id": {
            "template": "${id}"
          }
        }
      }
    ],
    "upload-read-set-part": [
      {
        "action": "omics:UploadReadSetPart",
        "resource_mappings": {
          "SequenceStoreId": {
            "template": "${sequenceStoreId}"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "omics:GetAnnotationImportJob",
        "resource_mappings": {
          "AnnotationImportJobId": {
            "template": "${jobId}"
          }
        }
      }
    ]
  },
  "opensearch": {
    "accept-inbound-connection": [
      {
        "action": "es:AcceptInboundConnection",
        "resource_mappings": {}
      }
    ],
    "add-tags": [
      {
        "action": "es:AddTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "domain": "${ARN}"
        }
      }
    ],
    "associate-package": [
      {
        "action": "es:AssociatePackage",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "authorize-vpc-endpoint-access": [
      {
        "action": "es:AuthorizeVpcEndpointAccess",
        "resource_mappings": {}
      }
    ],
    "cancel-service-software-update": [
      {
        "action": "es:CancelServiceSoftwareUpdate",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "create-domain": [
      {
        "action": "es:CreateDomain",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "create-outbound-connection": [
      {
        "action": "es:CreateOutboundConnection",
        "resource_mappings": {
          "DomainName": {
            "template": "%%many%${LocalDomainInfo.AWSDomainInformation.DomainName}%${RemoteDomainInfo.AWSDomainInformation.DomainName}%%"
          }
        }
      }
    ],
    "create-package": [
      {
        "action": "es:CreatePackage",
        "resource_mappings": {}
      }
    ],
    "create-vpc-endpoint": [
      {
        "action": "es:CreateVpcEndpoint",
        "resource_mappings": {}
      }
    ],
    "delete-domain": [
      {
        "action": "es:DeleteDomain",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "delete-inbound-connection": [
      {
        "action": "es:DeleteInboundConnection",
        "resource_mappings": {}
      }
    ],
    "delete-outbound-connection": [
      {
        "action": "es:DeleteOutboundConnection",
        "resource_mappings": {}
      }
    ],
    "delete-package": [
      {
        "action": "es:DeletePackage",
        "resource_mappings": {}
      }
    ],
    "delete-vpc-endpoint": [
      {
        "action": "es:DeleteVpcEndpoint",
        "resource_mappings": {}
      }
    ],
    "describe-domain": [
      {
        "action": "es:DescribeDomain",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "describe-domain-auto-tunes": [
      {
        "action": "es:DescribeDomainAutoTunes",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "describe-domain-change-progress": [
      {
        "action": "es:DescribeDomainChangeProgress",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "describe-domain-config": [
      {
        "action": "es:DescribeDomainConfig",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "describe-domain-health": [
      {
        "action": "es:DescribeDomainHealth",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "describe-domain-nodes": [
      {
        "action": "es:DescribeDomainNodes",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "describe-domains": [
      {
        "action": "es:DescribeDomains",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainNames[]}"
          }
        }
      }
    ],
    "describe-dry-run-progress": [
      {
        "action": "es:DescribeDryRunProgress",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "describe-inbound-connections": [
      {
        "action": "es:DescribeInboundConnections",
        "resource_mappings": {}
      }
    ],
    "describe-instance-type-limits": [
      {
        "action": "es:DescribeInstanceTypeLimits",
        "resource_mappings": {}
      }
    ],
    "describe-outbound-connections": [
      {
        "action": "es:DescribeOutboundConnections",
        "resource_mappings": {}
      }
    ],
    "describe-packages": [
      {
        "action": "es:DescribePackages",
        "resource_mappings": {}
      }
    ],
    "describe-reserved-instance-offerings": [
      {
        "action": "es:DescribeReservedInstanceOfferings",
        "resource_mappings": {}
      }
    ],
    "describe-reserved-instances": [
      {
        "action": "es:DescribeReservedInstances",
        "resource_mappings": {}
      }
    ],
    "describe-vpc-endpoints": [
      {
        "action": "es:DescribeVpcEndpoints",
        "resource_mappings": {}
      }
    ],
    "dissociate-package": [
      {
        "action": "es:DissociatePackage",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "get-compatible-versions": [
      {
        "action": "es:GetCompatibleVersions",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "get-domain-maintenance-status": [
      {
        "note": "NotFound",
        "action": "OpenSearch:GetDomainMaintenanceStatus",
        "resource_mappings": {}
      }
    ],
    "get-package-version-history": [
      {
        "action": "es:GetPackageVersionHistory",
        "resource_mappings": {}
      }
    ],
    "get-upgrade-history": [
      {
        "action": "es:GetUpgradeHistory",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "get-upgrade-status": [
      {
        "action": "es:GetUpgradeStatus",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "list-domain-maintenances": [
      {
        "note": "NotFound",
        "action": "OpenSearch:ListDomainMaintenances",
        "resource_mappings": {}
      }
    ],
    "list-domain-names": [
      {
        "action": "es:ListDomainNames",
        "resource_mappings": {}
      }
    ],
    "list-domains-for-package": [
      {
        "action": "es:ListDomainsForPackage",
        "resource_mappings": {}
      }
    ],
    "list-instance-type-details": [
      {
        "action": "es:ListInstanceTypeDetails",
        "resource_mappings": {}
      }
    ],
    "list-packages-for-domain": [
      {
        "action": "es:ListPackagesForDomain",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "list-scheduled-actions": [
      {
        "action": "es:ListScheduledActions",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "list-tags": [
      {
        "action": "es:ListTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "domain": "${ARN}"
        }
      }
    ],
    "list-versions": [
      {
        "action": "es:ListVersions",
        "resource_mappings": {}
      }
    ],
    "list-vpc-endpoint-access": [
      {
        "action": "es:ListVpcEndpointAccess",
        "resource_mappings": {}
      }
    ],
    "list-vpc-endpoints": [
      {
        "action": "es:ListVpcEndpoints",
        "resource_mappings": {}
      }
    ],
    "list-vpc-endpoints-for-domain": [
      {
        "action": "es:ListVpcEndpointsForDomain",
        "resource_mappings": {}
      }
    ],
    "purchase-reserved-instance-offering": [
      {
        "action": "es:PurchaseReservedInstanceOffering",
        "resource_mappings": {}
      }
    ],
    "reject-inbound-connection": [
      {
        "action": "es:RejectInboundConnection",
        "resource_mappings": {}
      }
    ],
    "remove-tags": [
      {
        "action": "es:RemoveTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "domain": "${ARN}"
        }
      }
    ],
    "revoke-vpc-endpoint-access": [
      {
        "action": "es:RevokeVpcEndpointAccess",
        "resource_mappings": {}
      }
    ],
    "start-domain-maintenance": [
      {
        "note": "NotFound",
        "action": "OpenSearch:StartDomainMaintenance",
        "resource_mappings": {}
      }
    ],
    "start-service-software-update": [
      {
        "action": "es:StartServiceSoftwareUpdate",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "update-domain-config": [
      {
        "action": "es:UpdateDomainConfig",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "update-package": [
      {
        "action": "es:UpdatePackage",
        "resource_mappings": {}
      }
    ],
    "update-scheduled-action": [
      {
        "action": "es:UpdateScheduledAction",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "update-vpc-endpoint": [
      {
        "action": "es:UpdateVpcEndpoint",
        "resource_mappings": {}
      }
    ],
    "upgrade-domain": [
      {
        "action": "es:UpgradeDomain",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ]
  },
  "opensearchserverless": {
    "batch-get-collection": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:BatchGetCollection",
        "resource_mappings": {}
      }
    ],
    "batch-get-effective-lifecycle-policy": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:BatchGetEffectiveLifecyclePolicy",
        "resource_mappings": {}
      }
    ],
    "batch-get-lifecycle-policy": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:BatchGetLifecyclePolicy",
        "resource_mappings": {}
      }
    ],
    "batch-get-vpc-endpoint": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:BatchGetVpcEndpoint",
        "resource_mappings": {}
      }
    ],
    "create-access-policy": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:CreateAccessPolicy",
        "resource_mappings": {}
      }
    ],
    "create-collection": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:CreateCollection",
        "resource_mappings": {}
      }
    ],
    "create-lifecycle-policy": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:CreateLifecyclePolicy",
        "resource_mappings": {}
      }
    ],
    "create-security-config": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:CreateSecurityConfig",
        "resource_mappings": {}
      }
    ],
    "create-security-policy": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:CreateSecurityPolicy",
        "resource_mappings": {}
      }
    ],
    "create-vpc-endpoint": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:CreateVpcEndpoint",
        "resource_mappings": {}
      }
    ],
    "delete-access-policy": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:DeleteAccessPolicy",
        "resource_mappings": {}
      }
    ],
    "delete-collection": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:DeleteCollection",
        "resource_mappings": {}
      }
    ],
    "delete-lifecycle-policy": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:DeleteLifecyclePolicy",
        "resource_mappings": {}
      }
    ],
    "delete-security-config": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:DeleteSecurityConfig",
        "resource_mappings": {}
      }
    ],
    "delete-security-policy": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:DeleteSecurityPolicy",
        "resource_mappings": {}
      }
    ],
    "delete-vpc-endpoint": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:DeleteVpcEndpoint",
        "resource_mappings": {}
      }
    ],
    "get-access-policy": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:GetAccessPolicy",
        "resource_mappings": {}
      }
    ],
    "get-account-settings": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:GetAccountSettings",
        "resource_mappings": {}
      }
    ],
    "get-policies-stats": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:GetPoliciesStats",
        "resource_mappings": {}
      }
    ],
    "get-security-config": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:GetSecurityConfig",
        "resource_mappings": {}
      }
    ],
    "get-security-policy": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:GetSecurityPolicy",
        "resource_mappings": {}
      }
    ],
    "list-access-policies": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:ListAccessPolicies",
        "resource_mappings": {}
      }
    ],
    "list-collections": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:ListCollections",
        "resource_mappings": {}
      }
    ],
    "list-lifecycle-policies": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:ListLifecyclePolicies",
        "resource_mappings": {}
      }
    ],
    "list-security-configs": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:ListSecurityConfigs",
        "resource_mappings": {}
      }
    ],
    "list-security-policies": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:ListSecurityPolicies",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "list-vpc-endpoints": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:ListVpcEndpoints",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-access-policy": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:UpdateAccessPolicy",
        "resource_mappings": {}
      }
    ],
    "update-account-settings": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:UpdateAccountSettings",
        "resource_mappings": {}
      }
    ],
    "update-collection": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:UpdateCollection",
        "resource_mappings": {}
      }
    ],
    "update-lifecycle-policy": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:UpdateLifecyclePolicy",
        "resource_mappings": {}
      }
    ],
    "update-security-config": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:UpdateSecurityConfig",
        "resource_mappings": {}
      }
    ],
    "update-security-policy": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:UpdateSecurityPolicy",
        "resource_mappings": {}
      }
    ],
    "update-vpc-endpoint": [
      {
        "note": "NotFound",
        "action": "OpenSearchServerless:UpdateVpcEndpoint",
        "resource_mappings": {}
      }
    ]
  },
  "opsworks": {
    "assign-instance": [
      {
        "action": "opsworks:AssignInstance",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "assign-volume": [
      {
        "action": "opsworks:AssignVolume",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "associate-elastic-ip": [
      {
        "action": "opsworks:AssociateElasticIp",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "attach-elastic-load-balancer": [
      {
        "action": "opsworks:AttachElasticLoadBalancer",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "clone-stack": [
      {
        "action": "opsworks:CloneStack",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${ServiceRoleArn}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${DefaultInstanceProfileArn}%*%%%"
        }
      }
    ],
    "create-app": [
      {
        "action": "opsworks:CreateApp",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      }
    ],
    "create-deployment": [
      {
        "action": "opsworks:CreateDeployment",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      }
    ],
    "create-instance": [
      {
        "action": "opsworks:CreateInstance",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      }
    ],
    "create-layer": [
      {
        "action": "opsworks:CreateLayer",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${CustomInstanceProfileArn}%*%%%"
        }
      }
    ],
    "create-stack": [
      {
        "action": "opsworks:CreateStack",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${ServiceRoleArn}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${DefaultInstanceProfileArn}%*%%%"
        }
      }
    ],
    "create-user-profile": [
      {
        "action": "opsworks:CreateUserProfile",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${IamUserArn}"
        }
      }
    ],
    "delete-app": [
      {
        "action": "opsworks:DeleteApp",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-instance": [
      {
        "action": "opsworks:DeleteInstance",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-layer": [
      {
        "action": "opsworks:DeleteLayer",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-stack": [
      {
        "action": "opsworks:DeleteStack",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      }
    ],
    "delete-user-profile": [
      {
        "action": "opsworks:DeleteUserProfile",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${IamUserArn}"
        }
      }
    ],
    "deregister-ecs-cluster": [
      {
        "action": "opsworks:DeregisterEcsCluster",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "deregister-elastic-ip": [
      {
        "action": "opsworks:DeregisterElasticIp",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "deregister-instance": [
      {
        "action": "opsworks:DeregisterInstance",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "deregister-rds-db-instance": [
      {
        "action": "opsworks:DeregisterRdsDbInstance",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "deregister-volume": [
      {
        "action": "opsworks:DeregisterVolume",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-agent-versions": [
      {
        "action": "opsworks:DescribeAgentVersions",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      }
    ],
    "describe-apps": [
      {
        "action": "opsworks:DescribeApps",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      }
    ],
    "describe-commands": [
      {
        "action": "opsworks:DescribeCommands",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-deployments": [
      {
        "action": "opsworks:DescribeDeployments",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      }
    ],
    "describe-ecs-clusters": [
      {
        "action": "opsworks:DescribeEcsClusters",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      }
    ],
    "describe-elastic-ips": [
      {
        "action": "opsworks:DescribeElasticIps",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      }
    ],
    "describe-elastic-load-balancers": [
      {
        "action": "opsworks:DescribeElasticLoadBalancers",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      }
    ],
    "describe-instances": [
      {
        "action": "opsworks:DescribeInstances",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      }
    ],
    "describe-layers": [
      {
        "action": "opsworks:DescribeLayers",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      }
    ],
    "describe-load-based-auto-scaling": [
      {
        "action": "opsworks:DescribeLoadBasedAutoScaling",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-my-user-profile": [
      {
        "action": "opsworks:DescribeMyUserProfile",
        "resource_mappings": {}
      }
    ],
    "describe-operating-systems": [
      {
        "action": "opsworks:DescribeOperatingSystems",
        "resource_mappings": {}
      }
    ],
    "describe-permissions": [
      {
        "action": "opsworks:DescribePermissions",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      }
    ],
    "describe-raid-arrays": [
      {
        "action": "opsworks:DescribeRaidArrays",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      }
    ],
    "describe-rds-db-instances": [
      {
        "action": "opsworks:DescribeRdsDbInstances",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      }
    ],
    "describe-service-errors": [
      {
        "action": "opsworks:DescribeServiceErrors",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      }
    ],
    "describe-stack-provisioning-parameters": [
      {
        "action": "opsworks:DescribeStackProvisioningParameters",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      }
    ],
    "describe-stack-summary": [
      {
        "action": "opsworks:DescribeStackSummary",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      }
    ],
    "describe-stacks": [
      {
        "action": "opsworks:DescribeStacks",
        "resource_mappings": {
          "StackId": {
            "template": "${StackIds[]}"
          }
        }
      }
    ],
    "describe-time-based-auto-scaling": [
      {
        "action": "opsworks:DescribeTimeBasedAutoScaling",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-user-profiles": [
      {
        "action": "opsworks:DescribeUserProfiles",
        "resource_mappings": {}
      }
    ],
    "describe-volumes": [
      {
        "action": "opsworks:DescribeVolumes",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      }
    ],
    "detach-elastic-load-balancer": [
      {
        "action": "opsworks:DetachElasticLoadBalancer",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "disassociate-elastic-ip": [
      {
        "action": "opsworks:DisassociateElasticIp",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "get-hostname-suggestion": [
      {
        "action": "opsworks:GetHostnameSuggestion",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "grant-access": [
      {
        "action": "opsworks:GrantAccess",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "list-tags": [
      {
        "action": "opsworks:ListTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stack": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "reboot-instance": [
      {
        "action": "opsworks:RebootInstance",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "register-ecs-cluster": [
      {
        "action": "opsworks:RegisterEcsCluster",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      }
    ],
    "register-elastic-ip": [
      {
        "action": "opsworks:RegisterElasticIp",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      }
    ],
    "register-instance": [
      {
        "action": "opsworks:RegisterInstance",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      }
    ],
    "register-rds-db-instance": [
      {
        "action": "opsworks:RegisterRdsDbInstance",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      }
    ],
    "register-volume": [
      {
        "action": "opsworks:RegisterVolume",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      }
    ],
    "set-load-based-auto-scaling": [
      {
        "action": "opsworks:SetLoadBasedAutoScaling",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "set-permission": [
      {
        "action": "opsworks:SetPermission",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      }
    ],
    "set-time-based-auto-scaling": [
      {
        "action": "opsworks:SetTimeBasedAutoScaling",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "start-instance": [
      {
        "action": "opsworks:StartInstance",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "start-stack": [
      {
        "action": "opsworks:StartStack",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      }
    ],
    "stop-instance": [
      {
        "action": "opsworks:StopInstance",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "stop-stack": [
      {
        "action": "opsworks:StopStack",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "opsworks:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stack": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "unassign-instance": [
      {
        "action": "opsworks:UnassignInstance",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "unassign-volume": [
      {
        "action": "opsworks:UnassignVolume",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "untag-resource": [
      {
        "action": "opsworks:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stack": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-app": [
      {
        "action": "opsworks:UpdateApp",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "update-elastic-ip": [
      {
        "action": "opsworks:UpdateElasticIp",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "update-instance": [
      {
        "action": "opsworks:UpdateInstance",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "update-layer": [
      {
        "action": "opsworks:UpdateLayer",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${CustomInstanceProfileArn}%*%%%"
        }
      }
    ],
    "update-my-user-profile": [
      {
        "action": "opsworks:UpdateMyUserProfile",
        "resource_mappings": {}
      }
    ],
    "update-rds-db-instance": [
      {
        "action": "opsworks:UpdateRdsDbInstance",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "update-stack": [
      {
        "action": "opsworks:UpdateStack",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${ServiceRoleArn}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${DefaultInstanceProfileArn}%*%%%"
        }
      }
    ],
    "update-user-profile": [
      {
        "action": "opsworks:UpdateUserProfile",
        "resource_mappings": {}
      }
    ],
    "update-volume": [
      {
        "action": "opsworks:UpdateVolume",
        "resource_mappings": {
          "StackId": {
            "template": "*"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "opsworks:DescribeApps",
        "resource_mappings": {
          "StackId": {
            "template": "${StackId}"
          }
        }
      }
    ]
  },
  "opsworkscm": {
    "associate-node": [
      {
        "action": "opsworks-cm:AssociateNode",
        "resource_mappings": {}
      }
    ],
    "create-backup": [
      {
        "action": "opsworks-cm:CreateBackup",
        "resource_mappings": {}
      }
    ],
    "create-server": [
      {
        "action": "opsworks-cm:CreateServer",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${ServiceRoleArn}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${InstanceProfileArn}%*%%%"
        }
      }
    ],
    "delete-backup": [
      {
        "action": "opsworks-cm:DeleteBackup",
        "resource_mappings": {}
      }
    ],
    "delete-server": [
      {
        "action": "opsworks-cm:DeleteServer",
        "resource_mappings": {}
      }
    ],
    "describe-account-attributes": [
      {
        "action": "opsworks-cm:DescribeAccountAttributes",
        "resource_mappings": {}
      }
    ],
    "describe-backups": [
      {
        "action": "opsworks-cm:DescribeBackups",
        "resource_mappings": {}
      }
    ],
    "describe-events": [
      {
        "action": "opsworks-cm:DescribeEvents",
        "resource_mappings": {}
      }
    ],
    "describe-node-association-status": [
      {
        "action": "opsworks-cm:DescribeNodeAssociationStatus",
        "resource_mappings": {}
      }
    ],
    "describe-servers": [
      {
        "action": "opsworks-cm:DescribeServers",
        "resource_mappings": {}
      }
    ],
    "disassociate-node": [
      {
        "action": "opsworks-cm:DisassociateNode",
        "resource_mappings": {}
      }
    ],
    "export-server-engine-attribute": [
      {
        "action": "opsworks-cm:ExportServerEngineAttribute",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "opsworks-cm:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "restore-server": [
      {
        "action": "opsworks-cm:RestoreServer",
        "resource_mappings": {}
      }
    ],
    "start-maintenance": [
      {
        "action": "opsworks-cm:StartMaintenance",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "opsworks-cm:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "opsworks-cm:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-server": [
      {
        "action": "opsworks-cm:UpdateServer",
        "resource_mappings": {}
      }
    ],
    "update-server-engine-attributes": [
      {
        "action": "opsworks-cm:UpdateServerEngineAttributes",
        "resource_mappings": {}
      }
    ],
    "wait": [
      {
        "action": "opsworks-cm:DescribeNodeAssociationStatus",
        "resource_mappings": {}
      }
    ]
  },
  "organizations": {
    "accept-handshake": [
      {
        "action": "organizations:AcceptHandshake",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "HandshakeType": {
            "template": "*"
          },
          "HandshakeId": {
            "template": "%%regex%${HandshakeId}%/^(?:h-)?(.+)$/g%%"
          }
        }
      }
    ],
    "attach-policy": [
      {
        "action": "organizations:AttachPolicy",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "PolicyType": {
            "template": "*"
          },
          "PolicyId": {
            "template": "%%regex%${PolicyId}%/^(?:p-)?(.+)$/g%%"
          },
          "AccountId": {
            "template": "*"
          },
          "OrganizationalUnitId": {
            "template": "*"
          },
          "RootId": {
            "template": "*"
          }
        }
      }
    ],
    "cancel-handshake": [
      {
        "action": "organizations:CancelHandshake",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "HandshakeType": {
            "template": "*"
          },
          "HandshakeId": {
            "template": "%%regex%${HandshakeId}%/^(?:h-)?(.+)$/g%%"
          }
        }
      }
    ],
    "close-account": [
      {
        "action": "organizations:CloseAccount",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "AccountId": {
            "template": "${AccountId}"
          }
        }
      }
    ],
    "create-account": [
      {
        "action": "organizations:CreateAccount",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleName}"
        }
      }
    ],
    "create-gov-cloud-account": [
      {
        "action": "organizations:CreateGovCloudAccount",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleName}"
        }
      }
    ],
    "create-organization": [
      {
        "action": "organizations:CreateOrganization",
        "resource_mappings": {}
      }
    ],
    "create-organizational-unit": [
      {
        "action": "organizations:CreateOrganizationalUnit",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "OrganizationalUnitId": {
            "template": "*"
          },
          "RootId": {
            "template": "*"
          }
        }
      }
    ],
    "create-policy": [
      {
        "action": "organizations:CreatePolicy",
        "resource_mappings": {}
      }
    ],
    "decline-handshake": [
      {
        "action": "organizations:DeclineHandshake",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "HandshakeType": {
            "template": "*"
          },
          "HandshakeId": {
            "template": "%%regex%${HandshakeId}%/^(?:h-)?(.+)$/g%%"
          }
        }
      }
    ],
    "delete-organization": [
      {
        "action": "organizations:DeleteOrganization",
        "resource_mappings": {}
      }
    ],
    "delete-organizational-unit": [
      {
        "action": "organizations:DeleteOrganizationalUnit",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "OrganizationalUnitId": {
            "template": "%%regex%${OrganizationalUnitId}%/^(?:ou-)?(.+)$/g%%"
          }
        }
      }
    ],
    "delete-policy": [
      {
        "action": "organizations:DeletePolicy",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "PolicyType": {
            "template": "*"
          },
          "PolicyId": {
            "template": "%%regex%${PolicyId}%/^(?:p-)?(.+)$/g%%"
          }
        }
      }
    ],
    "delete-resource-policy": [
      {
        "action": "organizations:DeleteResourcePolicy",
        "resource_mappings": {}
      }
    ],
    "deregister-delegated-administrator": [
      {
        "action": "organizations:DeregisterDelegatedAdministrator",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "AccountId": {
            "template": "${AccountId}"
          }
        }
      }
    ],
    "describe-account": [
      {
        "action": "organizations:DescribeAccount",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "AccountId": {
            "template": "${AccountId}"
          }
        }
      }
    ],
    "describe-create-account-status": [
      {
        "action": "organizations:DescribeCreateAccountStatus",
        "resource_mappings": {}
      }
    ],
    "describe-effective-policy": [
      {
        "action": "organizations:DescribeEffectivePolicy",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "AccountId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-handshake": [
      {
        "action": "organizations:DescribeHandshake",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "HandshakeType": {
            "template": "*"
          },
          "HandshakeId": {
            "template": "%%regex%${HandshakeId}%/^(?:h-)?(.+)$/g%%"
          }
        }
      }
    ],
    "describe-organization": [
      {
        "action": "organizations:DescribeOrganization",
        "resource_mappings": {}
      }
    ],
    "describe-organizational-unit": [
      {
        "action": "organizations:DescribeOrganizationalUnit",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "OrganizationalUnitId": {
            "template": "%%regex%${OrganizationalUnitId}%/^(?:ou-)?(.+)$/g%%"
          }
        }
      }
    ],
    "describe-policy": [
      {
        "action": "organizations:DescribePolicy",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "PolicyType": {
            "template": "*"
          },
          "PolicyId": {
            "template": "%%regex%${PolicyId}%/^(?:p-)?(.+)$/g%%"
          }
        }
      }
    ],
    "describe-resource-policy": [
      {
        "action": "organizations:DescribeResourcePolicy",
        "resource_mappings": {}
      }
    ],
    "detach-policy": [
      {
        "action": "organizations:DetachPolicy",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "PolicyType": {
            "template": "*"
          },
          "PolicyId": {
            "template": "%%regex%${PolicyId}%/^(?:p-)?(.+)$/g%%"
          },
          "AccountId": {
            "template": "*"
          },
          "OrganizationalUnitId": {
            "template": "*"
          },
          "RootId": {
            "template": "*"
          }
        }
      }
    ],
    "disable-aws-service-access": [
      {
        "action": "organizations:DisableAWSServiceAccess",
        "resource_mappings": {}
      }
    ],
    "disable-policy-type": [
      {
        "action": "organizations:DisablePolicyType",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "RootId": {
            "template": "${RootId}"
          }
        }
      }
    ],
    "enable-aws-service-access": [
      {
        "action": "organizations:EnableAWSServiceAccess",
        "resource_mappings": {}
      }
    ],
    "enable-all-features": [
      {
        "action": "organizations:EnableAllFeatures",
        "resource_mappings": {}
      }
    ],
    "enable-policy-type": [
      {
        "action": "organizations:EnablePolicyType",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "RootId": {
            "template": "${RootId}"
          }
        }
      }
    ],
    "invite-account-to-organization": [
      {
        "action": "organizations:InviteAccountToOrganization",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "AccountId": {
            "template": "*"
          }
        }
      }
    ],
    "leave-organization": [
      {
        "action": "organizations:LeaveOrganization",
        "resource_mappings": {}
      }
    ],
    "list-aws-service-access-for-organization": [
      {
        "action": "organizations:ListAWSServiceAccessForOrganization",
        "resource_mappings": {}
      }
    ],
    "list-accounts": [
      {
        "action": "organizations:ListAccounts",
        "resource_mappings": {}
      }
    ],
    "list-accounts-for-parent": [
      {
        "action": "organizations:ListAccountsForParent",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "OrganizationalUnitId": {
            "template": "*"
          },
          "RootId": {
            "template": "*"
          }
        }
      }
    ],
    "list-children": [
      {
        "action": "organizations:ListChildren",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "OrganizationalUnitId": {
            "template": "*"
          },
          "RootId": {
            "template": "*"
          }
        }
      }
    ],
    "list-create-account-status": [
      {
        "action": "organizations:ListCreateAccountStatus",
        "resource_mappings": {}
      }
    ],
    "list-delegated-administrators": [
      {
        "action": "organizations:ListDelegatedAdministrators",
        "resource_mappings": {}
      }
    ],
    "list-delegated-services-for-account": [
      {
        "action": "organizations:ListDelegatedServicesForAccount",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "AccountId": {
            "template": "${AccountId}"
          }
        }
      }
    ],
    "list-handshakes-for-account": [
      {
        "action": "organizations:ListHandshakesForAccount",
        "resource_mappings": {}
      }
    ],
    "list-handshakes-for-organization": [
      {
        "action": "organizations:ListHandshakesForOrganization",
        "resource_mappings": {}
      }
    ],
    "list-organizational-units-for-parent": [
      {
        "action": "organizations:ListOrganizationalUnitsForParent",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "OrganizationalUnitId": {
            "template": "*"
          },
          "RootId": {
            "template": "*"
          }
        }
      }
    ],
    "list-parents": [
      {
        "action": "organizations:ListParents",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "AccountId": {
            "template": "*"
          },
          "OrganizationalUnitId": {
            "template": "*"
          }
        }
      }
    ],
    "list-policies": [
      {
        "action": "organizations:ListPolicies",
        "resource_mappings": {}
      }
    ],
    "list-policies-for-target": [
      {
        "action": "organizations:ListPoliciesForTarget",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "AccountId": {
            "template": "*"
          },
          "OrganizationalUnitId": {
            "template": "*"
          },
          "RootId": {
            "template": "*"
          }
        }
      }
    ],
    "list-roots": [
      {
        "action": "organizations:ListRoots",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "organizations:ListTagsForResource",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "AccountId": {
            "template": "*"
          },
          "OrganizationalUnitId": {
            "template": "*"
          },
          "PolicyType": {
            "template": "*"
          },
          "PolicyId": {
            "template": "*"
          },
          "RootId": {
            "template": "*"
          }
        }
      }
    ],
    "list-targets-for-policy": [
      {
        "action": "organizations:ListTargetsForPolicy",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "PolicyType": {
            "template": "*"
          },
          "PolicyId": {
            "template": "%%regex%${PolicyId}%/^(?:p-)?(.+)$/g%%"
          }
        }
      }
    ],
    "move-account": [
      {
        "action": "organizations:MoveAccount",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "AccountId": {
            "template": "${AccountId}"
          },
          "OrganizationalUnitId": {
            "template": "*"
          },
          "RootId": {
            "template": "*"
          }
        }
      }
    ],
    "put-resource-policy": [
      {
        "action": "organizations:PutResourcePolicy",
        "resource_mappings": {
          "OrganizationId": {
            "template": "*"
          },
          "ResourcePolicyId": {
            "template": "*"
          }
        }
      }
    ],
    "register-delegated-administrator": [
      {
        "action": "organizations:RegisterDelegatedAdministrator",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "AccountId": {
            "template": "${AccountId}"
          }
        }
      }
    ],
    "remove-account-from-organization": [
      {
        "action": "organizations:RemoveAccountFromOrganization",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "AccountId": {
            "template": "${AccountId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "organizations:TagResource",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "AccountId": {
            "template": "*"
          },
          "OrganizationalUnitId": {
            "template": "*"
          },
          "PolicyType": {
            "template": "*"
          },
          "PolicyId": {
            "template": "*"
          },
          "RootId": {
            "template": "*"
          }
        }
      }
    ],
    "untag-resource": [
      {
        "action": "organizations:UntagResource",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "AccountId": {
            "template": "*"
          },
          "OrganizationalUnitId": {
            "template": "*"
          },
          "PolicyType": {
            "template": "*"
          },
          "PolicyId": {
            "template": "*"
          },
          "RootId": {
            "template": "*"
          }
        }
      }
    ],
    "update-organizational-unit": [
      {
        "action": "organizations:UpdateOrganizationalUnit",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "OrganizationalUnitId": {
            "template": "%%regex%${OrganizationalUnitId}%/^(?:ou-)?(.+)$/g%%"
          }
        }
      }
    ],
    "update-policy": [
      {
        "action": "organizations:UpdatePolicy",
        "resource_mappings": {
          "MasterAccountId": {
            "template": "*"
          },
          "OrganizationId": {
            "template": "*"
          },
          "PolicyType": {
            "template": "*"
          },
          "PolicyId": {
            "template": "%%regex%${PolicyId}%/^(?:p-)?(.+)$/g%%"
          }
        }
      }
    ]
  },
  "osis": {
    "create-pipeline": [
      {
        "action": "osis:CreatePipeline",
        "resource_mappings": {}
      }
    ],
    "delete-pipeline": [
      {
        "action": "osis:DeletePipeline",
        "resource_mappings": {
          "PipelineName": {
            "template": "${PipelineName}"
          }
        }
      }
    ],
    "get-pipeline": [
      {
        "action": "osis:GetPipeline",
        "resource_mappings": {
          "PipelineName": {
            "template": "${PipelineName}"
          }
        }
      }
    ],
    "get-pipeline-blueprint": [
      {
        "action": "osis:GetPipelineBlueprint",
        "resource_mappings": {
          "BlueprintName": {
            "template": "${BlueprintName}"
          }
        }
      }
    ],
    "get-pipeline-change-progress": [
      {
        "action": "osis:GetPipelineChangeProgress",
        "resource_mappings": {
          "PipelineName": {
            "template": "${PipelineName}"
          }
        }
      }
    ],
    "list-pipeline-blueprints": [
      {
        "action": "osis:ListPipelineBlueprints",
        "resource_mappings": {}
      }
    ],
    "list-pipelines": [
      {
        "action": "osis:ListPipelines",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "osis:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "pipeline": "%%iftemplatematch%${Arn}%%"
        }
      }
    ],
    "start-pipeline": [
      {
        "action": "osis:StartPipeline",
        "resource_mappings": {
          "PipelineName": {
            "template": "${PipelineName}"
          }
        }
      }
    ],
    "stop-pipeline": [
      {
        "action": "osis:StopPipeline",
        "resource_mappings": {
          "PipelineName": {
            "template": "${PipelineName}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "osis:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "pipeline": "%%iftemplatematch%${Arn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "osis:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "pipeline": "%%iftemplatematch%${Arn}%%"
        }
      }
    ],
    "update-pipeline": [
      {
        "action": "osis:UpdatePipeline",
        "resource_mappings": {
          "PipelineName": {
            "template": "${PipelineName}"
          }
        }
      }
    ],
    "validate-pipeline": [
      {
        "action": "osis:ValidatePipeline",
        "resource_mappings": {}
      }
    ]
  },
  "outposts": {
    "cancel-order": [
      {
        "action": "outposts:CancelOrder",
        "resource_mappings": {}
      }
    ],
    "create-order": [
      {
        "action": "outposts:CreateOrder",
        "resource_mappings": {}
      }
    ],
    "create-outpost": [
      {
        "action": "outposts:CreateOutpost",
        "resource_mappings": {}
      }
    ],
    "create-site": [
      {
        "action": "outposts:CreateSite",
        "resource_mappings": {}
      }
    ],
    "delete-outpost": [
      {
        "action": "outposts:DeleteOutpost",
        "resource_mappings": {}
      }
    ],
    "delete-site": [
      {
        "action": "outposts:DeleteSite",
        "resource_mappings": {}
      }
    ],
    "get-catalog-item": [
      {
        "action": "outposts:GetCatalogItem",
        "resource_mappings": {}
      }
    ],
    "get-connection": [
      {
        "action": "outposts:GetConnection",
        "resource_mappings": {}
      }
    ],
    "get-order": [
      {
        "action": "outposts:GetOrder",
        "resource_mappings": {}
      }
    ],
    "get-outpost": [
      {
        "action": "outposts:GetOutpost",
        "resource_mappings": {}
      }
    ],
    "get-outpost-instance-types": [
      {
        "action": "outposts:GetOutpostInstanceTypes",
        "resource_mappings": {}
      }
    ],
    "get-site": [
      {
        "action": "outposts:GetSite",
        "resource_mappings": {}
      }
    ],
    "get-site-address": [
      {
        "action": "outposts:GetSiteAddress",
        "resource_mappings": {}
      }
    ],
    "list-assets": [
      {
        "action": "outposts:ListAssets",
        "resource_mappings": {}
      }
    ],
    "list-catalog-items": [
      {
        "action": "outposts:ListCatalogItems",
        "resource_mappings": {}
      }
    ],
    "list-orders": [
      {
        "action": "outposts:ListOrders",
        "resource_mappings": {}
      }
    ],
    "list-outposts": [
      {
        "action": "outposts:ListOutposts",
        "resource_mappings": {}
      }
    ],
    "list-sites": [
      {
        "action": "outposts:ListSites",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "outposts:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "start-connection": [
      {
        "action": "outposts:StartConnection",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "outposts:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "outposts:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-outpost": [
      {
        "action": "outposts:UpdateOutpost",
        "resource_mappings": {}
      }
    ],
    "update-site": [
      {
        "action": "outposts:UpdateSite",
        "resource_mappings": {}
      }
    ],
    "update-site-address": [
      {
        "action": "outposts:UpdateSiteAddress",
        "resource_mappings": {}
      }
    ],
    "update-site-rack-physical-properties": [
      {
        "action": "outposts:UpdateSiteRackPhysicalProperties",
        "resource_mappings": {}
      }
    ]
  },
  "panorama": {
    "create-application-instance": [
      {
        "action": "panorama:CreateApplicationInstance",
        "resource_mappings": {}
      }
    ],
    "create-job-for-devices": [
      {
        "action": "panorama:CreateJobForDevices",
        "resource_mappings": {}
      }
    ],
    "create-node-from-template-job": [
      {
        "action": "panorama:CreateNodeFromTemplateJob",
        "resource_mappings": {}
      }
    ],
    "create-package": [
      {
        "action": "panorama:CreatePackage",
        "resource_mappings": {}
      }
    ],
    "create-package-import-job": [
      {
        "action": "panorama:CreatePackageImportJob",
        "resource_mappings": {}
      }
    ],
    "delete-device": [
      {
        "action": "panorama:DeleteDevice",
        "resource_mappings": {
          "DeviceId": {
            "template": "${DeviceId}"
          }
        }
      }
    ],
    "delete-package": [
      {
        "action": "panorama:DeletePackage",
        "resource_mappings": {
          "PackageId": {
            "template": "${PackageId}"
          }
        }
      }
    ],
    "deregister-package-version": [
      {
        "action": "panorama:DeregisterPackageVersion",
        "resource_mappings": {}
      }
    ],
    "describe-application-instance": [
      {
        "action": "panorama:DescribeApplicationInstance",
        "resource_mappings": {
          "ApplicationInstanceId": {
            "template": "${ApplicationInstanceId}"
          }
        }
      }
    ],
    "describe-application-instance-details": [
      {
        "action": "panorama:DescribeApplicationInstanceDetails",
        "resource_mappings": {
          "ApplicationInstanceId": {
            "template": "${ApplicationInstanceId}"
          }
        }
      }
    ],
    "describe-device": [
      {
        "action": "panorama:DescribeDevice",
        "resource_mappings": {
          "DeviceId": {
            "template": "${DeviceId}"
          }
        }
      }
    ],
    "describe-device-job": [
      {
        "action": "panorama:DescribeDeviceJob",
        "resource_mappings": {}
      }
    ],
    "describe-node": [
      {
        "action": "panorama:DescribeNode",
        "resource_mappings": {}
      }
    ],
    "describe-node-from-template-job": [
      {
        "action": "panorama:DescribeNodeFromTemplateJob",
        "resource_mappings": {}
      }
    ],
    "describe-package": [
      {
        "action": "panorama:DescribePackage",
        "resource_mappings": {
          "PackageId": {
            "template": "${PackageId}"
          }
        }
      }
    ],
    "describe-package-import-job": [
      {
        "action": "panorama:DescribePackageImportJob",
        "resource_mappings": {}
      }
    ],
    "describe-package-version": [
      {
        "action": "panorama:DescribePackageVersion",
        "resource_mappings": {}
      }
    ],
    "list-application-instance-dependencies": [
      {
        "action": "panorama:ListApplicationInstanceDependencies",
        "resource_mappings": {}
      }
    ],
    "list-application-instance-node-instances": [
      {
        "action": "panorama:ListApplicationInstanceNodeInstances",
        "resource_mappings": {}
      }
    ],
    "list-application-instances": [
      {
        "action": "panorama:ListApplicationInstances",
        "resource_mappings": {}
      }
    ],
    "list-devices": [
      {
        "action": "panorama:ListDevices",
        "resource_mappings": {}
      }
    ],
    "list-devices-jobs": [
      {
        "action": "panorama:ListDevicesJobs",
        "resource_mappings": {}
      }
    ],
    "list-node-from-template-jobs": [
      {
        "action": "panorama:ListNodeFromTemplateJobs",
        "resource_mappings": {}
      }
    ],
    "list-nodes": [
      {
        "action": "panorama:ListNodes",
        "resource_mappings": {}
      }
    ],
    "list-package-import-jobs": [
      {
        "action": "panorama:ListPackageImportJobs",
        "resource_mappings": {}
      }
    ],
    "list-packages": [
      {
        "action": "panorama:ListPackages",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "panorama:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app": "%%iftemplatematch%${ResourceArn}%%",
          "dataSource": "%%iftemplatematch%${ResourceArn}%%",
          "device": "%%iftemplatematch%${ResourceArn}%%",
          "model": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "provision-device": [
      {
        "action": "panorama:ProvisionDevice",
        "resource_mappings": {}
      }
    ],
    "register-package-version": [
      {
        "action": "panorama:RegisterPackageVersion",
        "resource_mappings": {}
      }
    ],
    "remove-application-instance": [
      {
        "action": "panorama:RemoveApplicationInstance",
        "resource_mappings": {
          "ApplicationInstanceId": {
            "template": "${ApplicationInstanceId}"
          }
        }
      }
    ],
    "signal-application-instance-node-instances": [
      {
        "action": "panorama:SignalApplicationInstanceNodeInstances",
        "resource_mappings": {
          "ApplicationInstanceId": {
            "template": "${ApplicationInstanceId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "panorama:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app": "%%iftemplatematch%${ResourceArn}%%",
          "dataSource": "%%iftemplatematch%${ResourceArn}%%",
          "device": "%%iftemplatematch%${ResourceArn}%%",
          "model": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "panorama:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app": "%%iftemplatematch%${ResourceArn}%%",
          "dataSource": "%%iftemplatematch%${ResourceArn}%%",
          "device": "%%iftemplatematch%${ResourceArn}%%",
          "model": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-device-metadata": [
      {
        "action": "panorama:UpdateDeviceMetadata",
        "resource_mappings": {}
      }
    ]
  },
  "payment-cryptography": {
    "create-alias": [
      {
        "action": "payment-cryptography:CreateAlias",
        "resource_mappings": {
          "Alias": {
            "template": "%%regex%${AliasName}%/(?:alias\\/)(.+)/g%%"
          }
        },
        "resourcearn_mappings": {
          "key": "${KeyArn}"
        }
      }
    ],
    "create-key": [
      {
        "action": "payment-cryptography:CreateKey",
        "resource_mappings": {}
      },
      {
        "action": "payment-cryptography:TagResource",
        "resource_mappings": {
          "KeyId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-alias": [
      {
        "action": "payment-cryptography:DeleteAlias",
        "resource_mappings": {
          "Alias": {
            "template": "%%regex%${AliasName}%/(?:alias\\/)(.+)/g%%"
          }
        }
      }
    ],
    "delete-key": [
      {
        "action": "payment-cryptography:DeleteKey",
        "resource_mappings": {
          "KeyId": {
            "template": "${KeyIdentifier}"
          }
        }
      }
    ],
    "export-key": [
      {
        "action": "payment-cryptography:ExportKey",
        "resource_mappings": {
          "KeyId": {
            "template": "${ExportKeyIdentifier}"
          }
        }
      }
    ],
    "get-alias": [
      {
        "action": "payment-cryptography:GetAlias",
        "resource_mappings": {
          "Alias": {
            "template": "%%regex%${AliasName}%/(?:alias\\/)(.+)/g%%"
          },
          "KeyId": {
            "template": "*"
          }
        }
      }
    ],
    "get-key": [
      {
        "action": "payment-cryptography:GetKey",
        "resource_mappings": {
          "KeyId": {
            "template": "${KeyIdentifier}"
          }
        }
      }
    ],
    "get-parameters-for-export": [
      {
        "action": "payment-cryptography:GetParametersForExport",
        "resource_mappings": {}
      }
    ],
    "get-parameters-for-import": [
      {
        "action": "payment-cryptography:GetParametersForImport",
        "resource_mappings": {}
      }
    ],
    "get-public-key-certificate": [
      {
        "action": "payment-cryptography:GetPublicKeyCertificate",
        "resource_mappings": {
          "KeyId": {
            "template": "${KeyIdentifier}"
          }
        }
      }
    ],
    "import-key": [
      {
        "action": "payment-cryptography:ImportKey",
        "resource_mappings": {}
      },
      {
        "action": "payment-cryptography:TagResource",
        "resource_mappings": {
          "KeyId": {
            "template": "*"
          }
        }
      }
    ],
    "list-aliases": [
      {
        "action": "payment-cryptography:ListAliases",
        "resource_mappings": {
          "Alias": {
            "template": "*"
          },
          "KeyId": {
            "template": "*"
          }
        }
      }
    ],
    "list-keys": [
      {
        "action": "payment-cryptography:ListKeys",
        "resource_mappings": {
          "KeyId": {
            "template": "*"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "payment-cryptography:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "key": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "restore-key": [
      {
        "action": "payment-cryptography:RestoreKey",
        "resource_mappings": {
          "KeyId": {
            "template": "${KeyIdentifier}"
          }
        }
      }
    ],
    "start-key-usage": [
      {
        "action": "payment-cryptography:StartKeyUsage",
        "resource_mappings": {
          "KeyId": {
            "template": "${KeyIdentifier}"
          }
        }
      }
    ],
    "stop-key-usage": [
      {
        "action": "payment-cryptography:StopKeyUsage",
        "resource_mappings": {
          "KeyId": {
            "template": "${KeyIdentifier}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "payment-cryptography:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "key": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "payment-cryptography:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "key": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-alias": [
      {
        "action": "payment-cryptography:UpdateAlias",
        "resource_mappings": {
          "Alias": {
            "template": "%%regex%${AliasName}%/(?:alias\\/)(.+)/g%%"
          }
        },
        "resourcearn_mappings": {
          "key": "${KeyArn}"
        }
      }
    ]
  },
  "payment-cryptography-data": {
    "decrypt-data": [
      {
        "note": "NotFound",
        "action": "Payment Cryptography Data:DecryptData",
        "resource_mappings": {}
      }
    ],
    "encrypt-data": [
      {
        "note": "NotFound",
        "action": "Payment Cryptography Data:EncryptData",
        "resource_mappings": {}
      }
    ],
    "generate-card-validation-data": [
      {
        "note": "NotFound",
        "action": "Payment Cryptography Data:GenerateCardValidationData",
        "resource_mappings": {}
      }
    ],
    "generate-mac": [
      {
        "note": "NotFound",
        "action": "Payment Cryptography Data:GenerateMac",
        "resource_mappings": {}
      }
    ],
    "generate-pin-data": [
      {
        "note": "NotFound",
        "action": "Payment Cryptography Data:GeneratePinData",
        "resource_mappings": {}
      }
    ],
    "re-encrypt-data": [
      {
        "note": "NotFound",
        "action": "Payment Cryptography Data:ReEncryptData",
        "resource_mappings": {}
      }
    ],
    "translate-pin-data": [
      {
        "note": "NotFound",
        "action": "Payment Cryptography Data:TranslatePinData",
        "resource_mappings": {}
      }
    ],
    "verify-auth-request-cryptogram": [
      {
        "note": "NotFound",
        "action": "Payment Cryptography Data:VerifyAuthRequestCryptogram",
        "resource_mappings": {}
      }
    ],
    "verify-card-validation-data": [
      {
        "note": "NotFound",
        "action": "Payment Cryptography Data:VerifyCardValidationData",
        "resource_mappings": {}
      }
    ],
    "verify-mac": [
      {
        "note": "NotFound",
        "action": "Payment Cryptography Data:VerifyMac",
        "resource_mappings": {}
      }
    ],
    "verify-pin-data": [
      {
        "note": "NotFound",
        "action": "Payment Cryptography Data:VerifyPinData",
        "resource_mappings": {}
      }
    ]
  },
  "pca-connector-ad": {
    "create-connector": [
      {
        "note": "NotFound",
        "action": "Pca Connector Ad:CreateConnector",
        "resource_mappings": {}
      }
    ],
    "create-directory-registration": [
      {
        "note": "NotFound",
        "action": "Pca Connector Ad:CreateDirectoryRegistration",
        "resource_mappings": {}
      }
    ],
    "create-service-principal-name": [
      {
        "note": "NotFound",
        "action": "Pca Connector Ad:CreateServicePrincipalName",
        "resource_mappings": {}
      }
    ],
    "create-template": [
      {
        "note": "NotFound",
        "action": "Pca Connector Ad:CreateTemplate",
        "resource_mappings": {}
      }
    ],
    "create-template-group-access-control-entry": [
      {
        "note": "NotFound",
        "action": "Pca Connector Ad:CreateTemplateGroupAccessControlEntry",
        "resource_mappings": {}
      }
    ],
    "delete-connector": [
      {
        "note": "NotFound",
        "action": "Pca Connector Ad:DeleteConnector",
        "resource_mappings": {}
      }
    ],
    "delete-directory-registration": [
      {
        "note": "NotFound",
        "action": "Pca Connector Ad:DeleteDirectoryRegistration",
        "resource_mappings": {}
      }
    ],
    "delete-service-principal-name": [
      {
        "note": "NotFound",
        "action": "Pca Connector Ad:DeleteServicePrincipalName",
        "resource_mappings": {}
      }
    ],
    "delete-template": [
      {
        "note": "NotFound",
        "action": "Pca Connector Ad:DeleteTemplate",
        "resource_mappings": {}
      }
    ],
    "delete-template-group-access-control-entry": [
      {
        "note": "NotFound",
        "action": "Pca Connector Ad:DeleteTemplateGroupAccessControlEntry",
        "resource_mappings": {}
      }
    ],
    "get-connector": [
      {
        "note": "NotFound",
        "action": "Pca Connector Ad:GetConnector",
        "resource_mappings": {}
      }
    ],
    "get-directory-registration": [
      {
        "note": "NotFound",
        "action": "Pca Connector Ad:GetDirectoryRegistration",
        "resource_mappings": {}
      }
    ],
    "get-service-principal-name": [
      {
        "note": "NotFound",
        "action": "Pca Connector Ad:GetServicePrincipalName",
        "resource_mappings": {}
      }
    ],
    "get-template": [
      {
        "note": "NotFound",
        "action": "Pca Connector Ad:GetTemplate",
        "resource_mappings": {}
      }
    ],
    "get-template-group-access-control-entry": [
      {
        "note": "NotFound",
        "action": "Pca Connector Ad:GetTemplateGroupAccessControlEntry",
        "resource_mappings": {}
      }
    ],
    "list-connectors": [
      {
        "note": "NotFound",
        "action": "Pca Connector Ad:ListConnectors",
        "resource_mappings": {}
      }
    ],
    "list-directory-registrations": [
      {
        "note": "NotFound",
        "action": "Pca Connector Ad:ListDirectoryRegistrations",
        "resource_mappings": {}
      }
    ],
    "list-service-principal-names": [
      {
        "note": "NotFound",
        "action": "Pca Connector Ad:ListServicePrincipalNames",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "note": "NotFound",
        "action": "Pca Connector Ad:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "list-template-group-access-control-entries": [
      {
        "note": "NotFound",
        "action": "Pca Connector Ad:ListTemplateGroupAccessControlEntries",
        "resource_mappings": {}
      }
    ],
    "list-templates": [
      {
        "note": "NotFound",
        "action": "Pca Connector Ad:ListTemplates",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "note": "NotFound",
        "action": "Pca Connector Ad:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "note": "NotFound",
        "action": "Pca Connector Ad:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-template": [
      {
        "note": "NotFound",
        "action": "Pca Connector Ad:UpdateTemplate",
        "resource_mappings": {}
      }
    ],
    "update-template-group-access-control-entry": [
      {
        "note": "NotFound",
        "action": "Pca Connector Ad:UpdateTemplateGroupAccessControlEntry",
        "resource_mappings": {}
      }
    ]
  },
  "personalize": {
    "create-batch-inference-job": [
      {
        "action": "personalize:CreateBatchInferenceJob",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${roleArn}"
        }
      }
    ],
    "create-batch-segment-job": [
      {
        "action": "personalize:CreateBatchSegmentJob",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-campaign": [
      {
        "action": "personalize:CreateCampaign",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-dataset": [
      {
        "action": "personalize:CreateDataset",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-dataset-export-job": [
      {
        "action": "personalize:CreateDatasetExportJob",
        "resource_mappings": {
          "ResourceId": {
            "template": "${jobName}"
          }
        }
      }
    ],
    "create-dataset-group": [
      {
        "action": "personalize:CreateDatasetGroup",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${roleArn}"
        }
      }
    ],
    "create-dataset-import-job": [
      {
        "action": "personalize:CreateDatasetImportJob",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${roleArn}"
        }
      }
    ],
    "create-event-tracker": [
      {
        "action": "personalize:CreateEventTracker",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-filter": [
      {
        "action": "personalize:CreateFilter",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-metric-attribution": [
      {
        "action": "personalize:CreateMetricAttribution",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-recommender": [
      {
        "action": "personalize:CreateRecommender",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-schema": [
      {
        "action": "personalize:CreateSchema",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-solution": [
      {
        "action": "personalize:CreateSolution",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-solution-version": [
      {
        "action": "personalize:CreateSolutionVersion",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "solution": "${solutionArn}"
        }
      }
    ],
    "delete-campaign": [
      {
        "action": "personalize:DeleteCampaign",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "campaign": "${campaignArn}"
        }
      }
    ],
    "delete-dataset": [
      {
        "action": "personalize:DeleteDataset",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dataset": "${datasetArn}"
        }
      }
    ],
    "delete-dataset-group": [
      {
        "action": "personalize:DeleteDatasetGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "datasetGroup": "${datasetGroupArn}"
        }
      }
    ],
    "delete-event-tracker": [
      {
        "action": "personalize:DeleteEventTracker",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "eventTracker": "${eventTrackerArn}"
        }
      }
    ],
    "delete-filter": [
      {
        "action": "personalize:DeleteFilter",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "filter": "${filterArn}"
        }
      }
    ],
    "delete-metric-attribution": [
      {
        "action": "personalize:DeleteMetricAttribution",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "metricAttribution": "${metricAttributionArn}"
        }
      }
    ],
    "delete-recommender": [
      {
        "action": "personalize:DeleteRecommender",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "recommender": "${recommenderArn}"
        }
      }
    ],
    "delete-schema": [
      {
        "action": "personalize:DeleteSchema",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "schema": "${schemaArn}"
        }
      }
    ],
    "delete-solution": [
      {
        "action": "personalize:DeleteSolution",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "solution": "${solutionArn}"
        }
      }
    ],
    "describe-algorithm": [
      {
        "action": "personalize:DescribeAlgorithm",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "algorithm": "${algorithmArn}"
        }
      }
    ],
    "describe-batch-inference-job": [
      {
        "action": "personalize:DescribeBatchInferenceJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "batchInferenceJob": "${batchInferenceJobArn}"
        }
      }
    ],
    "describe-batch-segment-job": [
      {
        "action": "personalize:DescribeBatchSegmentJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "batchSegmentJob": "${batchSegmentJobArn}"
        }
      }
    ],
    "describe-campaign": [
      {
        "action": "personalize:DescribeCampaign",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "campaign": "${campaignArn}"
        }
      }
    ],
    "describe-dataset": [
      {
        "action": "personalize:DescribeDataset",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dataset": "${datasetArn}"
        }
      }
    ],
    "describe-dataset-export-job": [
      {
        "action": "personalize:DescribeDatasetExportJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "datasetExportJob": "${datasetExportJobArn}"
        }
      }
    ],
    "describe-dataset-group": [
      {
        "action": "personalize:DescribeDatasetGroup",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "datasetGroup": "${datasetGroupArn}"
        }
      }
    ],
    "describe-dataset-import-job": [
      {
        "action": "personalize:DescribeDatasetImportJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "datasetImportJob": "${datasetImportJobArn}"
        }
      }
    ],
    "describe-event-tracker": [
      {
        "action": "personalize:DescribeEventTracker",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "eventTracker": "${eventTrackerArn}"
        }
      }
    ],
    "describe-feature-transformation": [
      {
        "action": "personalize:DescribeFeatureTransformation",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "featureTransformation": "${featureTransformationArn}"
        }
      }
    ],
    "describe-filter": [
      {
        "action": "personalize:DescribeFilter",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "filter": "${filterArn}"
        }
      }
    ],
    "describe-metric-attribution": [
      {
        "action": "personalize:DescribeMetricAttribution",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "metricAttribution": "${metricAttributionArn}"
        }
      }
    ],
    "describe-recipe": [
      {
        "action": "personalize:DescribeRecipe",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "recipe": "${recipeArn}"
        }
      }
    ],
    "describe-recommender": [
      {
        "action": "personalize:DescribeRecommender",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "recommender": "${recommenderArn}"
        }
      }
    ],
    "describe-schema": [
      {
        "action": "personalize:DescribeSchema",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "schema": "${schemaArn}"
        }
      }
    ],
    "describe-solution": [
      {
        "action": "personalize:DescribeSolution",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "solution": "${solutionArn}"
        }
      }
    ],
    "describe-solution-version": [
      {
        "action": "personalize:DescribeSolutionVersion",
        "resource_mappings": {
          "ResourceId": {
            "template": "%%regex%${solutionVersionArn}%/^.+\\/(.+?)\\/.+$/g%%"
          }
        }
      }
    ],
    "get-solution-metrics": [
      {
        "action": "personalize:GetSolutionMetrics",
        "resource_mappings": {
          "ResourceId": {
            "template": "%%regex%${solutionVersionArn}%/^.+\\/(.+?)\\/.+$/g%%"
          }
        }
      }
    ],
    "list-batch-inference-jobs": [
      {
        "action": "personalize:ListBatchInferenceJobs",
        "resource_mappings": {}
      }
    ],
    "list-batch-segment-jobs": [
      {
        "action": "personalize:ListBatchSegmentJobs",
        "resource_mappings": {}
      }
    ],
    "list-campaigns": [
      {
        "action": "personalize:ListCampaigns",
        "resource_mappings": {}
      }
    ],
    "list-dataset-export-jobs": [
      {
        "action": "personalize:ListDatasetExportJobs",
        "resource_mappings": {}
      }
    ],
    "list-dataset-groups": [
      {
        "action": "personalize:ListDatasetGroups",
        "resource_mappings": {}
      }
    ],
    "list-dataset-import-jobs": [
      {
        "action": "personalize:ListDatasetImportJobs",
        "resource_mappings": {}
      }
    ],
    "list-datasets": [
      {
        "action": "personalize:ListDatasets",
        "resource_mappings": {}
      }
    ],
    "list-event-trackers": [
      {
        "action": "personalize:ListEventTrackers",
        "resource_mappings": {}
      }
    ],
    "list-filters": [
      {
        "action": "personalize:ListFilters",
        "resource_mappings": {}
      }
    ],
    "list-metric-attribution-metrics": [
      {
        "action": "personalize:ListMetricAttributionMetrics",
        "resource_mappings": {}
      }
    ],
    "list-metric-attributions": [
      {
        "action": "personalize:ListMetricAttributions",
        "resource_mappings": {}
      }
    ],
    "list-recipes": [
      {
        "action": "personalize:ListRecipes",
        "resource_mappings": {}
      }
    ],
    "list-recommenders": [
      {
        "action": "personalize:ListRecommenders",
        "resource_mappings": {}
      }
    ],
    "list-schemas": [
      {
        "action": "personalize:ListSchemas",
        "resource_mappings": {}
      }
    ],
    "list-solution-versions": [
      {
        "action": "personalize:ListSolutionVersions",
        "resource_mappings": {}
      }
    ],
    "list-solutions": [
      {
        "action": "personalize:ListSolutions",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "personalize:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "start-recommender": [
      {
        "action": "personalize:StartRecommender",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "recommender": "${recommenderArn}"
        }
      }
    ],
    "stop-recommender": [
      {
        "action": "personalize:StopRecommender",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "recommender": "${recommenderArn}"
        }
      }
    ],
    "stop-solution-version-creation": [
      {
        "action": "personalize:StopSolutionVersionCreation",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "solution": "${solutionVersionArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "personalize:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "personalize:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-campaign": [
      {
        "action": "personalize:UpdateCampaign",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "campaign": "${campaignArn}"
        }
      }
    ],
    "update-dataset": [
      {
        "action": "personalize:UpdateDataset",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dataset": "${datasetArn}"
        }
      }
    ],
    "update-metric-attribution": [
      {
        "action": "personalize:UpdateMetricAttribution",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "metricAttribution": "${metricAttributionArn}"
        }
      }
    ],
    "update-recommender": [
      {
        "action": "personalize:UpdateRecommender",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "recommender": "${recommenderArn}"
        }
      }
    ]
  },
  "personalize-events": {
    "put-events": [
      {
        "action": "personalize:PutEvents",
        "resource_mappings": {
          "ResourceId": {
            "template": "${trackingId}"
          }
        }
      }
    ],
    "put-items": [
      {
        "action": "personalize:PutItems",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dataset": "${datasetArn}"
        }
      }
    ],
    "put-users": [
      {
        "action": "personalize:PutUsers",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dataset": "${datasetArn}"
        }
      }
    ]
  },
  "personalize-runtime": {
    "get-personalized-ranking": [
      {
        "action": "personalize:GetPersonalizedRanking",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "campaign": "${campaignArn}"
        }
      }
    ],
    "get-recommendations": [
      {
        "action": "personalize:GetRecommendations",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "campaign": "${campaignArn}"
        }
      }
    ]
  },
  "pi": {
    "create-performance-analysis-report": [
      {
        "action": "pi:CreatePerformanceAnalysisReport",
        "resource_mappings": {
          "ServiceType": {
            "template": "${ServiceType}"
          },
          "Identifier": {
            "template": "${Identifier}"
          },
          "ReportId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-performance-analysis-report": [
      {
        "action": "pi:DeletePerformanceAnalysisReport",
        "resource_mappings": {
          "ServiceType": {
            "template": "${ServiceType}"
          },
          "Identifier": {
            "template": "${Identifier}"
          },
          "ReportId": {
            "template": "${AnalysisReportId}"
          }
        }
      }
    ],
    "describe-dimension-keys": [
      {
        "action": "pi:DescribeDimensionKeys",
        "resource_mappings": {
          "ServiceType": {
            "template": "${ServiceType}"
          },
          "Identifier": {
            "template": "${Identifier}"
          }
        }
      }
    ],
    "get-dimension-key-details": [
      {
        "action": "pi:GetDimensionKeyDetails",
        "resource_mappings": {
          "ServiceType": {
            "template": "${ServiceType}"
          },
          "Identifier": {
            "template": "${Identifier}"
          }
        }
      }
    ],
    "get-performance-analysis-report": [
      {
        "action": "pi:GetPerformanceAnalysisReport",
        "resource_mappings": {
          "ServiceType": {
            "template": "${ServiceType}"
          },
          "Identifier": {
            "template": "${Identifier}"
          },
          "ReportId": {
            "template": "${AnalysisReportId}"
          }
        }
      }
    ],
    "get-resource-metadata": [
      {
        "action": "pi:GetResourceMetadata",
        "resource_mappings": {
          "ServiceType": {
            "template": "${ServiceType}"
          },
          "Identifier": {
            "template": "${Identifier}"
          }
        }
      }
    ],
    "get-resource-metrics": [
      {
        "action": "pi:GetResourceMetrics",
        "resource_mappings": {
          "ServiceType": {
            "template": "${ServiceType}"
          },
          "Identifier": {
            "template": "${Identifier}"
          }
        }
      }
    ],
    "list-available-resource-dimensions": [
      {
        "action": "pi:ListAvailableResourceDimensions",
        "resource_mappings": {
          "ServiceType": {
            "template": "${ServiceType}"
          },
          "Identifier": {
            "template": "${Identifier}"
          }
        }
      }
    ],
    "list-available-resource-metrics": [
      {
        "action": "pi:ListAvailableResourceMetrics",
        "resource_mappings": {
          "ServiceType": {
            "template": "${ServiceType}"
          },
          "Identifier": {
            "template": "${Identifier}"
          }
        }
      }
    ],
    "list-performance-analysis-reports": [
      {
        "action": "pi:ListPerformanceAnalysisReports",
        "resource_mappings": {
          "ServiceType": {
            "template": "${ServiceType}"
          },
          "Identifier": {
            "template": "${Identifier}"
          },
          "ReportId": {
            "template": "*"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "pi:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "perf-reports-resource": "%%iftemplatematch${ResourceARN}%%"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "pi:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "perf-reports-resource": "%%iftemplatematch${ResourceARN}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "pi:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "perf-reports-resource": "%%iftemplatematch${ResourceARN}%%"
        }
      }
    ]
  },
  "pinpoint": {
    "create-app": [
      {
        "action": "mobiletargeting:CreateApp",
        "resource_mappings": {}
      }
    ],
    "create-campaign": [
      {
        "action": "mobiletargeting:CreateCampaign",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "create-email-template": [
      {
        "action": "mobiletargeting:CreateEmailTemplate",
        "resource_mappings": {}
      }
    ],
    "create-export-job": [
      {
        "action": "mobiletargeting:CreateExportJob",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${ExportJobRequest.RoleArn}"
        }
      }
    ],
    "create-import-job": [
      {
        "action": "mobiletargeting:CreateImportJob",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${ImportJobRequest.RoleArn}"
        }
      }
    ],
    "create-in-app-template": [
      {
        "action": "mobiletargeting:CreateInAppTemplate",
        "resource_mappings": {}
      }
    ],
    "create-journey": [
      {
        "action": "mobiletargeting:CreateJourney",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "create-push-template": [
      {
        "action": "mobiletargeting:CreatePushTemplate",
        "resource_mappings": {}
      }
    ],
    "create-recommender-configuration": [
      {
        "action": "mobiletargeting:CreateRecommenderConfiguration",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${CreateRecommenderConfiguration.RecommendationProviderRoleArn}"
        }
      }
    ],
    "create-segment": [
      {
        "action": "mobiletargeting:CreateSegment",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "create-sms-template": [
      {
        "action": "mobiletargeting:CreateSmsTemplate",
        "resource_mappings": {}
      }
    ],
    "create-voice-template": [
      {
        "action": "mobiletargeting:CreateVoiceTemplate",
        "resource_mappings": {}
      }
    ],
    "delete-adm-channel": [
      {
        "action": "mobiletargeting:DeleteAdmChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "delete-apns-channel": [
      {
        "action": "mobiletargeting:DeleteApnsChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "delete-apns-sandbox-channel": [
      {
        "action": "mobiletargeting:DeleteApnsSandboxChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "delete-apns-voip-channel": [
      {
        "action": "mobiletargeting:DeleteApnsVoipChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "delete-apns-voip-sandbox-channel": [
      {
        "action": "mobiletargeting:DeleteApnsVoipSandboxChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "delete-app": [
      {
        "action": "mobiletargeting:DeleteApp",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "delete-baidu-channel": [
      {
        "action": "mobiletargeting:DeleteBaiduChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "delete-campaign": [
      {
        "action": "mobiletargeting:DeleteCampaign",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          },
          "CampaignId": {
            "template": "${CampaignId}"
          }
        }
      }
    ],
    "delete-email-channel": [
      {
        "action": "mobiletargeting:DeleteEmailChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "delete-email-template": [
      {
        "action": "mobiletargeting:DeleteEmailTemplate",
        "resource_mappings": {
          "TemplateName": {
            "template": "${TemplateName}"
          },
          "ChannelType": {
            "template": "*"
          }
        }
      }
    ],
    "delete-endpoint": [
      {
        "action": "mobiletargeting:DeleteEndpoint",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "delete-event-stream": [
      {
        "action": "mobiletargeting:DeleteEventStream",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "delete-gcm-channel": [
      {
        "action": "mobiletargeting:DeleteGcmChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "delete-in-app-template": [
      {
        "action": "mobiletargeting:DeleteInAppTemplate",
        "resource_mappings": {
          "TemplateName": {
            "template": "${TemplateName}"
          },
          "ChannelType": {
            "template": "*"
          }
        }
      }
    ],
    "delete-journey": [
      {
        "action": "mobiletargeting:DeleteJourney",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          },
          "JourneyId": {
            "template": "${JourneyId}"
          }
        }
      }
    ],
    "delete-push-template": [
      {
        "action": "mobiletargeting:DeletePushTemplate",
        "resource_mappings": {
          "TemplateName": {
            "template": "${TemplateName}"
          },
          "ChannelType": {
            "template": "*"
          }
        }
      }
    ],
    "delete-recommender-configuration": [
      {
        "action": "mobiletargeting:DeleteRecommenderConfiguration",
        "resource_mappings": {
          "RecommenderId": {
            "template": "${RecommenderId}"
          }
        }
      }
    ],
    "delete-segment": [
      {
        "action": "mobiletargeting:DeleteSegment",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          },
          "SegmentId": {
            "template": "${SegmentId}"
          }
        }
      }
    ],
    "delete-sms-channel": [
      {
        "action": "mobiletargeting:DeleteSmsChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "delete-sms-template": [
      {
        "action": "mobiletargeting:DeleteSmsTemplate",
        "resource_mappings": {
          "TemplateName": {
            "template": "${TemplateName}"
          },
          "ChannelType": {
            "template": "*"
          }
        }
      }
    ],
    "delete-user-endpoints": [
      {
        "action": "mobiletargeting:DeleteUserEndpoints",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "delete-voice-channel": [
      {
        "action": "mobiletargeting:DeleteVoiceChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "delete-voice-template": [
      {
        "action": "mobiletargeting:DeleteVoiceTemplate",
        "resource_mappings": {
          "TemplateName": {
            "template": "${TemplateName}"
          },
          "ChannelType": {
            "template": "*"
          }
        }
      }
    ],
    "get-adm-channel": [
      {
        "action": "mobiletargeting:GetAdmChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "get-apns-channel": [
      {
        "action": "mobiletargeting:GetApnsChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "get-apns-sandbox-channel": [
      {
        "action": "mobiletargeting:GetApnsSandboxChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "get-apns-voip-channel": [
      {
        "action": "mobiletargeting:GetApnsVoipChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "get-apns-voip-sandbox-channel": [
      {
        "action": "mobiletargeting:GetApnsVoipSandboxChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "get-app": [
      {
        "action": "mobiletargeting:GetApp",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "get-application-date-range-kpi": [
      {
        "action": "mobiletargeting:GetApplicationDateRangeKpi",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "get-application-settings": [
      {
        "action": "mobiletargeting:GetApplicationSettings",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "get-apps": [
      {
        "action": "mobiletargeting:GetApps",
        "resource_mappings": {
          "AppId": {
            "template": "*"
          }
        }
      }
    ],
    "get-baidu-channel": [
      {
        "action": "mobiletargeting:GetBaiduChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "get-campaign": [
      {
        "action": "mobiletargeting:GetCampaign",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          },
          "CampaignId": {
            "template": "${CampaignId}"
          }
        }
      }
    ],
    "get-campaign-activities": [
      {
        "action": "mobiletargeting:GetCampaignActivities",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          },
          "CampaignId": {
            "template": "${CampaignId}"
          }
        }
      }
    ],
    "get-campaign-date-range-kpi": [
      {
        "action": "mobiletargeting:GetCampaignDateRangeKpi",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          },
          "CampaignId": {
            "template": "${CampaignId}"
          }
        }
      }
    ],
    "get-campaign-version": [
      {
        "action": "mobiletargeting:GetCampaignVersion",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          },
          "CampaignId": {
            "template": "${CampaignId}"
          }
        }
      }
    ],
    "get-campaign-versions": [
      {
        "action": "mobiletargeting:GetCampaignVersions",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          },
          "CampaignId": {
            "template": "${CampaignId}"
          }
        }
      }
    ],
    "get-campaigns": [
      {
        "action": "mobiletargeting:GetCampaigns",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "get-channels": [
      {
        "action": "mobiletargeting:GetChannels",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "get-email-channel": [
      {
        "action": "mobiletargeting:GetEmailChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "get-email-template": [
      {
        "action": "mobiletargeting:GetEmailTemplate",
        "resource_mappings": {
          "TemplateName": {
            "template": "${TemplateName}"
          },
          "ChannelType": {
            "template": "*"
          }
        }
      }
    ],
    "get-endpoint": [
      {
        "action": "mobiletargeting:GetEndpoint",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "get-event-stream": [
      {
        "action": "mobiletargeting:GetEventStream",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "get-export-job": [
      {
        "action": "mobiletargeting:GetExportJob",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "get-export-jobs": [
      {
        "action": "mobiletargeting:GetExportJobs",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "get-gcm-channel": [
      {
        "action": "mobiletargeting:GetGcmChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "get-import-job": [
      {
        "action": "mobiletargeting:GetImportJob",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "get-import-jobs": [
      {
        "action": "mobiletargeting:GetImportJobs",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "get-in-app-messages": [
      {
        "action": "mobiletargeting:GetInAppMessages",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "get-in-app-template": [
      {
        "action": "mobiletargeting:GetInAppTemplate",
        "resource_mappings": {
          "TemplateName": {
            "template": "${TemplateName}"
          },
          "ChannelType": {
            "template": "*"
          }
        }
      }
    ],
    "get-journey": [
      {
        "action": "mobiletargeting:GetJourney",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          },
          "JourneyId": {
            "template": "${JourneyId}"
          }
        }
      }
    ],
    "get-journey-date-range-kpi": [
      {
        "action": "mobiletargeting:GetJourneyDateRangeKpi",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          },
          "JourneyId": {
            "template": "${JourneyId}"
          }
        }
      }
    ],
    "get-journey-execution-activity-metrics": [
      {
        "action": "mobiletargeting:GetJourneyExecutionActivityMetrics",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          },
          "JourneyId": {
            "template": "${JourneyId}"
          }
        }
      }
    ],
    "get-journey-execution-metrics": [
      {
        "action": "mobiletargeting:GetJourneyExecutionMetrics",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          },
          "JourneyId": {
            "template": "${JourneyId}"
          }
        }
      }
    ],
    "get-journey-run-execution-activity-metrics": [
      {
        "action": "mobiletargeting:GetJourneyRunExecutionActivityMetrics",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          },
          "JourneyId": {
            "template": "${JourneyId}"
          }
        }
      }
    ],
    "get-journey-run-execution-metrics": [
      {
        "action": "mobiletargeting:GetJourneyRunExecutionMetrics",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          },
          "JourneyId": {
            "template": "${JourneyId}"
          }
        }
      }
    ],
    "get-journey-runs": [
      {
        "action": "mobiletargeting:GetJourneyRuns",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          },
          "JourneyId": {
            "template": "${JourneyId}"
          }
        }
      }
    ],
    "get-push-template": [
      {
        "action": "mobiletargeting:GetPushTemplate",
        "resource_mappings": {
          "TemplateName": {
            "template": "${TemplateName}"
          },
          "ChannelType": {
            "template": "*"
          }
        }
      }
    ],
    "get-recommender-configuration": [
      {
        "action": "mobiletargeting:GetRecommenderConfiguration",
        "resource_mappings": {
          "RecommenderId": {
            "template": "${RecommenderId}"
          }
        }
      }
    ],
    "get-recommender-configurations": [
      {
        "action": "mobiletargeting:GetRecommenderConfigurations",
        "resource_mappings": {}
      }
    ],
    "get-segment": [
      {
        "action": "mobiletargeting:GetSegment",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          },
          "SegmentId": {
            "template": "${SegmentId}"
          }
        }
      }
    ],
    "get-segment-export-jobs": [
      {
        "action": "mobiletargeting:GetSegmentExportJobs",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          },
          "SegmentId": {
            "template": "${SegmentId}"
          }
        }
      }
    ],
    "get-segment-import-jobs": [
      {
        "action": "mobiletargeting:GetSegmentImportJobs",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          },
          "SegmentId": {
            "template": "${SegmentId}"
          }
        }
      }
    ],
    "get-segment-version": [
      {
        "action": "mobiletargeting:GetSegmentVersion",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          },
          "SegmentId": {
            "template": "${SegmentId}"
          }
        }
      }
    ],
    "get-segment-versions": [
      {
        "action": "mobiletargeting:GetSegmentVersions",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          },
          "SegmentId": {
            "template": "${SegmentId}"
          }
        }
      }
    ],
    "get-segments": [
      {
        "action": "mobiletargeting:GetSegments",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "get-sms-channel": [
      {
        "action": "mobiletargeting:GetSmsChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "get-sms-template": [
      {
        "action": "mobiletargeting:GetSmsTemplate",
        "resource_mappings": {
          "TemplateName": {
            "template": "${TemplateName}"
          },
          "ChannelType": {
            "template": "*"
          }
        }
      }
    ],
    "get-user-endpoints": [
      {
        "action": "mobiletargeting:GetUserEndpoints",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "get-voice-channel": [
      {
        "action": "mobiletargeting:GetVoiceChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "get-voice-template": [
      {
        "action": "mobiletargeting:GetVoiceTemplate",
        "resource_mappings": {
          "TemplateName": {
            "template": "${TemplateName}"
          },
          "ChannelType": {
            "template": "*"
          }
        }
      }
    ],
    "list-journeys": [
      {
        "action": "mobiletargeting:ListJourneys",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "mobiletargeting:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "apps": "%%iftemplatematch%${ResourceArn}%%",
          "campaigns": "%%iftemplatematch%${ResourceArn}%%",
          "segments": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "list-template-versions": [
      {
        "action": "mobiletargeting:ListTemplateVersions",
        "resource_mappings": {
          "TemplateName": {
            "template": "${TemplateName}"
          },
          "ChannelType": {
            "template": "*"
          }
        }
      }
    ],
    "list-templates": [
      {
        "action": "mobiletargeting:ListTemplates",
        "resource_mappings": {
          "TemplateName": {
            "template": "*"
          },
          "ChannelType": {
            "template": "*"
          }
        }
      }
    ],
    "phone-number-validate": [
      {
        "action": "mobiletargeting:PhoneNumberValidate",
        "resource_mappings": {}
      }
    ],
    "put-event-stream": [
      {
        "action": "mobiletargeting:PutEventStream",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${WriteEventStream.RoleArn}"
        }
      }
    ],
    "put-events": [
      {
        "action": "mobiletargeting:PutEvents",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "remove-attributes": [
      {
        "action": "mobiletargeting:RemoveAttributes",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "send-messages": [
      {
        "action": "mobiletargeting:SendMessages",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "send-otp-message": [
      {
        "action": "mobiletargeting:SendOTPMessage",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "send-users-messages": [
      {
        "action": "mobiletargeting:SendUsersMessages",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "mobiletargeting:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "apps": "%%iftemplatematch%${ResourceArn}%%",
          "campaigns": "%%iftemplatematch%${ResourceArn}%%",
          "segments": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "mobiletargeting:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "apps": "%%iftemplatematch%${ResourceArn}%%",
          "campaigns": "%%iftemplatematch%${ResourceArn}%%",
          "segments": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-adm-channel": [
      {
        "action": "mobiletargeting:UpdateAdmChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "update-apns-channel": [
      {
        "action": "mobiletargeting:UpdateApnsChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "update-apns-sandbox-channel": [
      {
        "action": "mobiletargeting:UpdateApnsSandboxChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "update-apns-voip-channel": [
      {
        "action": "mobiletargeting:UpdateApnsVoipChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "update-apns-voip-sandbox-channel": [
      {
        "action": "mobiletargeting:UpdateApnsVoipSandboxChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "update-application-settings": [
      {
        "action": "mobiletargeting:UpdateApplicationSettings",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "update-baidu-channel": [
      {
        "action": "mobiletargeting:UpdateBaiduChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "update-campaign": [
      {
        "action": "mobiletargeting:UpdateCampaign",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          },
          "CampaignId": {
            "template": "${CampaignId}"
          }
        }
      }
    ],
    "update-email-channel": [
      {
        "action": "mobiletargeting:UpdateEmailChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${EmailChannelRequest.RoleArn}"
        }
      }
    ],
    "update-email-template": [
      {
        "action": "mobiletargeting:UpdateEmailTemplate",
        "resource_mappings": {
          "TemplateName": {
            "template": "${TemplateName}"
          },
          "ChannelType": {
            "template": "*"
          }
        }
      }
    ],
    "update-endpoint": [
      {
        "action": "mobiletargeting:UpdateEndpoint",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "update-endpoints-batch": [
      {
        "action": "mobiletargeting:UpdateEndpointsBatch",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "update-gcm-channel": [
      {
        "action": "mobiletargeting:UpdateGcmChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "update-in-app-template": [
      {
        "action": "mobiletargeting:UpdateInAppTemplate",
        "resource_mappings": {
          "TemplateName": {
            "template": "${TemplateName}"
          },
          "ChannelType": {
            "template": "*"
          }
        }
      }
    ],
    "update-journey": [
      {
        "action": "mobiletargeting:UpdateJourney",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          },
          "JourneyId": {
            "template": "${JourneyId}"
          }
        }
      }
    ],
    "update-journey-state": [
      {
        "action": "mobiletargeting:UpdateJourneyState",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          },
          "JourneyId": {
            "template": "${JourneyId}"
          }
        }
      }
    ],
    "update-push-template": [
      {
        "action": "mobiletargeting:UpdatePushTemplate",
        "resource_mappings": {
          "TemplateName": {
            "template": "${TemplateName}"
          },
          "ChannelType": {
            "template": "*"
          }
        }
      }
    ],
    "update-recommender-configuration": [
      {
        "action": "mobiletargeting:UpdateRecommenderConfiguration",
        "resource_mappings": {
          "RecommenderId": {
            "template": "${RecommenderId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${UpdateRecommenderConfiguration.RecommendationProviderRoleArn}"
        }
      }
    ],
    "update-segment": [
      {
        "action": "mobiletargeting:UpdateSegment",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          },
          "SegmentId": {
            "template": "${SegmentId}"
          }
        }
      }
    ],
    "update-sms-channel": [
      {
        "action": "mobiletargeting:UpdateSmsChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "update-sms-template": [
      {
        "action": "mobiletargeting:UpdateSmsTemplate",
        "resource_mappings": {
          "TemplateName": {
            "template": "${TemplateName}"
          },
          "ChannelType": {
            "template": "*"
          }
        }
      }
    ],
    "update-template-active-version": [
      {
        "action": "mobiletargeting:UpdateTemplateActiveVersion",
        "resource_mappings": {
          "TemplateName": {
            "template": "${TemplateName}"
          },
          "ChannelType": {
            "template": "*"
          }
        }
      }
    ],
    "update-voice-channel": [
      {
        "action": "mobiletargeting:UpdateVoiceChannel",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "update-voice-template": [
      {
        "action": "mobiletargeting:UpdateVoiceTemplate",
        "resource_mappings": {
          "TemplateName": {
            "template": "${TemplateName}"
          },
          "ChannelType": {
            "template": "*"
          }
        }
      }
    ],
    "verify-otp-message": [
      {
        "action": "mobiletargeting:VerifyOTPMessage",
        "resource_mappings": {
          "AppId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ]
  },
  "pinpoint-email": {
    "create-configuration-set": [
      {
        "action": "ses:CreateConfigurationSet",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      }
    ],
    "create-configuration-set-event-destination": [
      {
        "action": "ses:CreateConfigurationSetEventDestination",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${EventDestination.KinesisFirehoseDestination.IAMRoleARN}"
        }
      }
    ],
    "create-dedicated-ip-pool": [
      {
        "action": "ses:CreateDedicatedIpPool",
        "resource_mappings": {
          "TemplateName": {
            "template": "${PoolName}"
          }
        }
      }
    ],
    "create-deliverability-test-report": [
      {
        "action": "ses:CreateDeliverabilityTestReport",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "create-email-identity": [
      {
        "action": "ses:CreateEmailIdentity",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "delete-configuration-set": [
      {
        "action": "ses:DeleteConfigurationSet",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      }
    ],
    "delete-configuration-set-event-destination": [
      {
        "action": "ses:DeleteConfigurationSetEventDestination",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      }
    ],
    "delete-dedicated-ip-pool": [
      {
        "action": "ses:DeleteDedicatedIpPool",
        "resource_mappings": {
          "TemplateName": {
            "template": "${PoolName}"
          }
        }
      }
    ],
    "delete-email-identity": [
      {
        "action": "ses:DeleteEmailIdentity",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "get-account": [
      {
        "action": "ses:GetAccount",
        "resource_mappings": {}
      }
    ],
    "get-blacklist-reports": [
      {
        "action": "ses:GetBlacklistReports",
        "resource_mappings": {}
      }
    ],
    "get-configuration-set": [
      {
        "action": "ses:GetConfigurationSet",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      }
    ],
    "get-configuration-set-event-destinations": [
      {
        "action": "ses:GetConfigurationSetEventDestinations",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      }
    ],
    "get-dedicated-ip": [
      {
        "action": "ses:GetDedicatedIp",
        "resource_mappings": {}
      }
    ],
    "get-dedicated-ips": [
      {
        "action": "ses:GetDedicatedIps",
        "resource_mappings": {
          "TemplateName": {
            "template": "${PoolName}"
          }
        }
      }
    ],
    "get-deliverability-dashboard-options": [
      {
        "action": "ses:GetDeliverabilityDashboardOptions",
        "resource_mappings": {}
      }
    ],
    "get-deliverability-test-report": [
      {
        "action": "ses:GetDeliverabilityTestReport",
        "resource_mappings": {
          "TemplateName": {
            "template": "${ReportId}"
          }
        }
      }
    ],
    "get-domain-deliverability-campaign": [
      {
        "action": "ses:GetDomainDeliverabilityCampaign",
        "resource_mappings": {}
      },
      {
        "action": "ses:GetDomainDeliverabilityCampaign",
        "resource_mappings": {}
      }
    ],
    "get-domain-statistics-report": [
      {
        "action": "ses:GetDomainStatisticsReport",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "get-email-identity": [
      {
        "action": "ses:GetEmailIdentity",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "list-configuration-sets": [
      {
        "action": "ses:ListConfigurationSets",
        "resource_mappings": {}
      }
    ],
    "list-dedicated-ip-pools": [
      {
        "action": "ses:ListDedicatedIpPools",
        "resource_mappings": {}
      }
    ],
    "list-deliverability-test-reports": [
      {
        "action": "ses:ListDeliverabilityTestReports",
        "resource_mappings": {}
      }
    ],
    "list-domain-deliverability-campaigns": [
      {
        "action": "ses:ListDomainDeliverabilityCampaigns",
        "resource_mappings": {}
      },
      {
        "action": "ses:ListDomainDeliverabilityCampaigns",
        "resource_mappings": {}
      }
    ],
    "list-email-identities": [
      {
        "action": "ses:ListEmailIdentities",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "ses:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "configuration-set": "%%iftemplatematch%${ResourceArn}%%",
          "dedicated-ip-pool": "%%iftemplatematch%${ResourceArn}%%",
          "deliverability-test-report": "%%iftemplatematch%${ResourceArn}%%",
          "identity": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "put-account-dedicated-ip-warmup-attributes": [
      {
        "action": "ses:PutAccountDedicatedIpWarmupAttributes",
        "resource_mappings": {}
      }
    ],
    "put-account-sending-attributes": [
      {
        "action": "ses:PutAccountSendingAttributes",
        "resource_mappings": {}
      }
    ],
    "put-configuration-set-delivery-options": [
      {
        "action": "ses:PutConfigurationSetDeliveryOptions",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      }
    ],
    "put-configuration-set-reputation-options": [
      {
        "action": "ses:PutConfigurationSetReputationOptions",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      }
    ],
    "put-configuration-set-sending-options": [
      {
        "action": "ses:PutConfigurationSetSendingOptions",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      }
    ],
    "put-configuration-set-tracking-options": [
      {
        "action": "ses:PutConfigurationSetTrackingOptions",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      }
    ],
    "put-dedicated-ip-in-pool": [
      {
        "action": "ses:PutDedicatedIpInPool",
        "resource_mappings": {
          "TemplateName": {
            "template": "${DestinationPoolName}"
          }
        }
      }
    ],
    "put-dedicated-ip-warmup-attributes": [
      {
        "action": "ses:PutDedicatedIpWarmupAttributes",
        "resource_mappings": {}
      }
    ],
    "put-deliverability-dashboard-option": [
      {
        "action": "ses:PutDeliverabilityDashboardOption",
        "resource_mappings": {}
      }
    ],
    "put-email-identity-dkim-attributes": [
      {
        "action": "ses:PutEmailIdentityDkimAttributes",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "put-email-identity-feedback-attributes": [
      {
        "action": "ses:PutEmailIdentityFeedbackAttributes",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "put-email-identity-mail-from-attributes": [
      {
        "action": "ses:PutEmailIdentityMailFromAttributes",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "send-email": [
      {
        "action": "ses:SendEmail",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "ses:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "configuration-set": "%%iftemplatematch%${ResourceArn}%%",
          "dedicated-ip-pool": "%%iftemplatematch%${ResourceArn}%%",
          "deliverability-test-report": "%%iftemplatematch%${ResourceArn}%%",
          "identity": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "ses:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "configuration-set": "%%iftemplatematch%${ResourceArn}%%",
          "dedicated-ip-pool": "%%iftemplatematch%${ResourceArn}%%",
          "deliverability-test-report": "%%iftemplatematch%${ResourceArn}%%",
          "identity": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-configuration-set-event-destination": [
      {
        "action": "ses:UpdateConfigurationSetEventDestination",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${EventDestination.KinesisFirehoseDestination.IAMRoleARN}"
        }
      }
    ]
  },
  "pinpoint-sms-voice": {
    "create-configuration-set": [
      {
        "action": "sms-voice:CreateConfigurationSet",
        "resource_mappings": {}
      }
    ],
    "create-configuration-set-event-destination": [
      {
        "action": "sms-voice:CreateConfigurationSetEventDestination",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${EventDestination.CloudWatchLogsDestination.IamRoleArn}%${EventDestination.KinesisFirehoseDestination.IamRoleArn}%%"
        }
      }
    ],
    "delete-configuration-set": [
      {
        "action": "sms-voice:DeleteConfigurationSet",
        "resource_mappings": {}
      }
    ],
    "delete-configuration-set-event-destination": [
      {
        "action": "sms-voice:DeleteConfigurationSetEventDestination",
        "resource_mappings": {}
      }
    ],
    "get-configuration-set-event-destinations": [
      {
        "action": "sms-voice:GetConfigurationSetEventDestinations",
        "resource_mappings": {}
      }
    ],
    "send-voice-message": [
      {
        "action": "sms-voice:SendVoiceMessage",
        "resource_mappings": {}
      }
    ],
    "update-configuration-set-event-destination": [
      {
        "action": "sms-voice:UpdateConfigurationSetEventDestination",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${EventDestination.CloudWatchLogsDestination.IamRoleArn}%${EventDestination.KinesisFirehoseDestination.IamRoleArn}%%"
        }
      }
    ]
  },
  "pinpoint-sms-voice-v2": {
    "associate-origination-identity": [
      {
        "action": "sms-voice:AssociateOriginationIdentity",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "create-configuration-set": [
      {
        "action": "sms-voice:CreateConfigurationSet",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "create-event-destination": [
      {
        "action": "sms-voice:CreateEventDestination",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "create-opt-out-list": [
      {
        "action": "sms-voice:CreateOptOutList",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "create-pool": [
      {
        "action": "sms-voice:CreatePool",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "delete-configuration-set": [
      {
        "action": "sms-voice:DeleteConfigurationSet",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "delete-default-message-type": [
      {
        "action": "sms-voice:DeleteDefaultMessageType",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "delete-default-sender-id": [
      {
        "action": "sms-voice:DeleteDefaultSenderId",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "delete-event-destination": [
      {
        "action": "sms-voice:DeleteEventDestination",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "delete-keyword": [
      {
        "action": "sms-voice:DeleteKeyword",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "delete-opt-out-list": [
      {
        "action": "sms-voice:DeleteOptOutList",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "delete-opted-out-number": [
      {
        "action": "sms-voice:DeleteOptedOutNumber",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "delete-pool": [
      {
        "action": "sms-voice:DeletePool",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "delete-text-message-spend-limit-override": [
      {
        "action": "sms-voice:DeleteTextMessageSpendLimitOverride",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "delete-voice-message-spend-limit-override": [
      {
        "action": "sms-voice:DeleteVoiceMessageSpendLimitOverride",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "describe-account-attributes": [
      {
        "action": "sms-voice:DescribeAccountAttributes",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "describe-account-limits": [
      {
        "action": "sms-voice:DescribeAccountLimits",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "describe-configuration-sets": [
      {
        "action": "sms-voice:DescribeConfigurationSets",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "describe-keywords": [
      {
        "action": "sms-voice:DescribeKeywords",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "describe-opt-out-lists": [
      {
        "action": "sms-voice:DescribeOptOutLists",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "describe-opted-out-numbers": [
      {
        "action": "sms-voice:DescribeOptedOutNumbers",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "describe-phone-numbers": [
      {
        "action": "sms-voice:DescribePhoneNumbers",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "describe-pools": [
      {
        "action": "sms-voice:DescribePools",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "describe-sender-ids": [
      {
        "action": "sms-voice:DescribeSenderIds",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "describe-spend-limits": [
      {
        "action": "sms-voice:DescribeSpendLimits",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "disassociate-origination-identity": [
      {
        "action": "sms-voice:DisassociateOriginationIdentity",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "list-pool-origination-identities": [
      {
        "action": "sms-voice:ListPoolOriginationIdentities",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "sms-voice:ListTagsForResource",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "put-keyword": [
      {
        "action": "sms-voice:PutKeyword",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "put-opted-out-number": [
      {
        "action": "sms-voice:PutOptedOutNumber",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "release-phone-number": [
      {
        "action": "sms-voice:ReleasePhoneNumber",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "request-phone-number": [
      {
        "action": "sms-voice:RequestPhoneNumber",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "send-text-message": [
      {
        "action": "sms-voice:SendTextMessage",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "send-voice-message": [
      {
        "action": "sms-voice:SendVoiceMessage",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "set-default-message-type": [
      {
        "action": "sms-voice:SetDefaultMessageType",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "set-default-sender-id": [
      {
        "action": "sms-voice:SetDefaultSenderId",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "set-text-message-spend-limit-override": [
      {
        "action": "sms-voice:SetTextMessageSpendLimitOverride",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "set-voice-message-spend-limit-override": [
      {
        "action": "sms-voice:SetVoiceMessageSpendLimitOverride",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "sms-voice:TagResource",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "sms-voice:UntagResource",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "update-event-destination": [
      {
        "action": "sms-voice:UpdateEventDestination",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "update-phone-number": [
      {
        "action": "sms-voice:UpdatePhoneNumber",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "update-pool": [
      {
        "action": "sms-voice:UpdatePool",
        "undocumented": true,
        "resource_mappings": {}
      }
    ]
  },
  "pipes": {
    "create-pipe": [
      {
        "action": "pipes:CreatePipe",
        "resource_mappings": {
          "Name": {
            "template": "${Name}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${RoleArn}"
        }
      }
    ],
    "delete-pipe": [
      {
        "action": "pipes:DeletePipe",
        "resource_mappings": {
          "Name": {
            "template": "${Name}"
          }
        }
      }
    ],
    "describe-pipe": [
      {
        "action": "pipes:DescribePipe",
        "resource_mappings": {
          "Name": {
            "template": "${Name}"
          }
        }
      }
    ],
    "list-pipes": [
      {
        "action": "pipes:ListPipes",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "pipes:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "pipe": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "start-pipe": [
      {
        "action": "pipes:StartPipe",
        "resource_mappings": {
          "Name": {
            "template": "${Name}"
          }
        }
      }
    ],
    "stop-pipe": [
      {
        "action": "pipes:StopPipe",
        "resource_mappings": {
          "Name": {
            "template": "${Name}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "pipes:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "pipe": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "pipes:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "pipe": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-pipe": [
      {
        "action": "pipes:UpdatePipe",
        "resource_mappings": {
          "Name": {
            "template": "${Name}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${RoleArn}"
        }
      }
    ]
  },
  "polly": {
    "delete-lexicon": [
      {
        "action": "polly:DeleteLexicon",
        "resource_mappings": {
          "LexiconName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "describe-voices": [
      {
        "action": "polly:DescribeVoices",
        "resource_mappings": {}
      }
    ],
    "get-lexicon": [
      {
        "action": "polly:GetLexicon",
        "resource_mappings": {
          "LexiconName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-speech-synthesis-task": [
      {
        "action": "polly:GetSpeechSynthesisTask",
        "resource_mappings": {}
      }
    ],
    "list-lexicons": [
      {
        "action": "polly:ListLexicons",
        "resource_mappings": {}
      }
    ],
    "list-speech-synthesis-tasks": [
      {
        "action": "polly:ListSpeechSynthesisTasks",
        "resource_mappings": {}
      }
    ],
    "put-lexicon": [
      {
        "action": "polly:PutLexicon",
        "resource_mappings": {
          "LexiconName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "start-speech-synthesis-task": [
      {
        "action": "polly:StartSpeechSynthesisTask",
        "resource_mappings": {
          "LexiconName": {
            "template": "${LexiconNames[]}"
          }
        }
      },
      {
        "action": "s3:PutObject",
        "resource_mappings": {
          "BucketName": {
            "template": "${OutputS3BucketName}"
          },
          "ObjectName": {
            "template": "${OutputS3KeyPrefix}*"
          }
        }
      }
    ],
    "synthesize-speech": [
      {
        "action": "polly:SynthesizeSpeech",
        "resource_mappings": {
          "LexiconName": {
            "template": "${LexiconNames[]}"
          }
        }
      }
    ]
  },
  "pricing": {
    "describe-services": [
      {
        "action": "pricing:DescribeServices",
        "resource_mappings": {}
      }
    ],
    "get-attribute-values": [
      {
        "action": "pricing:GetAttributeValues",
        "resource_mappings": {}
      }
    ],
    "get-price-list-file-url": [
      {
        "action": "pricing:GetPriceListFileUrl",
        "resource_mappings": {}
      }
    ],
    "get-products": [
      {
        "action": "pricing:GetProducts",
        "resource_mappings": {}
      }
    ],
    "list-price-lists": [
      {
        "action": "pricing:ListPriceLists",
        "resource_mappings": {}
      }
    ]
  },
  "privatenetworks": {
    "acknowledge-order-receipt": [
      {
        "action": "private-networks:AcknowledgeOrderReceipt",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "order": "${orderArn}"
        }
      }
    ],
    "activate-device-identifier": [
      {
        "action": "private-networks:ActivateDeviceIdentifier",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "device-identifier": "${deviceIdentifierArn}"
        }
      }
    ],
    "activate-network-site": [
      {
        "action": "private-networks:ActivateNetworkSite",
        "resource_mappings": {
          "NetworkName": {
            "template": "*"
          },
          "OrderId": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "network-site": "${networkSiteArn}"
        }
      }
    ],
    "configure-access-point": [
      {
        "action": "private-networks:ConfigureAccessPoint",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "network-resource": "${accessPointArn}"
        }
      }
    ],
    "create-network": [
      {
        "action": "private-networks:CreateNetwork",
        "resource_mappings": {
          "NetworkName": {
            "template": "${networkName}"
          }
        }
      }
    ],
    "create-network-site": [
      {
        "action": "private-networks:CreateNetworkSite",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "network": "${networkArn}"
        }
      }
    ],
    "deactivate-device-identifier": [
      {
        "action": "private-networks:DeactivateDeviceIdentifier",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "device-identifier": "${deviceIdentifierArn}"
        }
      }
    ],
    "delete-network": [
      {
        "action": "private-networks:DeleteNetwork",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "network": "${networkArn}"
        }
      }
    ],
    "delete-network-site": [
      {
        "action": "private-networks:DeleteNetworkSite",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "network-site": "${networkSiteArn}"
        }
      }
    ],
    "get-device-identifier": [
      {
        "action": "private-networks:GetDeviceIdentifier",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "device-identifier": "${deviceIdentifierArn}"
        }
      }
    ],
    "get-network": [
      {
        "action": "private-networks:GetNetwork",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "network": "${networkArn}"
        }
      }
    ],
    "get-network-resource": [
      {
        "action": "private-networks:GetNetworkResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "network-resource": "${networkResourceArn}"
        }
      }
    ],
    "get-network-site": [
      {
        "action": "private-networks:GetNetworkSite",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "network-site": "${networkSiteArn}"
        }
      }
    ],
    "get-order": [
      {
        "action": "private-networks:GetOrder",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "order": "${orderArn}"
        }
      }
    ],
    "list-device-identifiers": [
      {
        "action": "private-networks:ListDeviceIdentifiers",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "network": "${networkArn}"
        }
      }
    ],
    "list-network-resources": [
      {
        "action": "private-networks:ListNetworkResources",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "network": "${networkArn}"
        }
      }
    ],
    "list-network-sites": [
      {
        "action": "private-networks:ListNetworkSites",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "network": "${networkArn}"
        }
      }
    ],
    "list-networks": [
      {
        "action": "private-networks:ListNetworks",
        "resource_mappings": {}
      }
    ],
    "list-orders": [
      {
        "action": "private-networks:ListOrders",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "network": "${networkArn}"
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "private-networks:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "ping": [
      {
        "action": "private-networks:Ping",
        "resource_mappings": {}
      }
    ],
    "start-network-resource-update": [
      {
        "action": "private-networks:StartNetworkResourceUpdate",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "network-resource": "${networkResourceArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "private-networks:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "device-identifier": "%%iftemplatematch%${resourceArn}%%",
          "network": "%%iftemplatematch%${resourceArn}%%",
          "network-resource": "%%iftemplatematch%${resourceArn}%%",
          "network-site": "%%iftemplatematch%${resourceArn}%%",
          "order": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "private-networks:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "device-identifier": "%%iftemplatematch%${resourceArn}%%",
          "network": "%%iftemplatematch%${resourceArn}%%",
          "network-resource": "%%iftemplatematch%${resourceArn}%%",
          "network-site": "%%iftemplatematch%${resourceArn}%%",
          "order": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-network-site": [
      {
        "action": "private-networks:UpdateNetworkSite",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "network-site": "${networkSiteArn}"
        }
      }
    ],
    "update-network-site-plan": [
      {
        "action": "private-networks:UpdateNetworkSitePlan",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "network-site": "${networkSiteArn}"
        }
      }
    ]
  },
  "proton": {
    "accept-environment-account-connection": [
      {
        "action": "proton:AcceptEnvironmentAccountConnection",
        "resource_mappings": {
          "Id": {
            "template": "${id}"
          }
        }
      }
    ],
    "cancel-component-deployment": [
      {
        "action": "proton:CancelComponentDeployment",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "cancel-environment-deployment": [
      {
        "action": "proton:CancelEnvironmentDeployment",
        "resource_mappings": {
          "Name": {
            "template": "${environmentName}"
          }
        }
      }
    ],
    "cancel-service-instance-deployment": [
      {
        "action": "proton:CancelServiceInstanceDeployment",
        "resource_mappings": {
          "ServiceName": {
            "template": "${serviceName}"
          },
          "Name": {
            "template": "${serviceInstanceName}"
          }
        }
      }
    ],
    "cancel-service-pipeline-deployment": [
      {
        "action": "proton:CancelServicePipelineDeployment",
        "resource_mappings": {
          "Name": {
            "template": "${serviceName}"
          }
        }
      }
    ],
    "create-component": [
      {
        "action": "proton:CreateComponent",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-environment": [
      {
        "action": "proton:CreateEnvironment",
        "resource_mappings": {
          "EnvironmentName": {
            "template": "${name}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${protonServiceRoleArn}"
        }
      }
    ],
    "create-environment-account-connection": [
      {
        "action": "proton:CreateEnvironmentAccountConnection",
        "resource_mappings": {}
      }
    ],
    "create-environment-template": [
      {
        "action": "proton:CreateEnvironmentTemplate",
        "resource_mappings": {
          "TemplateName": {
            "template": "${name}"
          }
        }
      }
    ],
    "create-environment-template-version": [
      {
        "action": "proton:CreateEnvironmentTemplateVersion",
        "resource_mappings": {
          "Name": {
            "template": "${templateName}"
          }
        }
      }
    ],
    "create-repository": [
      {
        "action": "proton:CreateRepository",
        "resource_mappings": {
          "Provider": {
            "template": "${provider}"
          },
          "Name": {
            "template": "${name}"
          }
        }
      }
    ],
    "create-service": [
      {
        "action": "proton:CreateService",
        "resource_mappings": {
          "ServiceName": {
            "template": "${name}"
          }
        }
      },
      {
        "action": "codestar-connections:PassConnection",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Connection": "${repositoryConnectionArn}"
        }
      }
    ],
    "create-service-instance": [
      {
        "action": "proton:CreateServiceInstance",
        "resource_mappings": {
          "ServiceName": {
            "template": "${serviceName}"
          },
          "Name": {
            "template": "${name}"
          }
        }
      }
    ],
    "create-service-sync-config": [
      {
        "action": "proton:CreateServiceSyncConfig",
        "resource_mappings": {}
      }
    ],
    "create-service-template": [
      {
        "action": "proton:CreateServiceTemplate",
        "resource_mappings": {
          "TemplateName": {
            "template": "${name}"
          }
        }
      }
    ],
    "create-service-template-version": [
      {
        "action": "proton:CreateServiceTemplateVersion",
        "resource_mappings": {
          "Name": {
            "template": "${templateName}"
          }
        }
      }
    ],
    "create-template-sync-config": [
      {
        "action": "proton:CreateTemplateSyncConfig",
        "resource_mappings": {}
      }
    ],
    "delete-component": [
      {
        "action": "proton:DeleteComponent",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-deployment": [
      {
        "action": "proton:DeleteDeployment",
        "resource_mappings": {
          "Id": {
            "template": "${id}"
          }
        }
      }
    ],
    "delete-environment": [
      {
        "action": "proton:DeleteEnvironment",
        "resource_mappings": {
          "EnvironmentName": {
            "template": "${name}"
          }
        }
      }
    ],
    "delete-environment-account-connection": [
      {
        "action": "proton:DeleteEnvironmentAccountConnection",
        "resource_mappings": {
          "Id": {
            "template": "${id}"
          }
        }
      }
    ],
    "delete-environment-template": [
      {
        "action": "proton:DeleteEnvironmentTemplate",
        "resource_mappings": {
          "TemplateName": {
            "template": "${name}"
          }
        }
      }
    ],
    "delete-environment-template-version": [
      {
        "action": "proton:DeleteEnvironmentTemplateVersion",
        "resource_mappings": {
          "Name": {
            "template": "${templateName}"
          }
        }
      }
    ],
    "delete-repository": [
      {
        "action": "proton:DeleteRepository",
        "resource_mappings": {
          "Provider": {
            "template": "${provider}"
          },
          "Name": {
            "template": "${name}"
          }
        }
      }
    ],
    "delete-service": [
      {
        "action": "proton:DeleteService",
        "resource_mappings": {
          "ServiceName": {
            "template": "${name}"
          }
        }
      }
    ],
    "delete-service-sync-config": [
      {
        "action": "proton:DeleteServiceSyncConfig",
        "resource_mappings": {}
      }
    ],
    "delete-service-template": [
      {
        "action": "proton:DeleteServiceTemplate",
        "resource_mappings": {
          "TemplateName": {
            "template": "${name}"
          }
        }
      }
    ],
    "delete-service-template-version": [
      {
        "action": "proton:DeleteServiceTemplateVersion",
        "resource_mappings": {
          "Name": {
            "template": "${templateName}"
          }
        }
      }
    ],
    "delete-template-sync-config": [
      {
        "action": "proton:DeleteTemplateSyncConfig",
        "resource_mappings": {}
      }
    ],
    "get-account-settings": [
      {
        "action": "proton:GetAccountSettings",
        "resource_mappings": {}
      }
    ],
    "get-component": [
      {
        "action": "proton:GetComponent",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-deployment": [
      {
        "action": "proton:GetDeployment",
        "resource_mappings": {
          "Id": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-environment": [
      {
        "action": "proton:GetEnvironment",
        "resource_mappings": {
          "EnvironmentName": {
            "template": "${name}"
          }
        }
      }
    ],
    "get-environment-account-connection": [
      {
        "action": "proton:GetEnvironmentAccountConnection",
        "resource_mappings": {
          "Id": {
            "template": "${id}"
          }
        }
      }
    ],
    "get-environment-template": [
      {
        "action": "proton:GetEnvironmentTemplate",
        "resource_mappings": {
          "TemplateName": {
            "template": "${name}"
          }
        }
      }
    ],
    "get-environment-template-version": [
      {
        "action": "proton:GetEnvironmentTemplateVersion",
        "resource_mappings": {
          "Name": {
            "template": "${templateName}"
          }
        }
      }
    ],
    "get-repository": [
      {
        "action": "proton:GetRepository",
        "resource_mappings": {
          "Provider": {
            "template": "${provider}"
          },
          "Name": {
            "template": "${name}"
          }
        }
      }
    ],
    "get-repository-sync-status": [
      {
        "action": "proton:GetRepositorySyncStatus",
        "resource_mappings": {}
      }
    ],
    "get-resources-summary": [
      {
        "action": "proton:GetResourcesSummary",
        "resource_mappings": {}
      }
    ],
    "get-service": [
      {
        "action": "proton:GetService",
        "resource_mappings": {
          "ServiceName": {
            "template": "${name}"
          }
        }
      }
    ],
    "get-service-instance": [
      {
        "action": "proton:GetServiceInstance",
        "resource_mappings": {
          "ServiceName": {
            "template": "${serviceName}"
          },
          "ServiceInstanceName": {
            "template": "${name}"
          }
        }
      }
    ],
    "get-service-instance-sync-status": [
      {
        "action": "proton:GetServiceInstanceSyncStatus",
        "resource_mappings": {}
      }
    ],
    "get-service-sync-blocker-summary": [
      {
        "action": "proton:GetServiceSyncBlockerSummary",
        "resource_mappings": {}
      }
    ],
    "get-service-sync-config": [
      {
        "action": "proton:GetServiceSyncConfig",
        "resource_mappings": {}
      }
    ],
    "get-service-template": [
      {
        "action": "proton:GetServiceTemplate",
        "resource_mappings": {
          "TemplateName": {
            "template": "${name}"
          }
        }
      }
    ],
    "get-service-template-version": [
      {
        "action": "proton:GetServiceTemplateVersion",
        "resource_mappings": {
          "Name": {
            "template": "${templateName}"
          }
        }
      }
    ],
    "get-template-sync-config": [
      {
        "action": "proton:GetTemplateSyncConfig",
        "resource_mappings": {}
      }
    ],
    "get-template-sync-status": [
      {
        "action": "proton:GetTemplateSyncStatus",
        "resource_mappings": {}
      }
    ],
    "list-component-outputs": [
      {
        "action": "proton:ListComponentOutputs",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "list-component-provisioned-resources": [
      {
        "action": "proton:ListComponentProvisionedResources",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "list-components": [
      {
        "action": "proton:ListComponents",
        "resource_mappings": {
          "Name": {
            "template": "${serviceInstanceName}"
          },
          "ServiceName": {
            "template": "${serviceName}"
          }
        }
      }
    ],
    "list-deployments": [
      {
        "action": "proton:ListDeployments",
        "resource_mappings": {}
      }
    ],
    "list-environment-account-connections": [
      {
        "action": "proton:ListEnvironmentAccountConnections",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "list-environment-outputs": [
      {
        "action": "proton:ListEnvironmentOutputs",
        "resource_mappings": {
          "Name": {
            "template": "${environmentName}"
          }
        }
      }
    ],
    "list-environment-provisioned-resources": [
      {
        "action": "proton:ListEnvironmentProvisionedResources",
        "resource_mappings": {
          "Name": {
            "template": "${environmentName}"
          }
        }
      }
    ],
    "list-environment-template-versions": [
      {
        "action": "proton:ListEnvironmentTemplateVersions",
        "resource_mappings": {
          "Name": {
            "template": "${templateName}"
          }
        }
      }
    ],
    "list-environment-templates": [
      {
        "action": "proton:ListEnvironmentTemplates",
        "resource_mappings": {}
      }
    ],
    "list-environments": [
      {
        "action": "proton:ListEnvironments",
        "resource_mappings": {}
      }
    ],
    "list-repositories": [
      {
        "action": "proton:ListRepositories",
        "resource_mappings": {}
      }
    ],
    "list-repository-sync-definitions": [
      {
        "action": "proton:ListRepositorySyncDefinitions",
        "resource_mappings": {}
      }
    ],
    "list-service-instance-outputs": [
      {
        "action": "proton:ListServiceInstanceOutputs",
        "resource_mappings": {
          "Name": {
            "template": "${serviceInstanceName}"
          },
          "ServiceName": {
            "template": "${serviceName}"
          }
        }
      }
    ],
    "list-service-instance-provisioned-resources": [
      {
        "action": "proton:ListServiceInstanceProvisionedResources",
        "resource_mappings": {
          "Name": {
            "template": "${serviceInstanceName}"
          },
          "ServiceName": {
            "template": "${serviceName}"
          }
        }
      }
    ],
    "list-service-instances": [
      {
        "action": "proton:ListServiceInstances",
        "resource_mappings": {}
      }
    ],
    "list-service-pipeline-outputs": [
      {
        "action": "proton:ListServicePipelineOutputs",
        "resource_mappings": {
          "Name": {
            "template": "${serviceName}"
          }
        }
      }
    ],
    "list-service-pipeline-provisioned-resources": [
      {
        "action": "proton:ListServicePipelineProvisionedResources",
        "resource_mappings": {
          "Name": {
            "template": "${serviceName}"
          }
        }
      }
    ],
    "list-service-template-versions": [
      {
        "action": "proton:ListServiceTemplateVersions",
        "resource_mappings": {
          "Name": {
            "template": "${templateName}"
          }
        }
      }
    ],
    "list-service-templates": [
      {
        "action": "proton:ListServiceTemplates",
        "resource_mappings": {}
      }
    ],
    "list-services": [
      {
        "action": "proton:ListServices",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "proton:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "environment": "%%iftemplatematch%${resourceArn}%%",
          "environment-template": "%%iftemplatematch%${resourceArn}%%",
          "environment-template-major-version": "%%iftemplatematch%${resourceArn}%%",
          "environment-template-minor-version": "%%iftemplatematch%${resourceArn}%%",
          "service": "%%iftemplatematch%${resourceArn}%%",
          "service-instance": "%%iftemplatematch%${resourceArn}%%",
          "service-template": "%%iftemplatematch%${resourceArn}%%",
          "service-template-major-version": "%%iftemplatematch%${resourceArn}%%",
          "service-template-minor-version": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "notify-resource-deployment-status-change": [
      {
        "action": "proton:NotifyResourceDeploymentStatusChange",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "environment": "%%iftemplatematch%${resourceArn}%%",
          "service-instance": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "reject-environment-account-connection": [
      {
        "action": "proton:RejectEnvironmentAccountConnection",
        "resource_mappings": {
          "Id": {
            "template": "${id}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "proton:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "environment": "%%iftemplatematch%${resourceArn}%%",
          "environment-template": "%%iftemplatematch%${resourceArn}%%",
          "environment-template-major-version": "%%iftemplatematch%${resourceArn}%%",
          "environment-template-minor-version": "%%iftemplatematch%${resourceArn}%%",
          "service": "%%iftemplatematch%${resourceArn}%%",
          "service-instance": "%%iftemplatematch%${resourceArn}%%",
          "service-template": "%%iftemplatematch%${resourceArn}%%",
          "service-template-major-version": "%%iftemplatematch%${resourceArn}%%",
          "service-template-minor-version": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "proton:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "environment": "%%iftemplatematch%${resourceArn}%%",
          "environment-template": "%%iftemplatematch%${resourceArn}%%",
          "environment-template-major-version": "%%iftemplatematch%${resourceArn}%%",
          "environment-template-minor-version": "%%iftemplatematch%${resourceArn}%%",
          "service": "%%iftemplatematch%${resourceArn}%%",
          "service-instance": "%%iftemplatematch%${resourceArn}%%",
          "service-template": "%%iftemplatematch%${resourceArn}%%",
          "service-template-major-version": "%%iftemplatematch%${resourceArn}%%",
          "service-template-minor-version": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-account-settings": [
      {
        "action": "proton:UpdateAccountSettings",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${pipelineServiceRoleArn}"
        }
      }
    ],
    "update-component": [
      {
        "action": "proton:UpdateComponent",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "update-environment": [
      {
        "action": "proton:UpdateEnvironment",
        "resource_mappings": {
          "EnvironmentName": {
            "template": "${name}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${protonServiceRoleArn}"
        }
      }
    ],
    "update-environment-account-connection": [
      {
        "action": "proton:UpdateEnvironmentAccountConnection",
        "resource_mappings": {
          "Id": {
            "template": "${id}"
          }
        }
      }
    ],
    "update-environment-template": [
      {
        "action": "proton:UpdateEnvironmentTemplate",
        "resource_mappings": {
          "TemplateName": {
            "template": "${name}"
          }
        }
      }
    ],
    "update-environment-template-version": [
      {
        "action": "proton:UpdateEnvironmentTemplateVersion",
        "resource_mappings": {
          "Name": {
            "template": "${templateName}"
          }
        }
      }
    ],
    "update-service": [
      {
        "action": "proton:UpdateService",
        "resource_mappings": {
          "ServiceName": {
            "template": "${name}"
          }
        }
      }
    ],
    "update-service-instance": [
      {
        "action": "proton:UpdateServiceInstance",
        "resource_mappings": {
          "ServiceName": {
            "template": "${serviceName}"
          },
          "ServiceInstanceName": {
            "template": "${name}"
          }
        }
      }
    ],
    "update-service-pipeline": [
      {
        "action": "proton:UpdateServicePipeline",
        "resource_mappings": {
          "ServiceName": {
            "template": "${serviceName}"
          }
        }
      }
    ],
    "update-service-sync-blocker": [
      {
        "action": "proton:UpdateServiceSyncBlocker",
        "resource_mappings": {}
      }
    ],
    "update-service-sync-config": [
      {
        "action": "proton:UpdateServiceSyncConfig",
        "resource_mappings": {}
      }
    ],
    "update-service-template": [
      {
        "action": "proton:UpdateServiceTemplate",
        "resource_mappings": {
          "TemplateName": {
            "template": "${name}"
          }
        }
      }
    ],
    "update-service-template-version": [
      {
        "action": "proton:UpdateServiceTemplateVersion",
        "resource_mappings": {
          "Name": {
            "template": "${templateName}"
          }
        }
      }
    ],
    "update-template-sync-config": [
      {
        "action": "proton:UpdateTemplateSyncConfig",
        "resource_mappings": {}
      }
    ],
    "wait": [
      {
        "action": "proton:GetComponent",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ]
  },
  "qldb": {
    "cancel-journal-kinesis-stream": [
      {
        "action": "qldb:CancelJournalKinesisStream",
        "resource_mappings": {
          "LedgerName": {
            "template": "${LedgerName}"
          },
          "StreamId": {
            "template": "${StreamId}"
          }
        }
      }
    ],
    "create-ledger": [
      {
        "action": "qldb:CreateLedger",
        "resource_mappings": {
          "LedgerName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-ledger": [
      {
        "action": "qldb:DeleteLedger",
        "resource_mappings": {
          "LedgerName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "describe-journal-kinesis-stream": [
      {
        "action": "qldb:DescribeJournalKinesisStream",
        "resource_mappings": {
          "LedgerName": {
            "template": "${LedgerName}"
          },
          "StreamId": {
            "template": "${StreamId}"
          }
        }
      }
    ],
    "describe-journal-s3-export": [
      {
        "action": "qldb:DescribeJournalS3Export",
        "resource_mappings": {
          "LedgerName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "describe-ledger": [
      {
        "action": "qldb:DescribeLedger",
        "resource_mappings": {
          "LedgerName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "export-journal-to-s3": [
      {
        "action": "qldb:ExportJournalToS3",
        "resource_mappings": {
          "LedgerName": {
            "template": "${Name}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "get-block": [
      {
        "action": "qldb:GetBlock",
        "resource_mappings": {
          "LedgerName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-digest": [
      {
        "action": "qldb:GetDigest",
        "resource_mappings": {
          "LedgerName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-revision": [
      {
        "action": "qldb:GetRevision",
        "resource_mappings": {
          "LedgerName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "list-journal-kinesis-streams-for-ledger": [
      {
        "action": "qldb:ListJournalKinesisStreamsForLedger",
        "resource_mappings": {
          "LedgerName": {
            "template": "${LedgerName}"
          },
          "StreamId": {
            "template": "*"
          }
        }
      }
    ],
    "list-journal-s3-exports": [
      {
        "action": "qldb:ListJournalS3Exports",
        "resource_mappings": {}
      }
    ],
    "list-journal-s3-exports-for-ledger": [
      {
        "action": "qldb:ListJournalS3ExportsForLedger",
        "resource_mappings": {
          "LedgerName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "list-ledgers": [
      {
        "action": "qldb:ListLedgers",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "qldb:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ledger": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "stream-journal-to-kinesis": [
      {
        "action": "qldb:StreamJournalToKinesis",
        "resource_mappings": {
          "LedgerName": {
            "template": "${LedgerName}"
          },
          "StreamId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "qldb:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ledger": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "qldb:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ledger": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-ledger": [
      {
        "action": "qldb:UpdateLedger",
        "resource_mappings": {
          "LedgerName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "update-ledger-permissions-mode": [
      {
        "action": "qldb:UpdateLedgerPermissionsMode",
        "resource_mappings": {
          "LedgerName": {
            "template": "${Name}"
          }
        }
      }
    ]
  },
  "qldb-session": {
    "send-command": [
      {
        "action": "qldb:SendCommand",
        "resource_mappings": {
          "LedgerName": {
            "template": "${StartSession.LedgerName}"
          }
        }
      }
    ]
  },
  "quicksight": {
    "cancel-ingestion": [
      {
        "action": "quicksight:CancelIngestion",
        "resource_mappings": {
          "DatasetId": {
            "template": "${DataSetId}"
          },
          "ResourceId": {
            "template": "${IngestionId}"
          }
        }
      }
    ],
    "create-account-customization": [
      {
        "action": "quicksight:CreateAccountCustomization",
        "resource_mappings": {}
      }
    ],
    "create-account-subscription": [
      {
        "action": "quicksight:CreateAccountSubscription",
        "resource_mappings": {}
      }
    ],
    "create-analysis": [
      {
        "action": "quicksight:CreateAnalysis",
        "resource_mappings": {
          "ResourceId": {
            "template": "${AnalysisId}"
          }
        }
      }
    ],
    "create-dashboard": [
      {
        "action": "quicksight:CreateDashboard",
        "resource_mappings": {
          "ResourceId": {
            "template": "${DashboardId}"
          }
        }
      }
    ],
    "create-data-set": [
      {
        "action": "quicksight:CreateDataSet",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "quicksight:PassDataSource",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-data-source": [
      {
        "action": "quicksight:CreateDataSource",
        "resource_mappings": {}
      }
    ],
    "create-folder": [
      {
        "action": "quicksight:CreateFolder",
        "resource_mappings": {
          "ResourceId": {
            "template": "${FolderId}"
          }
        }
      }
    ],
    "create-folder-membership": [
      {
        "action": "quicksight:CreateFolderMembership",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-group": [
      {
        "action": "quicksight:CreateGroup",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GroupName}"
          }
        }
      }
    ],
    "create-group-membership": [
      {
        "action": "quicksight:CreateGroupMembership",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GroupName}"
          }
        }
      }
    ],
    "create-iam-policy-assignment": [
      {
        "action": "quicksight:CreateIAMPolicyAssignment",
        "resource_mappings": {
          "ResourceId": {
            "template": "${AssignmentName}"
          }
        }
      }
    ],
    "create-ingestion": [
      {
        "action": "quicksight:CreateIngestion",
        "resource_mappings": {
          "DatasetId": {
            "template": "${DataSetId}"
          },
          "ResourceId": {
            "template": "${IngestionId}"
          }
        }
      }
    ],
    "create-namespace": [
      {
        "action": "quicksight:CreateNamespace",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Namespace}"
          }
        }
      }
    ],
    "create-refresh-schedule": [
      {
        "action": "quicksight:CreateRefreshSchedule",
        "resource_mappings": {
          "DatasetId": {
            "template": "${DataSetId}"
          },
          "ResourceId": {
            "template": "${Schedule.ScheduleId}"
          }
        }
      }
    ],
    "create-template": [
      {
        "action": "quicksight:CreateTemplate",
        "resource_mappings": {
          "ResourceId": {
            "template": "${TemplateId}"
          }
        }
      }
    ],
    "create-template-alias": [
      {
        "action": "quicksight:CreateTemplateAlias",
        "resource_mappings": {
          "ResourceId": {
            "template": "${TemplateId}"
          }
        }
      }
    ],
    "create-theme": [
      {
        "action": "quicksight:CreateTheme",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ThemeId}"
          }
        }
      }
    ],
    "create-theme-alias": [
      {
        "action": "quicksight:CreateThemeAlias",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ThemeId}"
          }
        }
      }
    ],
    "create-topic": [
      {
        "action": "quicksight:CreateTopic",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dataset": "${Topic.DataSets[].DatasetArn}"
        }
      },
      {
        "action": "quicksight:PassDataSet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dataset": "${Topic.DataSets[].DatasetArn}"
        }
      }
    ],
    "create-topic-refresh-schedule": [
      {
        "action": "quicksight:CreateTopicRefreshSchedule",
        "resource_mappings": {
          "ResourceId": {
            "template": "${TopicId}"
          }
        }
      }
    ],
    "create-vpc-connection": [
      {
        "action": "quicksight:CreateVPCConnection",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${RoleArn}"
        }
      }
    ],
    "delete-account-customization": [
      {
        "action": "quicksight:DeleteAccountCustomization",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-account-subscription": [
      {
        "action": "quicksight:DeleteAccountSubscription",
        "resource_mappings": {
          "ResourceId": {
            "template": "${AwsAccountId}"
          }
        }
      }
    ],
    "delete-analysis": [
      {
        "action": "quicksight:DeleteAnalysis",
        "resource_mappings": {
          "ResourceId": {
            "template": "${AnalysisId}"
          }
        }
      }
    ],
    "delete-dashboard": [
      {
        "action": "quicksight:DeleteDashboard",
        "resource_mappings": {
          "ResourceId": {
            "template": "${DashboardId}"
          }
        }
      }
    ],
    "delete-data-set": [
      {
        "action": "quicksight:DeleteDataSet",
        "resource_mappings": {
          "ResourceId": {
            "template": "${DataSetId}"
          }
        }
      }
    ],
    "delete-data-set-refresh-properties": [
      {
        "action": "quicksight:DeleteDataSetRefreshProperties",
        "resource_mappings": {
          "ResourceId": {
            "template": "${DataSetId}"
          }
        }
      }
    ],
    "delete-data-source": [
      {
        "action": "quicksight:DeleteDataSource",
        "resource_mappings": {
          "ResourceId": {
            "template": "${DataSourceId}"
          }
        }
      }
    ],
    "delete-folder": [
      {
        "action": "quicksight:DeleteFolder",
        "resource_mappings": {
          "ResourceId": {
            "template": "${FolderId}"
          }
        }
      }
    ],
    "delete-folder-membership": [
      {
        "action": "quicksight:DeleteFolderMembership",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-group": [
      {
        "action": "quicksight:DeleteGroup",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GroupName}"
          }
        }
      }
    ],
    "delete-group-membership": [
      {
        "action": "quicksight:DeleteGroupMembership",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GroupName}"
          }
        }
      }
    ],
    "delete-iam-policy-assignment": [
      {
        "action": "quicksight:DeleteIAMPolicyAssignment",
        "resource_mappings": {
          "ResourceId": {
            "template": "${AssignmentName}"
          }
        }
      }
    ],
    "delete-namespace": [
      {
        "action": "quicksight:DeleteNamespace",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Namespace}"
          }
        }
      }
    ],
    "delete-refresh-schedule": [
      {
        "action": "quicksight:DeleteRefreshSchedule",
        "resource_mappings": {
          "DatasetId": {
            "template": "${DataSetId}"
          },
          "ResourceId": {
            "template": "${ScheduleId}"
          }
        }
      }
    ],
    "delete-template": [
      {
        "action": "quicksight:DeleteTemplate",
        "resource_mappings": {
          "ResourceId": {
            "template": "${TemplateId}"
          }
        }
      }
    ],
    "delete-template-alias": [
      {
        "action": "quicksight:DeleteTemplateAlias",
        "resource_mappings": {
          "ResourceId": {
            "template": "${TemplateId}"
          }
        }
      }
    ],
    "delete-theme": [
      {
        "action": "quicksight:DeleteTheme",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ThemeId}"
          }
        }
      }
    ],
    "delete-theme-alias": [
      {
        "action": "quicksight:DeleteThemeAlias",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ThemeId}"
          }
        }
      }
    ],
    "delete-topic": [
      {
        "action": "quicksight:DeleteTopic",
        "resource_mappings": {
          "ResourceId": {
            "template": "${TopicId}"
          }
        }
      }
    ],
    "delete-topic-refresh-schedule": [
      {
        "action": "quicksight:DeleteTopicRefreshSchedule",
        "resource_mappings": {
          "ResourceId": {
            "template": "${TopicId}"
          }
        }
      }
    ],
    "delete-user": [
      {
        "action": "quicksight:DeleteUser",
        "resource_mappings": {
          "ResourceId": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "delete-user-by-principal-id": [
      {
        "action": "quicksight:DeleteUserByPrincipalId",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-vpc-connection": [
      {
        "action": "quicksight:DeleteVPCConnection",
        "resource_mappings": {
          "ResourceId": {
            "template": "${VPCConnectionId}"
          }
        }
      }
    ],
    "describe-account-customization": [
      {
        "action": "quicksight:DescribeAccountCustomization",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-account-settings": [
      {
        "action": "quicksight:DescribeAccountSettings",
        "resource_mappings": {}
      }
    ],
    "describe-account-subscription": [
      {
        "action": "quicksight:DescribeAccountSubscription",
        "resource_mappings": {
          "ResourceId": {
            "template": "${AwsAccountId}"
          }
        }
      }
    ],
    "describe-analysis": [
      {
        "action": "quicksight:DescribeAnalysis",
        "resource_mappings": {
          "ResourceId": {
            "template": "${AnalysisId}"
          }
        }
      }
    ],
    "describe-analysis-definition": [
      {
        "note": "NotFound",
        "action": "QuickSight:DescribeAnalysisDefinition",
        "resource_mappings": {}
      }
    ],
    "describe-analysis-permissions": [
      {
        "action": "quicksight:DescribeAnalysisPermissions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${AnalysisId}"
          }
        }
      }
    ],
    "describe-asset-bundle-export-job": [
      {
        "action": "quicksight:DescribeAssetBundleExportJob",
        "resource_mappings": {
          "ResourceId": {
            "template": "${AssetBundleExportJobId}"
          }
        }
      }
    ],
    "describe-asset-bundle-import-job": [
      {
        "action": "quicksight:DescribeAssetBundleImportJob",
        "resource_mappings": {
          "ResourceId": {
            "template": "${AssetBundleImportJobId}"
          }
        }
      }
    ],
    "describe-dashboard": [
      {
        "action": "quicksight:DescribeDashboard",
        "resource_mappings": {
          "ResourceId": {
            "template": "${DashboardId}"
          }
        }
      }
    ],
    "describe-dashboard-definition": [
      {
        "note": "NotFound",
        "action": "QuickSight:DescribeDashboardDefinition",
        "resource_mappings": {}
      }
    ],
    "describe-dashboard-permissions": [
      {
        "action": "quicksight:DescribeDashboardPermissions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${DashboardId}"
          }
        }
      }
    ],
    "describe-dashboard-snapshot-job": [
      {
        "action": "quicksight:DescribeDashboardSnapshotJob",
        "resource_mappings": {
          "DashboardId": {
            "template": "${DashboardId}"
          },
          "ResourceId": {
            "template": "${SnapshotJobId}"
          }
        }
      }
    ],
    "describe-dashboard-snapshot-job-result": [
      {
        "action": "quicksight:DescribeDashboardSnapshotJobResult",
        "resource_mappings": {
          "DashboardId": {
            "template": "${DashboardId}"
          },
          "ResourceId": {
            "template": "${SnapshotJobId}"
          }
        }
      }
    ],
    "describe-data-set": [
      {
        "action": "quicksight:DescribeDataSet",
        "resource_mappings": {
          "ResourceId": {
            "template": "${DataSetId}"
          }
        }
      }
    ],
    "describe-data-set-permissions": [
      {
        "action": "quicksight:DescribeDataSetPermissions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${DataSetId}"
          }
        }
      }
    ],
    "describe-data-set-refresh-properties": [
      {
        "action": "quicksight:DescribeDataSetRefreshProperties",
        "resource_mappings": {
          "ResourceId": {
            "template": "${DataSetId}"
          }
        }
      }
    ],
    "describe-data-source": [
      {
        "action": "quicksight:DescribeDataSource",
        "resource_mappings": {
          "ResourceId": {
            "template": "${DataSourceId}"
          }
        }
      }
    ],
    "describe-data-source-permissions": [
      {
        "action": "quicksight:DescribeDataSourcePermissions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${DataSourceId}"
          }
        }
      }
    ],
    "describe-folder": [
      {
        "action": "quicksight:DescribeFolder",
        "resource_mappings": {
          "ResourceId": {
            "template": "${FolderId}"
          }
        }
      }
    ],
    "describe-folder-permissions": [
      {
        "action": "quicksight:DescribeFolderPermissions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${FolderId}"
          }
        }
      }
    ],
    "describe-folder-resolved-permissions": [
      {
        "action": "quicksight:DescribeFolderResolvedPermissions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${FolderId}"
          }
        }
      }
    ],
    "describe-group": [
      {
        "action": "quicksight:DescribeGroup",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GroupName}"
          }
        }
      }
    ],
    "describe-group-membership": [
      {
        "action": "quicksight:DescribeGroupMembership",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-iam-policy-assignment": [
      {
        "action": "quicksight:DescribeIAMPolicyAssignment",
        "resource_mappings": {
          "ResourceId": {
            "template": "${AssignmentName}"
          }
        }
      }
    ],
    "describe-ingestion": [
      {
        "action": "quicksight:DescribeIngestion",
        "resource_mappings": {
          "DatasetId": {
            "template": "${DataSetId}"
          },
          "ResourceId": {
            "template": "${IngestionId}"
          }
        }
      }
    ],
    "describe-ip-restriction": [
      {
        "action": "quicksight:DescribeIpRestriction",
        "resource_mappings": {}
      }
    ],
    "describe-namespace": [
      {
        "action": "quicksight:DescribeNamespace",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Namespace}"
          }
        }
      }
    ],
    "describe-refresh-schedule": [
      {
        "action": "quicksight:DescribeRefreshSchedule",
        "resource_mappings": {
          "DatasetId": {
            "template": "${DataSetId}"
          },
          "ResourceId": {
            "template": "${ScheduleId}"
          }
        }
      }
    ],
    "describe-template": [
      {
        "action": "quicksight:DescribeTemplate",
        "resource_mappings": {
          "ResourceId": {
            "template": "${TemplateId}"
          }
        }
      }
    ],
    "describe-template-alias": [
      {
        "action": "quicksight:DescribeTemplateAlias",
        "resource_mappings": {
          "ResourceId": {
            "template": "${TemplateId}"
          }
        }
      }
    ],
    "describe-template-definition": [
      {
        "note": "NotFound",
        "action": "QuickSight:DescribeTemplateDefinition",
        "resource_mappings": {}
      }
    ],
    "describe-template-permissions": [
      {
        "action": "quicksight:DescribeTemplatePermissions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${TemplateId}"
          }
        }
      }
    ],
    "describe-theme": [
      {
        "action": "quicksight:DescribeTheme",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ThemeId}"
          }
        }
      }
    ],
    "describe-theme-alias": [
      {
        "action": "quicksight:DescribeThemeAlias",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ThemeId}"
          }
        }
      }
    ],
    "describe-theme-permissions": [
      {
        "action": "quicksight:DescribeThemePermissions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ThemeId}"
          }
        }
      }
    ],
    "describe-topic": [
      {
        "action": "quicksight:DescribeTopic",
        "resource_mappings": {
          "ResourceId": {
            "template": "${TopicId}"
          }
        }
      }
    ],
    "describe-topic-permissions": [
      {
        "action": "quicksight:DescribeTopicPermissions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${TopicId}"
          }
        }
      }
    ],
    "describe-topic-refresh": [
      {
        "action": "quicksight:DescribeTopicRefresh",
        "resource_mappings": {
          "ResourceId": {
            "template": "${TopicId}"
          }
        }
      }
    ],
    "describe-topic-refresh-schedule": [
      {
        "action": "quicksight:DescribeTopicRefreshSchedule",
        "resource_mappings": {
          "ResourceId": {
            "template": "${TopicId}"
          }
        }
      }
    ],
    "describe-user": [
      {
        "action": "quicksight:DescribeUser",
        "resource_mappings": {
          "ResourceId": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "describe-vpc-connection": [
      {
        "action": "quicksight:DescribeVPCConnection",
        "resource_mappings": {
          "ResourceId": {
            "template": "${VPCConnectionId}"
          }
        }
      }
    ],
    "generate-embed-url-for-anonymous-user": [
      {
        "action": "quicksight:GenerateEmbedUrlForAnonymousUser",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Namespace}"
          }
        }
      }
    ],
    "generate-embed-url-for-registered-user": [
      {
        "action": "quicksight:GenerateEmbedUrlForRegisteredUser",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "user": "${UserArn}"
        }
      }
    ],
    "get-dashboard-embed-url": [
      {
        "action": "quicksight:GetDashboardEmbedUrl",
        "resource_mappings": {
          "ResourceId": {
            "template": "${DashboardId}"
          }
        }
      }
    ],
    "get-session-embed-url": [
      {
        "action": "quicksight:GetSessionEmbedUrl",
        "resource_mappings": {}
      }
    ],
    "list-analyses": [
      {
        "action": "quicksight:ListAnalyses",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-asset-bundle-export-jobs": [
      {
        "action": "quicksight:ListAssetBundleExportJobs",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-asset-bundle-import-jobs": [
      {
        "action": "quicksight:ListAssetBundleImportJobs",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-dashboard-versions": [
      {
        "action": "quicksight:ListDashboardVersions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${DashboardId}"
          }
        }
      }
    ],
    "list-dashboards": [
      {
        "action": "quicksight:ListDashboards",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-data-sets": [
      {
        "action": "quicksight:ListDataSets",
        "resource_mappings": {}
      }
    ],
    "list-data-sources": [
      {
        "action": "quicksight:ListDataSources",
        "resource_mappings": {}
      }
    ],
    "list-folder-members": [
      {
        "action": "quicksight:ListFolderMembers",
        "resource_mappings": {
          "ResourceId": {
            "template": "${FolderId}"
          }
        }
      }
    ],
    "list-folders": [
      {
        "action": "quicksight:ListFolders",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-group-memberships": [
      {
        "action": "quicksight:ListGroupMemberships",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GroupName}"
          }
        }
      }
    ],
    "list-groups": [
      {
        "action": "quicksight:ListGroups",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-iam-policy-assignments": [
      {
        "action": "quicksight:ListIAMPolicyAssignments",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-iam-policy-assignments-for-user": [
      {
        "action": "quicksight:ListIAMPolicyAssignmentsForUser",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-ingestions": [
      {
        "action": "quicksight:ListIngestions",
        "resource_mappings": {}
      }
    ],
    "list-namespaces": [
      {
        "action": "quicksight:ListNamespaces",
        "resource_mappings": {}
      }
    ],
    "list-refresh-schedules": [
      {
        "action": "quicksight:ListRefreshSchedules",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "quicksight:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "customization": "%%iftemplatematch%${ResourceArn}%%",
          "dashboard": "%%iftemplatematch%${ResourceArn}%%",
          "template": "%%iftemplatematch%${ResourceArn}%%",
          "theme": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "list-template-aliases": [
      {
        "action": "quicksight:ListTemplateAliases",
        "resource_mappings": {
          "ResourceId": {
            "template": "${TemplateId}"
          }
        }
      }
    ],
    "list-template-versions": [
      {
        "action": "quicksight:ListTemplateVersions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${TemplateId}"
          }
        }
      }
    ],
    "list-templates": [
      {
        "action": "quicksight:ListTemplates",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-theme-aliases": [
      {
        "action": "quicksight:ListThemeAliases",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ThemeId}"
          }
        }
      }
    ],
    "list-theme-versions": [
      {
        "action": "quicksight:ListThemeVersions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ThemeId}"
          }
        }
      }
    ],
    "list-themes": [
      {
        "action": "quicksight:ListThemes",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-topic-refresh-schedules": [
      {
        "action": "quicksight:ListTopicRefreshSchedules",
        "resource_mappings": {}
      }
    ],
    "list-topics": [
      {
        "action": "quicksight:ListTopics",
        "resource_mappings": {}
      }
    ],
    "list-user-groups": [
      {
        "action": "quicksight:ListUserGroups",
        "resource_mappings": {
          "ResourceId": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "list-users": [
      {
        "action": "quicksight:ListUsers",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-vpc-connections": [
      {
        "action": "quicksight:ListVPCConnections",
        "resource_mappings": {}
      }
    ],
    "put-data-set-refresh-properties": [
      {
        "action": "quicksight:PutDataSetRefreshProperties",
        "resource_mappings": {
          "ResourceId": {
            "template": "${DataSetId}"
          }
        }
      }
    ],
    "register-user": [
      {
        "action": "quicksight:RegisterUser",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${UserRole}%${IamArn}%%"
        }
      }
    ],
    "restore-analysis": [
      {
        "action": "quicksight:RestoreAnalysis",
        "resource_mappings": {
          "ResourceId": {
            "template": "${AnalysisId}"
          }
        }
      }
    ],
    "search-analyses": [
      {
        "action": "quicksight:SearchAnalyses",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "search-dashboards": [
      {
        "action": "quicksight:SearchDashboards",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "search-data-sets": [
      {
        "action": "quicksight:SearchDataSets",
        "resource_mappings": {
          "ResourceId": {
            "template": "${AwsAccountId}"
          }
        }
      }
    ],
    "search-data-sources": [
      {
        "action": "quicksight:SearchDataSources",
        "resource_mappings": {
          "ResourceId": {
            "template": "${AwsAccountId}"
          }
        }
      }
    ],
    "search-folders": [
      {
        "action": "quicksight:SearchFolders",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "search-groups": [
      {
        "action": "quicksight:SearchGroups",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "start-asset-bundle-export-job": [
      {
        "action": "quicksight:StartAssetBundleExportJob",
        "resource_mappings": {
          "ResourceId": {
            "template": "${AssetBundleExportJobId}"
          }
        }
      }
    ],
    "start-asset-bundle-import-job": [
      {
        "action": "quicksight:StartAssetBundleImportJob",
        "resource_mappings": {
          "ResourceId": {
            "template": "${AssetBundleImportJobId}"
          }
        }
      }
    ],
    "start-dashboard-snapshot-job": [
      {
        "action": "quicksight:StartDashboardSnapshotJob",
        "resource_mappings": {
          "DashboardId": {
            "template": "${DashboardId}"
          },
          "ResourceId": {
            "template": "${SnapshotJobId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "quicksight:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "customization": "%%iftemplatematch%${ResourceArn}%%",
          "dashboard": "%%iftemplatematch%${ResourceArn}%%",
          "template": "%%iftemplatematch%${ResourceArn}%%",
          "theme": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "quicksight:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "customization": "%%iftemplatematch%${ResourceArn}%%",
          "dashboard": "%%iftemplatematch%${ResourceArn}%%",
          "template": "%%iftemplatematch%${ResourceArn}%%",
          "theme": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-account-customization": [
      {
        "action": "quicksight:UpdateAccountCustomization",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "update-account-settings": [
      {
        "action": "quicksight:UpdateAccountSettings",
        "resource_mappings": {}
      }
    ],
    "update-analysis": [
      {
        "action": "quicksight:UpdateAnalysis",
        "resource_mappings": {
          "ResourceId": {
            "template": "${AnalysisId}"
          }
        }
      }
    ],
    "update-analysis-permissions": [
      {
        "action": "quicksight:UpdateAnalysisPermissions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${AnalysisId}"
          }
        }
      }
    ],
    "update-dashboard": [
      {
        "action": "quicksight:UpdateDashboard",
        "resource_mappings": {
          "ResourceId": {
            "template": "${DashboardId}"
          }
        }
      }
    ],
    "update-dashboard-permissions": [
      {
        "action": "quicksight:UpdateDashboardPermissions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${DashboardId}"
          }
        }
      }
    ],
    "update-dashboard-published-version": [
      {
        "action": "quicksight:UpdateDashboardPublishedVersion",
        "resource_mappings": {
          "ResourceId": {
            "template": "${DashboardId}"
          }
        }
      }
    ],
    "update-data-set": [
      {
        "action": "quicksight:UpdateDataSet",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "quicksight:PassDataSource",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "update-data-set-permissions": [
      {
        "action": "quicksight:UpdateDataSetPermissions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${DataSetId}"
          }
        }
      }
    ],
    "update-data-source": [
      {
        "action": "quicksight:UpdateDataSource",
        "resource_mappings": {
          "ResourceId": {
            "template": "${DataSourceId}"
          }
        }
      }
    ],
    "update-data-source-permissions": [
      {
        "action": "quicksight:UpdateDataSourcePermissions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${DataSourceId}"
          }
        }
      }
    ],
    "update-folder": [
      {
        "action": "quicksight:UpdateFolder",
        "resource_mappings": {
          "ResourceId": {
            "template": "${FolderId}"
          }
        }
      }
    ],
    "update-folder-permissions": [
      {
        "action": "quicksight:UpdateFolderPermissions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${FolderId}"
          }
        }
      }
    ],
    "update-group": [
      {
        "action": "quicksight:UpdateGroup",
        "resource_mappings": {
          "ResourceId": {
            "template": "${GroupName}"
          }
        }
      }
    ],
    "update-iam-policy-assignment": [
      {
        "action": "quicksight:UpdateIAMPolicyAssignment",
        "resource_mappings": {
          "ResourceId": {
            "template": "${AssignmentName}"
          }
        }
      }
    ],
    "update-ip-restriction": [
      {
        "action": "quicksight:UpdateIpRestriction",
        "resource_mappings": {}
      }
    ],
    "update-public-sharing-settings": [
      {
        "action": "quicksight:UpdatePublicSharingSettings",
        "resource_mappings": {}
      }
    ],
    "update-refresh-schedule": [
      {
        "action": "quicksight:UpdateRefreshSchedule",
        "resource_mappings": {
          "DatasetId": {
            "template": "${DataSetId}"
          },
          "ResourceId": {
            "template": "${Schedule.ScheduleId}"
          }
        }
      }
    ],
    "update-template": [
      {
        "action": "quicksight:UpdateTemplate",
        "resource_mappings": {
          "ResourceId": {
            "template": "${TemplateId}"
          }
        }
      }
    ],
    "update-template-alias": [
      {
        "action": "quicksight:UpdateTemplateAlias",
        "resource_mappings": {
          "ResourceId": {
            "template": "${TemplateId}"
          }
        }
      }
    ],
    "update-template-permissions": [
      {
        "action": "quicksight:UpdateTemplatePermissions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${TemplateId}"
          }
        }
      }
    ],
    "update-theme": [
      {
        "action": "quicksight:UpdateTheme",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ThemeId}"
          }
        }
      }
    ],
    "update-theme-alias": [
      {
        "action": "quicksight:UpdateThemeAlias",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ThemeId}"
          }
        }
      }
    ],
    "update-theme-permissions": [
      {
        "action": "quicksight:UpdateThemePermissions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ThemeId}"
          }
        }
      }
    ],
    "update-topic": [
      {
        "action": "quicksight:UpdateTopic",
        "resource_mappings": {
          "ResourceId": {
            "template": "${TopicId}"
          }
        },
        "resourcearn_mappings": {
          "dataset": "${Topic.DataSets[].DatasetArn}"
        }
      },
      {
        "action": "quicksight:PassDataSet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dataset": "${Topic.DataSets[].DatasetArn}"
        }
      }
    ],
    "update-topic-permissions": [
      {
        "action": "quicksight:UpdateTopicPermissions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${TopicId}"
          }
        }
      }
    ],
    "update-topic-refresh-schedule": [
      {
        "action": "quicksight:UpdateTopicRefreshSchedule",
        "resource_mappings": {
          "ResourceId": {
            "template": "${TopicId}"
          }
        }
      }
    ],
    "update-user": [
      {
        "action": "quicksight:UpdateUser",
        "resource_mappings": {
          "ResourceId": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "update-vpc-connection": [
      {
        "action": "quicksight:UpdateVPCConnection",
        "resource_mappings": {
          "ResourceId": {
            "template": "${VPCConnectionId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${RoleArn}"
        }
      }
    ]
  },
  "ram": {
    "accept-resource-share-invitation": [
      {
        "action": "ram:AcceptResourceShareInvitation",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "resource-share-invitation": "${resourceShareInvitationArn}"
        }
      }
    ],
    "associate-resource-share": [
      {
        "action": "ram:AssociateResourceShare",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "resource-share": "${resourceShareArn}"
        }
      }
    ],
    "associate-resource-share-permission": [
      {
        "action": "ram:AssociateResourceSharePermission",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "permission": "${permissionArn}",
          "resource-share": "${resourceShareArn}"
        }
      }
    ],
    "create-permission": [
      {
        "action": "ram:CreatePermission",
        "resource_mappings": {}
      },
      {
        "action": "ram:TagResource",
        "resource_mappings": {
          "ResourcePath": {
            "template": "*"
          }
        }
      }
    ],
    "create-permission-version": [
      {
        "action": "ram:CreatePermissionVersion",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "customer-managed-permission": "${permissionArn}"
        }
      }
    ],
    "create-resource-share": [
      {
        "action": "ram:CreateResourceShare",
        "resource_mappings": {}
      }
    ],
    "delete-permission": [
      {
        "action": "ram:DeletePermission",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "customer-managed-permission": "${permissionArn}"
        }
      }
    ],
    "delete-permission-version": [
      {
        "action": "ram:DeletePermissionVersion",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "customer-managed-permission": "${permissionArn}"
        }
      }
    ],
    "delete-resource-share": [
      {
        "action": "ram:DeleteResourceShare",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "resource-share": "${resourceShareArn}"
        }
      }
    ],
    "disassociate-resource-share": [
      {
        "action": "ram:DisassociateResourceShare",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "resource-share": "${resourceShareArn}"
        }
      }
    ],
    "disassociate-resource-share-permission": [
      {
        "action": "ram:DisassociateResourceSharePermission",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "permission": "${permissionArn}",
          "resource-share": "${resourceShareArn}"
        }
      }
    ],
    "enable-sharing-with-aws-organization": [
      {
        "action": "ram:EnableSharingWithAwsOrganization",
        "resource_mappings": {}
      }
    ],
    "get-permission": [
      {
        "action": "ram:GetPermission",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "permission": "${permissionArn}"
        }
      }
    ],
    "get-resource-policies": [
      {
        "action": "ram:GetResourcePolicies",
        "resource_mappings": {}
      }
    ],
    "get-resource-share-associations": [
      {
        "action": "ram:GetResourceShareAssociations",
        "resource_mappings": {}
      }
    ],
    "get-resource-share-invitations": [
      {
        "action": "ram:GetResourceShareInvitations",
        "resource_mappings": {}
      }
    ],
    "get-resource-shares": [
      {
        "action": "ram:GetResourceShares",
        "resource_mappings": {}
      }
    ],
    "list-pending-invitation-resources": [
      {
        "action": "ram:ListPendingInvitationResources",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "resource-share-invitation": "${resourceShareInvitationArn}"
        }
      }
    ],
    "list-permission-associations": [
      {
        "action": "ram:ListPermissionAssociations",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "customer-managed-permission": "%%iftemplatematch%${permissionArn}%%",
          "permission": "%%iftemplatematch%${permissionArn}%%"
        }
      }
    ],
    "list-permission-versions": [
      {
        "action": "ram:ListPermissionVersions",
        "resource_mappings": {}
      }
    ],
    "list-permissions": [
      {
        "action": "ram:ListPermissions",
        "resource_mappings": {}
      }
    ],
    "list-principals": [
      {
        "action": "ram:ListPrincipals",
        "resource_mappings": {}
      }
    ],
    "list-replace-permission-associations-work": [
      {
        "action": "ram:ListReplacePermissionAssociationsWork",
        "resource_mappings": {}
      }
    ],
    "list-resource-share-permissions": [
      {
        "action": "ram:ListResourceSharePermissions",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "resource-share": "${resourceShareArn}"
        }
      }
    ],
    "list-resource-types": [
      {
        "action": "ram:ListResourceTypes",
        "resource_mappings": {}
      }
    ],
    "list-resources": [
      {
        "action": "ram:ListResources",
        "resource_mappings": {}
      }
    ],
    "promote-permission-created-from-policy": [
      {
        "action": "ram:PromotePermissionCreatedFromPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "customer-managed-permission": "${permissionArn}"
        }
      }
    ],
    "promote-resource-share-created-from-policy": [
      {
        "action": "ram:PromoteResourceShareCreatedFromPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "resource-share": "${resourceShareArn}"
        }
      }
    ],
    "reject-resource-share-invitation": [
      {
        "action": "ram:RejectResourceShareInvitation",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "resource-share-invitation": "${resourceShareInvitationArn}"
        }
      }
    ],
    "replace-permission-associations": [
      {
        "action": "ram:ReplacePermissionAssociations",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "customer-managed-permission": "%%many%${fromPermissionArn}%${toPermissionArn}%%",
          "permission": "%%many%${fromPermissionArn}%${toPermissionArn}%%"
        }
      }
    ],
    "set-default-permission-version": [
      {
        "action": "ram:SetDefaultPermissionVersion",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "customer-managed-permission": "${permissionArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "ram:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "resource-share": "${resourceShareArn}"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "ram:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "resource-share": "${resourceShareArn}"
        }
      }
    ],
    "update-resource-share": [
      {
        "action": "ram:UpdateResourceShare",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "resource-share": "${resourceShareArn}"
        }
      }
    ]
  },
  "rbin": {
    "create-rule": [
      {
        "action": "rbin:CreateRule",
        "resource_mappings": {
          "ResourceName": {
            "template": "*"
          }
        }
      }
    ],
    "delete-rule": [
      {
        "action": "rbin:DeleteRule",
        "resource_mappings": {
          "ResourceName": {
            "template": "${Identifier}"
          }
        }
      }
    ],
    "get-rule": [
      {
        "action": "rbin:GetRule",
        "resource_mappings": {
          "ResourceName": {
            "template": "${Identifier}"
          }
        }
      }
    ],
    "list-rules": [
      {
        "action": "rbin:ListRules",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "rbin:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "rule": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "lock-rule": [
      {
        "action": "rbin:LockRule",
        "resource_mappings": {
          "ResourceName": {
            "template": "${Identifier}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "rbin:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "rule": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "unlock-rule": [
      {
        "action": "rbin:UnlockRule",
        "resource_mappings": {
          "ResourceName": {
            "template": "${Identifier}"
          }
        }
      }
    ],
    "untag-resource": [
      {
        "action": "rbin:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "rule": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-rule": [
      {
        "action": "rbin:UpdateRule",
        "resource_mappings": {
          "ResourceName": {
            "template": "${Identifier}"
          }
        }
      }
    ]
  },
  "rds": {
    "add-role-to-db-cluster": [
      {
        "action": "rds:AddRoleToDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "add-role-to-db-instance": [
      {
        "action": "rds:AddRoleToDBInstance",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "add-source-identifier-to-subscription": [
      {
        "action": "rds:AddSourceIdentifierToSubscription",
        "resource_mappings": {
          "SubscriptionName": {
            "template": "${SubscriptionName}"
          }
        }
      }
    ],
    "add-tags-to-resource": [
      {
        "action": "rds:AddTagsToResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "db": "%%iftemplatematch%${ResourceName}%%",
          "es": "%%iftemplatematch%${ResourceName}%%",
          "og": "%%iftemplatematch%${ResourceName}%%",
          "pg": "%%iftemplatematch%${ResourceName}%%",
          "proxy": "%%iftemplatematch%${ResourceName}%%",
          "proxy-endpoint": "%%iftemplatematch%${ResourceName}%%",
          "ri": "%%iftemplatematch%${ResourceName}%%",
          "secgrp": "%%iftemplatematch%${ResourceName}%%",
          "snapshot": "%%iftemplatematch%${ResourceName}%%",
          "subgrp": "%%iftemplatematch%${ResourceName}%%",
          "target-group": "%%iftemplatematch%${ResourceName}%%"
        }
      }
    ],
    "apply-pending-maintenance-action": [
      {
        "action": "rds:ApplyPendingMaintenanceAction",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "%%iftemplatematch%${ResourceIdentifier}%%",
          "db": "%%iftemplatematch%${ResourceIdentifier}%%"
        }
      }
    ],
    "authorize-db-security-group-ingress": [
      {
        "action": "rds:AuthorizeDBSecurityGroupIngress",
        "resource_mappings": {
          "SecurityGroupName": {
            "template": "${DBSecurityGroupName}"
          }
        }
      }
    ],
    "backtrack-db-cluster": [
      {
        "action": "rds:BacktrackDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          }
        }
      }
    ],
    "cancel-export-task": [
      {
        "action": "rds:CancelExportTask",
        "resource_mappings": {}
      }
    ],
    "copy-db-cluster-parameter-group": [
      {
        "action": "rds:CopyDBClusterParameterGroup",
        "resource_mappings": {
          "ClusterParameterGroupName": {
            "template": "%%many%${SourceDBClusterParameterGroupIdentifier}%${TargetDBClusterParameterGroupIdentifier}%%"
          }
        }
      }
    ],
    "copy-db-cluster-snapshot": [
      {
        "action": "rds:CopyDBClusterSnapshot",
        "resource_mappings": {
          "ClusterSnapshotName": {
            "template": "%%many%${SourceDBClusterSnapshotIdentifier}%${TargetDBClusterSnapshotIdentifier}%%"
          }
        }
      },
      {
        "action": "rds:AddTagsToResource",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "copy-db-parameter-group": [
      {
        "action": "rds:CopyDBParameterGroup",
        "resource_mappings": {
          "ParameterGroupName": {
            "template": "%%many%${SourceDBParameterGroupIdentifier}%${TargetDBParameterGroupIdentifier}%%"
          }
        }
      },
      {
        "action": "rds:AddTagsToResource",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "copy-db-snapshot": [
      {
        "action": "rds:CopyDBSnapshot",
        "resource_mappings": {
          "SnapshotName": {
            "template": "%%many%${SourceDBSnapshotIdentifier}%${TargetDBSnapshotIdentifier}%%"
          }
        }
      },
      {
        "action": "rds:AddTagsToResource",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "copy-option-group": [
      {
        "action": "rds:CopyOptionGroup",
        "resource_mappings": {
          "OptionGroupName": {
            "template": "%%many%${SourceOptionGroupIdentifier}%${TargetOptionGroupIdentifier}%%"
          }
        }
      },
      {
        "action": "rds:AddTagsToResource",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "create-blue-green-deployment": [
      {
        "action": "rds:CreateBlueGreenDeployment",
        "resource_mappings": {
          "BlueGreenDeploymentIdentifier": {
            "template": "*"
          },
          "DbClusterInstanceName": {
            "template": "*"
          },
          "ClusterParameterGroupName": {
            "template": "*"
          },
          "DbInstanceName": {
            "template": "*"
          },
          "ParameterGroupName": {
            "template": "*"
          }
        }
      },
      {
        "action": "rds:AddTagsToResource",
        "resource_mappings": {
          "Engine": {
            "template": "*"
          },
          "EngineVersion": {
            "template": "*"
          },
          "CustomDbEngineVersionId": {
            "template": "*"
          },
          "DbClusterInstanceName": {
            "template": "*"
          },
          "DbClusterEndpoint": {
            "template": "*"
          },
          "ClusterParameterGroupName": {
            "template": "*"
          },
          "ClusterSnapshotName": {
            "template": "*"
          },
          "DbInstanceName": {
            "template": "*"
          },
          "BlueGreenDeploymentIdentifier": {
            "template": "*"
          },
          "SubscriptionName": {
            "template": "*"
          },
          "OptionGroupName": {
            "template": "*"
          },
          "ParameterGroupName": {
            "template": "*"
          },
          "DbProxyId": {
            "template": "*"
          },
          "DbProxyEndpointId": {
            "template": "*"
          },
          "ReservedDbInstanceName": {
            "template": "*"
          },
          "SecurityGroupName": {
            "template": "*"
          },
          "SnapshotName": {
            "template": "*"
          },
          "SubnetGroupName": {
            "template": "*"
          },
          "TargetGroupId": {
            "template": "*"
          }
        }
      },
      {
        "action": "rds:CreateDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "*"
          },
          "ClusterParameterGroupName": {
            "template": "*"
          },
          "OptionGroupName": {
            "template": "*"
          },
          "SubnetGroupName": {
            "template": "*"
          },
          "DbInstanceName": {
            "template": "*"
          },
          "GlobalCluster": {
            "template": "*"
          }
        }
      },
      {
        "action": "rds:CreateDBClusterEndpoint",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "*"
          },
          "DbClusterEndpoint": {
            "template": "*"
          }
        }
      },
      {
        "action": "rds:CreateDBInstance",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "*"
          },
          "DbClusterInstanceName": {
            "template": "*"
          },
          "OptionGroupName": {
            "template": "*"
          },
          "ParameterGroupName": {
            "template": "*"
          },
          "SecurityGroupName": {
            "template": "*"
          },
          "SubnetGroupName": {
            "template": "*"
          }
        }
      },
      {
        "action": "rds:CreateDBInstanceReadReplica",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "*"
          },
          "OptionGroupName": {
            "template": "*"
          },
          "SubnetGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "create-custom-db-engine-version": [
      {
        "action": "rds:CreateCustomDBEngineVersion",
        "resource_mappings": {
          "Engine": {
            "template": "${Engine}"
          },
          "EngineVersion": {
            "template": "${EngineVersion}"
          },
          "CustomDbEngineVersionId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "mediaimport:CreateDatabaseBinarySnapshot",
        "resource_mappings": {}
      },
      {
        "action": "rds:AddTagsToResource",
        "resource_mappings": {
          "Engine": {
            "template": "${Engine}"
          },
          "EngineVersion": {
            "template": "${EngineVersion}"
          },
          "CustomDbEngineVersionId": {
            "template": "*"
          },
          "DbClusterInstanceName": {
            "template": "*"
          },
          "DbClusterEndpoint": {
            "template": "*"
          },
          "ClusterParameterGroupName": {
            "template": "*"
          },
          "ClusterSnapshotName": {
            "template": "*"
          },
          "DbInstanceName": {
            "template": "*"
          },
          "SubscriptionName": {
            "template": "*"
          },
          "OptionGroupName": {
            "template": "*"
          },
          "ParameterGroupName": {
            "template": "*"
          },
          "DbProxyId": {
            "template": "*"
          },
          "DbProxyEndpointId": {
            "template": "*"
          },
          "ReservedDbInstanceName": {
            "template": "*"
          },
          "SecurityGroupName": {
            "template": "*"
          },
          "SnapshotName": {
            "template": "*"
          },
          "SubnetGroupName": {
            "template": "*"
          },
          "TargetGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "create-db-cluster": [
      {
        "action": "rds:CreateDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          },
          "ClusterParameterGroupName": {
            "template": "${DBClusterParameterGroupName}"
          },
          "OptionGroupName": {
            "template": "${OptionGroupName}"
          },
          "SubnetGroupName": {
            "template": "${DBSubnetGroupName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "arn:${Partition}:iam::${Account}:role/${DomainIAMRoleName}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${EnableIAMDatabaseAuthentication}%*%%%"
        }
      },
      {
        "action": "rds:AddTagsToResource",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "create-db-cluster-endpoint": [
      {
        "action": "rds:CreateDBClusterEndpoint",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          },
          "DbClusterEndpoint": {
            "template": "${DBClusterEndpointIdentifier}"
          }
        }
      }
    ],
    "create-db-cluster-parameter-group": [
      {
        "action": "rds:CreateDBClusterParameterGroup",
        "resource_mappings": {
          "ClusterParameterGroupName": {
            "template": "${DBClusterParameterGroupName}"
          }
        }
      }
    ],
    "create-db-cluster-snapshot": [
      {
        "action": "rds:CreateDBClusterSnapshot",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          },
          "ClusterSnapshotName": {
            "template": "${DBClusterSnapshotIdentifier}"
          }
        }
      }
    ],
    "create-db-instance": [
      {
        "action": "rds:CreateDBInstance",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          },
          "OptionGroupName": {
            "template": "${OptionGroupName}"
          },
          "ParameterGroupName": {
            "template": "${DBParameterGroupName}"
          },
          "SecurityGroupName": {
            "template": "${DBSecurityGroups[]}"
          },
          "SubnetGroupName": {
            "template": "${DBSubnetGroupName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${MonitoringRoleArn}%arn:${Partition}:iam::${Account}:role/${DomainIAMRoleName}%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${EnableIAMDatabaseAuthentication}%*%%%"
        }
      },
      {
        "action": "rds:AddTagsToResource",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "create-db-instance-read-replica": [
      {
        "action": "rds:CreateDBInstanceReadReplica",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "%%many%${SourceDBInstanceIdentifier}%${DBInstanceIdentifier}%%"
          },
          "OptionGroupName": {
            "template": "${OptionGroupName}"
          },
          "SubnetGroupName": {
            "template": "${DBSubnetGroupName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${MonitoringRoleArn}%arn:${Partition}:iam::${Account}:role/${DomainIAMRoleName}%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${EnableIAMDatabaseAuthentication}%*%%%"
        }
      },
      {
        "action": "rds:AddTagsToResource",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "create-db-parameter-group": [
      {
        "action": "rds:CreateDBParameterGroup",
        "resource_mappings": {
          "ParameterGroupName": {
            "template": "${DBParameterGroupName}"
          }
        }
      }
    ],
    "create-db-proxy": [
      {
        "action": "rds:CreateDBProxy",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "create-db-proxy-endpoint": [
      {
        "action": "rds:CreateDBProxyEndpoint",
        "resource_mappings": {
          "DbProxyId": {
            "template": "*"
          },
          "DbProxyEndpointId": {
            "template": "*"
          }
        }
      }
    ],
    "create-db-security-group": [
      {
        "action": "rds:CreateDBSecurityGroup",
        "resource_mappings": {
          "SecurityGroupName": {
            "template": "${DBSecurityGroupName}"
          }
        }
      }
    ],
    "create-db-snapshot": [
      {
        "action": "rds:CreateDBSnapshot",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          },
          "SnapshotName": {
            "template": "${DBSnapshotIdentifier}"
          }
        }
      }
    ],
    "create-db-subnet-group": [
      {
        "action": "rds:CreateDBSubnetGroup",
        "resource_mappings": {
          "SubnetGroupName": {
            "template": "${DBSubnetGroupName}"
          }
        }
      }
    ],
    "create-event-subscription": [
      {
        "action": "rds:CreateEventSubscription",
        "resource_mappings": {
          "SubscriptionName": {
            "template": "${SubscriptionName}"
          }
        }
      }
    ],
    "create-global-cluster": [
      {
        "action": "rds:CreateGlobalCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${SourceDBClusterIdentifier}"
          },
          "GlobalCluster": {
            "template": "${GlobalClusterIdentifier}"
          }
        }
      }
    ],
    "create-option-group": [
      {
        "action": "rds:CreateOptionGroup",
        "resource_mappings": {
          "OptionGroupName": {
            "template": "${OptionGroupName}"
          }
        }
      }
    ],
    "delete-blue-green-deployment": [
      {
        "action": "rds:DeleteBlueGreenDeployment",
        "resource_mappings": {
          "BlueGreenDeploymentIdentifier": {
            "template": "${BlueGreenDeploymentIdentifier}"
          }
        }
      },
      {
        "action": "rds:DeleteDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "*"
          },
          "ClusterSnapshotName": {
            "template": "*"
          }
        }
      },
      {
        "action": "rds:DeleteDBClusterEndpoint",
        "resource_mappings": {
          "DbClusterEndpoint": {
            "template": "*"
          }
        }
      },
      {
        "action": "rds:DeleteDBInstance",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "*"
          }
        }
      }
    ],
    "delete-custom-db-engine-version": [
      {
        "action": "rds:DeleteCustomDBEngineVersion",
        "resource_mappings": {
          "Engine": {
            "template": "${Engine}"
          },
          "EngineVersion": {
            "template": "${EngineVersion}"
          },
          "CustomDbEngineVersionId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-db-cluster": [
      {
        "action": "rds:DeleteDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          },
          "ClusterSnapshotName": {
            "template": "${FinalDBSnapshotIdentifier}"
          }
        }
      }
    ],
    "delete-db-cluster-automated-backup": [
      {
        "note": "NotFound",
        "action": "RDS:DeleteDBClusterAutomatedBackup",
        "resource_mappings": {}
      }
    ],
    "delete-db-cluster-endpoint": [
      {
        "action": "rds:DeleteDBClusterEndpoint",
        "resource_mappings": {
          "DbClusterEndpoint": {
            "template": "${DBClusterEndpointIdentifier}"
          }
        }
      }
    ],
    "delete-db-cluster-parameter-group": [
      {
        "action": "rds:DeleteDBClusterParameterGroup",
        "resource_mappings": {
          "ClusterParameterGroupName": {
            "template": "${DBClusterParameterGroupName}"
          }
        }
      }
    ],
    "delete-db-cluster-snapshot": [
      {
        "action": "rds:DeleteDBClusterSnapshot",
        "resource_mappings": {
          "ClusterSnapshotName": {
            "template": "${DBClusterSnapshotIdentifier}"
          }
        }
      }
    ],
    "delete-db-instance": [
      {
        "action": "rds:DeleteDBInstance",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          }
        }
      }
    ],
    "delete-db-instance-automated-backup": [
      {
        "action": "rds:DeleteDBInstanceAutomatedBackup",
        "resource_mappings": {}
      }
    ],
    "delete-db-parameter-group": [
      {
        "action": "rds:DeleteDBParameterGroup",
        "resource_mappings": {
          "ParameterGroupName": {
            "template": "${DBParameterGroupName}"
          }
        }
      }
    ],
    "delete-db-proxy": [
      {
        "action": "rds:DeleteDBProxy",
        "resource_mappings": {
          "DbProxyId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-db-proxy-endpoint": [
      {
        "action": "rds:DeleteDBProxyEndpoint",
        "resource_mappings": {
          "DbProxyEndpointId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-db-security-group": [
      {
        "action": "rds:DeleteDBSecurityGroup",
        "resource_mappings": {
          "SecurityGroupName": {
            "template": "${DBSecurityGroupName}"
          }
        }
      }
    ],
    "delete-db-snapshot": [
      {
        "action": "rds:DeleteDBSnapshot",
        "resource_mappings": {
          "SnapshotName": {
            "template": "${DBSnapshotIdentifier}"
          }
        }
      }
    ],
    "delete-db-subnet-group": [
      {
        "action": "rds:DeleteDBSubnetGroup",
        "resource_mappings": {
          "SubnetGroupName": {
            "template": "${DBSubnetGroupName}"
          }
        }
      }
    ],
    "delete-event-subscription": [
      {
        "action": "rds:DeleteEventSubscription",
        "resource_mappings": {
          "SubscriptionName": {
            "template": "${SubscriptionName}"
          }
        }
      }
    ],
    "delete-global-cluster": [
      {
        "action": "rds:DeleteGlobalCluster",
        "resource_mappings": {
          "GlobalCluster": {
            "template": "${GlobalClusterIdentifier}"
          }
        }
      }
    ],
    "delete-option-group": [
      {
        "action": "rds:DeleteOptionGroup",
        "resource_mappings": {
          "OptionGroupName": {
            "template": "${OptionGroupName}"
          }
        }
      }
    ],
    "deregister-db-proxy-targets": [
      {
        "action": "rds:DeregisterDBProxyTargets",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifiers[]}"
          },
          "DbInstanceName": {
            "template": "${DBClusterIdentifiers[]}"
          },
          "DbProxyId": {
            "template": "*"
          },
          "TargetGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-account-attributes": [
      {
        "action": "rds:DescribeAccountAttributes",
        "resource_mappings": {}
      }
    ],
    "describe-blue-green-deployments": [
      {
        "action": "rds:DescribeBlueGreenDeployments",
        "resource_mappings": {
          "BlueGreenDeploymentIdentifier": {
            "template": "${BlueGreenDeploymentIdentifier}"
          }
        }
      }
    ],
    "describe-certificates": [
      {
        "action": "rds:DescribeCertificates",
        "resource_mappings": {}
      }
    ],
    "describe-db-cluster-automated-backups": [
      {
        "note": "NotFound",
        "action": "RDS:DescribeDBClusterAutomatedBackups",
        "resource_mappings": {}
      }
    ],
    "describe-db-cluster-backtracks": [
      {
        "action": "rds:DescribeDBClusterBacktracks",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          }
        }
      }
    ],
    "describe-db-cluster-endpoints": [
      {
        "action": "rds:DescribeDBClusterEndpoints",
        "resource_mappings": {
          "DbClusterEndpoint": {
            "template": "${DBClusterEndpointIdentifier}"
          },
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          }
        }
      }
    ],
    "describe-db-cluster-parameter-groups": [
      {
        "action": "rds:DescribeDBClusterParameterGroups",
        "resource_mappings": {
          "ClusterParameterGroupName": {
            "template": "${DBClusterParameterGroupName}"
          }
        }
      }
    ],
    "describe-db-cluster-parameters": [
      {
        "action": "rds:DescribeDBClusterParameters",
        "resource_mappings": {
          "ClusterParameterGroupName": {
            "template": "${DBClusterParameterGroupName}"
          }
        }
      }
    ],
    "describe-db-cluster-snapshot-attributes": [
      {
        "action": "rds:DescribeDBClusterSnapshotAttributes",
        "resource_mappings": {
          "ClusterSnapshotName": {
            "template": "${DBClusterSnapshotIdentifier}"
          }
        }
      }
    ],
    "describe-db-cluster-snapshots": [
      {
        "action": "rds:DescribeDBClusterSnapshots",
        "resource_mappings": {
          "ClusterSnapshotName": {
            "template": "${DBClusterSnapshotIdentifier}"
          }
        }
      }
    ],
    "describe-db-clusters": [
      {
        "action": "rds:DescribeDBClusters",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          }
        }
      }
    ],
    "describe-db-engine-versions": [
      {
        "action": "rds:DescribeDBEngineVersions",
        "resource_mappings": {}
      }
    ],
    "describe-db-instance-automated-backups": [
      {
        "action": "rds:DescribeDBInstanceAutomatedBackups",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          }
        }
      }
    ],
    "describe-db-instances": [
      {
        "action": "rds:DescribeDBInstances",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          }
        }
      }
    ],
    "describe-db-log-files": [
      {
        "action": "rds:DescribeDBLogFiles",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          }
        }
      }
    ],
    "describe-db-parameter-groups": [
      {
        "action": "rds:DescribeDBParameterGroups",
        "resource_mappings": {
          "ParameterGroupName": {
            "template": "${DBParameterGroupName}"
          }
        }
      }
    ],
    "describe-db-parameters": [
      {
        "action": "rds:DescribeDBParameters",
        "resource_mappings": {
          "ParameterGroupName": {
            "template": "${DBParameterGroupName}"
          }
        }
      }
    ],
    "describe-db-proxies": [
      {
        "action": "rds:DescribeDBProxies",
        "resource_mappings": {
          "DbProxyId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-db-proxy-endpoints": [
      {
        "action": "rds:DescribeDBProxyEndpoints",
        "resource_mappings": {
          "DbProxyId": {
            "template": "*"
          },
          "DbProxyEndpointId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-db-proxy-target-groups": [
      {
        "action": "rds:DescribeDBProxyTargetGroups",
        "resource_mappings": {
          "DbProxyId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-db-proxy-targets": [
      {
        "action": "rds:DescribeDBProxyTargets",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "*"
          },
          "DbInstanceName": {
            "template": "*"
          },
          "DbProxyId": {
            "template": "*"
          },
          "TargetGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-db-security-groups": [
      {
        "action": "rds:DescribeDBSecurityGroups",
        "resource_mappings": {
          "SecurityGroupName": {
            "template": "${DBSecurityGroupName}"
          }
        }
      }
    ],
    "describe-db-snapshot-attributes": [
      {
        "action": "rds:DescribeDBSnapshotAttributes",
        "resource_mappings": {
          "SnapshotName": {
            "template": "${DBSnapshotIdentifier}"
          }
        }
      }
    ],
    "describe-db-snapshots": [
      {
        "action": "rds:DescribeDBSnapshots",
        "resource_mappings": {
          "SnapshotName": {
            "template": "${DBSnapshotIdentifier}"
          },
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          }
        }
      }
    ],
    "describe-db-subnet-groups": [
      {
        "action": "rds:DescribeDBSubnetGroups",
        "resource_mappings": {
          "SubnetGroupName": {
            "template": "${DBSubnetGroupName}"
          }
        }
      }
    ],
    "describe-engine-default-cluster-parameters": [
      {
        "action": "rds:DescribeEngineDefaultClusterParameters",
        "resource_mappings": {}
      }
    ],
    "describe-engine-default-parameters": [
      {
        "action": "rds:DescribeEngineDefaultParameters",
        "resource_mappings": {}
      }
    ],
    "describe-event-categories": [
      {
        "action": "rds:DescribeEventCategories",
        "resource_mappings": {}
      }
    ],
    "describe-event-subscriptions": [
      {
        "action": "rds:DescribeEventSubscriptions",
        "resource_mappings": {
          "SubscriptionName": {
            "template": "${SubscriptionName}"
          }
        }
      }
    ],
    "describe-events": [
      {
        "action": "rds:DescribeEvents",
        "resource_mappings": {}
      }
    ],
    "describe-export-tasks": [
      {
        "action": "rds:DescribeExportTasks",
        "resource_mappings": {}
      }
    ],
    "describe-global-clusters": [
      {
        "action": "rds:DescribeGlobalClusters",
        "resource_mappings": {
          "GlobalCluster": {
            "template": "${GlobalClusterIdentifier}"
          }
        }
      }
    ],
    "describe-option-group-options": [
      {
        "action": "rds:DescribeOptionGroupOptions",
        "resource_mappings": {
          "OptionGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "describe-option-groups": [
      {
        "action": "rds:DescribeOptionGroups",
        "resource_mappings": {
          "OptionGroupName": {
            "template": "${OptionGroupName}"
          }
        }
      }
    ],
    "describe-orderable-db-instance-options": [
      {
        "action": "rds:DescribeOrderableDBInstanceOptions",
        "resource_mappings": {}
      }
    ],
    "describe-pending-maintenance-actions": [
      {
        "action": "rds:DescribePendingMaintenanceActions",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "%%iftemplatematch%${ResourceIdentifier}%%",
          "db": "%%iftemplatematch%${ResourceIdentifier}%%"
        }
      }
    ],
    "describe-reserved-db-instances": [
      {
        "action": "rds:DescribeReservedDBInstances",
        "resource_mappings": {
          "ReservedDbInstanceName": {
            "template": "${ReservedDBInstanceId}"
          }
        }
      }
    ],
    "describe-reserved-db-instances-offerings": [
      {
        "action": "rds:DescribeReservedDBInstancesOfferings",
        "resource_mappings": {}
      }
    ],
    "describe-source-regions": [
      {
        "action": "rds:DescribeSourceRegions",
        "resource_mappings": {}
      }
    ],
    "describe-valid-db-instance-modifications": [
      {
        "action": "rds:DescribeValidDBInstanceModifications",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          }
        }
      }
    ],
    "download-db-log-file-portion": [
      {
        "action": "rds:DownloadDBLogFilePortion",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          }
        }
      }
    ],
    "failover-db-cluster": [
      {
        "action": "rds:FailoverDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          }
        }
      }
    ],
    "failover-global-cluster": [
      {
        "action": "rds:FailoverGlobalCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${TargetDbClusterIdentifier}"
          },
          "GlobalCluster": {
            "template": "${GlobalClusterIdentifier}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "rds:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "db": "%%iftemplatematch%${ResourceName}%%",
          "es": "%%iftemplatematch%${ResourceName}%%",
          "og": "%%iftemplatematch%${ResourceName}%%",
          "pg": "%%iftemplatematch%${ResourceName}%%",
          "proxy": "%%iftemplatematch%${ResourceName}%%",
          "proxy-endpoint": "%%iftemplatematch%${ResourceName}%%",
          "ri": "%%iftemplatematch%${ResourceName}%%",
          "secgrp": "%%iftemplatematch%${ResourceName}%%",
          "snapshot": "%%iftemplatematch%${ResourceName}%%",
          "subgrp": "%%iftemplatematch%${ResourceName}%%",
          "target-group": "%%iftemplatematch%${ResourceName}%%"
        }
      }
    ],
    "modify-activity-stream": [
      {
        "action": "rds:ModifyActivityStream",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "db": "${ResourceArn}"
        }
      }
    ],
    "modify-certificates": [
      {
        "action": "rds:ModifyCertificates",
        "resource_mappings": {}
      }
    ],
    "modify-current-db-cluster-capacity": [
      {
        "action": "rds:ModifyCurrentDBClusterCapacity",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          }
        }
      }
    ],
    "modify-custom-db-engine-version": [
      {
        "action": "rds:ModifyCustomDBEngineVersion",
        "resource_mappings": {
          "Engine": {
            "template": "${Engine}"
          },
          "EngineVersion": {
            "template": "${EngineVersion}"
          },
          "CustomDbEngineVersionId": {
            "template": "*"
          }
        }
      }
    ],
    "modify-db-cluster": [
      {
        "action": "rds:ModifyDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "%%many%${DBClusterIdentifier}%${NewDBClusterIdentifier}%%"
          },
          "ClusterParameterGroupName": {
            "template": "${DBClusterParameterGroupName}"
          },
          "OptionGroupName": {
            "template": "${OptionGroupName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "arn:${Partition}:iam::${Account}:role/${DomainIAMRoleName}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${EnableIAMDatabaseAuthentication}%*%%%"
        }
      }
    ],
    "modify-db-cluster-endpoint": [
      {
        "action": "rds:ModifyDBClusterEndpoint",
        "resource_mappings": {
          "DbClusterEndpoint": {
            "template": "${DBClusterEndpointIdentifier}"
          }
        }
      }
    ],
    "modify-db-cluster-parameter-group": [
      {
        "action": "rds:ModifyDBClusterParameterGroup",
        "resource_mappings": {
          "ClusterParameterGroupName": {
            "template": "${DBClusterParameterGroupName}"
          }
        }
      }
    ],
    "modify-db-cluster-snapshot-attribute": [
      {
        "action": "rds:ModifyDBClusterSnapshotAttribute",
        "resource_mappings": {
          "ClusterSnapshotName": {
            "template": "${DBClusterSnapshotIdentifier}"
          }
        }
      }
    ],
    "modify-db-instance": [
      {
        "action": "rds:ModifyDBInstance",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "%%many%${DBInstanceIdentifier}%${NewDBInstanceIdentifier}%%"
          },
          "OptionGroupName": {
            "template": "${OptionGroupName}"
          },
          "ParameterGroupName": {
            "template": "${DBParameterGroupName}"
          },
          "SecurityGroupName": {
            "template": "${DBSecurityGroups[]}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${MonitoringRoleArn}%arn:${Partition}:iam::${Account}:role/${DomainIAMRoleName}%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${EnableIAMDatabaseAuthentication}%*%%%"
        }
      }
    ],
    "modify-db-parameter-group": [
      {
        "action": "rds:ModifyDBParameterGroup",
        "resource_mappings": {
          "ParameterGroupName": {
            "template": "${DBParameterGroupName}"
          }
        }
      }
    ],
    "modify-db-proxy": [
      {
        "action": "rds:ModifyDBProxy",
        "resource_mappings": {
          "DbProxyId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "modify-db-proxy-endpoint": [
      {
        "action": "rds:ModifyDBProxyEndpoint",
        "resource_mappings": {
          "DbProxyEndpointId": {
            "template": "*"
          }
        }
      }
    ],
    "modify-db-proxy-target-group": [
      {
        "action": "rds:ModifyDBProxyTargetGroup",
        "resource_mappings": {
          "TargetGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "modify-db-snapshot": [
      {
        "action": "rds:ModifyDBSnapshot",
        "resource_mappings": {
          "SnapshotName": {
            "template": "${DBSnapshotIdentifier}"
          }
        }
      }
    ],
    "modify-db-snapshot-attribute": [
      {
        "action": "rds:ModifyDBSnapshotAttribute",
        "resource_mappings": {
          "SnapshotName": {
            "template": "${DBSnapshotIdentifier}"
          }
        }
      }
    ],
    "modify-db-subnet-group": [
      {
        "action": "rds:ModifyDBSubnetGroup",
        "resource_mappings": {
          "SubnetGroupName": {
            "template": "${DBSubnetGroupName}"
          }
        }
      }
    ],
    "modify-event-subscription": [
      {
        "action": "rds:ModifyEventSubscription",
        "resource_mappings": {
          "SubscriptionName": {
            "template": "${SubscriptionName}"
          }
        }
      }
    ],
    "modify-global-cluster": [
      {
        "action": "rds:ModifyGlobalCluster",
        "resource_mappings": {
          "GlobalCluster": {
            "template": "%%many%${GlobalClusterIdentifier}%${NewGlobalClusterIdentifier}%%"
          }
        }
      }
    ],
    "promote-read-replica": [
      {
        "action": "rds:PromoteReadReplica",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          }
        }
      }
    ],
    "promote-read-replica-db-cluster": [
      {
        "action": "rds:PromoteReadReplicaDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          }
        }
      }
    ],
    "purchase-reserved-db-instances-offering": [
      {
        "action": "rds:PurchaseReservedDBInstancesOffering",
        "resource_mappings": {
          "ReservedDbInstanceName": {
            "template": "${ReservedDBInstanceId}"
          }
        }
      }
    ],
    "reboot-db-cluster": [
      {
        "action": "rds:RebootDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          }
        }
      },
      {
        "action": "rds:RebootDBInstance",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "*"
          }
        }
      }
    ],
    "reboot-db-instance": [
      {
        "action": "rds:RebootDBInstance",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          }
        }
      }
    ],
    "register-db-proxy-targets": [
      {
        "action": "rds:RegisterDBProxyTargets",
        "resource_mappings": {
          "TargetGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "remove-from-global-cluster": [
      {
        "action": "rds:RemoveFromGlobalCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DbClusterIdentifier}"
          },
          "GlobalCluster": {
            "template": "${GlobalClusterIdentifier}"
          }
        }
      }
    ],
    "remove-role-from-db-cluster": [
      {
        "action": "rds:RemoveRoleFromDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "remove-role-from-db-instance": [
      {
        "action": "rds:RemoveRoleFromDBInstance",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "remove-source-identifier-from-subscription": [
      {
        "action": "rds:RemoveSourceIdentifierFromSubscription",
        "resource_mappings": {
          "SubscriptionName": {
            "template": "${SubscriptionName}"
          }
        }
      }
    ],
    "remove-tags-from-resource": [
      {
        "action": "rds:RemoveTagsFromResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "db": "%%iftemplatematch%${ResourceName}%%",
          "es": "%%iftemplatematch%${ResourceName}%%",
          "og": "%%iftemplatematch%${ResourceName}%%",
          "pg": "%%iftemplatematch%${ResourceName}%%",
          "proxy": "%%iftemplatematch%${ResourceName}%%",
          "proxy-endpoint": "%%iftemplatematch%${ResourceName}%%",
          "ri": "%%iftemplatematch%${ResourceName}%%",
          "secgrp": "%%iftemplatematch%${ResourceName}%%",
          "snapshot": "%%iftemplatematch%${ResourceName}%%",
          "subgrp": "%%iftemplatematch%${ResourceName}%%",
          "target-group": "%%iftemplatematch%${ResourceName}%%"
        }
      }
    ],
    "reset-db-cluster-parameter-group": [
      {
        "action": "rds:ResetDBClusterParameterGroup",
        "resource_mappings": {
          "ClusterParameterGroupName": {
            "template": "${DBClusterParameterGroupName}"
          }
        }
      }
    ],
    "reset-db-parameter-group": [
      {
        "action": "rds:ResetDBParameterGroup",
        "resource_mappings": {
          "ParameterGroupName": {
            "template": "${DBParameterGroupName}"
          }
        }
      }
    ],
    "restore-db-cluster-from-s3": [
      {
        "action": "rds:RestoreDBClusterFromS3",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${S3IngestionRoleArn}%arn:${Partition}:iam::${Account}:role/${DomainIAMRoleName}%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${EnableIAMDatabaseAuthentication}%*%%%"
        }
      },
      {
        "action": "rds:AddTagsToResource",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "restore-db-cluster-from-snapshot": [
      {
        "action": "rds:RestoreDBClusterFromSnapshot",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          },
          "ClusterSnapshotName": {
            "template": "${SnapshotIdentifier}"
          },
          "OptionGroupName": {
            "template": "${OptionGroupName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "arn:${Partition}:iam::${Account}:role/${DomainIAMRoleName}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${EnableIAMDatabaseAuthentication}%*%%%"
        }
      },
      {
        "action": "rds:AddTagsToResource",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "restore-db-cluster-to-point-in-time": [
      {
        "action": "rds:RestoreDBClusterToPointInTime",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          },
          "OptionGroupName": {
            "template": "${OptionGroupName}"
          },
          "SubnetGroupName": {
            "template": "${DBSubnetGroupName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "arn:${Partition}:iam::${Account}:role/${DomainIAMRoleName}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${EnableIAMDatabaseAuthentication}%*%%%"
        }
      },
      {
        "action": "rds:AddTagsToResource",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "restore-db-instance-from-db-snapshot": [
      {
        "action": "rds:RestoreDBInstanceFromDBSnapshot",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          },
          "OptionGroupName": {
            "template": "${OptionGroupName}"
          },
          "SnapshotName": {
            "template": "${DBSnapshotIdentifier}"
          },
          "SubnetGroupName": {
            "template": "${DBSubnetGroupName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "arn:${Partition}:iam::${Account}:role/${DomainIAMRoleName}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${EnableIAMDatabaseAuthentication}%*%%%"
        }
      },
      {
        "action": "rds:AddTagsToResource",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "restore-db-instance-from-s3": [
      {
        "action": "rds:RestoreDBInstanceFromS3",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${S3IngestionRoleArn}%${MonitoringRoleArn}%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${EnableIAMDatabaseAuthentication}%*%%%"
        }
      },
      {
        "action": "rds:AddTagsToResource",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "restore-db-instance-to-point-in-time": [
      {
        "action": "rds:RestoreDBInstanceToPointInTime",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "%%many%${SourceDBInstanceIdentifier}%${TargetDBInstanceIdentifier}%%"
          },
          "OptionGroupName": {
            "template": "${OptionGroupName}"
          },
          "SubnetGroupName": {
            "template": "${DBSubnetGroupName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "arn:${Partition}:iam::${Account}:role/${DomainIAMRoleName}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${EnableIAMDatabaseAuthentication}%*%%%"
        }
      },
      {
        "action": "rds:AddTagsToResource",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "revoke-db-security-group-ingress": [
      {
        "action": "rds:RevokeDBSecurityGroupIngress",
        "resource_mappings": {
          "SecurityGroupName": {
            "template": "${DBSecurityGroupName}"
          }
        }
      }
    ],
    "start-activity-stream": [
      {
        "action": "rds:StartActivityStream",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "${ResourceArn}"
        }
      }
    ],
    "start-db-cluster": [
      {
        "action": "rds:StartDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          }
        }
      }
    ],
    "start-db-instance": [
      {
        "action": "rds:StartDBInstance",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          }
        }
      }
    ],
    "start-db-instance-automated-backups-replication": [
      {
        "action": "rds:StartDBInstanceAutomatedBackupsReplication",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "db": "${SourceDBInstanceArn}"
        }
      }
    ],
    "start-export-task": [
      {
        "action": "rds:StartExportTask",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${IamRoleArn}"
        }
      }
    ],
    "stop-activity-stream": [
      {
        "action": "rds:StopActivityStream",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "${ResourceArn}"
        }
      }
    ],
    "stop-db-cluster": [
      {
        "action": "rds:StopDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          }
        }
      }
    ],
    "stop-db-instance": [
      {
        "action": "rds:StopDBInstance",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          }
        }
      }
    ],
    "stop-db-instance-automated-backups-replication": [
      {
        "action": "rds:StopDBInstanceAutomatedBackupsReplication",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "db": "${SourceDBInstanceArn}"
        }
      }
    ],
    "switchover-blue-green-deployment": [
      {
        "action": "rds:SwitchoverBlueGreenDeployment",
        "resource_mappings": {
          "BlueGreenDeploymentIdentifier": {
            "template": "${BlueGreenDeploymentIdentifier}"
          }
        }
      },
      {
        "action": "rds:ModifyDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "*"
          },
          "ClusterParameterGroupName": {
            "template": "*"
          },
          "OptionGroupName": {
            "template": "*"
          }
        }
      },
      {
        "action": "rds:ModifyDBInstance",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "*"
          },
          "OptionGroupName": {
            "template": "*"
          },
          "ParameterGroupName": {
            "template": "*"
          },
          "SecurityGroupName": {
            "template": "*"
          }
        }
      },
      {
        "action": "rds:PromoteReadReplica",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "*"
          }
        }
      },
      {
        "action": "rds:PromoteReadReplicaDBCluster",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "*"
          }
        }
      }
    ],
    "switchover-global-cluster": [
      {
        "note": "NotFound",
        "action": "RDS:SwitchoverGlobalCluster",
        "resource_mappings": {}
      }
    ],
    "switchover-read-replica": [
      {
        "action": "rds:SwitchoverReadReplica",
        "resource_mappings": {
          "DbInstanceName": {
            "template": "${DBInstanceIdentifier}"
          }
        }
      }
    ],
    "add-option-to-option-group": [
      {
        "action": "rds:ModifyOptionGroup",
        "resource_mappings": {
          "OptionGroupName": {
            "template": "${OptionGroupName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "remove-option-from-option-group": [
      {
        "action": "rds:ModifyOptionGroup",
        "resource_mappings": {
          "OptionGroupName": {
            "template": "${OptionGroupName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "wait": [
      {
        "action": "rds:DescribeDBClusters",
        "resource_mappings": {
          "DbClusterInstanceName": {
            "template": "${DBClusterIdentifier}"
          }
        }
      }
    ]
  },
  "rds-data": {
    "batch-execute-statement": [
      {
        "action": "rds-data:BatchExecuteStatement",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "${resourceArn}"
        }
      }
    ],
    "begin-transaction": [
      {
        "action": "rds-data:BeginTransaction",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "${resourceArn}"
        }
      }
    ],
    "commit-transaction": [
      {
        "action": "rds-data:CommitTransaction",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "${resourceArn}"
        }
      },
      {
        "action": "rds-data:BeginTransaction",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "${resourceArn}"
        }
      }
    ],
    "execute-sql": [
      {
        "action": "rds-data:ExecuteSql",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "%%iftemplatematch%${dbClusterOrInstanceArn}%%"
        }
      }
    ],
    "execute-statement": [
      {
        "action": "rds-data:ExecuteStatement",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "${resourceArn}"
        }
      }
    ],
    "rollback-transaction": [
      {
        "action": "rds-data:RollbackTransaction",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "${resourceArn}"
        }
      },
      {
        "action": "rds-data:BeginTransaction",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "${resourceArn}"
        }
      }
    ]
  },
  "redshift": {
    "accept-reserved-node-exchange": [
      {
        "action": "redshift:AcceptReservedNodeExchange",
        "resource_mappings": {}
      }
    ],
    "add-partner": [
      {
        "action": "redshift:AddPartner",
        "resource_mappings": {}
      }
    ],
    "associate-data-share-consumer": [
      {
        "action": "redshift:AssociateDataShareConsumer",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "datashare": "${DataShareArn}"
        }
      }
    ],
    "authorize-cluster-security-group-ingress": [
      {
        "action": "redshift:AuthorizeClusterSecurityGroupIngress",
        "resource_mappings": {
          "SecurityGroupName": {
            "template": "${ClusterSecurityGroupName}"
          },
          "Owner": {
            "template": "*"
          },
          "Ec2SecurityGroupId": {
            "template": "*"
          },
          "Ece2SecuritygroupId": {
            "template": "*"
          }
        }
      }
    ],
    "authorize-data-share": [
      {
        "action": "redshift:AuthorizeDataShare",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "datashare": "${DataShareArn}"
        }
      }
    ],
    "authorize-endpoint-access": [
      {
        "action": "redshift:AuthorizeEndpointAccess",
        "resource_mappings": {}
      }
    ],
    "authorize-snapshot-access": [
      {
        "action": "redshift:AuthorizeSnapshotAccess",
        "resource_mappings": {
          "ClusterName": {
            "template": "${SnapshotClusterIdentifier}"
          },
          "SnapshotName": {
            "template": "${SnapshotIdentifier}"
          }
        }
      }
    ],
    "batch-delete-cluster-snapshots": [
      {
        "action": "redshift:BatchDeleteClusterSnapshots",
        "resource_mappings": {
          "ClusterName": {
            "template": "${Identifiers[].SnapshotClusterIdentifier}"
          },
          "SnapshotName": {
            "template": "${Identifiers[].SnapshotIdentifier}"
          }
        }
      }
    ],
    "batch-modify-cluster-snapshots": [
      {
        "action": "redshift:BatchModifyClusterSnapshots",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "snapshot": "%%iftemplatematch%${SnapshotIdentifierList[]}%%"
        }
      }
    ],
    "cancel-resize": [
      {
        "action": "redshift:CancelResize",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          }
        }
      }
    ],
    "copy-cluster-snapshot": [
      {
        "action": "redshift:CopyClusterSnapshot",
        "resource_mappings": {
          "ClusterName": {
            "template": "${SourceSnapshotClusterIdentifier}"
          },
          "SnapshotName": {
            "template": "%%many%${SourceSnapshotIdentifier}%${TargetSnapshotIdentifier}%%"
          }
        }
      }
    ],
    "create-authentication-profile": [
      {
        "action": "redshift:CreateAuthenticationProfile",
        "resource_mappings": {}
      }
    ],
    "create-cluster": [
      {
        "action": "redshift:CreateCluster",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${IamRoles[]}"
        }
      }
    ],
    "create-cluster-parameter-group": [
      {
        "action": "redshift:CreateClusterParameterGroup",
        "resource_mappings": {
          "ParameterGroupName": {
            "template": "${ParameterGroupName}"
          }
        }
      }
    ],
    "create-cluster-security-group": [
      {
        "action": "redshift:CreateClusterSecurityGroup",
        "resource_mappings": {
          "SecurityGroupName": {
            "template": "${ClusterSecurityGroupName}"
          },
          "Owner": {
            "template": "*"
          },
          "Ec2SecurityGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "create-cluster-snapshot": [
      {
        "action": "redshift:CreateClusterSnapshot",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          },
          "SnapshotName": {
            "template": "${SnapshotIdentifier}"
          }
        }
      }
    ],
    "create-cluster-subnet-group": [
      {
        "action": "redshift:CreateClusterSubnetGroup",
        "resource_mappings": {
          "SubnetGroupName": {
            "template": "${ClusterSubnetGroupName}"
          }
        }
      }
    ],
    "create-custom-domain-association": [
      {
        "action": "redshift:CreateCustomDomainAssociation",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          }
        }
      },
      {
        "action": "acm:DescribeCertificate",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate": "${CustomDomainCertificateArn}"
        }
      }
    ],
    "create-endpoint-access": [
      {
        "action": "redshift:CreateEndpointAccess",
        "resource_mappings": {}
      }
    ],
    "create-event-subscription": [
      {
        "action": "redshift:CreateEventSubscription",
        "resource_mappings": {
          "EventSubscriptionName": {
            "template": "${SubscriptionName}"
          }
        }
      }
    ],
    "create-hsm-client-certificate": [
      {
        "action": "redshift:CreateHsmClientCertificate",
        "resource_mappings": {
          "HSMClientCertificateId": {
            "template": "${HsmClientCertificateIdentifier}"
          }
        }
      }
    ],
    "create-hsm-configuration": [
      {
        "action": "redshift:CreateHsmConfiguration",
        "resource_mappings": {
          "HSMConfigurationId": {
            "template": "${HsmConfigurationIdentifier}"
          }
        }
      }
    ],
    "create-scheduled-action": [
      {
        "action": "redshift:CreateScheduledAction",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${IamRole}"
        }
      }
    ],
    "create-snapshot-copy-grant": [
      {
        "action": "redshift:CreateSnapshotCopyGrant",
        "resource_mappings": {
          "SnapshotCopyGrantName": {
            "template": "${SnapshotCopyGrantName}"
          }
        }
      }
    ],
    "create-snapshot-schedule": [
      {
        "action": "redshift:CreateSnapshotSchedule",
        "resource_mappings": {
          "ParameterGroupName": {
            "template": "${ScheduleIdentifier}"
          }
        }
      }
    ],
    "create-tags": [
      {
        "action": "redshift:CreateTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "%%iftemplatematch%${ResourceName}%%",
          "dbgroup": "%%iftemplatematch%${ResourceName}%%",
          "dbname": "%%iftemplatematch%${ResourceName}%%",
          "dbuser": "%%iftemplatematch%${ResourceName}%%",
          "eventsubscription": "%%iftemplatematch%${ResourceName}%%",
          "hsmclientcertificate": "%%iftemplatematch%${ResourceName}%%",
          "hsmconfiguration": "%%iftemplatematch%${ResourceName}%%",
          "parametergroup": "%%iftemplatematch%${ResourceName}%%",
          "securitygroup": "%%iftemplatematch%${ResourceName}%%",
          "securitygroupingress-cidr": "%%iftemplatematch%${ResourceName}%%",
          "securitygroupingress-ec2securitygroup": "%%iftemplatematch%${ResourceName}%%",
          "snapshot": "%%iftemplatematch%${ResourceName}%%",
          "snapshotcopygrant": "%%iftemplatematch%${ResourceName}%%",
          "snapshotschedule": "%%iftemplatematch%${ResourceName}%%",
          "subnetgroup": "%%iftemplatematch%${ResourceName}%%"
        }
      }
    ],
    "create-usage-limit": [
      {
        "action": "redshift:CreateUsageLimit",
        "resource_mappings": {
          "UsageLimitId": {
            "template": "*"
          }
        }
      }
    ],
    "deauthorize-data-share": [
      {
        "action": "redshift:DeauthorizeDataShare",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "datashare": "${DataShareArn}"
        }
      }
    ],
    "delete-authentication-profile": [
      {
        "action": "redshift:DeleteAuthenticationProfile",
        "resource_mappings": {}
      }
    ],
    "delete-cluster": [
      {
        "action": "redshift:DeleteCluster",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          }
        }
      }
    ],
    "delete-cluster-parameter-group": [
      {
        "action": "redshift:DeleteClusterParameterGroup",
        "resource_mappings": {
          "ParameterGroupName": {
            "template": "${ParameterGroupName}"
          }
        }
      }
    ],
    "delete-cluster-security-group": [
      {
        "action": "redshift:DeleteClusterSecurityGroup",
        "resource_mappings": {
          "SecurityGroupName": {
            "template": "${ClusterSecurityGroupName}"
          },
          "Owner": {
            "template": "*"
          },
          "Ec2SecurityGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-cluster-snapshot": [
      {
        "action": "redshift:DeleteClusterSnapshot",
        "resource_mappings": {
          "ClusterName": {
            "template": "${SnapshotClusterIdentifier}"
          },
          "SnapshotName": {
            "template": "${SnapshotIdentifier}"
          }
        }
      }
    ],
    "delete-cluster-subnet-group": [
      {
        "action": "redshift:DeleteClusterSubnetGroup",
        "resource_mappings": {
          "SubnetGroupName": {
            "template": "${ClusterSubnetGroupName}"
          }
        }
      }
    ],
    "delete-custom-domain-association": [
      {
        "action": "redshift:DeleteCustomDomainAssociation",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          }
        }
      }
    ],
    "delete-endpoint-access": [
      {
        "action": "redshift:DeleteEndpointAccess",
        "resource_mappings": {}
      }
    ],
    "delete-event-subscription": [
      {
        "action": "redshift:DeleteEventSubscription",
        "resource_mappings": {
          "EventSubscriptionName": {
            "template": "${SubscriptionName}"
          }
        }
      }
    ],
    "delete-hsm-client-certificate": [
      {
        "action": "redshift:DeleteHsmClientCertificate",
        "resource_mappings": {
          "HSMClientCertificateId": {
            "template": "${HsmClientCertificateIdentifier}"
          }
        }
      }
    ],
    "delete-hsm-configuration": [
      {
        "action": "redshift:DeleteHsmConfiguration",
        "resource_mappings": {
          "HSMConfigurationId": {
            "template": "${HsmConfigurationIdentifier}"
          }
        }
      }
    ],
    "delete-partner": [
      {
        "action": "redshift:DeletePartner",
        "resource_mappings": {}
      }
    ],
    "delete-resource-policy": [
      {
        "note": "NotFound",
        "action": "Redshift:DeleteResourcePolicy",
        "resource_mappings": {}
      }
    ],
    "delete-scheduled-action": [
      {
        "action": "redshift:DeleteScheduledAction",
        "resource_mappings": {}
      }
    ],
    "delete-snapshot-copy-grant": [
      {
        "action": "redshift:DeleteSnapshotCopyGrant",
        "resource_mappings": {
          "SnapshotCopyGrantName": {
            "template": "${SnapshotCopyGrantName}"
          }
        }
      }
    ],
    "delete-snapshot-schedule": [
      {
        "action": "redshift:DeleteSnapshotSchedule",
        "resource_mappings": {
          "ParameterGroupName": {
            "template": "${ScheduleIdentifier}"
          }
        }
      }
    ],
    "delete-tags": [
      {
        "action": "redshift:DeleteTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "%%iftemplatematch%${ResourceName}%%",
          "dbgroup": "%%iftemplatematch%${ResourceName}%%",
          "dbname": "%%iftemplatematch%${ResourceName}%%",
          "dbuser": "%%iftemplatematch%${ResourceName}%%",
          "eventsubscription": "%%iftemplatematch%${ResourceName}%%",
          "hsmclientcertificate": "%%iftemplatematch%${ResourceName}%%",
          "hsmconfiguration": "%%iftemplatematch%${ResourceName}%%",
          "parametergroup": "%%iftemplatematch%${ResourceName}%%",
          "securitygroup": "%%iftemplatematch%${ResourceName}%%",
          "securitygroupingress-cidr": "%%iftemplatematch%${ResourceName}%%",
          "securitygroupingress-ec2securitygroup": "%%iftemplatematch%${ResourceName}%%",
          "snapshot": "%%iftemplatematch%${ResourceName}%%",
          "snapshotcopygrant": "%%iftemplatematch%${ResourceName}%%",
          "snapshotschedule": "%%iftemplatematch%${ResourceName}%%",
          "subnetgroup": "%%iftemplatematch%${ResourceName}%%"
        }
      }
    ],
    "delete-usage-limit": [
      {
        "action": "redshift:DeleteUsageLimit",
        "resource_mappings": {
          "UsageLimitId": {
            "template": "${UsageLimitId}"
          }
        }
      }
    ],
    "describe-account-attributes": [
      {
        "action": "redshift:DescribeAccountAttributes",
        "resource_mappings": {}
      }
    ],
    "describe-authentication-profiles": [
      {
        "action": "redshift:DescribeAuthenticationProfiles",
        "resource_mappings": {}
      }
    ],
    "describe-cluster-db-revisions": [
      {
        "action": "redshift:DescribeClusterDbRevisions",
        "resource_mappings": {}
      }
    ],
    "describe-cluster-parameter-groups": [
      {
        "action": "redshift:DescribeClusterParameterGroups",
        "resource_mappings": {}
      }
    ],
    "describe-cluster-parameters": [
      {
        "action": "redshift:DescribeClusterParameters",
        "resource_mappings": {
          "ParameterGroupName": {
            "template": "${ParameterGroupName}"
          }
        }
      }
    ],
    "describe-cluster-security-groups": [
      {
        "action": "redshift:DescribeClusterSecurityGroups",
        "resource_mappings": {}
      }
    ],
    "describe-cluster-snapshots": [
      {
        "action": "redshift:DescribeClusterSnapshots",
        "resource_mappings": {}
      }
    ],
    "describe-cluster-subnet-groups": [
      {
        "action": "redshift:DescribeClusterSubnetGroups",
        "resource_mappings": {}
      }
    ],
    "describe-cluster-tracks": [
      {
        "action": "redshift:DescribeClusterTracks",
        "resource_mappings": {}
      }
    ],
    "describe-cluster-versions": [
      {
        "action": "redshift:DescribeClusterVersions",
        "resource_mappings": {}
      }
    ],
    "describe-clusters": [
      {
        "action": "redshift:DescribeClusters",
        "resource_mappings": {}
      }
    ],
    "describe-custom-domain-associations": [
      {
        "action": "redshift:DescribeCustomDomainAssociations",
        "resource_mappings": {}
      }
    ],
    "describe-data-shares": [
      {
        "action": "redshift:DescribeDataShares",
        "resource_mappings": {}
      }
    ],
    "describe-data-shares-for-consumer": [
      {
        "action": "redshift:DescribeDataSharesForConsumer",
        "resource_mappings": {}
      }
    ],
    "describe-data-shares-for-producer": [
      {
        "action": "redshift:DescribeDataSharesForProducer",
        "resource_mappings": {}
      }
    ],
    "describe-default-cluster-parameters": [
      {
        "action": "redshift:DescribeDefaultClusterParameters",
        "resource_mappings": {}
      }
    ],
    "describe-endpoint-access": [
      {
        "action": "redshift:DescribeEndpointAccess",
        "resource_mappings": {}
      }
    ],
    "describe-endpoint-authorization": [
      {
        "action": "redshift:DescribeEndpointAuthorization",
        "resource_mappings": {}
      }
    ],
    "describe-event-categories": [
      {
        "action": "redshift:DescribeEventCategories",
        "resource_mappings": {}
      }
    ],
    "describe-event-subscriptions": [
      {
        "action": "redshift:DescribeEventSubscriptions",
        "resource_mappings": {}
      }
    ],
    "describe-events": [
      {
        "action": "redshift:DescribeEvents",
        "resource_mappings": {}
      }
    ],
    "describe-hsm-client-certificates": [
      {
        "action": "redshift:DescribeHsmClientCertificates",
        "resource_mappings": {}
      }
    ],
    "describe-hsm-configurations": [
      {
        "action": "redshift:DescribeHsmConfigurations",
        "resource_mappings": {}
      }
    ],
    "describe-inbound-integrations": [
      {
        "note": "NotFound",
        "action": "Redshift:DescribeInboundIntegrations",
        "resource_mappings": {}
      }
    ],
    "describe-logging-status": [
      {
        "action": "redshift:DescribeLoggingStatus",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          }
        }
      }
    ],
    "describe-node-configuration-options": [
      {
        "action": "redshift:DescribeNodeConfigurationOptions",
        "resource_mappings": {}
      }
    ],
    "describe-orderable-cluster-options": [
      {
        "action": "redshift:DescribeOrderableClusterOptions",
        "resource_mappings": {}
      }
    ],
    "describe-partners": [
      {
        "action": "redshift:DescribePartners",
        "resource_mappings": {}
      }
    ],
    "describe-reserved-node-exchange-status": [
      {
        "action": "redshift:DescribeReservedNodeExchangeStatus",
        "resource_mappings": {}
      }
    ],
    "describe-reserved-node-offerings": [
      {
        "action": "redshift:DescribeReservedNodeOfferings",
        "resource_mappings": {}
      }
    ],
    "describe-reserved-nodes": [
      {
        "action": "redshift:DescribeReservedNodes",
        "resource_mappings": {}
      }
    ],
    "describe-resize": [
      {
        "action": "redshift:DescribeResize",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          }
        }
      }
    ],
    "describe-scheduled-actions": [
      {
        "action": "redshift:DescribeScheduledActions",
        "resource_mappings": {}
      }
    ],
    "describe-snapshot-copy-grants": [
      {
        "action": "redshift:DescribeSnapshotCopyGrants",
        "resource_mappings": {}
      }
    ],
    "describe-snapshot-schedules": [
      {
        "action": "redshift:DescribeSnapshotSchedules",
        "resource_mappings": {
          "ParameterGroupName": {
            "template": "${ScheduleIdentifier}"
          }
        }
      }
    ],
    "describe-storage": [
      {
        "action": "redshift:DescribeStorage",
        "resource_mappings": {}
      }
    ],
    "describe-table-restore-status": [
      {
        "action": "redshift:DescribeTableRestoreStatus",
        "resource_mappings": {}
      }
    ],
    "describe-tags": [
      {
        "action": "redshift:DescribeTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "%%iftemplatematch%${ResourceName}%%",
          "dbgroup": "%%iftemplatematch%${ResourceName}%%",
          "dbname": "%%iftemplatematch%${ResourceName}%%",
          "dbuser": "%%iftemplatematch%${ResourceName}%%",
          "eventsubscription": "%%iftemplatematch%${ResourceName}%%",
          "hsmclientcertificate": "%%iftemplatematch%${ResourceName}%%",
          "hsmconfiguration": "%%iftemplatematch%${ResourceName}%%",
          "parametergroup": "%%iftemplatematch%${ResourceName}%%",
          "securitygroup": "%%iftemplatematch%${ResourceName}%%",
          "securitygroupingress-cidr": "%%iftemplatematch%${ResourceName}%%",
          "securitygroupingress-ec2securitygroup": "%%iftemplatematch%${ResourceName}%%",
          "snapshot": "%%iftemplatematch%${ResourceName}%%",
          "snapshotcopygrant": "%%iftemplatematch%${ResourceName}%%",
          "snapshotschedule": "%%iftemplatematch%${ResourceName}%%",
          "subnetgroup": "%%iftemplatematch%${ResourceName}%%"
        }
      }
    ],
    "describe-usage-limits": [
      {
        "action": "redshift:DescribeUsageLimits",
        "resource_mappings": {
          "UsageLimitId": {
            "template": "${UsageLimitId}"
          }
        }
      }
    ],
    "disable-logging": [
      {
        "action": "redshift:DisableLogging",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          }
        }
      }
    ],
    "disable-snapshot-copy": [
      {
        "action": "redshift:DisableSnapshotCopy",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          }
        }
      }
    ],
    "disassociate-data-share-consumer": [
      {
        "action": "redshift:DisassociateDataShareConsumer",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "datashare": "${DataShareArn}"
        }
      }
    ],
    "enable-logging": [
      {
        "action": "redshift:EnableLogging",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          }
        }
      }
    ],
    "enable-snapshot-copy": [
      {
        "action": "redshift:EnableSnapshotCopy",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          }
        }
      }
    ],
    "get-cluster-credentials": [
      {
        "action": "redshift:GetClusterCredentials",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          },
          "DbUser": {
            "template": "${DbUser}"
          },
          "DbGroup": {
            "template": "${DbGroups[]}"
          },
          "DbName": {
            "template": "${DbName}"
          }
        }
      }
    ],
    "get-cluster-credentials-with-iam": [
      {
        "action": "redshift:GetClusterCredentialsWithIAM",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          },
          "DbName": {
            "template": "${DbName}"
          }
        }
      }
    ],
    "get-reserved-node-exchange-configuration-options": [
      {
        "action": "redshift:GetReservedNodeExchangeConfigurationOptions",
        "resource_mappings": {}
      }
    ],
    "get-reserved-node-exchange-offerings": [
      {
        "action": "redshift:GetReservedNodeExchangeOfferings",
        "resource_mappings": {}
      }
    ],
    "get-resource-policy": [
      {
        "note": "NotFound",
        "action": "Redshift:GetResourcePolicy",
        "resource_mappings": {}
      }
    ],
    "modify-aqua-configuration": [
      {
        "action": "redshift:ModifyAquaConfiguration",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          }
        }
      }
    ],
    "modify-authentication-profile": [
      {
        "action": "redshift:ModifyAuthenticationProfile",
        "resource_mappings": {}
      }
    ],
    "modify-cluster": [
      {
        "action": "redshift:ModifyCluster",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          }
        }
      }
    ],
    "modify-cluster-db-revision": [
      {
        "action": "redshift:ModifyClusterDbRevision",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          }
        }
      }
    ],
    "modify-cluster-iam-roles": [
      {
        "action": "redshift:ModifyClusterIamRoles",
        "resource_mappings": {
          "ClusterName": {
            "template": "%%many%${AddIamRoles[]}%${RemoveIamRoles[]}%%"
          }
        }
      }
    ],
    "modify-cluster-maintenance": [
      {
        "action": "redshift:ModifyClusterMaintenance",
        "resource_mappings": {}
      }
    ],
    "modify-cluster-parameter-group": [
      {
        "action": "redshift:ModifyClusterParameterGroup",
        "resource_mappings": {
          "ParameterGroupName": {
            "template": "${ParameterGroupName}"
          }
        }
      }
    ],
    "modify-cluster-snapshot": [
      {
        "action": "redshift:ModifyClusterSnapshot",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "snapshot": "%%iftemplatematch%${SnapshotIdentifier}%%"
        }
      }
    ],
    "modify-cluster-snapshot-schedule": [
      {
        "action": "redshift:ModifyClusterSnapshotSchedule",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          }
        }
      }
    ],
    "modify-cluster-subnet-group": [
      {
        "action": "redshift:ModifyClusterSubnetGroup",
        "resource_mappings": {
          "SubnetGroupName": {
            "template": "${ClusterSubnetGroupName}"
          }
        }
      }
    ],
    "modify-custom-domain-association": [
      {
        "action": "redshift:ModifyCustomDomainAssociation",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          }
        }
      },
      {
        "action": "acm:DescribeCertificate",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "certificate": "${CustomDomainCertificateArn}"
        }
      }
    ],
    "modify-endpoint-access": [
      {
        "action": "redshift:ModifyEndpointAccess",
        "resource_mappings": {}
      }
    ],
    "modify-event-subscription": [
      {
        "action": "redshift:ModifyEventSubscription",
        "resource_mappings": {
          "EventSubscriptionName": {
            "template": "${SubscriptionName}"
          }
        }
      }
    ],
    "modify-scheduled-action": [
      {
        "action": "redshift:ModifyScheduledAction",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${IamRole}"
        }
      }
    ],
    "modify-snapshot-copy-retention-period": [
      {
        "action": "redshift:ModifySnapshotCopyRetentionPeriod",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          }
        }
      }
    ],
    "modify-snapshot-schedule": [
      {
        "action": "redshift:ModifySnapshotSchedule",
        "resource_mappings": {
          "ParameterGroupName": {
            "template": "${ScheduleIdentifier}"
          }
        }
      }
    ],
    "modify-usage-limit": [
      {
        "action": "redshift:ModifyUsageLimit",
        "resource_mappings": {
          "UsageLimitId": {
            "template": "${UsageLimitId}"
          }
        }
      }
    ],
    "pause-cluster": [
      {
        "action": "redshift:PauseCluster",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          }
        }
      }
    ],
    "purchase-reserved-node-offering": [
      {
        "action": "redshift:PurchaseReservedNodeOffering",
        "resource_mappings": {}
      }
    ],
    "put-resource-policy": [
      {
        "note": "NotFound",
        "action": "Redshift:PutResourcePolicy",
        "resource_mappings": {}
      }
    ],
    "reboot-cluster": [
      {
        "action": "redshift:RebootCluster",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          }
        }
      }
    ],
    "reject-data-share": [
      {
        "action": "redshift:RejectDataShare",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "datashare": "${DataShareArn}"
        }
      }
    ],
    "reset-cluster-parameter-group": [
      {
        "action": "redshift:ResetClusterParameterGroup",
        "resource_mappings": {
          "ParameterGroupName": {
            "template": "${ParameterGroupName}"
          }
        }
      }
    ],
    "resize-cluster": [
      {
        "action": "redshift:ResizeCluster",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          }
        }
      }
    ],
    "restore-from-cluster-snapshot": [
      {
        "action": "redshift:RestoreFromClusterSnapshot",
        "resource_mappings": {
          "ClusterName": {
            "template": "${SnapshotClusterIdentifier}"
          },
          "SnapshotName": {
            "template": "${SnapshotIdentifier}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${IamRoles[]}"
        }
      }
    ],
    "restore-table-from-cluster-snapshot": [
      {
        "action": "redshift:RestoreTableFromClusterSnapshot",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          },
          "SnapshotName": {
            "template": "${SnapshotIdentifier}"
          }
        }
      }
    ],
    "resume-cluster": [
      {
        "action": "redshift:ResumeCluster",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          }
        }
      }
    ],
    "revoke-cluster-security-group-ingress": [
      {
        "action": "redshift:RevokeClusterSecurityGroupIngress",
        "resource_mappings": {
          "SecurityGroupName": {
            "template": "${ClusterSecurityGroupName}"
          },
          "Owner": {
            "template": "*"
          },
          "Ec2SecurityGroupId": {
            "template": "*"
          },
          "Ece2SecuritygroupId": {
            "template": "*"
          }
        }
      }
    ],
    "revoke-endpoint-access": [
      {
        "action": "redshift:RevokeEndpointAccess",
        "resource_mappings": {}
      }
    ],
    "revoke-snapshot-access": [
      {
        "action": "redshift:RevokeSnapshotAccess",
        "resource_mappings": {
          "ClusterName": {
            "template": "${SnapshotClusterIdentifier}"
          },
          "SnapshotName": {
            "template": "${SnapshotIdentifier}"
          }
        }
      }
    ],
    "rotate-encryption-key": [
      {
        "action": "redshift:RotateEncryptionKey",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          }
        }
      }
    ],
    "update-partner-status": [
      {
        "action": "redshift:UpdatePartnerStatus",
        "resource_mappings": {}
      }
    ],
    "wait": [
      {
        "action": "redshift:DescribeClusters",
        "resource_mappings": {}
      }
    ]
  },
  "redshift-data": {
    "batch-execute-statement": [
      {
        "action": "redshift-data:BatchExecuteStatement",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          }
        }
      }
    ],
    "cancel-statement": [
      {
        "action": "redshift-data:CancelStatement",
        "resource_mappings": {}
      }
    ],
    "describe-statement": [
      {
        "action": "redshift-data:DescribeStatement",
        "resource_mappings": {}
      }
    ],
    "describe-table": [
      {
        "action": "redshift-data:DescribeTable",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          }
        }
      }
    ],
    "execute-statement": [
      {
        "action": "redshift-data:ExecuteStatement",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          }
        }
      }
    ],
    "get-statement-result": [
      {
        "action": "redshift-data:GetStatementResult",
        "resource_mappings": {}
      }
    ],
    "list-databases": [
      {
        "action": "redshift-data:ListDatabases",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          }
        }
      }
    ],
    "list-schemas": [
      {
        "action": "redshift-data:ListSchemas",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          }
        }
      }
    ],
    "list-statements": [
      {
        "action": "redshift-data:ListStatements",
        "resource_mappings": {}
      }
    ],
    "list-tables": [
      {
        "action": "redshift-data:ListTables",
        "resource_mappings": {
          "ClusterName": {
            "template": "${ClusterIdentifier}"
          }
        }
      }
    ]
  },
  "redshift-serverless": {
    "convert-recovery-point-to-snapshot": [
      {
        "action": "redshift-serverless:ConvertRecoveryPointToSnapshot",
        "resource_mappings": {
          "RecoveryPointId": {
            "template": "${recoveryPointId}"
          },
          "SnapshotId": {
            "template": "*"
          }
        }
      }
    ],
    "create-endpoint-access": [
      {
        "action": "redshift-serverless:CreateEndpointAccess",
        "resource_mappings": {
          "EndpointAccessId": {
            "template": "*"
          }
        }
      }
    ],
    "create-namespace": [
      {
        "action": "redshift-serverless:CreateNamespace",
        "resource_mappings": {
          "NamespaceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-snapshot": [
      {
        "action": "redshift-serverless:CreateSnapshot",
        "resource_mappings": {
          "SnapshotId": {
            "template": "*"
          }
        }
      }
    ],
    "create-usage-limit": [
      {
        "action": "redshift-serverless:CreateUsageLimit",
        "resource_mappings": {}
      }
    ],
    "create-workgroup": [
      {
        "action": "redshift-serverless:CreateWorkgroup",
        "resource_mappings": {
          "WorkgroupId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-endpoint-access": [
      {
        "action": "redshift-serverless:DeleteEndpointAccess",
        "resource_mappings": {
          "EndpointAccessId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-namespace": [
      {
        "action": "redshift-serverless:DeleteNamespace",
        "resource_mappings": {
          "NamespaceId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-resource-policy": [
      {
        "action": "redshift-serverless:DeleteResourcePolicy",
        "resource_mappings": {}
      }
    ],
    "delete-snapshot": [
      {
        "action": "redshift-serverless:DeleteSnapshot",
        "resource_mappings": {
          "SnapshotId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-usage-limit": [
      {
        "action": "redshift-serverless:DeleteUsageLimit",
        "resource_mappings": {}
      }
    ],
    "delete-workgroup": [
      {
        "action": "redshift-serverless:DeleteWorkgroup",
        "resource_mappings": {
          "WorkgroupId": {
            "template": "*"
          }
        }
      }
    ],
    "get-credentials": [
      {
        "action": "redshift-serverless:GetCredentials",
        "resource_mappings": {
          "WorkgroupId": {
            "template": "*"
          }
        }
      }
    ],
    "get-endpoint-access": [
      {
        "action": "redshift-serverless:GetEndpointAccess",
        "resource_mappings": {
          "EndpointAccessId": {
            "template": "*"
          }
        }
      }
    ],
    "get-namespace": [
      {
        "action": "redshift-serverless:GetNamespace",
        "resource_mappings": {
          "NamespaceId": {
            "template": "*"
          }
        }
      }
    ],
    "get-recovery-point": [
      {
        "action": "redshift-serverless:GetRecoveryPoint",
        "resource_mappings": {
          "RecoveryPointId": {
            "template": "${recoveryPointId}"
          }
        }
      }
    ],
    "get-resource-policy": [
      {
        "action": "redshift-serverless:GetResourcePolicy",
        "resource_mappings": {}
      }
    ],
    "get-snapshot": [
      {
        "action": "redshift-serverless:GetSnapshot",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "snapshot": "${snapshotArn}"
        }
      }
    ],
    "get-table-restore-status": [
      {
        "action": "redshift-serverless:GetTableRestoreStatus",
        "resource_mappings": {}
      }
    ],
    "get-usage-limit": [
      {
        "action": "redshift-serverless:GetUsageLimit",
        "resource_mappings": {}
      }
    ],
    "get-workgroup": [
      {
        "action": "redshift-serverless:GetWorkgroup",
        "resource_mappings": {
          "WorkgroupId": {
            "template": "*"
          }
        }
      }
    ],
    "list-endpoint-access": [
      {
        "action": "redshift-serverless:ListEndpointAccess",
        "resource_mappings": {
          "EndpointAccessId": {
            "template": "*"
          }
        }
      }
    ],
    "list-namespaces": [
      {
        "action": "redshift-serverless:ListNamespaces",
        "resource_mappings": {}
      }
    ],
    "list-recovery-points": [
      {
        "action": "redshift-serverless:ListRecoveryPoints",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "namespace": "${namespaceArn}"
        }
      },
      {
        "action": "redshift-serverless:ListRecoveryPoints",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "namespace": "${namespaceArn}"
        }
      }
    ],
    "list-snapshots": [
      {
        "action": "redshift-serverless:ListSnapshots",
        "resource_mappings": {
          "SnapshotId": {
            "template": "*"
          }
        }
      }
    ],
    "list-table-restore-status": [
      {
        "action": "redshift-serverless:ListTableRestoreStatus",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "redshift-serverless:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "namespace": "%%iftemplatematch%${resourceArn}%%",
          "workgroup": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "list-usage-limits": [
      {
        "action": "redshift-serverless:ListUsageLimits",
        "resource_mappings": {}
      }
    ],
    "list-workgroups": [
      {
        "action": "redshift-serverless:ListWorkgroups",
        "resource_mappings": {}
      }
    ],
    "put-resource-policy": [
      {
        "action": "redshift-serverless:PutResourcePolicy",
        "resource_mappings": {}
      }
    ],
    "restore-from-recovery-point": [
      {
        "action": "redshift-serverless:RestoreFromRecoveryPoint",
        "resource_mappings": {
          "RecoveryPointId": {
            "template": "${recoveryPointId}"
          }
        }
      }
    ],
    "restore-from-snapshot": [
      {
        "action": "redshift-serverless:RestoreFromSnapshot",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "snapshot": "${snapshotArn}"
        }
      }
    ],
    "restore-table-from-snapshot": [
      {
        "action": "redshift-serverless:RestoreTableFromSnapshot",
        "resource_mappings": {
          "NamespaceId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "redshift-serverless:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "namespace": "%%iftemplatematch%${resourceArn}%%",
          "workgroup": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "redshift-serverless:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "namespace": "%%iftemplatematch%${resourceArn}%%",
          "workgroup": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-endpoint-access": [
      {
        "action": "redshift-serverless:UpdateEndpointAccess",
        "resource_mappings": {
          "EndpointAccessId": {
            "template": "*"
          }
        }
      }
    ],
    "update-namespace": [
      {
        "action": "redshift-serverless:UpdateNamespace",
        "resource_mappings": {
          "NamespaceId": {
            "template": "*"
          }
        }
      }
    ],
    "update-snapshot": [
      {
        "action": "redshift-serverless:UpdateSnapshot",
        "resource_mappings": {
          "SnapshotId": {
            "template": "*"
          }
        }
      }
    ],
    "update-usage-limit": [
      {
        "action": "redshift-serverless:UpdateUsageLimit",
        "resource_mappings": {}
      }
    ],
    "update-workgroup": [
      {
        "action": "redshift-serverless:UpdateWorkgroup",
        "resource_mappings": {
          "WorkgroupId": {
            "template": "*"
          }
        }
      }
    ]
  },
  "rekognition": {
    "associate-faces": [
      {
        "action": "rekognition:AssociateFaces",
        "resource_mappings": {
          "CollectionId": {
            "template": "${CollectionId}"
          }
        }
      }
    ],
    "compare-faces": [
      {
        "action": "rekognition:CompareFaces",
        "resource_mappings": {}
      }
    ],
    "copy-project-version": [
      {
        "action": "rekognition:CopyProjectVersion",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "project": "%%many%${SourceProjectArn}%${DestinationProjectArn}%%",
          "projectversion": "${SourceProjectVersionArn}"
        }
      }
    ],
    "create-collection": [
      {
        "action": "rekognition:CreateCollection",
        "resource_mappings": {
          "CollectionId": {
            "template": "${CollectionId}"
          }
        }
      }
    ],
    "create-dataset": [
      {
        "action": "rekognition:CreateDataset",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "project": "${ProjectArn}"
        }
      }
    ],
    "create-face-liveness-session": [
      {
        "action": "rekognition:CreateFaceLivenessSession",
        "resource_mappings": {}
      }
    ],
    "create-project": [
      {
        "action": "rekognition:CreateProject",
        "resource_mappings": {
          "ProjectName": {
            "template": "${ProjectName}"
          },
          "CreationTimestamp": {
            "template": "*"
          }
        }
      }
    ],
    "create-project-version": [
      {
        "action": "rekognition:CreateProjectVersion",
        "resource_mappings": {
          "ProjectName": {
            "template": "%%regex%${ProjectArn}%/^.+\\/(.+?)\\/.*$/g%%"
          },
          "VersionName": {
            "template": "${VersionName}"
          },
          "CreationTimestamp": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "project": "${ProjectArn}"
        }
      }
    ],
    "create-stream-processor": [
      {
        "action": "rekognition:CreateStreamProcessor",
        "resource_mappings": {
          "CollectionId": {
            "template": "${Settings.FaceSearch.CollectionId}"
          },
          "StreamprocessorId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "create-user": [
      {
        "action": "rekognition:CreateUser",
        "resource_mappings": {
          "CollectionId": {
            "template": "${CollectionId}"
          }
        }
      }
    ],
    "delete-collection": [
      {
        "action": "rekognition:DeleteCollection",
        "resource_mappings": {
          "CollectionId": {
            "template": "${CollectionId}"
          }
        }
      }
    ],
    "delete-dataset": [
      {
        "action": "rekognition:DeleteDataset",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dataset": "${DatasetArn}"
        }
      }
    ],
    "delete-faces": [
      {
        "action": "rekognition:DeleteFaces",
        "resource_mappings": {
          "CollectionId": {
            "template": "${CollectionId}"
          }
        }
      }
    ],
    "delete-project": [
      {
        "action": "rekognition:DeleteProject",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "project": "${ProjectArn}"
        }
      }
    ],
    "delete-project-policy": [
      {
        "action": "rekognition:DeleteProjectPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "project": "${ProjectArn}"
        }
      }
    ],
    "delete-project-version": [
      {
        "action": "rekognition:DeleteProjectVersion",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "projectversion": "${ProjectVersionArn}"
        }
      }
    ],
    "delete-stream-processor": [
      {
        "action": "rekognition:DeleteStreamProcessor",
        "resource_mappings": {
          "StreamprocessorId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-user": [
      {
        "action": "rekognition:DeleteUser",
        "resource_mappings": {
          "CollectionId": {
            "template": "${CollectionId}"
          }
        }
      }
    ],
    "describe-collection": [
      {
        "action": "rekognition:DescribeCollection",
        "resource_mappings": {
          "CollectionId": {
            "template": "${CollectionId}"
          }
        }
      }
    ],
    "describe-dataset": [
      {
        "action": "rekognition:DescribeDataset",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dataset": "${DatasetArn}"
        }
      }
    ],
    "describe-project-versions": [
      {
        "action": "rekognition:DescribeProjectVersions",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "project": "${ProjectArn}"
        }
      }
    ],
    "describe-projects": [
      {
        "action": "rekognition:DescribeProjects",
        "resource_mappings": {}
      }
    ],
    "describe-stream-processor": [
      {
        "action": "rekognition:DescribeStreamProcessor",
        "resource_mappings": {
          "StreamprocessorId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "detect-custom-labels": [
      {
        "action": "rekognition:DetectCustomLabels",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "projectversion": "${ProjectVersionArn}"
        }
      }
    ],
    "detect-faces": [
      {
        "action": "rekognition:DetectFaces",
        "resource_mappings": {}
      }
    ],
    "detect-labels": [
      {
        "action": "rekognition:DetectLabels",
        "resource_mappings": {}
      }
    ],
    "detect-moderation-labels": [
      {
        "action": "rekognition:DetectModerationLabels",
        "resource_mappings": {}
      }
    ],
    "detect-protective-equipment": [
      {
        "action": "rekognition:DetectProtectiveEquipment",
        "resource_mappings": {}
      }
    ],
    "detect-text": [
      {
        "action": "rekognition:DetectText",
        "resource_mappings": {}
      }
    ],
    "disassociate-faces": [
      {
        "action": "rekognition:DisassociateFaces",
        "resource_mappings": {
          "CollectionId": {
            "template": "${CollectionId}"
          }
        }
      }
    ],
    "distribute-dataset-entries": [
      {
        "action": "rekognition:DistributeDatasetEntries",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dataset": "${Datasets[].Arn}"
        }
      }
    ],
    "get-celebrity-info": [
      {
        "action": "rekognition:GetCelebrityInfo",
        "resource_mappings": {}
      }
    ],
    "get-celebrity-recognition": [
      {
        "action": "rekognition:GetCelebrityRecognition",
        "resource_mappings": {}
      }
    ],
    "get-content-moderation": [
      {
        "action": "rekognition:GetContentModeration",
        "resource_mappings": {}
      }
    ],
    "get-face-detection": [
      {
        "action": "rekognition:GetFaceDetection",
        "resource_mappings": {}
      }
    ],
    "get-face-liveness-session-results": [
      {
        "action": "rekognition:GetFaceLivenessSessionResults",
        "resource_mappings": {}
      }
    ],
    "get-face-search": [
      {
        "action": "rekognition:GetFaceSearch",
        "resource_mappings": {}
      }
    ],
    "get-label-detection": [
      {
        "action": "rekognition:GetLabelDetection",
        "resource_mappings": {}
      }
    ],
    "get-media-analysis-job": [
      {
        "note": "NotFound",
        "action": "Rekognition:GetMediaAnalysisJob",
        "resource_mappings": {}
      }
    ],
    "get-person-tracking": [
      {
        "action": "rekognition:GetPersonTracking",
        "resource_mappings": {}
      }
    ],
    "get-segment-detection": [
      {
        "action": "rekognition:GetSegmentDetection",
        "resource_mappings": {}
      }
    ],
    "get-text-detection": [
      {
        "action": "rekognition:GetTextDetection",
        "resource_mappings": {}
      }
    ],
    "index-faces": [
      {
        "action": "rekognition:IndexFaces",
        "resource_mappings": {
          "CollectionId": {
            "template": "${CollectionId}"
          }
        }
      }
    ],
    "list-collections": [
      {
        "action": "rekognition:ListCollections",
        "resource_mappings": {
          "CollectionId": {
            "template": "*"
          }
        }
      }
    ],
    "list-dataset-entries": [
      {
        "action": "rekognition:ListDatasetEntries",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dataset": "${DatasetArn}"
        }
      }
    ],
    "list-dataset-labels": [
      {
        "action": "rekognition:ListDatasetLabels",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dataset": "${DatasetArn}"
        }
      }
    ],
    "list-faces": [
      {
        "action": "rekognition:ListFaces",
        "resource_mappings": {
          "CollectionId": {
            "template": "${CollectionId}"
          }
        }
      }
    ],
    "list-media-analysis-jobs": [
      {
        "note": "NotFound",
        "action": "Rekognition:ListMediaAnalysisJobs",
        "resource_mappings": {}
      }
    ],
    "list-project-policies": [
      {
        "action": "rekognition:ListProjectPolicies",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "project": "${ProjectArn}"
        }
      }
    ],
    "list-stream-processors": [
      {
        "action": "rekognition:ListStreamProcessors",
        "resource_mappings": {
          "StreamprocessorId": {
            "template": "*"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "rekognition:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "projectversion": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "list-users": [
      {
        "action": "rekognition:ListUsers",
        "resource_mappings": {
          "CollectionId": {
            "template": "${CollectionId}"
          }
        }
      }
    ],
    "put-project-policy": [
      {
        "action": "rekognition:PutProjectPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "project": "${ProjectArn}"
        }
      }
    ],
    "recognize-celebrities": [
      {
        "action": "rekognition:RecognizeCelebrities",
        "resource_mappings": {}
      }
    ],
    "search-faces": [
      {
        "action": "rekognition:SearchFaces",
        "resource_mappings": {
          "CollectionId": {
            "template": "${CollectionId}"
          }
        }
      }
    ],
    "search-faces-by-image": [
      {
        "action": "rekognition:SearchFacesByImage",
        "resource_mappings": {
          "CollectionId": {
            "template": "${CollectionId}"
          }
        }
      }
    ],
    "search-users": [
      {
        "action": "rekognition:SearchUsers",
        "resource_mappings": {
          "CollectionId": {
            "template": "${CollectionId}"
          }
        }
      }
    ],
    "search-users-by-image": [
      {
        "action": "rekognition:SearchUsersByImage",
        "resource_mappings": {
          "CollectionId": {
            "template": "${CollectionId}"
          }
        }
      }
    ],
    "start-celebrity-recognition": [
      {
        "action": "rekognition:StartCelebrityRecognition",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${NotificationChannel.RoleArn}"
        }
      }
    ],
    "start-content-moderation": [
      {
        "action": "rekognition:StartContentModeration",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${NotificationChannel.RoleArn}"
        }
      }
    ],
    "start-face-detection": [
      {
        "action": "rekognition:StartFaceDetection",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${NotificationChannel.RoleArn}"
        }
      }
    ],
    "start-face-search": [
      {
        "action": "rekognition:StartFaceSearch",
        "resource_mappings": {
          "CollectionId": {
            "template": "${CollectionId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${NotificationChannel.RoleArn}"
        }
      }
    ],
    "start-label-detection": [
      {
        "action": "rekognition:StartLabelDetection",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${NotificationChannel.RoleArn}"
        }
      }
    ],
    "start-media-analysis-job": [
      {
        "note": "NotFound",
        "action": "Rekognition:StartMediaAnalysisJob",
        "resource_mappings": {}
      }
    ],
    "start-person-tracking": [
      {
        "action": "rekognition:StartPersonTracking",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${NotificationChannel.RoleArn}"
        }
      }
    ],
    "start-project-version": [
      {
        "action": "rekognition:StartProjectVersion",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "projectversion": "${ProjectVersionArn}"
        }
      }
    ],
    "start-segment-detection": [
      {
        "action": "rekognition:StartSegmentDetection",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${NotificationChannel.RoleArn}"
        }
      }
    ],
    "start-stream-processor": [
      {
        "action": "rekognition:StartStreamProcessor",
        "resource_mappings": {
          "StreamprocessorId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "start-text-detection": [
      {
        "action": "rekognition:StartTextDetection",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${NotificationChannel.RoleArn}"
        }
      }
    ],
    "stop-project-version": [
      {
        "action": "rekognition:StopProjectVersion",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "projectversion": "${ProjectVersionArn}"
        }
      }
    ],
    "stop-stream-processor": [
      {
        "action": "rekognition:StopStreamProcessor",
        "resource_mappings": {
          "StreamprocessorId": {
            "template": "${Name}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "rekognition:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "projectversion": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "rekognition:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "projectversion": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-dataset-entries": [
      {
        "action": "rekognition:UpdateDatasetEntries",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "dataset": "${DatasetArn}"
        }
      }
    ],
    "update-stream-processor": [
      {
        "action": "rekognition:UpdateStreamProcessor",
        "resource_mappings": {
          "StreamprocessorId": {
            "template": "*"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "rekognition:DescribeProjectVersions",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "project": "${ProjectArn}"
        }
      }
    ]
  },
  "resiliencehub": {
    "add-draft-app-version-resource-mappings": [
      {
        "action": "resiliencehub:AddDraftAppVersionResourceMappings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      },
      {
        "action": "cloudformation:DescribeStacks",
        "resource_mappings": {
          "StackName": {
            "template": "*"
          },
          "Id": {
            "template": "*"
          }
        }
      },
      {
        "action": "cloudformation:ListStackResources",
        "resource_mappings": {
          "StackName": {
            "template": "*"
          },
          "Id": {
            "template": "*"
          }
        }
      },
      {
        "action": "resource-groups:GetGroup",
        "resource_mappings": {
          "GroupName": {
            "template": "*"
          }
        }
      },
      {
        "action": "resource-groups:ListGroupResources",
        "resource_mappings": {
          "GroupName": {
            "template": "*"
          }
        }
      },
      {
        "action": "servicecatalog:GetApplication",
        "resource_mappings": {
          "ApplicationId": {
            "template": "*"
          }
        }
      },
      {
        "action": "servicecatalog:ListAssociatedResources",
        "resource_mappings": {
          "ApplicationId": {
            "template": "*"
          }
        }
      }
    ],
    "batch-update-recommendation-status": [
      {
        "action": "resiliencehub:BatchUpdateRecommendationStatus",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      }
    ],
    "create-app": [
      {
        "action": "resiliencehub:CreateApp",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "resiliency-policy": "${policyArn}"
        }
      }
    ],
    "create-app-version-app-component": [
      {
        "action": "resiliencehub:CreateAppVersionAppComponent",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      }
    ],
    "create-app-version-resource": [
      {
        "action": "resiliencehub:CreateAppVersionResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      }
    ],
    "create-recommendation-template": [
      {
        "action": "resiliencehub:CreateRecommendationTemplate",
        "resource_mappings": {
          "AppID": {
            "template": "*"
          }
        }
      },
      {
        "action": "s3:CreateBucket",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          }
        }
      },
      {
        "action": "s3:ListBucket",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          }
        }
      },
      {
        "action": "s3:PutObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      }
    ],
    "create-resiliency-policy": [
      {
        "action": "resiliencehub:CreateResiliencyPolicy",
        "resource_mappings": {}
      }
    ],
    "delete-app": [
      {
        "action": "resiliencehub:DeleteApp",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      }
    ],
    "delete-app-assessment": [
      {
        "action": "resiliencehub:DeleteAppAssessment",
        "resource_mappings": {
          "AppID": {
            "template": "*"
          }
        }
      }
    ],
    "delete-app-input-source": [
      {
        "action": "resiliencehub:DeleteAppInputSource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      }
    ],
    "delete-app-version-app-component": [
      {
        "action": "resiliencehub:DeleteAppVersionAppComponent",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      }
    ],
    "delete-app-version-resource": [
      {
        "action": "resiliencehub:DeleteAppVersionResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      }
    ],
    "delete-recommendation-template": [
      {
        "action": "resiliencehub:DeleteRecommendationTemplate",
        "resource_mappings": {
          "AppID": {
            "template": "*"
          }
        }
      }
    ],
    "delete-resiliency-policy": [
      {
        "action": "resiliencehub:DeleteResiliencyPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "resiliency-policy": "${policyArn}"
        }
      }
    ],
    "describe-app": [
      {
        "action": "resiliencehub:DescribeApp",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      }
    ],
    "describe-app-assessment": [
      {
        "action": "resiliencehub:DescribeAppAssessment",
        "resource_mappings": {
          "AppID": {
            "template": "*"
          }
        }
      }
    ],
    "describe-app-version": [
      {
        "action": "resiliencehub:DescribeAppVersion",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      }
    ],
    "describe-app-version-app-component": [
      {
        "action": "resiliencehub:DescribeAppVersionAppComponent",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      }
    ],
    "describe-app-version-resource": [
      {
        "action": "resiliencehub:DescribeAppVersionResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      }
    ],
    "describe-app-version-resources-resolution-status": [
      {
        "action": "resiliencehub:DescribeAppVersionResourcesResolutionStatus",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      }
    ],
    "describe-app-version-template": [
      {
        "action": "resiliencehub:DescribeAppVersionTemplate",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      }
    ],
    "describe-draft-app-version-resources-import-status": [
      {
        "action": "resiliencehub:DescribeDraftAppVersionResourcesImportStatus",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      }
    ],
    "describe-resiliency-policy": [
      {
        "action": "resiliencehub:DescribeResiliencyPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "resiliency-policy": "${policyArn}"
        }
      }
    ],
    "import-resources-to-draft-app-version": [
      {
        "action": "resiliencehub:ImportResourcesToDraftAppVersion",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      },
      {
        "action": "cloudformation:DescribeStacks",
        "resource_mappings": {
          "StackName": {
            "template": "*"
          },
          "Id": {
            "template": "*"
          }
        }
      },
      {
        "action": "cloudformation:ListStackResources",
        "resource_mappings": {
          "StackName": {
            "template": "*"
          },
          "Id": {
            "template": "*"
          }
        }
      },
      {
        "action": "resource-groups:GetGroup",
        "resource_mappings": {
          "GroupName": {
            "template": "*"
          }
        }
      },
      {
        "action": "resource-groups:ListGroupResources",
        "resource_mappings": {
          "GroupName": {
            "template": "*"
          }
        }
      },
      {
        "action": "servicecatalog:GetApplication",
        "resource_mappings": {
          "ApplicationId": {
            "template": "*"
          }
        }
      },
      {
        "action": "servicecatalog:ListAssociatedResources",
        "resource_mappings": {
          "ApplicationId": {
            "template": "*"
          }
        }
      }
    ],
    "list-alarm-recommendations": [
      {
        "action": "resiliencehub:ListAlarmRecommendations",
        "resource_mappings": {
          "AppID": {
            "template": "*"
          }
        }
      }
    ],
    "list-app-assessment-compliance-drifts": [
      {
        "action": "resiliencehub:ListAppAssessmentComplianceDrifts",
        "resource_mappings": {
          "AppId": {
            "template": "*"
          }
        }
      }
    ],
    "list-app-assessments": [
      {
        "action": "resiliencehub:ListAppAssessments",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      }
    ],
    "list-app-component-compliances": [
      {
        "action": "resiliencehub:ListAppComponentCompliances",
        "resource_mappings": {
          "AppID": {
            "template": "*"
          }
        }
      }
    ],
    "list-app-component-recommendations": [
      {
        "action": "resiliencehub:ListAppComponentRecommendations",
        "resource_mappings": {
          "AppID": {
            "template": "*"
          }
        }
      }
    ],
    "list-app-input-sources": [
      {
        "action": "resiliencehub:ListAppInputSources",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      }
    ],
    "list-app-version-app-components": [
      {
        "action": "resiliencehub:ListAppVersionAppComponents",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      }
    ],
    "list-app-version-resource-mappings": [
      {
        "action": "resiliencehub:ListAppVersionResourceMappings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      }
    ],
    "list-app-version-resources": [
      {
        "action": "resiliencehub:ListAppVersionResources",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      }
    ],
    "list-app-versions": [
      {
        "action": "resiliencehub:ListAppVersions",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      }
    ],
    "list-apps": [
      {
        "action": "resiliencehub:ListApps",
        "resource_mappings": {}
      }
    ],
    "list-recommendation-templates": [
      {
        "action": "resiliencehub:ListRecommendationTemplates",
        "resource_mappings": {
          "AppID": {
            "template": "*"
          }
        }
      }
    ],
    "list-resiliency-policies": [
      {
        "action": "resiliencehub:ListResiliencyPolicies",
        "resource_mappings": {}
      }
    ],
    "list-sop-recommendations": [
      {
        "action": "resiliencehub:ListSopRecommendations",
        "resource_mappings": {
          "AppID": {
            "template": "*"
          }
        }
      }
    ],
    "list-suggested-resiliency-policies": [
      {
        "action": "resiliencehub:ListSuggestedResiliencyPolicies",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "resiliencehub:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "list-test-recommendations": [
      {
        "action": "resiliencehub:ListTestRecommendations",
        "resource_mappings": {
          "AppID": {
            "template": "*"
          }
        }
      }
    ],
    "list-unsupported-app-version-resources": [
      {
        "action": "resiliencehub:ListUnsupportedAppVersionResources",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      }
    ],
    "publish-app-version": [
      {
        "action": "resiliencehub:PublishAppVersion",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      }
    ],
    "put-draft-app-version-template": [
      {
        "action": "resiliencehub:PutDraftAppVersionTemplate",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      }
    ],
    "remove-draft-app-version-resource-mappings": [
      {
        "action": "resiliencehub:RemoveDraftAppVersionResourceMappings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      }
    ],
    "resolve-app-version-resources": [
      {
        "action": "resiliencehub:ResolveAppVersionResources",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      },
      {
        "action": "cloudformation:DescribeStacks",
        "resource_mappings": {
          "StackName": {
            "template": "*"
          },
          "Id": {
            "template": "*"
          }
        }
      },
      {
        "action": "cloudformation:ListStackResources",
        "resource_mappings": {
          "StackName": {
            "template": "*"
          },
          "Id": {
            "template": "*"
          }
        }
      },
      {
        "action": "resource-groups:GetGroup",
        "resource_mappings": {
          "GroupName": {
            "template": "*"
          }
        }
      },
      {
        "action": "resource-groups:ListGroupResources",
        "resource_mappings": {
          "GroupName": {
            "template": "*"
          }
        }
      },
      {
        "action": "servicecatalog:GetApplication",
        "resource_mappings": {
          "ApplicationId": {
            "template": "*"
          }
        }
      },
      {
        "action": "servicecatalog:ListAssociatedResources",
        "resource_mappings": {
          "ApplicationId": {
            "template": "*"
          }
        }
      }
    ],
    "start-app-assessment": [
      {
        "action": "resiliencehub:StartAppAssessment",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      },
      {
        "action": "cloudformation:DescribeStacks",
        "resource_mappings": {
          "StackName": {
            "template": "*"
          },
          "Id": {
            "template": "*"
          }
        }
      },
      {
        "action": "cloudformation:ListStackResources",
        "resource_mappings": {
          "StackName": {
            "template": "*"
          },
          "Id": {
            "template": "*"
          }
        }
      },
      {
        "action": "cloudwatch:DescribeAlarms",
        "resource_mappings": {
          "AlarmName": {
            "template": "*"
          }
        }
      },
      {
        "action": "cloudwatch:GetMetricData",
        "resource_mappings": {}
      },
      {
        "action": "cloudwatch:GetMetricStatistics",
        "resource_mappings": {}
      },
      {
        "action": "cloudwatch:PutMetricData",
        "resource_mappings": {}
      },
      {
        "action": "fis:GetExperimentTemplate",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      },
      {
        "action": "fis:ListExperimentTemplates",
        "resource_mappings": {}
      },
      {
        "action": "fis:ListExperiments",
        "resource_mappings": {}
      },
      {
        "action": "resource-groups:GetGroup",
        "resource_mappings": {
          "GroupName": {
            "template": "*"
          }
        }
      },
      {
        "action": "resource-groups:ListGroupResources",
        "resource_mappings": {
          "GroupName": {
            "template": "*"
          }
        }
      },
      {
        "action": "servicecatalog:GetApplication",
        "resource_mappings": {
          "ApplicationId": {
            "template": "*"
          }
        }
      },
      {
        "action": "servicecatalog:ListAssociatedResources",
        "resource_mappings": {
          "ApplicationId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ssm:GetParametersByPath",
        "resource_mappings": {
          "ParameterNameWithoutLeadingSlash": {
            "template": "*"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "resiliencehub:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-assessment": "%%iftemplatematch%${resourceArn}%%",
          "application": "%%iftemplatematch%${resourceArn}%%",
          "recommendation-template": "%%iftemplatematch%${resourceArn}%%",
          "resiliency-policy": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "resiliencehub:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "app-assessment": "%%iftemplatematch%${resourceArn}%%",
          "application": "%%iftemplatematch%${resourceArn}%%",
          "recommendation-template": "%%iftemplatematch%${resourceArn}%%",
          "resiliency-policy": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-app": [
      {
        "action": "resiliencehub:UpdateApp",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      }
    ],
    "update-app-version": [
      {
        "action": "resiliencehub:UpdateAppVersion",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      }
    ],
    "update-app-version-app-component": [
      {
        "action": "resiliencehub:UpdateAppVersionAppComponent",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      }
    ],
    "update-app-version-resource": [
      {
        "action": "resiliencehub:UpdateAppVersionResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "${appArn}"
        }
      }
    ],
    "update-resiliency-policy": [
      {
        "action": "resiliencehub:UpdateResiliencyPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "resiliency-policy": "${policyArn}"
        }
      }
    ]
  },
  "resource-explorer-2": {
    "associate-default-view": [
      {
        "action": "resource-explorer-2:AssociateDefaultView",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "view": "${ViewArn}"
        }
      }
    ],
    "batch-get-view": [
      {
        "action": "resource-explorer-2:BatchGetView",
        "resource_mappings": {}
      },
      {
        "action": "resource-explorer-2:GetView",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "view": "${ViewArns[]}"
        }
      }
    ],
    "create-index": [
      {
        "action": "resource-explorer-2:CreateIndex",
        "resource_mappings": {}
      }
    ],
    "create-view": [
      {
        "action": "resource-explorer-2:CreateView",
        "resource_mappings": {}
      }
    ],
    "delete-index": [
      {
        "action": "resource-explorer-2:DeleteIndex",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "index": "${Arn}"
        }
      }
    ],
    "delete-view": [
      {
        "action": "resource-explorer-2:DeleteView",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "view": "${ViewArn}"
        }
      }
    ],
    "disassociate-default-view": [
      {
        "action": "resource-explorer-2:DisassociateDefaultView",
        "resource_mappings": {}
      }
    ],
    "get-default-view": [
      {
        "action": "resource-explorer-2:GetDefaultView",
        "resource_mappings": {}
      }
    ],
    "get-index": [
      {
        "action": "resource-explorer-2:GetIndex",
        "resource_mappings": {}
      }
    ],
    "get-view": [
      {
        "action": "resource-explorer-2:GetView",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "view": "${ViewArn}"
        }
      }
    ],
    "list-indexes": [
      {
        "action": "resource-explorer-2:ListIndexes",
        "resource_mappings": {}
      }
    ],
    "list-supported-resource-types": [
      {
        "action": "resource-explorer-2:ListSupportedResourceTypes",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "resource-explorer-2:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "index": "%%iftemplatematch%${resourceArn}%%",
          "view": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "list-views": [
      {
        "action": "resource-explorer-2:ListViews",
        "resource_mappings": {}
      }
    ],
    "search": [
      {
        "action": "resource-explorer-2:Search",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "view": "${ViewArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "resource-explorer-2:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "index": "%%iftemplatematch%${resourceArn}%%",
          "view": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "resource-explorer-2:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "index": "%%iftemplatematch%${resourceArn}%%",
          "view": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-index-type": [
      {
        "action": "resource-explorer-2:UpdateIndexType",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "index": "${Arn}"
        }
      }
    ],
    "update-view": [
      {
        "action": "resource-explorer-2:UpdateView",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "view": "${ViewArn}"
        }
      }
    ]
  },
  "resource-groups": {
    "create-group": [
      {
        "action": "resource-groups:CreateGroup",
        "resource_mappings": {}
      }
    ],
    "delete-group": [
      {
        "action": "resource-groups:DeleteGroup",
        "resource_mappings": {
          "GroupName": {
            "template": "%%regex%${Group}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "get-account-settings": [
      {
        "action": "resource-groups:GetAccountSettings",
        "resource_mappings": {}
      }
    ],
    "get-group": [
      {
        "action": "resource-groups:GetGroup",
        "resource_mappings": {
          "GroupName": {
            "template": "%%regex%${Group}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "get-group-configuration": [
      {
        "action": "resource-groups:GetGroupConfiguration",
        "resource_mappings": {
          "GroupName": {
            "template": "%%regex%${Group}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "get-group-query": [
      {
        "action": "resource-groups:GetGroupQuery",
        "resource_mappings": {
          "GroupName": {
            "template": "%%regex%${Group}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "get-tags": [
      {
        "action": "resource-groups:GetTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "group": "${Arn}"
        }
      }
    ],
    "group-resources": [
      {
        "action": "resource-groups:GroupResources",
        "resource_mappings": {
          "GroupName": {
            "template": "%%regex%${Group}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "list-group-resources": [
      {
        "action": "resource-groups:ListGroupResources",
        "resource_mappings": {
          "GroupName": {
            "template": "%%regex%${Group}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      },
      {
        "action": "cloudformation:DescribeStacks",
        "resource_mappings": {
          "StackName": {
            "template": "*"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "list-groups": [
      {
        "action": "resource-groups:ListGroups",
        "resource_mappings": {}
      }
    ],
    "put-group-configuration": [
      {
        "action": "resource-groups:PutGroupConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "group": "%%iftemplatematch%${Group}%%"
        }
      }
    ],
    "search-resources": [
      {
        "action": "resource-groups:SearchResources",
        "resource_mappings": {}
      },
      {
        "action": "cloudformation:DescribeStacks",
        "resource_mappings": {
          "StackName": {
            "template": "*"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "tag": [
      {
        "action": "resource-groups:Tag",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "group": "${Arn}"
        }
      }
    ],
    "ungroup-resources": [
      {
        "action": "resource-groups:UngroupResources",
        "resource_mappings": {
          "GroupName": {
            "template": "%%regex%${Group}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "untag": [
      {
        "action": "resource-groups:Untag",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "group": "${Arn}"
        }
      }
    ],
    "update-account-settings": [
      {
        "action": "resource-groups:UpdateAccountSettings",
        "resource_mappings": {}
      }
    ],
    "update-group": [
      {
        "action": "resource-groups:UpdateGroup",
        "resource_mappings": {
          "GroupName": {
            "template": "%%regex%${Group}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ],
    "update-group-query": [
      {
        "action": "resource-groups:UpdateGroupQuery",
        "resource_mappings": {
          "GroupName": {
            "template": "%%regex%${Group}%/^(?:.+\\/)?(.+)$/g%%"
          }
        }
      }
    ]
  },
  "resourcegroupstaggingapi": {
    "describe-report-creation": [
      {
        "action": "tag:DescribeReportCreation",
        "resource_mappings": {}
      }
    ],
    "get-compliance-summary": [
      {
        "action": "tag:GetComplianceSummary",
        "resource_mappings": {}
      }
    ],
    "get-resources": [
      {
        "action": "tag:GetResources",
        "resource_mappings": {}
      }
    ],
    "get-tag-keys": [
      {
        "action": "tag:GetTagKeys",
        "resource_mappings": {}
      }
    ],
    "get-tag-values": [
      {
        "action": "tag:GetTagValues",
        "resource_mappings": {}
      }
    ],
    "start-report-creation": [
      {
        "action": "tag:StartReportCreation",
        "resource_mappings": {}
      }
    ],
    "tag-resources": [
      {
        "action": "tag:TagResources",
        "resource_mappings": {}
      }
    ],
    "untag-resources": [
      {
        "action": "tag:UntagResources",
        "resource_mappings": {}
      }
    ]
  },
  "robomaker": {
    "batch-delete-worlds": [
      {
        "action": "robomaker:BatchDeleteWorlds",
        "resource_mappings": {}
      }
    ],
    "batch-describe-simulation-job": [
      {
        "action": "robomaker:BatchDescribeSimulationJob",
        "resource_mappings": {}
      }
    ],
    "cancel-deployment-job": [
      {
        "action": "robomaker:CancelDeploymentJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "deploymentJob": "${job}"
        }
      }
    ],
    "cancel-simulation-job": [
      {
        "action": "robomaker:CancelSimulationJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "simulationJob": "${job}"
        }
      }
    ],
    "cancel-simulation-job-batch": [
      {
        "action": "robomaker:CancelSimulationJobBatch",
        "resource_mappings": {
          "SimulationJobBatchId": {
            "template": "${batch}"
          }
        }
      }
    ],
    "cancel-world-export-job": [
      {
        "action": "robomaker:CancelWorldExportJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "worldExportJob": "${job}"
        }
      }
    ],
    "cancel-world-generation-job": [
      {
        "action": "robomaker:CancelWorldGenerationJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "worldGenerationJob": "${job}"
        }
      }
    ],
    "create-deployment-job": [
      {
        "action": "robomaker:CreateDeploymentJob",
        "resource_mappings": {}
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "create-fleet": [
      {
        "action": "robomaker:CreateFleet",
        "resource_mappings": {}
      }
    ],
    "create-robot": [
      {
        "action": "robomaker:CreateRobot",
        "resource_mappings": {}
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "create-robot-application": [
      {
        "action": "robomaker:CreateRobotApplication",
        "resource_mappings": {}
      }
    ],
    "create-robot-application-version": [
      {
        "action": "robomaker:CreateRobotApplicationVersion",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "robotApplication": "%%iftemplatematch%${application}%%"
        }
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      }
    ],
    "create-simulation-application": [
      {
        "action": "robomaker:CreateSimulationApplication",
        "resource_mappings": {}
      }
    ],
    "create-simulation-application-version": [
      {
        "action": "robomaker:CreateSimulationApplicationVersion",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "simulationApplication": "%%iftemplatematch%${application}%%"
        }
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      }
    ],
    "create-simulation-job": [
      {
        "action": "robomaker:CreateSimulationJob",
        "resource_mappings": {}
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${iamRole}"
        }
      }
    ],
    "create-world-export-job": [
      {
        "action": "robomaker:CreateWorldExportJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "world": "${worlds[]}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${iamRole}"
        }
      }
    ],
    "create-world-generation-job": [
      {
        "action": "robomaker:CreateWorldGenerationJob",
        "resource_mappings": {
          "WorldTemplateJobId": {
            "template": "*"
          }
        }
      }
    ],
    "create-world-template": [
      {
        "action": "robomaker:CreateWorldTemplate",
        "resource_mappings": {}
      }
    ],
    "delete-fleet": [
      {
        "action": "robomaker:DeleteFleet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "deploymentFleet": "${fleet}"
        }
      }
    ],
    "delete-robot": [
      {
        "action": "robomaker:DeleteRobot",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "robot": "${robot}"
        }
      }
    ],
    "delete-robot-application": [
      {
        "action": "robomaker:DeleteRobotApplication",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "robotApplication": "${application}"
        }
      }
    ],
    "delete-simulation-application": [
      {
        "action": "robomaker:DeleteSimulationApplication",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "simulationApplication": "%%iftemplatematch%${application}%%"
        }
      }
    ],
    "delete-world-template": [
      {
        "action": "robomaker:DeleteWorldTemplate",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "worldTemplate": "${template}"
        }
      }
    ],
    "deregister-robot": [
      {
        "action": "robomaker:DeregisterRobot",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "deploymentFleet": "${fleet}",
          "robot": "${robot}"
        }
      }
    ],
    "describe-deployment-job": [
      {
        "action": "robomaker:DescribeDeploymentJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "deploymentJob": "${job}"
        }
      }
    ],
    "describe-fleet": [
      {
        "action": "robomaker:DescribeFleet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "deploymentFleet": "${fleet}"
        }
      }
    ],
    "describe-robot": [
      {
        "action": "robomaker:DescribeRobot",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "robot": "${robot}"
        }
      }
    ],
    "describe-robot-application": [
      {
        "action": "robomaker:DescribeRobotApplication",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "robotApplication": "${application}"
        }
      }
    ],
    "describe-simulation-application": [
      {
        "action": "robomaker:DescribeSimulationApplication",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "simulationApplication": "%%iftemplatematch%${application}%%"
        }
      }
    ],
    "describe-simulation-job": [
      {
        "action": "robomaker:DescribeSimulationJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "simulationJob": "${job}"
        }
      }
    ],
    "describe-simulation-job-batch": [
      {
        "action": "robomaker:DescribeSimulationJobBatch",
        "resource_mappings": {
          "SimulationJobBatchId": {
            "template": "${batch}"
          }
        }
      }
    ],
    "describe-world": [
      {
        "action": "robomaker:DescribeWorld",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "world": "${world}"
        }
      }
    ],
    "describe-world-export-job": [
      {
        "action": "robomaker:DescribeWorldExportJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "worldExportJob": "${job}"
        }
      }
    ],
    "describe-world-generation-job": [
      {
        "action": "robomaker:DescribeWorldGenerationJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "worldGenerationJob": "${job}"
        }
      }
    ],
    "describe-world-template": [
      {
        "action": "robomaker:DescribeWorldTemplate",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "worldTemplate": "${template}"
        }
      }
    ],
    "get-world-template-body": [
      {
        "action": "robomaker:GetWorldTemplateBody",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "worldTemplate": "${template}"
        }
      }
    ],
    "list-deployment-jobs": [
      {
        "action": "robomaker:ListDeploymentJobs",
        "resource_mappings": {}
      }
    ],
    "list-fleets": [
      {
        "action": "robomaker:ListFleets",
        "resource_mappings": {}
      }
    ],
    "list-robot-applications": [
      {
        "action": "robomaker:ListRobotApplications",
        "resource_mappings": {}
      }
    ],
    "list-robots": [
      {
        "action": "robomaker:ListRobots",
        "resource_mappings": {}
      }
    ],
    "list-simulation-applications": [
      {
        "action": "robomaker:ListSimulationApplications",
        "resource_mappings": {}
      }
    ],
    "list-simulation-job-batches": [
      {
        "action": "robomaker:ListSimulationJobBatches",
        "resource_mappings": {}
      }
    ],
    "list-simulation-jobs": [
      {
        "action": "robomaker:ListSimulationJobs",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "robomaker:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "deploymentFleet": "%%iftemplatematch%${resourceArn}%%",
          "deploymentJob": "%%iftemplatematch%${resourceArn}%%",
          "robot": "%%iftemplatematch%${resourceArn}%%",
          "robotApplication": "%%iftemplatematch%${resourceArn}%%",
          "simulationApplication": "%%iftemplatematch%${resourceArn}%%",
          "simulationJob": "%%iftemplatematch%${resourceArn}%%",
          "simulationJobBatch": "%%iftemplatematch%${resourceArn}%%",
          "world": "%%iftemplatematch%${resourceArn}%%",
          "worldExportJob": "%%iftemplatematch%${resourceArn}%%",
          "worldGenerationJob": "%%iftemplatematch%${resourceArn}%%",
          "worldTemplate": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "list-world-export-jobs": [
      {
        "action": "robomaker:ListWorldExportJobs",
        "resource_mappings": {}
      }
    ],
    "list-world-generation-jobs": [
      {
        "action": "robomaker:ListWorldGenerationJobs",
        "resource_mappings": {}
      }
    ],
    "list-world-templates": [
      {
        "action": "robomaker:ListWorldTemplates",
        "resource_mappings": {}
      }
    ],
    "list-worlds": [
      {
        "action": "robomaker:ListWorlds",
        "resource_mappings": {}
      }
    ],
    "register-robot": [
      {
        "action": "robomaker:RegisterRobot",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "deploymentFleet": "${fleet}",
          "robot": "${robot}"
        }
      }
    ],
    "restart-simulation-job": [
      {
        "action": "robomaker:RestartSimulationJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "simulationJob": "${job}"
        }
      }
    ],
    "start-simulation-job-batch": [
      {
        "action": "robomaker:StartSimulationJobBatch",
        "resource_mappings": {}
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "sync-deployment-job": [
      {
        "action": "robomaker:SyncDeploymentJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "deploymentFleet": "%%iftemplatematch%${fleet}%%"
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "robomaker:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "deploymentFleet": "%%iftemplatematch%${resourceArn}%%",
          "deploymentJob": "%%iftemplatematch%${resourceArn}%%",
          "robot": "%%iftemplatematch%${resourceArn}%%",
          "robotApplication": "%%iftemplatematch%${resourceArn}%%",
          "simulationApplication": "%%iftemplatematch%${resourceArn}%%",
          "simulationJob": "%%iftemplatematch%${resourceArn}%%",
          "simulationJobBatch": "%%iftemplatematch%${resourceArn}%%",
          "world": "%%iftemplatematch%${resourceArn}%%",
          "worldExportJob": "%%iftemplatematch%${resourceArn}%%",
          "worldGenerationJob": "%%iftemplatematch%${resourceArn}%%",
          "worldTemplate": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "robomaker:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "deploymentFleet": "%%iftemplatematch%${resourceArn}%%",
          "deploymentJob": "%%iftemplatematch%${resourceArn}%%",
          "robot": "%%iftemplatematch%${resourceArn}%%",
          "robotApplication": "%%iftemplatematch%${resourceArn}%%",
          "simulationApplication": "%%iftemplatematch%${resourceArn}%%",
          "simulationJob": "%%iftemplatematch%${resourceArn}%%",
          "simulationJobBatch": "%%iftemplatematch%${resourceArn}%%",
          "world": "%%iftemplatematch%${resourceArn}%%",
          "worldExportJob": "%%iftemplatematch%${resourceArn}%%",
          "worldGenerationJob": "%%iftemplatematch%${resourceArn}%%",
          "worldTemplate": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-robot-application": [
      {
        "action": "robomaker:UpdateRobotApplication",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "robotApplication": "%%iftemplatematch%${application}%%"
        }
      }
    ],
    "update-simulation-application": [
      {
        "action": "robomaker:UpdateSimulationApplication",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "simulationApplication": "%%iftemplatematch%${application}%%"
        }
      }
    ],
    "update-world-template": [
      {
        "action": "robomaker:UpdateWorldTemplate",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "worldTemplate": "${template}"
        }
      }
    ]
  },
  "rolesanywhere": {
    "create-profile": [
      {
        "action": "rolesanywhere:CreateProfile",
        "resource_mappings": {}
      }
    ],
    "create-trust-anchor": [
      {
        "action": "rolesanywhere:CreateTrustAnchor",
        "resource_mappings": {}
      }
    ],
    "delete-crl": [
      {
        "action": "rolesanywhere:DeleteCrl",
        "resource_mappings": {}
      }
    ],
    "delete-profile": [
      {
        "action": "rolesanywhere:DeleteProfile",
        "resource_mappings": {}
      }
    ],
    "delete-trust-anchor": [
      {
        "action": "rolesanywhere:DeleteTrustAnchor",
        "resource_mappings": {}
      }
    ],
    "disable-crl": [
      {
        "action": "rolesanywhere:DisableCrl",
        "resource_mappings": {}
      }
    ],
    "disable-profile": [
      {
        "action": "rolesanywhere:DisableProfile",
        "resource_mappings": {}
      }
    ],
    "disable-trust-anchor": [
      {
        "action": "rolesanywhere:DisableTrustAnchor",
        "resource_mappings": {}
      }
    ],
    "enable-crl": [
      {
        "action": "rolesanywhere:EnableCrl",
        "resource_mappings": {}
      }
    ],
    "enable-profile": [
      {
        "action": "rolesanywhere:EnableProfile",
        "resource_mappings": {}
      }
    ],
    "enable-trust-anchor": [
      {
        "action": "rolesanywhere:EnableTrustAnchor",
        "resource_mappings": {}
      }
    ],
    "get-crl": [
      {
        "action": "rolesanywhere:GetCrl",
        "resource_mappings": {}
      }
    ],
    "get-profile": [
      {
        "action": "rolesanywhere:GetProfile",
        "resource_mappings": {}
      }
    ],
    "get-subject": [
      {
        "action": "rolesanywhere:GetSubject",
        "resource_mappings": {}
      }
    ],
    "get-trust-anchor": [
      {
        "action": "rolesanywhere:GetTrustAnchor",
        "resource_mappings": {}
      }
    ],
    "import-crl": [
      {
        "action": "rolesanywhere:ImportCrl",
        "resource_mappings": {}
      }
    ],
    "list-crls": [
      {
        "action": "rolesanywhere:ListCrls",
        "resource_mappings": {}
      }
    ],
    "list-profiles": [
      {
        "action": "rolesanywhere:ListProfiles",
        "resource_mappings": {}
      }
    ],
    "list-subjects": [
      {
        "action": "rolesanywhere:ListSubjects",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "rolesanywhere:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "list-trust-anchors": [
      {
        "action": "rolesanywhere:ListTrustAnchors",
        "resource_mappings": {}
      }
    ],
    "put-notification-settings": [
      {
        "action": "rolesanywhere:PutNotificationSettings",
        "resource_mappings": {
          "TrustAnchorId": {
            "template": "${trustAnchorId}"
          }
        }
      }
    ],
    "reset-notification-settings": [
      {
        "action": "rolesanywhere:ResetNotificationSettings",
        "resource_mappings": {
          "TrustAnchorId": {
            "template": "${trustAnchorId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "rolesanywhere:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "crl": "%%iftemplatematch%${resourceArn}%%",
          "profile": "%%iftemplatematch%${resourceArn}%%",
          "subject": "%%iftemplatematch%${resourceArn}%%",
          "trust-anchor": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "rolesanywhere:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "crl": "%%iftemplatematch%${resourceArn}%%",
          "profile": "%%iftemplatematch%${resourceArn}%%",
          "subject": "%%iftemplatematch%${resourceArn}%%",
          "trust-anchor": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-crl": [
      {
        "action": "rolesanywhere:UpdateCrl",
        "resource_mappings": {}
      }
    ],
    "update-profile": [
      {
        "action": "rolesanywhere:UpdateProfile",
        "resource_mappings": {}
      }
    ],
    "update-trust-anchor": [
      {
        "action": "rolesanywhere:UpdateTrustAnchor",
        "resource_mappings": {}
      }
    ]
  },
  "route53": {
    "activate-key-signing-key": [
      {
        "action": "route53:ActivateKeySigningKey",
        "resource_mappings": {
          "Id": {
            "template": "${HostedZoneId}"
          }
        }
      }
    ],
    "associate-vpc-with-hosted-zone": [
      {
        "action": "route53:AssociateVPCWithHostedZone",
        "resource_mappings": {
          "VpcId": {
            "template": "${VPC.VPCId}"
          },
          "Id": {
            "template": "${HostedZoneId}"
          }
        }
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      }
    ],
    "change-cidr-collection": [
      {
        "action": "route53:ChangeCidrCollection",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "change-resource-record-sets": [
      {
        "action": "route53:ChangeResourceRecordSets",
        "resource_mappings": {
          "Id": {
            "template": "${HostedZoneId}"
          }
        }
      }
    ],
    "change-tags-for-resource": [
      {
        "action": "route53:ChangeTagsForResource",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-cidr-collection": [
      {
        "action": "route53:CreateCidrCollection",
        "resource_mappings": {}
      }
    ],
    "create-health-check": [
      {
        "action": "route53:CreateHealthCheck",
        "resource_mappings": {}
      }
    ],
    "create-hosted-zone": [
      {
        "action": "route53:CreateHostedZone",
        "resource_mappings": {
          "VpcId": {
            "template": "${VPC.VPCId}"
          }
        }
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      }
    ],
    "create-key-signing-key": [
      {
        "action": "route53:CreateKeySigningKey",
        "resource_mappings": {
          "Id": {
            "template": "${HostedZoneId}"
          }
        }
      }
    ],
    "create-query-logging-config": [
      {
        "action": "route53:CreateQueryLoggingConfig",
        "resource_mappings": {
          "Id": {
            "template": "${HostedZoneId}"
          }
        }
      }
    ],
    "create-reusable-delegation-set": [
      {
        "action": "route53:CreateReusableDelegationSet",
        "resource_mappings": {}
      }
    ],
    "create-traffic-policy": [
      {
        "action": "route53:CreateTrafficPolicy",
        "resource_mappings": {}
      }
    ],
    "create-traffic-policy-instance": [
      {
        "action": "route53:CreateTrafficPolicyInstance",
        "resource_mappings": {
          "Id": {
            "template": "${TrafficPolicyId}"
          }
        }
      }
    ],
    "create-traffic-policy-version": [
      {
        "action": "route53:CreateTrafficPolicyVersion",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "create-vpc-association-authorization": [
      {
        "action": "route53:CreateVPCAssociationAuthorization",
        "resource_mappings": {
          "Id": {
            "template": "${HostedZoneId}"
          }
        }
      }
    ],
    "deactivate-key-signing-key": [
      {
        "action": "route53:DeactivateKeySigningKey",
        "resource_mappings": {
          "Id": {
            "template": "${HostedZoneId}"
          }
        }
      }
    ],
    "delete-cidr-collection": [
      {
        "action": "route53:DeleteCidrCollection",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-health-check": [
      {
        "action": "route53:DeleteHealthCheck",
        "resource_mappings": {
          "Id": {
            "template": "${HealthCheckId}"
          }
        }
      }
    ],
    "delete-hosted-zone": [
      {
        "action": "route53:DeleteHostedZone",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-key-signing-key": [
      {
        "action": "route53:DeleteKeySigningKey",
        "resource_mappings": {
          "Id": {
            "template": "${HostedZoneId}"
          }
        }
      }
    ],
    "delete-query-logging-config": [
      {
        "action": "route53:DeleteQueryLoggingConfig",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-reusable-delegation-set": [
      {
        "action": "route53:DeleteReusableDelegationSet",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-traffic-policy": [
      {
        "action": "route53:DeleteTrafficPolicy",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-traffic-policy-instance": [
      {
        "action": "route53:DeleteTrafficPolicyInstance",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-vpc-association-authorization": [
      {
        "action": "route53:DeleteVPCAssociationAuthorization",
        "resource_mappings": {
          "Id": {
            "template": "${HostedZoneId}"
          }
        }
      }
    ],
    "disable-hosted-zone-dnssec": [
      {
        "action": "route53:DisableHostedZoneDNSSEC",
        "resource_mappings": {
          "Id": {
            "template": "${HostedZoneId}"
          }
        }
      }
    ],
    "disassociate-vpc-from-hosted-zone": [
      {
        "action": "route53:DisassociateVPCFromHostedZone",
        "resource_mappings": {
          "Id": {
            "template": "${HostedZoneId}"
          },
          "VpcId": {
            "template": "${VPC.VPCId}"
          }
        }
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      }
    ],
    "enable-hosted-zone-dnssec": [
      {
        "action": "route53:EnableHostedZoneDNSSEC",
        "resource_mappings": {
          "Id": {
            "template": "${HostedZoneId}"
          }
        }
      }
    ],
    "get-account-limit": [
      {
        "action": "route53:GetAccountLimit",
        "resource_mappings": {}
      }
    ],
    "get-change": [
      {
        "action": "route53:GetChange",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-checker-ip-ranges": [
      {
        "action": "route53:GetCheckerIpRanges",
        "resource_mappings": {}
      }
    ],
    "get-dnssec": [
      {
        "action": "route53:GetDNSSEC",
        "resource_mappings": {
          "Id": {
            "template": "${HostedZoneId}"
          }
        }
      }
    ],
    "get-geo-location": [
      {
        "action": "route53:GetGeoLocation",
        "resource_mappings": {}
      }
    ],
    "get-health-check": [
      {
        "action": "route53:GetHealthCheck",
        "resource_mappings": {
          "Id": {
            "template": "${HealthCheckId}"
          }
        }
      }
    ],
    "get-health-check-count": [
      {
        "action": "route53:GetHealthCheckCount",
        "resource_mappings": {}
      }
    ],
    "get-health-check-last-failure-reason": [
      {
        "action": "route53:GetHealthCheckLastFailureReason",
        "resource_mappings": {
          "Id": {
            "template": "${HealthCheckId}"
          }
        }
      }
    ],
    "get-health-check-status": [
      {
        "action": "route53:GetHealthCheckStatus",
        "resource_mappings": {
          "Id": {
            "template": "${HealthCheckId}"
          }
        }
      }
    ],
    "get-hosted-zone": [
      {
        "action": "route53:GetHostedZone",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-hosted-zone-count": [
      {
        "action": "route53:GetHostedZoneCount",
        "resource_mappings": {}
      }
    ],
    "get-hosted-zone-limit": [
      {
        "action": "route53:GetHostedZoneLimit",
        "resource_mappings": {
          "Id": {
            "template": "${HostedZoneId}"
          }
        }
      }
    ],
    "get-query-logging-config": [
      {
        "action": "route53:GetQueryLoggingConfig",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-reusable-delegation-set": [
      {
        "action": "route53:GetReusableDelegationSet",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-reusable-delegation-set-limit": [
      {
        "action": "route53:GetReusableDelegationSetLimit",
        "resource_mappings": {
          "Id": {
            "template": "${DelegationSetId}"
          }
        }
      }
    ],
    "get-traffic-policy": [
      {
        "action": "route53:GetTrafficPolicy",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-traffic-policy-instance": [
      {
        "action": "route53:GetTrafficPolicyInstance",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-traffic-policy-instance-count": [
      {
        "action": "route53:GetTrafficPolicyInstanceCount",
        "resource_mappings": {}
      }
    ],
    "list-cidr-blocks": [
      {
        "action": "route53:ListCidrBlocks",
        "resource_mappings": {
          "Id": {
            "template": "${CollectionId}"
          }
        }
      }
    ],
    "list-cidr-collections": [
      {
        "action": "route53:ListCidrCollections",
        "resource_mappings": {}
      }
    ],
    "list-cidr-locations": [
      {
        "action": "route53:ListCidrLocations",
        "resource_mappings": {
          "Id": {
            "template": "${CollectionId}"
          }
        }
      }
    ],
    "list-geo-locations": [
      {
        "action": "route53:ListGeoLocations",
        "resource_mappings": {}
      }
    ],
    "list-health-checks": [
      {
        "action": "route53:ListHealthChecks",
        "resource_mappings": {}
      }
    ],
    "list-hosted-zones": [
      {
        "action": "route53:ListHostedZones",
        "resource_mappings": {}
      }
    ],
    "list-hosted-zones-by-name": [
      {
        "action": "route53:ListHostedZonesByName",
        "resource_mappings": {}
      }
    ],
    "list-hosted-zones-by-vpc": [
      {
        "action": "route53:ListHostedZonesByVPC",
        "resource_mappings": {
          "VpcId": {
            "template": "${VPCId}"
          }
        }
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      }
    ],
    "list-query-logging-configs": [
      {
        "action": "route53:ListQueryLoggingConfigs",
        "resource_mappings": {
          "Id": {
            "template": "${HostedZoneId}"
          }
        }
      }
    ],
    "list-resource-record-sets": [
      {
        "action": "route53:ListResourceRecordSets",
        "resource_mappings": {
          "Id": {
            "template": "${HostedZoneId}"
          }
        }
      }
    ],
    "list-reusable-delegation-sets": [
      {
        "action": "route53:ListReusableDelegationSets",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "route53:ListTagsForResource",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "list-tags-for-resources": [
      {
        "action": "route53:ListTagsForResources",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "list-traffic-policies": [
      {
        "action": "route53:ListTrafficPolicies",
        "resource_mappings": {}
      }
    ],
    "list-traffic-policy-instances": [
      {
        "action": "route53:ListTrafficPolicyInstances",
        "resource_mappings": {}
      }
    ],
    "list-traffic-policy-instances-by-hosted-zone": [
      {
        "action": "route53:ListTrafficPolicyInstancesByHostedZone",
        "resource_mappings": {
          "Id": {
            "template": "${HostedZoneId}"
          }
        }
      }
    ],
    "list-traffic-policy-instances-by-policy": [
      {
        "action": "route53:ListTrafficPolicyInstancesByPolicy",
        "resource_mappings": {
          "Id": {
            "template": "${TrafficPolicyId}"
          }
        }
      }
    ],
    "list-traffic-policy-versions": [
      {
        "action": "route53:ListTrafficPolicyVersions",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "list-vpc-association-authorizations": [
      {
        "action": "route53:ListVPCAssociationAuthorizations",
        "resource_mappings": {
          "Id": {
            "template": "${HostedZoneId}"
          }
        }
      }
    ],
    "test-dns-answer": [
      {
        "action": "route53:TestDNSAnswer",
        "resource_mappings": {}
      }
    ],
    "update-health-check": [
      {
        "action": "route53:UpdateHealthCheck",
        "resource_mappings": {
          "Id": {
            "template": "${HealthCheckId}"
          }
        }
      }
    ],
    "update-hosted-zone-comment": [
      {
        "action": "route53:UpdateHostedZoneComment",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "update-traffic-policy-comment": [
      {
        "action": "route53:UpdateTrafficPolicyComment",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "update-traffic-policy-instance": [
      {
        "action": "route53:UpdateTrafficPolicyInstance",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "route53:GetChange",
        "resource_mappings": {
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ]
  },
  "route53-recovery-cluster": {
    "get-routing-control-state": [
      {
        "action": "route53-recovery-cluster:GetRoutingControlState",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "routingcontrol": "${RoutingControlArn}"
        }
      }
    ],
    "list-routing-controls": [
      {
        "action": "route53-recovery-cluster:ListRoutingControls",
        "resource_mappings": {}
      }
    ],
    "update-routing-control-state": [
      {
        "action": "route53-recovery-cluster:UpdateRoutingControlState",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "routingcontrol": "${RoutingControlArn}"
        }
      }
    ],
    "update-routing-control-states": [
      {
        "action": "route53-recovery-cluster:UpdateRoutingControlStates",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "routingcontrol": "${UpdateRoutingControlStateEntries[].RoutingControlArn}"
        }
      }
    ]
  },
  "route53-recovery-control-config": {
    "create-cluster": [
      {
        "action": "route53-recovery-control-config:CreateCluster",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ClusterName}"
          }
        }
      }
    ],
    "create-control-panel": [
      {
        "action": "route53-recovery-control-config:CreateControlPanel",
        "resource_mappings": {
          "ControlPanelId": {
            "template": "*"
          }
        }
      }
    ],
    "create-routing-control": [
      {
        "action": "route53-recovery-control-config:CreateRoutingControl",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "routingcontrol": "${ControlPanelArn}/routingcontrol/*"
        }
      }
    ],
    "create-safety-rule": [
      {
        "action": "route53-recovery-control-config:CreateSafetyRule",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "safetyrule": "${AssertionRule.ControlPanelArn}/safetyrule/*"
        }
      }
    ],
    "delete-cluster": [
      {
        "action": "route53-recovery-control-config:DeleteCluster",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "${ClusterArn}"
        }
      }
    ],
    "delete-control-panel": [
      {
        "action": "route53-recovery-control-config:DeleteControlPanel",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "controlpanel": "${ControlPanelArn}"
        }
      }
    ],
    "delete-routing-control": [
      {
        "action": "route53-recovery-control-config:DeleteRoutingControl",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "routingcontrol": "${RoutingControlArn}"
        }
      }
    ],
    "delete-safety-rule": [
      {
        "action": "route53-recovery-control-config:DeleteSafetyRule",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "safetyrule": "${SafetyRuleArn}"
        }
      }
    ],
    "describe-cluster": [
      {
        "action": "route53-recovery-control-config:DescribeCluster",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "${ClusterArn}"
        }
      }
    ],
    "describe-control-panel": [
      {
        "action": "route53-recovery-control-config:DescribeControlPanel",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "controlpanel": "${ControlPanelArn}"
        }
      }
    ],
    "describe-routing-control": [
      {
        "action": "route53-recovery-control-config:DescribeRoutingControl",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "routingcontrol": "${RoutingControlArn}"
        }
      }
    ],
    "describe-safety-rule": [
      {
        "action": "route53-recovery-control-config:DescribeSafetyRule",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "safetyrule": "${SafetyRuleArn}"
        }
      }
    ],
    "get-resource-policy": [
      {
        "note": "NotFound",
        "action": "Route53 Recovery Control Config:GetResourcePolicy",
        "resource_mappings": {}
      }
    ],
    "list-associated-route53-health-checks": [
      {
        "action": "route53-recovery-control-config:ListAssociatedRoute53HealthChecks",
        "resource_mappings": {}
      }
    ],
    "list-clusters": [
      {
        "action": "route53-recovery-control-config:ListClusters",
        "resource_mappings": {}
      }
    ],
    "list-control-panels": [
      {
        "action": "route53-recovery-control-config:ListControlPanels",
        "resource_mappings": {}
      }
    ],
    "list-routing-controls": [
      {
        "action": "route53-recovery-control-config:ListRoutingControls",
        "resource_mappings": {}
      }
    ],
    "list-safety-rules": [
      {
        "action": "route53-recovery-control-config:ListSafetyRules",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "controlpanel": "${ControlPanelArn}"
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "route53-recovery-control-config:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "route53-recovery-control-config:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "%%iftemplatematch%${ResourceArn}%%",
          "controlpanel": "%%iftemplatematch%${ResourceArn}%%",
          "safetyrule": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "route53-recovery-control-config:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "%%iftemplatematch%${ResourceArn}%%",
          "controlpanel": "%%iftemplatematch%${ResourceArn}%%",
          "safetyrule": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-control-panel": [
      {
        "action": "route53-recovery-control-config:UpdateControlPanel",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "controlpanel": "${ControlPanelArn}"
        }
      }
    ],
    "update-routing-control": [
      {
        "action": "route53-recovery-control-config:UpdateRoutingControl",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "routingcontrol": "${RoutingControlArn}"
        }
      }
    ],
    "update-safety-rule": [
      {
        "action": "route53-recovery-control-config:UpdateSafetyRule",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "safetyrule": "%%many%${AssertionRuleUpdate.SafetyRuleArn}%${GatingRuleUpdate.SafetyRuleArn}%%"
        }
      }
    ],
    "wait": [
      {
        "action": "route53-recovery-control-config:DescribeCluster",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cluster": "${ClusterArn}"
        }
      }
    ]
  },
  "route53-recovery-readiness": {
    "create-cell": [
      {
        "action": "route53-recovery-readiness:CreateCell",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-cross-account-authorization": [
      {
        "action": "route53-recovery-readiness:CreateCrossAccountAuthorization",
        "resource_mappings": {}
      }
    ],
    "create-readiness-check": [
      {
        "action": "route53-recovery-readiness:CreateReadinessCheck",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-recovery-group": [
      {
        "action": "route53-recovery-readiness:CreateRecoveryGroup",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-resource-set": [
      {
        "action": "route53-recovery-readiness:CreateResourceSet",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-cell": [
      {
        "action": "route53-recovery-readiness:DeleteCell",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-cross-account-authorization": [
      {
        "action": "route53-recovery-readiness:DeleteCrossAccountAuthorization",
        "resource_mappings": {}
      }
    ],
    "delete-readiness-check": [
      {
        "action": "route53-recovery-readiness:DeleteReadinessCheck",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-recovery-group": [
      {
        "action": "route53-recovery-readiness:DeleteRecoveryGroup",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-resource-set": [
      {
        "action": "route53-recovery-readiness:DeleteResourceSet",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "get-architecture-recommendations": [
      {
        "action": "route53-recovery-readiness:GetArchitectureRecommendations",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "get-cell": [
      {
        "action": "route53-recovery-readiness:GetCell",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "get-cell-readiness-summary": [
      {
        "action": "route53-recovery-readiness:GetCellReadinessSummary",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "get-readiness-check": [
      {
        "action": "route53-recovery-readiness:GetReadinessCheck",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "get-readiness-check-resource-status": [
      {
        "action": "route53-recovery-readiness:GetReadinessCheckResourceStatus",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "get-readiness-check-status": [
      {
        "action": "route53-recovery-readiness:GetReadinessCheckStatus",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "get-recovery-group": [
      {
        "action": "route53-recovery-readiness:GetRecoveryGroup",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "get-recovery-group-readiness-summary": [
      {
        "action": "route53-recovery-readiness:GetRecoveryGroupReadinessSummary",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "get-resource-set": [
      {
        "action": "route53-recovery-readiness:GetResourceSet",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-cells": [
      {
        "action": "route53-recovery-readiness:ListCells",
        "resource_mappings": {}
      }
    ],
    "list-cross-account-authorizations": [
      {
        "action": "route53-recovery-readiness:ListCrossAccountAuthorizations",
        "resource_mappings": {}
      }
    ],
    "list-readiness-checks": [
      {
        "action": "route53-recovery-readiness:ListReadinessChecks",
        "resource_mappings": {}
      }
    ],
    "list-recovery-groups": [
      {
        "action": "route53-recovery-readiness:ListRecoveryGroups",
        "resource_mappings": {}
      }
    ],
    "list-resource-sets": [
      {
        "action": "route53-recovery-readiness:ListResourceSets",
        "resource_mappings": {}
      }
    ],
    "list-rules": [
      {
        "action": "route53-recovery-readiness:ListRules",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resources": [
      {
        "action": "route53-recovery-readiness:ListTagsForResources",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "route53-recovery-readiness:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cell": "%%iftemplatematch%${ResourceArn}%%",
          "readinesscheck": "%%iftemplatematch%${ResourceArn}%%",
          "recoverygroup": "%%iftemplatematch%${ResourceArn}%%",
          "resourceset": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "route53-recovery-readiness:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "cell": "%%iftemplatematch%${ResourceArn}%%",
          "readinesscheck": "%%iftemplatematch%${ResourceArn}%%",
          "recoverygroup": "%%iftemplatematch%${ResourceArn}%%",
          "resourceset": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-cell": [
      {
        "action": "route53-recovery-readiness:UpdateCell",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "update-readiness-check": [
      {
        "action": "route53-recovery-readiness:UpdateReadinessCheck",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "update-recovery-group": [
      {
        "action": "route53-recovery-readiness:UpdateRecoveryGroup",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "update-resource-set": [
      {
        "action": "route53-recovery-readiness:UpdateResourceSet",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ]
  },
  "route53domains": {
    "accept-domain-transfer-from-another-aws-account": [
      {
        "action": "route53domains:AcceptDomainTransferFromAnotherAwsAccount",
        "resource_mappings": {}
      }
    ],
    "associate-delegation-signer-to-domain": [
      {
        "action": "route53domains:AssociateDelegationSignerToDomain",
        "resource_mappings": {}
      }
    ],
    "cancel-domain-transfer-to-another-aws-account": [
      {
        "action": "route53domains:CancelDomainTransferToAnotherAwsAccount",
        "resource_mappings": {}
      }
    ],
    "check-domain-availability": [
      {
        "action": "route53domains:CheckDomainAvailability",
        "resource_mappings": {}
      }
    ],
    "check-domain-transferability": [
      {
        "action": "route53domains:CheckDomainTransferability",
        "resource_mappings": {}
      }
    ],
    "delete-domain": [
      {
        "action": "route53domains:DeleteDomain",
        "resource_mappings": {}
      }
    ],
    "delete-tags-for-domain": [
      {
        "action": "route53domains:DeleteTagsForDomain",
        "resource_mappings": {}
      }
    ],
    "disable-domain-auto-renew": [
      {
        "action": "route53domains:DisableDomainAutoRenew",
        "resource_mappings": {}
      }
    ],
    "disable-domain-transfer-lock": [
      {
        "action": "route53domains:DisableDomainTransferLock",
        "resource_mappings": {}
      }
    ],
    "disassociate-delegation-signer-from-domain": [
      {
        "action": "route53domains:DisassociateDelegationSignerFromDomain",
        "resource_mappings": {}
      }
    ],
    "enable-domain-auto-renew": [
      {
        "action": "route53domains:EnableDomainAutoRenew",
        "resource_mappings": {}
      }
    ],
    "enable-domain-transfer-lock": [
      {
        "action": "route53domains:EnableDomainTransferLock",
        "resource_mappings": {}
      }
    ],
    "get-contact-reachability-status": [
      {
        "action": "route53domains:GetContactReachabilityStatus",
        "resource_mappings": {}
      }
    ],
    "get-domain-detail": [
      {
        "action": "route53domains:GetDomainDetail",
        "resource_mappings": {}
      }
    ],
    "get-domain-suggestions": [
      {
        "action": "route53domains:GetDomainSuggestions",
        "resource_mappings": {}
      }
    ],
    "get-operation-detail": [
      {
        "action": "route53domains:GetOperationDetail",
        "resource_mappings": {}
      }
    ],
    "list-domains": [
      {
        "action": "route53domains:ListDomains",
        "resource_mappings": {}
      }
    ],
    "list-operations": [
      {
        "action": "route53domains:ListOperations",
        "resource_mappings": {}
      }
    ],
    "list-prices": [
      {
        "action": "route53domains:ListPrices",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-domain": [
      {
        "action": "route53domains:ListTagsForDomain",
        "resource_mappings": {}
      }
    ],
    "push-domain": [
      {
        "action": "route53domains:PushDomain",
        "resource_mappings": {}
      }
    ],
    "register-domain": [
      {
        "action": "route53domains:RegisterDomain",
        "resource_mappings": {}
      }
    ],
    "reject-domain-transfer-from-another-aws-account": [
      {
        "action": "route53domains:RejectDomainTransferFromAnotherAwsAccount",
        "resource_mappings": {}
      }
    ],
    "renew-domain": [
      {
        "action": "route53domains:RenewDomain",
        "resource_mappings": {}
      }
    ],
    "resend-contact-reachability-email": [
      {
        "action": "route53domains:ResendContactReachabilityEmail",
        "resource_mappings": {}
      }
    ],
    "resend-operation-authorization": [
      {
        "action": "route53domains:ResendOperationAuthorization",
        "resource_mappings": {}
      }
    ],
    "retrieve-domain-auth-code": [
      {
        "action": "route53domains:RetrieveDomainAuthCode",
        "resource_mappings": {}
      }
    ],
    "transfer-domain": [
      {
        "action": "route53domains:TransferDomain",
        "resource_mappings": {}
      }
    ],
    "transfer-domain-to-another-aws-account": [
      {
        "action": "route53domains:TransferDomainToAnotherAwsAccount",
        "resource_mappings": {}
      }
    ],
    "update-domain-contact": [
      {
        "action": "route53domains:UpdateDomainContact",
        "resource_mappings": {}
      }
    ],
    "update-domain-contact-privacy": [
      {
        "action": "route53domains:UpdateDomainContactPrivacy",
        "resource_mappings": {}
      }
    ],
    "update-domain-nameservers": [
      {
        "action": "route53domains:UpdateDomainNameservers",
        "resource_mappings": {}
      }
    ],
    "update-tags-for-domain": [
      {
        "action": "route53domains:UpdateTagsForDomain",
        "resource_mappings": {}
      }
    ],
    "view-billing": [
      {
        "action": "route53domains:ViewBilling",
        "resource_mappings": {}
      }
    ]
  },
  "route53resolver": {
    "associate-firewall-rule-group": [
      {
        "action": "route53resolver:AssociateFirewallRuleGroup",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      }
    ],
    "associate-resolver-endpoint-ip-address": [
      {
        "action": "route53resolver:AssociateResolverEndpointIpAddress",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ResolverEndpointId}"
          }
        }
      }
    ],
    "associate-resolver-query-log-config": [
      {
        "action": "route53resolver:AssociateResolverQueryLogConfig",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ResolverQueryLogConfigId}"
          }
        }
      }
    ],
    "associate-resolver-rule": [
      {
        "action": "route53resolver:AssociateResolverRule",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ResolverRuleId}"
          }
        }
      }
    ],
    "create-firewall-domain-list": [
      {
        "action": "route53resolver:CreateFirewallDomainList",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-firewall-rule": [
      {
        "action": "route53resolver:CreateFirewallRule",
        "resource_mappings": {
          "ResourceId": {
            "template": "${FirewallRuleGroupId}"
          }
        }
      }
    ],
    "create-firewall-rule-group": [
      {
        "action": "route53resolver:CreateFirewallRuleGroup",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-outpost-resolver": [
      {
        "action": "route53resolver:CreateOutpostResolver",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "outposts:GetOutpost",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "outpost": "${OutpostArn}"
        }
      }
    ],
    "create-resolver-endpoint": [
      {
        "action": "route53resolver:CreateResolverEndpoint",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-resolver-query-log-config": [
      {
        "action": "route53resolver:CreateResolverQueryLogConfig",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-resolver-rule": [
      {
        "action": "route53resolver:CreateResolverRule",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-firewall-domain-list": [
      {
        "action": "route53resolver:DeleteFirewallDomainList",
        "resource_mappings": {
          "ResourceId": {
            "template": "${FirewallDomainListId}"
          }
        }
      }
    ],
    "delete-firewall-rule": [
      {
        "action": "route53resolver:DeleteFirewallRule",
        "resource_mappings": {
          "ResourceId": {
            "template": "${FirewallRuleGroupId}"
          }
        }
      }
    ],
    "delete-firewall-rule-group": [
      {
        "action": "route53resolver:DeleteFirewallRuleGroup",
        "resource_mappings": {
          "ResourceId": {
            "template": "${FirewallRuleGroupId}"
          }
        }
      }
    ],
    "delete-outpost-resolver": [
      {
        "action": "route53resolver:DeleteOutpostResolver",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-resolver-endpoint": [
      {
        "action": "route53resolver:DeleteResolverEndpoint",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ResolverEndpointId}"
          }
        }
      }
    ],
    "delete-resolver-query-log-config": [
      {
        "action": "route53resolver:DeleteResolverQueryLogConfig",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ResolverQueryLogConfigId}"
          }
        }
      }
    ],
    "delete-resolver-rule": [
      {
        "action": "route53resolver:DeleteResolverRule",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ResolverRuleId}"
          }
        }
      }
    ],
    "disassociate-firewall-rule-group": [
      {
        "action": "route53resolver:DisassociateFirewallRuleGroup",
        "resource_mappings": {
          "ResourceId": {
            "template": "${FirewallRuleGroupAssociationId}"
          }
        }
      }
    ],
    "disassociate-resolver-endpoint-ip-address": [
      {
        "action": "route53resolver:DisassociateResolverEndpointIpAddress",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ResolverEndpointId}"
          }
        }
      }
    ],
    "disassociate-resolver-query-log-config": [
      {
        "action": "route53resolver:DisassociateResolverQueryLogConfig",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ResolverQueryLogConfigId}"
          }
        }
      }
    ],
    "disassociate-resolver-rule": [
      {
        "action": "route53resolver:DisassociateResolverRule",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ResolverRuleId}"
          }
        }
      }
    ],
    "get-firewall-config": [
      {
        "action": "route53resolver:GetFirewallConfig",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ResourceId}"
          }
        }
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      }
    ],
    "get-firewall-domain-list": [
      {
        "action": "route53resolver:GetFirewallDomainList",
        "resource_mappings": {
          "ResourceId": {
            "template": "${FirewallDomainListId}"
          }
        }
      }
    ],
    "get-firewall-rule-group": [
      {
        "action": "route53resolver:GetFirewallRuleGroup",
        "resource_mappings": {
          "ResourceId": {
            "template": "${FirewallRuleGroupId}"
          }
        }
      }
    ],
    "get-firewall-rule-group-association": [
      {
        "action": "route53resolver:GetFirewallRuleGroupAssociation",
        "resource_mappings": {
          "ResourceId": {
            "template": "${FirewallRuleGroupAssociationId}"
          }
        }
      }
    ],
    "get-firewall-rule-group-policy": [
      {
        "action": "route53resolver:GetFirewallRuleGroupPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "firewall-rule-group": "${Arn}"
        }
      }
    ],
    "get-outpost-resolver": [
      {
        "action": "route53resolver:GetOutpostResolver",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-resolver-config": [
      {
        "action": "route53resolver:GetResolverConfig",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ResourceId}"
          }
        }
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      }
    ],
    "get-resolver-dnssec-config": [
      {
        "action": "route53resolver:GetResolverDnssecConfig",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "get-resolver-endpoint": [
      {
        "action": "route53resolver:GetResolverEndpoint",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ResolverEndpointId}"
          }
        }
      }
    ],
    "get-resolver-query-log-config": [
      {
        "action": "route53resolver:GetResolverQueryLogConfig",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ResolverQueryLogConfigId}"
          }
        }
      }
    ],
    "get-resolver-query-log-config-association": [
      {
        "action": "route53resolver:GetResolverQueryLogConfigAssociation",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "get-resolver-query-log-config-policy": [
      {
        "action": "route53resolver:GetResolverQueryLogConfigPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "resolver-query-log-config": "${Arn}"
        }
      }
    ],
    "get-resolver-rule": [
      {
        "action": "route53resolver:GetResolverRule",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ResolverRuleId}"
          }
        }
      }
    ],
    "get-resolver-rule-association": [
      {
        "action": "route53resolver:GetResolverRuleAssociation",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "get-resolver-rule-policy": [
      {
        "action": "route53resolver:GetResolverRulePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "resolver-rule": "${Arn}"
        }
      }
    ],
    "import-firewall-domains": [
      {
        "action": "route53resolver:ImportFirewallDomains",
        "resource_mappings": {
          "ResourceId": {
            "template": "${FirewallDomainListId}"
          }
        }
      }
    ],
    "list-firewall-configs": [
      {
        "action": "route53resolver:ListFirewallConfigs",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      }
    ],
    "list-firewall-domain-lists": [
      {
        "action": "route53resolver:ListFirewallDomainLists",
        "resource_mappings": {}
      }
    ],
    "list-firewall-domains": [
      {
        "action": "route53resolver:ListFirewallDomains",
        "resource_mappings": {
          "ResourceId": {
            "template": "${FirewallDomainListId}"
          }
        }
      }
    ],
    "list-firewall-rule-group-associations": [
      {
        "action": "route53resolver:ListFirewallRuleGroupAssociations",
        "resource_mappings": {}
      }
    ],
    "list-firewall-rule-groups": [
      {
        "action": "route53resolver:ListFirewallRuleGroups",
        "resource_mappings": {}
      }
    ],
    "list-firewall-rules": [
      {
        "action": "route53resolver:ListFirewallRules",
        "resource_mappings": {
          "ResourceId": {
            "template": "${FirewallRuleGroupId}"
          }
        }
      }
    ],
    "list-outpost-resolvers": [
      {
        "action": "route53resolver:ListOutpostResolvers",
        "resource_mappings": {}
      }
    ],
    "list-resolver-configs": [
      {
        "action": "route53resolver:ListResolverConfigs",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      }
    ],
    "list-resolver-dnssec-configs": [
      {
        "action": "route53resolver:ListResolverDnssecConfigs",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-resolver-endpoint-ip-addresses": [
      {
        "action": "route53resolver:ListResolverEndpointIpAddresses",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ResolverEndpointId}"
          }
        }
      }
    ],
    "list-resolver-endpoints": [
      {
        "action": "route53resolver:ListResolverEndpoints",
        "resource_mappings": {}
      }
    ],
    "list-resolver-query-log-config-associations": [
      {
        "action": "route53resolver:ListResolverQueryLogConfigAssociations",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-resolver-query-log-configs": [
      {
        "action": "route53resolver:ListResolverQueryLogConfigs",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-resolver-rule-associations": [
      {
        "action": "route53resolver:ListResolverRuleAssociations",
        "resource_mappings": {}
      }
    ],
    "list-resolver-rules": [
      {
        "action": "route53resolver:ListResolverRules",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "route53resolver:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "resolver-endpoint": "%%iftemplatematch%${ResourceArn}%%",
          "resolver-rule": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "put-firewall-rule-group-policy": [
      {
        "action": "route53resolver:PutFirewallRuleGroupPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "firewall-rule-group": "${Arn}"
        }
      }
    ],
    "put-resolver-query-log-config-policy": [
      {
        "action": "route53resolver:PutResolverQueryLogConfigPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "resolver-query-log-config": "${Arn}"
        }
      }
    ],
    "put-resolver-rule-policy": [
      {
        "action": "route53resolver:PutResolverRulePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "resolver-rule": "${Arn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "route53resolver:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "resolver-endpoint": "%%iftemplatematch%${ResourceArn}%%",
          "resolver-rule": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "route53resolver:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "resolver-endpoint": "%%iftemplatematch%${ResourceArn}%%",
          "resolver-rule": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-firewall-config": [
      {
        "action": "route53resolver:UpdateFirewallConfig",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      }
    ],
    "update-firewall-domains": [
      {
        "action": "route53resolver:UpdateFirewallDomains",
        "resource_mappings": {
          "ResourceId": {
            "template": "${FirewallDomainListId}"
          }
        }
      }
    ],
    "update-firewall-rule": [
      {
        "action": "route53resolver:UpdateFirewallRule",
        "resource_mappings": {
          "ResourceId": {
            "template": "${FirewallRuleGroupId}"
          }
        }
      }
    ],
    "update-firewall-rule-group-association": [
      {
        "action": "route53resolver:UpdateFirewallRuleGroupAssociation",
        "resource_mappings": {
          "ResourceId": {
            "template": "${FirewallRuleGroupAssociationId}"
          }
        }
      }
    ],
    "update-outpost-resolver": [
      {
        "action": "route53resolver:UpdateOutpostResolver",
        "resource_mappings": {
          "ResourceId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "update-resolver-config": [
      {
        "action": "route53resolver:UpdateResolverConfig",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ResourceId}"
          }
        }
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      }
    ],
    "update-resolver-dnssec-config": [
      {
        "action": "route53resolver:UpdateResolverDnssecConfig",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "update-resolver-endpoint": [
      {
        "action": "route53resolver:UpdateResolverEndpoint",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ResolverEndpointId}"
          }
        }
      }
    ],
    "update-resolver-rule": [
      {
        "action": "route53resolver:UpdateResolverRule",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ResolverRuleId}"
          }
        }
      }
    ]
  },
  "rum": {
    "batch-create-rum-metric-definitions": [
      {
        "action": "rum:BatchCreateRumMetricDefinitions",
        "resource_mappings": {
          "Name": {
            "template": "${AppMonitorName}"
          }
        }
      }
    ],
    "batch-delete-rum-metric-definitions": [
      {
        "action": "rum:BatchDeleteRumMetricDefinitions",
        "resource_mappings": {
          "Name": {
            "template": "${AppMonitorName}"
          }
        }
      }
    ],
    "batch-get-rum-metric-definitions": [
      {
        "action": "rum:BatchGetRumMetricDefinitions",
        "resource_mappings": {
          "Name": {
            "template": "${AppMonitorName}"
          }
        }
      }
    ],
    "create-app-monitor": [
      {
        "action": "rum:CreateAppMonitor",
        "resource_mappings": {
          "Name": {
            "template": "${Name}"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:GetRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "delete-app-monitor": [
      {
        "action": "rum:DeleteAppMonitor",
        "resource_mappings": {
          "Name": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-rum-metrics-destination": [
      {
        "action": "rum:DeleteRumMetricsDestination",
        "resource_mappings": {
          "Name": {
            "template": "${AppMonitorName}"
          }
        }
      }
    ],
    "get-app-monitor": [
      {
        "action": "rum:GetAppMonitor",
        "resource_mappings": {
          "Name": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-app-monitor-data": [
      {
        "action": "rum:GetAppMonitorData",
        "resource_mappings": {
          "Name": {
            "template": "${Name}"
          }
        }
      }
    ],
    "list-app-monitors": [
      {
        "action": "rum:ListAppMonitors",
        "resource_mappings": {}
      }
    ],
    "list-rum-metrics-destinations": [
      {
        "action": "rum:ListRumMetricsDestinations",
        "resource_mappings": {
          "Name": {
            "template": "${AppMonitorName}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "rum:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "put-rum-events": [
      {
        "action": "rum:PutRumEvents",
        "resource_mappings": {}
      }
    ],
    "put-rum-metrics-destination": [
      {
        "action": "rum:PutRumMetricsDestination",
        "resource_mappings": {
          "Name": {
            "template": "${AppMonitorName}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "rum:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "rum:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-app-monitor": [
      {
        "action": "rum:UpdateAppMonitor",
        "resource_mappings": {
          "Name": {
            "template": "${Name}"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:GetRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "update-rum-metric-definition": [
      {
        "action": "rum:UpdateRumMetricDefinition",
        "resource_mappings": {
          "Name": {
            "template": "${AppMonitorName}"
          }
        }
      }
    ]
  },
  "s3control": {
    "create-access-point": [
      {
        "action": "s3-outposts:CreateAccessPoint",
        "resource_mappings": {
          "OutpostId": {
            "template": "%%regex%${Bucket}%/^arn:aws:s3-outposts:.+?:.+?:outpost\\/(.+?)\\//g%%"
          },
          "AccessPointName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "create-access-point-for-object-lambda": [
      {
        "action": "s3:CreateAccessPointForObjectLambda",
        "resource_mappings": {
          "AccessPointName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "create-bucket": [
      {
        "action": "s3-outposts:CreateBucket",
        "resource_mappings": {
          "OutpostId": {
            "template": "${OutpostId}"
          },
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "create-job": [
      {
        "action": "s3:CreateJob",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${RoleArn}"
        }
      }
    ],
    "create-multi-region-access-point": [
      {
        "action": "s3:CreateMultiRegionAccessPoint",
        "resource_mappings": {
          "AccessPointName": {
            "template": "${Details.Name}"
          }
        }
      }
    ],
    "delete-access-point": [
      {
        "action": "s3-outposts:DeleteAccessPoint",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "accesspoint": "%%iftemplatematch%${Name}%%"
        }
      }
    ],
    "delete-access-point-for-object-lambda": [
      {
        "action": "s3:DeleteAccessPointForObjectLambda",
        "resource_mappings": {
          "AccessPointName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-access-point-policy": [
      {
        "action": "s3-outposts:DeleteAccessPointPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "accesspoint": "%%iftemplatematch%${Name}%%"
        }
      }
    ],
    "delete-access-point-policy-for-object-lambda": [
      {
        "action": "s3:DeleteAccessPointPolicyForObjectLambda",
        "resource_mappings": {
          "AccessPointName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-bucket": [
      {
        "action": "s3-outposts:DeleteBucket",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "bucket": "%%iftemplatematch%${Bucket}%%"
        }
      }
    ],
    "delete-bucket-lifecycle-configuration": [
      {
        "action": "s3-outposts:DeleteLifecycleConfiguration",
        "resource_mappings": {}
      }
    ],
    "delete-bucket-policy": [
      {
        "action": "s3-outposts:DeleteBucketPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "bucket": "%%iftemplatematch%${Bucket}%%"
        }
      }
    ],
    "delete-bucket-replication": [
      {
        "note": "NotFound",
        "action": "S3 Control:DeleteBucketReplication",
        "resource_mappings": {}
      }
    ],
    "delete-bucket-tagging": [
      {
        "action": "s3-outposts:PutBucketTagging",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "bucket": "${Bucket}"
        }
      }
    ],
    "delete-job-tagging": [
      {
        "action": "s3:DeleteJobTagging",
        "resource_mappings": {
          "JobId": {
            "template": "${JobId}"
          }
        }
      }
    ],
    "delete-multi-region-access-point": [
      {
        "action": "s3:DeleteMultiRegionAccessPoint",
        "resource_mappings": {
          "AccessPointName": {
            "template": "${Details.Name}"
          }
        }
      }
    ],
    "delete-public-access-block": [
      {
        "action": "s3:PutAccountPublicAccessBlock",
        "resource_mappings": {}
      }
    ],
    "delete-storage-lens-configuration": [
      {
        "action": "s3:DeleteStorageLensConfiguration",
        "resource_mappings": {
          "ConfigId": {
            "template": "${ConfigId}"
          }
        }
      }
    ],
    "delete-storage-lens-configuration-tagging": [
      {
        "action": "s3:DeleteStorageLensConfigurationTagging",
        "resource_mappings": {
          "ConfigId": {
            "template": "${ConfigId}"
          }
        }
      }
    ],
    "describe-job": [
      {
        "action": "s3:DescribeJob",
        "resource_mappings": {
          "JobId": {
            "template": "${JobId}"
          }
        }
      }
    ],
    "describe-multi-region-access-point-operation": [
      {
        "action": "s3:DescribeMultiRegionAccessPointOperation",
        "resource_mappings": {
          "Operation": {
            "template": "DescribeMultiRegionAccessPointOperation"
          },
          "Token": {
            "template": "${RequestTokenARN}"
          }
        }
      }
    ],
    "get-access-point": [
      {
        "action": "s3-outposts:GetAccessPoint",
        "resource_mappings": {}
      }
    ],
    "get-access-point-configuration-for-object-lambda": [
      {
        "action": "s3:GetAccessPointConfigurationForObjectLambda",
        "resource_mappings": {
          "AccessPointName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-access-point-for-object-lambda": [
      {
        "action": "s3:GetAccessPointForObjectLambda",
        "resource_mappings": {
          "AccessPointName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-access-point-policy": [
      {
        "action": "s3-outposts:GetAccessPointPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "accesspoint": "%%iftemplatematch%${Name}%%"
        }
      }
    ],
    "get-access-point-policy-for-object-lambda": [
      {
        "action": "s3:GetAccessPointPolicyForObjectLambda",
        "resource_mappings": {
          "AccessPointName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-access-point-policy-status": [
      {
        "action": "s3:GetAccessPointPolicyStatus",
        "resource_mappings": {
          "AccessPointName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-access-point-policy-status-for-object-lambda": [
      {
        "action": "s3:GetAccessPointPolicyStatusForObjectLambda",
        "resource_mappings": {
          "AccessPointName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-bucket": [
      {
        "action": "s3-outposts:GetBucket",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "bucket": "${Bucket}"
        }
      }
    ],
    "get-bucket-lifecycle-configuration": [
      {
        "action": "s3-outposts:GetLifecycleConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "bucket": "${Bucket}"
        }
      }
    ],
    "get-bucket-policy": [
      {
        "action": "s3-outposts:GetBucketPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "bucket": "%%iftemplatematch%${Bucket}%%"
        }
      }
    ],
    "get-bucket-replication": [
      {
        "note": "NotFound",
        "action": "S3 Control:GetBucketReplication",
        "resource_mappings": {}
      }
    ],
    "get-bucket-tagging": [
      {
        "action": "s3-outposts:GetBucketTagging",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "bucket": "%%iftemplatematch%${Bucket}%%"
        }
      }
    ],
    "get-bucket-versioning": [
      {
        "action": "s3:GetBucketVersioning",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "get-job-tagging": [
      {
        "action": "s3:GetJobTagging",
        "resource_mappings": {
          "JobId": {
            "template": "${JobId}"
          }
        }
      }
    ],
    "get-multi-region-access-point": [
      {
        "action": "s3:GetMultiRegionAccessPoint",
        "resource_mappings": {
          "AccessPointName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-multi-region-access-point-policy": [
      {
        "action": "s3:GetMultiRegionAccessPointPolicy",
        "resource_mappings": {
          "AccessPointName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-multi-region-access-point-policy-status": [
      {
        "action": "s3:GetMultiRegionAccessPointPolicyStatus",
        "resource_mappings": {
          "AccessPointName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-multi-region-access-point-routes": [
      {
        "action": "s3:GetMultiRegionAccessPointRoutes",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "multiregionaccesspoint": "${Mrap}"
        }
      }
    ],
    "get-public-access-block": [
      {
        "action": "s3:GetAccountPublicAccessBlock",
        "resource_mappings": {}
      }
    ],
    "get-storage-lens-configuration": [
      {
        "action": "s3:GetStorageLensConfiguration",
        "resource_mappings": {
          "ConfigId": {
            "template": "${ConfigId}"
          }
        }
      }
    ],
    "get-storage-lens-configuration-tagging": [
      {
        "action": "s3:GetStorageLensConfigurationTagging",
        "resource_mappings": {
          "ConfigId": {
            "template": "${ConfigId}"
          }
        }
      }
    ],
    "list-access-points": [
      {
        "action": "s3-outposts:ListAccessPoints",
        "resource_mappings": {}
      }
    ],
    "list-access-points-for-object-lambda": [
      {
        "action": "s3:ListAccessPointsForObjectLambda",
        "resource_mappings": {}
      }
    ],
    "list-jobs": [
      {
        "action": "s3:ListJobs",
        "resource_mappings": {}
      }
    ],
    "list-multi-region-access-points": [
      {
        "action": "s3:ListMultiRegionAccessPoints",
        "resource_mappings": {}
      }
    ],
    "list-regional-buckets": [
      {
        "action": "s3-outposts:ListRegionalBuckets",
        "resource_mappings": {}
      }
    ],
    "list-storage-lens-configurations": [
      {
        "action": "s3:ListStorageLensConfigurations",
        "resource_mappings": {}
      }
    ],
    "put-access-point-configuration-for-object-lambda": [
      {
        "action": "s3:PutAccessPointConfigurationForObjectLambda",
        "resource_mappings": {
          "AccessPointName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "put-access-point-policy": [
      {
        "action": "s3-outposts:PutAccessPointPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "accesspoint": "%%iftemplatematch%${Name}%%"
        }
      }
    ],
    "put-access-point-policy-for-object-lambda": [
      {
        "action": "s3:PutAccessPointPolicyForObjectLambda",
        "resource_mappings": {
          "AccessPointName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "put-bucket-lifecycle-configuration": [
      {
        "action": "s3-outposts:PutLifecycleConfiguration",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "put-bucket-policy": [
      {
        "action": "s3-outposts:PutBucketPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "bucket": "%%iftemplatematch%${Bucket}%%"
        }
      }
    ],
    "put-bucket-replication": [
      {
        "note": "NotFound",
        "action": "S3 Control:PutBucketReplication",
        "resource_mappings": {}
      }
    ],
    "put-bucket-tagging": [
      {
        "action": "s3-outposts:PutBucketTagging",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "bucket": "%%iftemplatematch%${Bucket}%%"
        }
      }
    ],
    "put-bucket-versioning": [
      {
        "action": "s3:PutBucketVersioning",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "put-job-tagging": [
      {
        "action": "s3:PutJobTagging",
        "resource_mappings": {
          "JobId": {
            "template": "${JobId}"
          }
        }
      }
    ],
    "put-multi-region-access-point-policy": [
      {
        "action": "s3:PutMultiRegionAccessPointPolicy",
        "resource_mappings": {
          "AccessPointName": {
            "template": "${Details.Name}"
          }
        }
      }
    ],
    "put-public-access-block": [
      {
        "action": "s3:PutAccountPublicAccessBlock",
        "resource_mappings": {}
      }
    ],
    "put-storage-lens-configuration": [
      {
        "action": "s3:PutStorageLensConfiguration",
        "resource_mappings": {}
      }
    ],
    "put-storage-lens-configuration-tagging": [
      {
        "action": "s3:PutStorageLensConfigurationTagging",
        "resource_mappings": {
          "ConfigId": {
            "template": "${ConfigId}"
          }
        }
      }
    ],
    "submit-multi-region-access-point-routes": [
      {
        "action": "s3:SubmitMultiRegionAccessPointRoutes",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "multiregionaccesspoint": "${Mrap}"
        }
      }
    ],
    "update-job-priority": [
      {
        "action": "s3:UpdateJobPriority",
        "resource_mappings": {
          "JobId": {
            "template": "${JobId}"
          }
        }
      }
    ],
    "update-job-status": [
      {
        "action": "s3:UpdateJobStatus",
        "resource_mappings": {
          "JobId": {
            "template": "${JobId}"
          }
        }
      }
    ]
  },
  "s3outposts": {
    "create-endpoint": [
      {
        "action": "s3-outposts:CreateEndpoint",
        "resource_mappings": {
          "OutpostId": {
            "template": "${OutpostId}"
          },
          "EndpointId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-endpoint": [
      {
        "action": "s3-outposts:DeleteEndpoint",
        "resource_mappings": {
          "OutpostId": {
            "template": "${OutpostId}"
          },
          "EndpointId": {
            "template": "${EndpointId}"
          }
        }
      }
    ],
    "list-endpoints": [
      {
        "action": "s3-outposts:ListEndpoints",
        "resource_mappings": {}
      }
    ],
    "list-outposts-with-s3": [
      {
        "action": "s3-outposts:ListOutpostsWithS3",
        "resource_mappings": {}
      }
    ],
    "list-shared-endpoints": [
      {
        "action": "s3-outposts:ListSharedEndpoints",
        "resource_mappings": {}
      }
    ]
  },
  "sagemaker": {
    "add-association": [
      {
        "action": "sagemaker:AddAssociation",
        "resource_mappings": {
          "ActionName": {
            "template": "*"
          },
          "HashOfArtifactSource": {
            "template": "*"
          },
          "ContextName": {
            "template": "*"
          },
          "ExperimentName": {
            "template": "*"
          },
          "TrialComponentName": {
            "template": "*"
          }
        }
      }
    ],
    "add-tags": [
      {
        "action": "sagemaker:AddTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "action": "%%iftemplatematch%${ResourceArn}%%",
          "algorithm": "%%iftemplatematch%${ResourceArn}%%",
          "app": "%%iftemplatematch%${ResourceArn}%%",
          "app-image-config": "%%iftemplatematch%${ResourceArn}%%",
          "artifact": "%%iftemplatematch%${ResourceArn}%%",
          "automl-job": "%%iftemplatematch%${ResourceArn}%%",
          "code-repository": "%%iftemplatematch%${ResourceArn}%%",
          "context": "%%iftemplatematch%${ResourceArn}%%",
          "data-quality-job-definition": "%%iftemplatematch%${ResourceArn}%%",
          "device": "%%iftemplatematch%${ResourceArn}%%",
          "device-fleet": "%%iftemplatematch%${ResourceArn}%%",
          "domain": "%%iftemplatematch%${ResourceArn}%%",
          "edge-packaging-job": "%%iftemplatematch%${ResourceArn}%%",
          "endpoint": "%%iftemplatematch%${ResourceArn}%%",
          "endpoint-config": "%%iftemplatematch%${ResourceArn}%%",
          "experiment": "%%iftemplatematch%${ResourceArn}%%",
          "experiment-trial": "%%iftemplatematch%${ResourceArn}%%",
          "experiment-trial-component": "%%iftemplatematch%${ResourceArn}%%",
          "feature-group": "%%iftemplatematch%${ResourceArn}%%",
          "flow-definition": "%%iftemplatematch%${ResourceArn}%%",
          "human-task-ui": "%%iftemplatematch%${ResourceArn}%%",
          "hyper-parameter-tuning-job": "%%iftemplatematch%${ResourceArn}%%",
          "image": "%%iftemplatematch%${ResourceArn}%%",
          "labeling-job": "%%iftemplatematch%${ResourceArn}%%",
          "model": "%%iftemplatematch%${ResourceArn}%%",
          "model-bias-job-definition": "%%iftemplatematch%${ResourceArn}%%",
          "model-explainability-job-definition": "%%iftemplatematch%${ResourceArn}%%",
          "model-package": "%%iftemplatematch%${ResourceArn}%%",
          "model-package-group": "%%iftemplatematch%${ResourceArn}%%",
          "model-quality-job-definition": "%%iftemplatematch%${ResourceArn}%%",
          "monitoring-schedule": "%%iftemplatematch%${ResourceArn}%%",
          "notebook-instance": "%%iftemplatematch%${ResourceArn}%%",
          "pipeline": "%%iftemplatematch%${ResourceArn}%%",
          "processing-job": "%%iftemplatematch%${ResourceArn}%%",
          "project": "%%iftemplatematch%${ResourceArn}%%",
          "training-job": "%%iftemplatematch%${ResourceArn}%%",
          "transform-job": "%%iftemplatematch%${ResourceArn}%%",
          "user-profile": "%%iftemplatematch%${ResourceArn}%%",
          "workteam": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "associate-trial-component": [
      {
        "action": "sagemaker:AssociateTrialComponent",
        "resource_mappings": {
          "TrialName": {
            "template": "${TrialName}"
          },
          "TrialComponentName": {
            "template": "${TrialComponentName}"
          }
        }
      }
    ],
    "batch-describe-model-package": [
      {
        "action": "sagemaker:BatchDescribeModelPackage",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "model-package": "${ModelPackageArnList[]}"
        }
      }
    ],
    "create-action": [
      {
        "action": "sagemaker:CreateAction",
        "resource_mappings": {
          "ActionName": {
            "template": "${ActionName}"
          }
        }
      }
    ],
    "create-algorithm": [
      {
        "action": "sagemaker:CreateAlgorithm",
        "resource_mappings": {
          "AlgorithmName": {
            "template": "${AlgorithmName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${ValidationSpecification.ValidationRole}"
        }
      }
    ],
    "create-app": [
      {
        "action": "sagemaker:CreateApp",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          },
          "UserProfileName": {
            "template": "${UserProfileName}"
          },
          "AppType": {
            "template": "${AppType}"
          },
          "AppName": {
            "template": "${AppName}"
          }
        }
      }
    ],
    "create-app-image-config": [
      {
        "action": "sagemaker:CreateAppImageConfig",
        "resource_mappings": {
          "AppImageConfigName": {
            "template": "${AppImageConfigName}"
          }
        }
      }
    ],
    "create-artifact": [
      {
        "action": "sagemaker:CreateArtifact",
        "resource_mappings": {
          "HashOfArtifactSource": {
            "template": "*"
          }
        }
      }
    ],
    "create-auto-ml-job": [
      {
        "action": "sagemaker:CreateAutoMLJob",
        "resource_mappings": {
          "AutoMLJobJobName": {
            "template": "${AutoMLJobName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "create-auto-ml-job-v2": [
      {
        "action": "sagemaker:CreateAutoMLJobV2",
        "resource_mappings": {
          "AutoMLJobJobName": {
            "template": "${AutoMLJobName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${RoleArn}"
        }
      },
      {
        "action": "sagemaker:AddTags",
        "resource_mappings": {
          "ActionName": {
            "template": "*"
          },
          "AlgorithmName": {
            "template": "*"
          },
          "DomainId": {
            "template": "*"
          },
          "UserProfileName": {
            "template": "*"
          },
          "AppType": {
            "template": "*"
          },
          "AppName": {
            "template": "*"
          },
          "AppImageConfigName": {
            "template": "*"
          },
          "HashOfArtifactSource": {
            "template": "*"
          },
          "AutoMLJobJobName": {
            "template": "*"
          },
          "CodeRepositoryName": {
            "template": "*"
          },
          "CompilationJobName": {
            "template": "*"
          },
          "ContextName": {
            "template": "*"
          },
          "DataQualityJobDefinitionName": {
            "template": "*"
          },
          "DeviceFleetName": {
            "template": "*"
          },
          "DeviceName": {
            "template": "*"
          },
          "EdgeDeploymentPlanName": {
            "template": "*"
          },
          "EdgePackagingJobName": {
            "template": "*"
          },
          "EndpointName": {
            "template": "*"
          },
          "EndpointConfigName": {
            "template": "*"
          },
          "ExperimentName": {
            "template": "*"
          },
          "TrialName": {
            "template": "*"
          },
          "TrialComponentName": {
            "template": "*"
          },
          "FeatureGroupName": {
            "template": "*"
          },
          "FlowDefinitionName": {
            "template": "*"
          },
          "HumanTaskUiName": {
            "template": "*"
          },
          "HyperParameterTuningJobName": {
            "template": "*"
          },
          "ImageName": {
            "template": "*"
          },
          "InferenceRecommendationsJobName": {
            "template": "*"
          },
          "LabelingJobName": {
            "template": "*"
          },
          "ModelName": {
            "template": "*"
          },
          "ModelBiasJobDefinitionName": {
            "template": "*"
          },
          "ModelCardName": {
            "template": "*"
          },
          "ModelExplainabilityJobDefinitionName": {
            "template": "*"
          },
          "ModelPackageName": {
            "template": "*"
          },
          "ModelPackageGroupName": {
            "template": "*"
          },
          "ModelQualityJobDefinitionName": {
            "template": "*"
          },
          "MonitoringScheduleName": {
            "template": "*"
          },
          "NotebookInstanceName": {
            "template": "*"
          },
          "PipelineName": {
            "template": "*"
          },
          "ProcessingJobName": {
            "template": "*"
          },
          "ProjectName": {
            "template": "*"
          },
          "StudioLifecycleConfigName": {
            "template": "*"
          },
          "TrainingJobName": {
            "template": "*"
          },
          "TransformJobName": {
            "template": "*"
          },
          "WorkteamName": {
            "template": "*"
          }
        }
      }
    ],
    "create-code-repository": [
      {
        "action": "sagemaker:CreateCodeRepository",
        "resource_mappings": {
          "CodeRepositoryName": {
            "template": "${CodeRepositoryName}"
          }
        }
      }
    ],
    "create-compilation-job": [
      {
        "action": "sagemaker:CreateCompilationJob",
        "resource_mappings": {
          "CompilationJobName": {
            "template": "${CompilationJobName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "create-context": [
      {
        "action": "sagemaker:CreateContext",
        "resource_mappings": {
          "ContextName": {
            "template": "${ContextName}"
          }
        }
      }
    ],
    "create-data-quality-job-definition": [
      {
        "action": "sagemaker:CreateDataQualityJobDefinition",
        "resource_mappings": {
          "DataQualityJobDefinitionName": {
            "template": "${JobDefinitionName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${RoleArn}"
        }
      }
    ],
    "create-device-fleet": [
      {
        "action": "sagemaker:CreateDeviceFleet",
        "resource_mappings": {
          "DeviceFleetName": {
            "template": "${DeviceFleetName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${RoleArn}"
        }
      }
    ],
    "create-domain": [
      {
        "action": "sagemaker:CreateDomain",
        "resource_mappings": {
          "DomainId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${DefaultUserSettings.ExecutionRole}"
        }
      }
    ],
    "create-edge-deployment-plan": [
      {
        "action": "sagemaker:CreateEdgeDeploymentPlan",
        "resource_mappings": {
          "EdgeDeploymentPlanName": {
            "template": "${EdgeDeploymentPlanName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "sagemaker:AddTags",
        "resource_mappings": {
          "ActionName": {
            "template": "*"
          },
          "AlgorithmName": {
            "template": "*"
          },
          "DomainId": {
            "template": "*"
          },
          "UserProfileName": {
            "template": "*"
          },
          "AppType": {
            "template": "*"
          },
          "AppName": {
            "template": "*"
          },
          "AppImageConfigName": {
            "template": "*"
          },
          "HashOfArtifactSource": {
            "template": "*"
          },
          "AutoMLJobJobName": {
            "template": "*"
          },
          "CodeRepositoryName": {
            "template": "*"
          },
          "CompilationJobName": {
            "template": "*"
          },
          "ContextName": {
            "template": "*"
          },
          "DataQualityJobDefinitionName": {
            "template": "*"
          },
          "DeviceFleetName": {
            "template": "*"
          },
          "DeviceName": {
            "template": "*"
          },
          "EdgeDeploymentPlanName": {
            "template": "*"
          },
          "EdgePackagingJobName": {
            "template": "*"
          },
          "EndpointName": {
            "template": "*"
          },
          "EndpointConfigName": {
            "template": "*"
          },
          "ExperimentName": {
            "template": "*"
          },
          "TrialName": {
            "template": "*"
          },
          "TrialComponentName": {
            "template": "*"
          },
          "FeatureGroupName": {
            "template": "*"
          },
          "FlowDefinitionName": {
            "template": "*"
          },
          "HumanTaskUiName": {
            "template": "*"
          },
          "HyperParameterTuningJobName": {
            "template": "*"
          },
          "ImageName": {
            "template": "*"
          },
          "InferenceRecommendationsJobName": {
            "template": "*"
          },
          "LabelingJobName": {
            "template": "*"
          },
          "ModelName": {
            "template": "*"
          },
          "ModelBiasJobDefinitionName": {
            "template": "*"
          },
          "ModelExplainabilityJobDefinitionName": {
            "template": "*"
          },
          "ModelPackageName": {
            "template": "*"
          },
          "ModelPackageGroupName": {
            "template": "*"
          },
          "ModelQualityJobDefinitionName": {
            "template": "*"
          },
          "MonitoringScheduleName": {
            "template": "*"
          },
          "NotebookInstanceName": {
            "template": "*"
          },
          "PipelineName": {
            "template": "*"
          },
          "ProcessingJobName": {
            "template": "*"
          },
          "ProjectName": {
            "template": "*"
          },
          "StudioLifecycleConfigName": {
            "template": "*"
          },
          "TrainingJobName": {
            "template": "*"
          },
          "TransformJobName": {
            "template": "*"
          },
          "WorkteamName": {
            "template": "*"
          }
        }
      }
    ],
    "create-edge-deployment-stage": [
      {
        "action": "sagemaker:CreateEdgeDeploymentStage",
        "resource_mappings": {
          "EdgeDeploymentPlanName": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "sagemaker:AddTags",
        "resource_mappings": {
          "ActionName": {
            "template": "*"
          },
          "AlgorithmName": {
            "template": "*"
          },
          "DomainId": {
            "template": "*"
          },
          "UserProfileName": {
            "template": "*"
          },
          "AppType": {
            "template": "*"
          },
          "AppName": {
            "template": "*"
          },
          "AppImageConfigName": {
            "template": "*"
          },
          "HashOfArtifactSource": {
            "template": "*"
          },
          "AutoMLJobJobName": {
            "template": "*"
          },
          "CodeRepositoryName": {
            "template": "*"
          },
          "CompilationJobName": {
            "template": "*"
          },
          "ContextName": {
            "template": "*"
          },
          "DataQualityJobDefinitionName": {
            "template": "*"
          },
          "DeviceFleetName": {
            "template": "*"
          },
          "DeviceName": {
            "template": "${Stages[].DeviceSelectionConfig.DeviceNames[]}"
          },
          "EdgeDeploymentPlanName": {
            "template": "*"
          },
          "EdgePackagingJobName": {
            "template": "*"
          },
          "EndpointName": {
            "template": "*"
          },
          "EndpointConfigName": {
            "template": "*"
          },
          "ExperimentName": {
            "template": "*"
          },
          "TrialName": {
            "template": "*"
          },
          "TrialComponentName": {
            "template": "*"
          },
          "FeatureGroupName": {
            "template": "*"
          },
          "FlowDefinitionName": {
            "template": "*"
          },
          "HumanTaskUiName": {
            "template": "*"
          },
          "HyperParameterTuningJobName": {
            "template": "*"
          },
          "ImageName": {
            "template": "*"
          },
          "InferenceRecommendationsJobName": {
            "template": "*"
          },
          "LabelingJobName": {
            "template": "*"
          },
          "ModelName": {
            "template": "*"
          },
          "ModelBiasJobDefinitionName": {
            "template": "*"
          },
          "ModelExplainabilityJobDefinitionName": {
            "template": "*"
          },
          "ModelPackageName": {
            "template": "*"
          },
          "ModelPackageGroupName": {
            "template": "*"
          },
          "ModelQualityJobDefinitionName": {
            "template": "*"
          },
          "MonitoringScheduleName": {
            "template": "*"
          },
          "NotebookInstanceName": {
            "template": "*"
          },
          "PipelineName": {
            "template": "*"
          },
          "ProcessingJobName": {
            "template": "*"
          },
          "ProjectName": {
            "template": "*"
          },
          "StudioLifecycleConfigName": {
            "template": "*"
          },
          "TrainingJobName": {
            "template": "*"
          },
          "TransformJobName": {
            "template": "*"
          },
          "WorkteamName": {
            "template": "*"
          }
        }
      }
    ],
    "create-edge-packaging-job": [
      {
        "action": "sagemaker:CreateEdgePackagingJob",
        "resource_mappings": {
          "EdgePackagingJobName": {
            "template": "${EdgePackagingJobName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${RoleArn}"
        }
      }
    ],
    "create-endpoint": [
      {
        "action": "sagemaker:CreateEndpoint",
        "resource_mappings": {
          "EndpointName": {
            "template": "${EndpointName}"
          }
        }
      }
    ],
    "create-endpoint-config": [
      {
        "action": "sagemaker:CreateEndpointConfig",
        "resource_mappings": {
          "EndpointConfigName": {
            "template": "${EndpointConfigName}"
          }
        }
      }
    ],
    "create-experiment": [
      {
        "action": "sagemaker:CreateExperiment",
        "resource_mappings": {
          "ExperimentName": {
            "template": "${ExperimentName}"
          }
        }
      }
    ],
    "create-feature-group": [
      {
        "action": "sagemaker:CreateFeatureGroup",
        "resource_mappings": {
          "FeatureGroupName": {
            "template": "${FeatureGroupName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${RoleArn}"
        }
      }
    ],
    "create-flow-definition": [
      {
        "action": "sagemaker:CreateFlowDefinition",
        "resource_mappings": {
          "FlowDefinitionName": {
            "template": "${FlowDefinitionName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "create-hub": [
      {
        "action": "sagemaker:CreateHub",
        "resource_mappings": {
          "HubName": {
            "template": "${HubName}"
          }
        }
      },
      {
        "action": "sagemaker:AddTags",
        "resource_mappings": {
          "ActionName": {
            "template": "*"
          },
          "AlgorithmName": {
            "template": "*"
          },
          "DomainId": {
            "template": "*"
          },
          "UserProfileName": {
            "template": "*"
          },
          "AppType": {
            "template": "*"
          },
          "AppName": {
            "template": "*"
          },
          "AppImageConfigName": {
            "template": "*"
          },
          "HashOfArtifactSource": {
            "template": "*"
          },
          "AutoMLJobJobName": {
            "template": "*"
          },
          "CodeRepositoryName": {
            "template": "*"
          },
          "CompilationJobName": {
            "template": "*"
          },
          "ContextName": {
            "template": "*"
          },
          "DataQualityJobDefinitionName": {
            "template": "*"
          },
          "DeviceFleetName": {
            "template": "*"
          },
          "DeviceName": {
            "template": "*"
          },
          "EdgeDeploymentPlanName": {
            "template": "*"
          },
          "EdgePackagingJobName": {
            "template": "*"
          },
          "EndpointName": {
            "template": "*"
          },
          "EndpointConfigName": {
            "template": "*"
          },
          "ExperimentName": {
            "template": "*"
          },
          "TrialName": {
            "template": "*"
          },
          "TrialComponentName": {
            "template": "*"
          },
          "FeatureGroupName": {
            "template": "*"
          },
          "FlowDefinitionName": {
            "template": "*"
          },
          "HumanTaskUiName": {
            "template": "*"
          },
          "HyperParameterTuningJobName": {
            "template": "*"
          },
          "ImageName": {
            "template": "*"
          },
          "InferenceRecommendationsJobName": {
            "template": "*"
          },
          "LabelingJobName": {
            "template": "*"
          },
          "ModelName": {
            "template": "*"
          },
          "ModelBiasJobDefinitionName": {
            "template": "*"
          },
          "ModelCardName": {
            "template": "*"
          },
          "ModelExplainabilityJobDefinitionName": {
            "template": "*"
          },
          "ModelPackageName": {
            "template": "*"
          },
          "ModelPackageGroupName": {
            "template": "*"
          },
          "ModelQualityJobDefinitionName": {
            "template": "*"
          },
          "MonitoringScheduleName": {
            "template": "*"
          },
          "NotebookInstanceName": {
            "template": "*"
          },
          "PipelineName": {
            "template": "*"
          },
          "ProcessingJobName": {
            "template": "*"
          },
          "ProjectName": {
            "template": "*"
          },
          "StudioLifecycleConfigName": {
            "template": "*"
          },
          "TrainingJobName": {
            "template": "*"
          },
          "TransformJobName": {
            "template": "*"
          },
          "WorkteamName": {
            "template": "*"
          }
        }
      }
    ],
    "create-human-task-ui": [
      {
        "action": "sagemaker:CreateHumanTaskUi",
        "resource_mappings": {
          "HumanTaskUiName": {
            "template": "${HumanTaskUiName}"
          }
        }
      }
    ],
    "create-hyper-parameter-tuning-job": [
      {
        "action": "sagemaker:CreateHyperParameterTuningJob",
        "resource_mappings": {
          "HyperParameterTuningJobName": {
            "template": "${HyperParameterTuningJobName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${TrainingJobDefinition.RoleArn}"
        }
      }
    ],
    "create-image": [
      {
        "action": "sagemaker:CreateImage",
        "resource_mappings": {
          "ImageName": {
            "template": "${ImageName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${RoleArn}"
        }
      }
    ],
    "create-image-version": [
      {
        "action": "sagemaker:CreateImageVersion",
        "resource_mappings": {
          "ImageName": {
            "template": "${ImageName}"
          }
        }
      }
    ],
    "create-inference-experiment": [
      {
        "action": "sagemaker:CreateInferenceExperiment",
        "resource_mappings": {
          "InferenceExperimentName": {
            "template": "${Name}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${RoleArn}"
        }
      },
      {
        "action": "sagemaker:AddTags",
        "resource_mappings": {
          "ActionName": {
            "template": "*"
          },
          "AlgorithmName": {
            "template": "*"
          },
          "DomainId": {
            "template": "*"
          },
          "UserProfileName": {
            "template": "*"
          },
          "AppType": {
            "template": "*"
          },
          "AppName": {
            "template": "*"
          },
          "AppImageConfigName": {
            "template": "*"
          },
          "HashOfArtifactSource": {
            "template": "*"
          },
          "AutoMLJobJobName": {
            "template": "*"
          },
          "CodeRepositoryName": {
            "template": "*"
          },
          "CompilationJobName": {
            "template": "*"
          },
          "ContextName": {
            "template": "*"
          },
          "DataQualityJobDefinitionName": {
            "template": "*"
          },
          "DeviceFleetName": {
            "template": "*"
          },
          "DeviceName": {
            "template": "*"
          },
          "EdgeDeploymentPlanName": {
            "template": "*"
          },
          "EdgePackagingJobName": {
            "template": "*"
          },
          "EndpointName": {
            "template": "*"
          },
          "EndpointConfigName": {
            "template": "*"
          },
          "ExperimentName": {
            "template": "*"
          },
          "TrialName": {
            "template": "*"
          },
          "TrialComponentName": {
            "template": "*"
          },
          "FeatureGroupName": {
            "template": "*"
          },
          "FlowDefinitionName": {
            "template": "*"
          },
          "HumanTaskUiName": {
            "template": "*"
          },
          "HyperParameterTuningJobName": {
            "template": "*"
          },
          "ImageName": {
            "template": "*"
          },
          "InferenceRecommendationsJobName": {
            "template": "*"
          },
          "LabelingJobName": {
            "template": "*"
          },
          "ModelName": {
            "template": "*"
          },
          "ModelBiasJobDefinitionName": {
            "template": "*"
          },
          "ModelCardName": {
            "template": "*"
          },
          "ModelExplainabilityJobDefinitionName": {
            "template": "*"
          },
          "ModelPackageName": {
            "template": "*"
          },
          "ModelPackageGroupName": {
            "template": "*"
          },
          "ModelQualityJobDefinitionName": {
            "template": "*"
          },
          "MonitoringScheduleName": {
            "template": "*"
          },
          "NotebookInstanceName": {
            "template": "*"
          },
          "PipelineName": {
            "template": "*"
          },
          "ProcessingJobName": {
            "template": "*"
          },
          "ProjectName": {
            "template": "*"
          },
          "StudioLifecycleConfigName": {
            "template": "*"
          },
          "TrainingJobName": {
            "template": "*"
          },
          "TransformJobName": {
            "template": "*"
          },
          "WorkteamName": {
            "template": "*"
          }
        }
      }
    ],
    "create-inference-recommendations-job": [
      {
        "action": "sagemaker:CreateInferenceRecommendationsJob",
        "resource_mappings": {
          "InferenceRecommendationsJobName": {
            "template": "${JobName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${RoleArn}"
        }
      }
    ],
    "create-labeling-job": [
      {
        "action": "sagemaker:CreateLabelingJob",
        "resource_mappings": {
          "LabelingJobName": {
            "template": "${LabelingJobName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "create-model": [
      {
        "action": "sagemaker:CreateModel",
        "resource_mappings": {
          "ModelName": {
            "template": "${ModelName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${ExecutionRoleArn}"
        }
      }
    ],
    "create-model-bias-job-definition": [
      {
        "action": "sagemaker:CreateModelBiasJobDefinition",
        "resource_mappings": {
          "ModelBiasJobDefinitionName": {
            "template": "${JobDefinitionName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${RoleArn}"
        }
      }
    ],
    "create-model-card": [
      {
        "action": "sagemaker:CreateModelCard",
        "resource_mappings": {
          "ModelCardName": {
            "template": "${ModelCardName}"
          }
        }
      },
      {
        "action": "sagemaker:AddTags",
        "resource_mappings": {
          "ActionName": {
            "template": "*"
          },
          "AlgorithmName": {
            "template": "*"
          },
          "DomainId": {
            "template": "*"
          },
          "UserProfileName": {
            "template": "*"
          },
          "AppType": {
            "template": "*"
          },
          "AppName": {
            "template": "*"
          },
          "AppImageConfigName": {
            "template": "*"
          },
          "HashOfArtifactSource": {
            "template": "*"
          },
          "AutoMLJobJobName": {
            "template": "*"
          },
          "CodeRepositoryName": {
            "template": "*"
          },
          "CompilationJobName": {
            "template": "*"
          },
          "ContextName": {
            "template": "*"
          },
          "DataQualityJobDefinitionName": {
            "template": "*"
          },
          "DeviceFleetName": {
            "template": "*"
          },
          "DeviceName": {
            "template": "*"
          },
          "EdgeDeploymentPlanName": {
            "template": "*"
          },
          "EdgePackagingJobName": {
            "template": "*"
          },
          "EndpointName": {
            "template": "*"
          },
          "EndpointConfigName": {
            "template": "*"
          },
          "ExperimentName": {
            "template": "*"
          },
          "TrialName": {
            "template": "*"
          },
          "TrialComponentName": {
            "template": "*"
          },
          "FeatureGroupName": {
            "template": "*"
          },
          "FlowDefinitionName": {
            "template": "*"
          },
          "HumanTaskUiName": {
            "template": "*"
          },
          "HyperParameterTuningJobName": {
            "template": "*"
          },
          "ImageName": {
            "template": "*"
          },
          "InferenceRecommendationsJobName": {
            "template": "*"
          },
          "LabelingJobName": {
            "template": "*"
          },
          "ModelName": {
            "template": "*"
          },
          "ModelBiasJobDefinitionName": {
            "template": "*"
          },
          "ModelCardName": {
            "template": "*"
          },
          "ModelExplainabilityJobDefinitionName": {
            "template": "*"
          },
          "ModelPackageName": {
            "template": "*"
          },
          "ModelPackageGroupName": {
            "template": "*"
          },
          "ModelQualityJobDefinitionName": {
            "template": "*"
          },
          "MonitoringScheduleName": {
            "template": "*"
          },
          "NotebookInstanceName": {
            "template": "*"
          },
          "PipelineName": {
            "template": "*"
          },
          "ProcessingJobName": {
            "template": "*"
          },
          "ProjectName": {
            "template": "*"
          },
          "StudioLifecycleConfigName": {
            "template": "*"
          },
          "TrainingJobName": {
            "template": "*"
          },
          "TransformJobName": {
            "template": "*"
          },
          "WorkteamName": {
            "template": "*"
          }
        }
      }
    ],
    "create-model-card-export-job": [
      {
        "action": "sagemaker:CreateModelCardExportJob",
        "resource_mappings": {
          "ModelCardName": {
            "template": "${ModelCardName}"
          }
        }
      }
    ],
    "create-model-explainability-job-definition": [
      {
        "action": "sagemaker:CreateModelExplainabilityJobDefinition",
        "resource_mappings": {
          "ModelExplainabilityJobDefinitionName": {
            "template": "${JobDefinitionName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${RoleArn}"
        }
      }
    ],
    "create-model-package": [
      {
        "action": "sagemaker:CreateModelPackage",
        "resource_mappings": {
          "ModelPackageName": {
            "template": "${ModelPackageName}"
          },
          "ModelPackageGroupName": {
            "template": "${ModelPackageGroupName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${ValidationSpecification.ValidationRole}"
        }
      }
    ],
    "create-model-package-group": [
      {
        "action": "sagemaker:CreateModelPackageGroup",
        "resource_mappings": {
          "ModelPackageGroupName": {
            "template": "${ModelPackageGroupName}"
          }
        }
      }
    ],
    "create-model-quality-job-definition": [
      {
        "action": "sagemaker:CreateModelQualityJobDefinition",
        "resource_mappings": {
          "ModelQualityJobDefinitionName": {
            "template": "${JobDefinitionName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${RoleArn}"
        }
      }
    ],
    "create-monitoring-schedule": [
      {
        "action": "sagemaker:CreateMonitoringSchedule",
        "resource_mappings": {
          "MonitoringScheduleName": {
            "template": "${MonitoringScheduleName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${MonitoringScheduleConfig.MonitoringJobDefinition.RoleArn}"
        }
      }
    ],
    "create-notebook-instance": [
      {
        "action": "sagemaker:CreateNotebookInstance",
        "resource_mappings": {
          "NotebookInstanceName": {
            "template": "${NotebookInstanceName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "create-notebook-instance-lifecycle-config": [
      {
        "action": "sagemaker:CreateNotebookInstanceLifecycleConfig",
        "resource_mappings": {
          "NotebookInstanceLifecycleConfigName": {
            "template": "${NotebookInstanceLifecycleConfigName}"
          }
        }
      }
    ],
    "create-pipeline": [
      {
        "action": "sagemaker:CreatePipeline",
        "resource_mappings": {
          "PipelineName": {
            "template": "${PipelineName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${RoleArn}"
        }
      }
    ],
    "create-presigned-domain-url": [
      {
        "action": "sagemaker:CreatePresignedDomainUrl",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          },
          "UserProfileName": {
            "template": "${UserProfileName}"
          }
        }
      }
    ],
    "create-presigned-notebook-instance-url": [
      {
        "action": "sagemaker:CreatePresignedNotebookInstanceUrl",
        "resource_mappings": {
          "NotebookInstanceName": {
            "template": "${NotebookInstanceName}"
          }
        }
      }
    ],
    "create-processing-job": [
      {
        "action": "sagemaker:CreateProcessingJob",
        "resource_mappings": {
          "ProcessingJobName": {
            "template": "${ProcessingJobName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "create-project": [
      {
        "action": "sagemaker:CreateProject",
        "resource_mappings": {
          "ProjectName": {
            "template": "${ProjectName}"
          }
        }
      }
    ],
    "create-space": [
      {
        "action": "sagemaker:CreateSpace",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          },
          "SpaceName": {
            "template": "${SpaceName}"
          }
        }
      },
      {
        "action": "sagemaker:AddTags",
        "resource_mappings": {
          "ActionName": {
            "template": "*"
          },
          "AlgorithmName": {
            "template": "*"
          },
          "DomainId": {
            "template": "*"
          },
          "UserProfileName": {
            "template": "*"
          },
          "AppType": {
            "template": "*"
          },
          "AppName": {
            "template": "*"
          },
          "AppImageConfigName": {
            "template": "*"
          },
          "HashOfArtifactSource": {
            "template": "*"
          },
          "AutoMLJobJobName": {
            "template": "*"
          },
          "CodeRepositoryName": {
            "template": "*"
          },
          "CompilationJobName": {
            "template": "*"
          },
          "ContextName": {
            "template": "*"
          },
          "DataQualityJobDefinitionName": {
            "template": "*"
          },
          "DeviceFleetName": {
            "template": "*"
          },
          "DeviceName": {
            "template": "*"
          },
          "EdgeDeploymentPlanName": {
            "template": "*"
          },
          "EdgePackagingJobName": {
            "template": "*"
          },
          "EndpointName": {
            "template": "*"
          },
          "EndpointConfigName": {
            "template": "*"
          },
          "ExperimentName": {
            "template": "*"
          },
          "TrialName": {
            "template": "*"
          },
          "TrialComponentName": {
            "template": "*"
          },
          "FeatureGroupName": {
            "template": "*"
          },
          "FlowDefinitionName": {
            "template": "*"
          },
          "HumanTaskUiName": {
            "template": "*"
          },
          "HyperParameterTuningJobName": {
            "template": "*"
          },
          "ImageName": {
            "template": "*"
          },
          "InferenceRecommendationsJobName": {
            "template": "*"
          },
          "LabelingJobName": {
            "template": "*"
          },
          "ModelName": {
            "template": "*"
          },
          "ModelBiasJobDefinitionName": {
            "template": "*"
          },
          "ModelCardName": {
            "template": "*"
          },
          "ModelExplainabilityJobDefinitionName": {
            "template": "*"
          },
          "ModelPackageName": {
            "template": "*"
          },
          "ModelPackageGroupName": {
            "template": "*"
          },
          "ModelQualityJobDefinitionName": {
            "template": "*"
          },
          "MonitoringScheduleName": {
            "template": "*"
          },
          "NotebookInstanceName": {
            "template": "*"
          },
          "PipelineName": {
            "template": "*"
          },
          "ProcessingJobName": {
            "template": "*"
          },
          "ProjectName": {
            "template": "*"
          },
          "StudioLifecycleConfigName": {
            "template": "*"
          },
          "TrainingJobName": {
            "template": "*"
          },
          "TransformJobName": {
            "template": "*"
          },
          "WorkteamName": {
            "template": "*"
          }
        }
      }
    ],
    "create-studio-lifecycle-config": [
      {
        "action": "sagemaker:CreateStudioLifecycleConfig",
        "resource_mappings": {
          "StudioLifecycleConfigName": {
            "template": "${StudioLifecycleConfigName}"
          }
        }
      }
    ],
    "create-training-job": [
      {
        "action": "sagemaker:CreateTrainingJob",
        "resource_mappings": {
          "TrainingJobName": {
            "template": "${TrainingJobName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "create-transform-job": [
      {
        "action": "sagemaker:CreateTransformJob",
        "resource_mappings": {
          "TransformJobName": {
            "template": "${TransformJobName}"
          }
        }
      }
    ],
    "create-trial": [
      {
        "action": "sagemaker:CreateTrial",
        "resource_mappings": {
          "TrialName": {
            "template": "${TrialName}"
          }
        }
      }
    ],
    "create-trial-component": [
      {
        "action": "sagemaker:CreateTrialComponent",
        "resource_mappings": {
          "TrialComponentName": {
            "template": "${TrialComponentName}"
          }
        }
      }
    ],
    "create-user-profile": [
      {
        "action": "sagemaker:CreateUserProfile",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          },
          "UserProfileName": {
            "template": "${UserProfileName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${UserSettings.ExecutionRole}"
        }
      }
    ],
    "create-workforce": [
      {
        "action": "sagemaker:CreateWorkforce",
        "resource_mappings": {
          "WorkforceName": {
            "template": "${WorkforceName}"
          }
        }
      }
    ],
    "create-workteam": [
      {
        "action": "sagemaker:CreateWorkteam",
        "resource_mappings": {
          "WorkteamName": {
            "template": "${WorkteamName}"
          }
        }
      }
    ],
    "delete-action": [
      {
        "action": "sagemaker:DeleteAction",
        "resource_mappings": {
          "ActionName": {
            "template": "${ActionName}"
          }
        }
      }
    ],
    "delete-algorithm": [
      {
        "action": "sagemaker:DeleteAlgorithm",
        "resource_mappings": {
          "AlgorithmName": {
            "template": "${AlgorithmName}"
          }
        }
      }
    ],
    "delete-app": [
      {
        "action": "sagemaker:DeleteApp",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          },
          "UserProfileName": {
            "template": "${UserProfileName}"
          },
          "AppType": {
            "template": "${AppType}"
          },
          "AppName": {
            "template": "${AppName}"
          }
        }
      }
    ],
    "delete-app-image-config": [
      {
        "action": "sagemaker:DeleteAppImageConfig",
        "resource_mappings": {
          "AppImageConfigName": {
            "template": "${AppImageConfigName}"
          }
        }
      }
    ],
    "delete-artifact": [
      {
        "action": "sagemaker:DeleteArtifact",
        "resource_mappings": {
          "HashOfArtifactSource": {
            "template": "*"
          }
        }
      }
    ],
    "delete-association": [
      {
        "action": "sagemaker:DeleteAssociation",
        "resource_mappings": {
          "ActionName": {
            "template": "*"
          },
          "HashOfArtifactSource": {
            "template": "*"
          },
          "ContextName": {
            "template": "*"
          },
          "ExperimentName": {
            "template": "*"
          },
          "TrialComponentName": {
            "template": "*"
          }
        }
      }
    ],
    "delete-code-repository": [
      {
        "action": "sagemaker:DeleteCodeRepository",
        "resource_mappings": {
          "CodeRepositoryName": {
            "template": "${CodeRepositoryName}"
          }
        }
      }
    ],
    "delete-context": [
      {
        "action": "sagemaker:DeleteContext",
        "resource_mappings": {
          "ContextName": {
            "template": "${ContextName}"
          }
        }
      }
    ],
    "delete-data-quality-job-definition": [
      {
        "action": "sagemaker:DeleteDataQualityJobDefinition",
        "resource_mappings": {
          "DataQualityJobDefinitionName": {
            "template": "${JobDefinitionName}"
          }
        }
      }
    ],
    "delete-device-fleet": [
      {
        "action": "sagemaker:DeleteDeviceFleet",
        "resource_mappings": {
          "DeviceFleetName": {
            "template": "${DeviceFleetName}"
          }
        }
      }
    ],
    "delete-domain": [
      {
        "action": "sagemaker:DeleteDomain",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          }
        }
      }
    ],
    "delete-edge-deployment-plan": [
      {
        "action": "sagemaker:DeleteEdgeDeploymentPlan",
        "resource_mappings": {
          "EdgeDeploymentPlanName": {
            "template": "${EdgeDeploymentPlanName}"
          }
        }
      }
    ],
    "delete-edge-deployment-stage": [
      {
        "action": "sagemaker:DeleteEdgeDeploymentStage",
        "resource_mappings": {
          "EdgeDeploymentPlanName": {
            "template": "${EdgeDeploymentPlanName}"
          }
        }
      }
    ],
    "delete-endpoint": [
      {
        "action": "sagemaker:DeleteEndpoint",
        "resource_mappings": {
          "EndpointName": {
            "template": "${EndpointName}"
          }
        }
      }
    ],
    "delete-endpoint-config": [
      {
        "action": "sagemaker:DeleteEndpointConfig",
        "resource_mappings": {
          "EndpointConfigName": {
            "template": "${EndpointConfigName}"
          }
        }
      }
    ],
    "delete-experiment": [
      {
        "action": "sagemaker:DeleteExperiment",
        "resource_mappings": {
          "ExperimentName": {
            "template": "${ExperimentName}"
          }
        }
      }
    ],
    "delete-feature-group": [
      {
        "action": "sagemaker:DeleteFeatureGroup",
        "resource_mappings": {
          "FeatureGroupName": {
            "template": "${FeatureGroupName}"
          }
        }
      }
    ],
    "delete-flow-definition": [
      {
        "action": "sagemaker:DeleteFlowDefinition",
        "resource_mappings": {
          "FlowDefinitionName": {
            "template": "${FlowDefinitionName}"
          }
        }
      }
    ],
    "delete-hub": [
      {
        "action": "sagemaker:DeleteHub",
        "resource_mappings": {
          "HubName": {
            "template": "${HubName}"
          }
        }
      }
    ],
    "delete-hub-content": [
      {
        "action": "sagemaker:DeleteHubContent",
        "resource_mappings": {
          "HubName": {
            "template": "${HubName}"
          },
          "HubContentType": {
            "template": "${HubContentType}"
          },
          "HubContentName": {
            "template": "${HubContentName}"
          }
        }
      }
    ],
    "delete-human-task-ui": [
      {
        "action": "sagemaker:DeleteHumanTaskUi",
        "resource_mappings": {
          "HumanTaskUiName": {
            "template": "${HumanTaskUiName}"
          }
        }
      }
    ],
    "delete-image": [
      {
        "action": "sagemaker:DeleteImage",
        "resource_mappings": {
          "ImageName": {
            "template": "${ImageName}"
          }
        }
      }
    ],
    "delete-image-version": [
      {
        "action": "sagemaker:DeleteImageVersion",
        "resource_mappings": {
          "ImageName": {
            "template": "${ImageName}"
          },
          "Version": {
            "template": "${Version}"
          }
        }
      }
    ],
    "delete-inference-experiment": [
      {
        "action": "sagemaker:DeleteInferenceExperiment",
        "resource_mappings": {
          "InferenceExperimentName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-model": [
      {
        "action": "sagemaker:DeleteModel",
        "resource_mappings": {
          "ModelName": {
            "template": "${ModelName}"
          }
        }
      }
    ],
    "delete-model-bias-job-definition": [
      {
        "action": "sagemaker:DeleteModelBiasJobDefinition",
        "resource_mappings": {
          "ModelBiasJobDefinitionName": {
            "template": "${JobDefinitionName}"
          }
        }
      }
    ],
    "delete-model-card": [
      {
        "action": "sagemaker:DeleteModelCard",
        "resource_mappings": {
          "ModelCardName": {
            "template": "${ModelCardName}"
          }
        }
      }
    ],
    "delete-model-explainability-job-definition": [
      {
        "action": "sagemaker:DeleteModelExplainabilityJobDefinition",
        "resource_mappings": {
          "ModelExplainabilityJobDefinitionName": {
            "template": "${JobDefinitionName}"
          }
        }
      }
    ],
    "delete-model-package": [
      {
        "action": "sagemaker:DeleteModelPackage",
        "resource_mappings": {
          "ModelPackageName": {
            "template": "${ModelPackageName}"
          }
        }
      }
    ],
    "delete-model-package-group": [
      {
        "action": "sagemaker:DeleteModelPackageGroup",
        "resource_mappings": {
          "ModelPackageGroupName": {
            "template": "${ModelPackageGroupName}"
          }
        }
      }
    ],
    "delete-model-package-group-policy": [
      {
        "action": "sagemaker:DeleteModelPackageGroupPolicy",
        "resource_mappings": {
          "ModelPackageGroupName": {
            "template": "${ModelPackageGroupName}"
          }
        }
      }
    ],
    "delete-model-quality-job-definition": [
      {
        "action": "sagemaker:DeleteModelQualityJobDefinition",
        "resource_mappings": {
          "ModelQualityJobDefinitionName": {
            "template": "${JobDefinitionName}"
          }
        }
      }
    ],
    "delete-monitoring-schedule": [
      {
        "action": "sagemaker:DeleteMonitoringSchedule",
        "resource_mappings": {
          "MonitoringScheduleName": {
            "template": "${MonitoringScheduleName}"
          }
        }
      }
    ],
    "delete-notebook-instance": [
      {
        "action": "sagemaker:DeleteNotebookInstance",
        "resource_mappings": {
          "NotebookInstanceName": {
            "template": "${NotebookInstanceName}"
          }
        }
      }
    ],
    "delete-notebook-instance-lifecycle-config": [
      {
        "action": "sagemaker:DeleteNotebookInstanceLifecycleConfig",
        "resource_mappings": {
          "NotebookInstanceLifecycleConfigName": {
            "template": "${NotebookInstanceLifecycleConfigName}"
          }
        }
      }
    ],
    "delete-pipeline": [
      {
        "action": "sagemaker:DeletePipeline",
        "resource_mappings": {
          "PipelineName": {
            "template": "${PipelineName}"
          }
        }
      }
    ],
    "delete-project": [
      {
        "action": "sagemaker:DeleteProject",
        "resource_mappings": {
          "ProjectName": {
            "template": "${ProjectName}"
          }
        }
      }
    ],
    "delete-space": [
      {
        "action": "sagemaker:DeleteSpace",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          },
          "SpaceName": {
            "template": "${SpaceName}"
          }
        }
      }
    ],
    "delete-studio-lifecycle-config": [
      {
        "action": "sagemaker:DeleteStudioLifecycleConfig",
        "resource_mappings": {
          "StudioLifecycleConfigName": {
            "template": "${StudioLifecycleConfigName}"
          }
        }
      }
    ],
    "delete-tags": [
      {
        "action": "sagemaker:DeleteTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "action": "%%iftemplatematch%${ResourceArn}%%",
          "algorithm": "%%iftemplatematch%${ResourceArn}%%",
          "app": "%%iftemplatematch%${ResourceArn}%%",
          "app-image-config": "%%iftemplatematch%${ResourceArn}%%",
          "artifact": "%%iftemplatematch%${ResourceArn}%%",
          "automl-job": "%%iftemplatematch%${ResourceArn}%%",
          "code-repository": "%%iftemplatematch%${ResourceArn}%%",
          "compilation-job": "%%iftemplatematch%${ResourceArn}%%",
          "context": "%%iftemplatematch%${ResourceArn}%%",
          "data-quality-job-definition": "%%iftemplatematch%${ResourceArn}%%",
          "device": "%%iftemplatematch%${ResourceArn}%%",
          "device-fleet": "%%iftemplatematch%${ResourceArn}%%",
          "domain": "%%iftemplatematch%${ResourceArn}%%",
          "edge-packaging-job": "%%iftemplatematch%${ResourceArn}%%",
          "endpoint": "%%iftemplatematch%${ResourceArn}%%",
          "endpoint-config": "%%iftemplatematch%${ResourceArn}%%",
          "experiment": "%%iftemplatematch%${ResourceArn}%%",
          "experiment-trial": "%%iftemplatematch%${ResourceArn}%%",
          "experiment-trial-component": "%%iftemplatematch%${ResourceArn}%%",
          "feature-group": "%%iftemplatematch%${ResourceArn}%%",
          "flow-definition": "%%iftemplatematch%${ResourceArn}%%",
          "human-task-ui": "%%iftemplatematch%${ResourceArn}%%",
          "hyper-parameter-tuning-job": "%%iftemplatematch%${ResourceArn}%%",
          "image": "%%iftemplatematch%${ResourceArn}%%",
          "labeling-job": "%%iftemplatematch%${ResourceArn}%%",
          "model": "%%iftemplatematch%${ResourceArn}%%",
          "model-bias-job-definition": "%%iftemplatematch%${ResourceArn}%%",
          "model-explainability-job-definition": "%%iftemplatematch%${ResourceArn}%%",
          "model-package": "%%iftemplatematch%${ResourceArn}%%",
          "model-package-group": "%%iftemplatematch%${ResourceArn}%%",
          "model-quality-job-definition": "%%iftemplatematch%${ResourceArn}%%",
          "monitoring-schedule": "%%iftemplatematch%${ResourceArn}%%",
          "notebook-instance": "%%iftemplatematch%${ResourceArn}%%",
          "pipeline": "%%iftemplatematch%${ResourceArn}%%",
          "processing-job": "%%iftemplatematch%${ResourceArn}%%",
          "project": "%%iftemplatematch%${ResourceArn}%%",
          "training-job": "%%iftemplatematch%${ResourceArn}%%",
          "transform-job": "%%iftemplatematch%${ResourceArn}%%",
          "user-profile": "%%iftemplatematch%${ResourceArn}%%",
          "workteam": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "delete-trial": [
      {
        "action": "sagemaker:DeleteTrial",
        "resource_mappings": {
          "TrialName": {
            "template": "${TrialName}"
          }
        }
      }
    ],
    "delete-trial-component": [
      {
        "action": "sagemaker:DeleteTrialComponent",
        "resource_mappings": {
          "TrialComponentName": {
            "template": "${TrialComponentName}"
          }
        }
      }
    ],
    "delete-user-profile": [
      {
        "action": "sagemaker:DeleteUserProfile",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          },
          "UserProfileName": {
            "template": "${UserProfileName}"
          }
        }
      }
    ],
    "delete-workforce": [
      {
        "action": "sagemaker:DeleteWorkforce",
        "resource_mappings": {
          "WorkforceName": {
            "template": "${WorkforceName}"
          }
        }
      }
    ],
    "delete-workteam": [
      {
        "action": "sagemaker:DeleteWorkteam",
        "resource_mappings": {
          "WorkteamName": {
            "template": "${WorkteamName}"
          }
        }
      }
    ],
    "deregister-devices": [
      {
        "action": "sagemaker:DeregisterDevices",
        "resource_mappings": {
          "DeviceFleetName": {
            "template": "${DeviceFleetName}"
          },
          "DeviceName": {
            "template": "${DeviceNames[]}"
          }
        }
      }
    ],
    "describe-action": [
      {
        "action": "sagemaker:DescribeAction",
        "resource_mappings": {
          "ActionName": {
            "template": "${ActionName}"
          }
        }
      }
    ],
    "describe-algorithm": [
      {
        "action": "sagemaker:DescribeAlgorithm",
        "resource_mappings": {
          "AlgorithmName": {
            "template": "${AlgorithmName}"
          }
        }
      }
    ],
    "describe-app": [
      {
        "action": "sagemaker:DescribeApp",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          },
          "UserProfileName": {
            "template": "${UserProfileName}"
          },
          "AppType": {
            "template": "${AppType}"
          },
          "AppName": {
            "template": "${AppName}"
          }
        }
      }
    ],
    "describe-app-image-config": [
      {
        "action": "sagemaker:DescribeAppImageConfig",
        "resource_mappings": {
          "AppImageConfigName": {
            "template": "${AppImageConfigName}"
          }
        }
      }
    ],
    "describe-artifact": [
      {
        "action": "sagemaker:DescribeArtifact",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "artifact": "${ArtifactArn}"
        }
      }
    ],
    "describe-auto-ml-job": [
      {
        "action": "sagemaker:DescribeAutoMLJob",
        "resource_mappings": {
          "AutoMLJobJobName": {
            "template": "${AutoMLJobName}"
          }
        }
      }
    ],
    "describe-auto-ml-job-v2": [
      {
        "action": "sagemaker:DescribeAutoMLJobV2",
        "resource_mappings": {
          "AutoMLJobJobName": {
            "template": "${AutoMLJobName}"
          }
        }
      }
    ],
    "describe-code-repository": [
      {
        "action": "sagemaker:DescribeCodeRepository",
        "resource_mappings": {
          "CodeRepositoryName": {
            "template": "${CodeRepositoryName}"
          }
        }
      }
    ],
    "describe-compilation-job": [
      {
        "action": "sagemaker:DescribeCompilationJob",
        "resource_mappings": {
          "CompilationJobName": {
            "template": "${CompilationJobName}"
          }
        }
      }
    ],
    "describe-context": [
      {
        "action": "sagemaker:DescribeContext",
        "resource_mappings": {
          "ContextName": {
            "template": "${ContextName}"
          }
        }
      }
    ],
    "describe-data-quality-job-definition": [
      {
        "action": "sagemaker:DescribeDataQualityJobDefinition",
        "resource_mappings": {
          "DataQualityJobDefinitionName": {
            "template": "${JobDefinitionName}"
          }
        }
      }
    ],
    "describe-device": [
      {
        "action": "sagemaker:DescribeDevice",
        "resource_mappings": {
          "DeviceFleetName": {
            "template": "${DeviceFleetName}"
          },
          "DeviceName": {
            "template": "${DeviceName}"
          }
        }
      }
    ],
    "describe-device-fleet": [
      {
        "action": "sagemaker:DescribeDeviceFleet",
        "resource_mappings": {
          "DeviceFleetName": {
            "template": "${DeviceFleetName}"
          }
        }
      }
    ],
    "describe-domain": [
      {
        "action": "sagemaker:DescribeDomain",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          }
        }
      }
    ],
    "describe-edge-deployment-plan": [
      {
        "action": "sagemaker:DescribeEdgeDeploymentPlan",
        "resource_mappings": {
          "EdgeDeploymentPlanName": {
            "template": "${EdgeDeploymentPlanName}"
          }
        }
      }
    ],
    "describe-edge-packaging-job": [
      {
        "action": "sagemaker:DescribeEdgePackagingJob",
        "resource_mappings": {
          "EdgePackagingJobName": {
            "template": "${EdgePackagingJobName}"
          }
        }
      }
    ],
    "describe-endpoint": [
      {
        "action": "sagemaker:DescribeEndpoint",
        "resource_mappings": {
          "EndpointName": {
            "template": "${EndpointName}"
          }
        }
      }
    ],
    "describe-endpoint-config": [
      {
        "action": "sagemaker:DescribeEndpointConfig",
        "resource_mappings": {
          "EndpointConfigName": {
            "template": "${EndpointConfigName}"
          }
        }
      }
    ],
    "describe-experiment": [
      {
        "action": "sagemaker:DescribeExperiment",
        "resource_mappings": {
          "ExperimentName": {
            "template": "${ExperimentName}"
          }
        }
      }
    ],
    "describe-feature-group": [
      {
        "action": "sagemaker:DescribeFeatureGroup",
        "resource_mappings": {
          "FeatureGroupName": {
            "template": "${FeatureGroupName}"
          }
        }
      }
    ],
    "describe-feature-metadata": [
      {
        "action": "sagemaker:DescribeFeatureMetadata",
        "resource_mappings": {
          "FeatureGroupName": {
            "template": "${FeatureGroupName}"
          }
        }
      }
    ],
    "describe-flow-definition": [
      {
        "action": "sagemaker:DescribeFlowDefinition",
        "resource_mappings": {
          "FlowDefinitionName": {
            "template": "${FlowDefinitionName}"
          }
        }
      }
    ],
    "describe-hub": [
      {
        "action": "sagemaker:DescribeHub",
        "resource_mappings": {
          "HubName": {
            "template": "${HubName}"
          }
        }
      }
    ],
    "describe-hub-content": [
      {
        "action": "sagemaker:DescribeHubContent",
        "resource_mappings": {
          "HubName": {
            "template": "${HubName}"
          },
          "HubContentType": {
            "template": "${HubContentType}"
          },
          "HubContentName": {
            "template": "${HubContentName}"
          }
        }
      }
    ],
    "describe-human-task-ui": [
      {
        "action": "sagemaker:DescribeHumanTaskUi",
        "resource_mappings": {
          "HumanTaskUiName": {
            "template": "${HumanTaskUiName}"
          }
        }
      }
    ],
    "describe-hyper-parameter-tuning-job": [
      {
        "action": "sagemaker:DescribeHyperParameterTuningJob",
        "resource_mappings": {
          "HyperParameterTuningJobName": {
            "template": "${HyperParameterTuningJobName}"
          }
        }
      }
    ],
    "describe-image": [
      {
        "action": "sagemaker:DescribeImage",
        "resource_mappings": {
          "ImageName": {
            "template": "${ImageName}"
          }
        }
      }
    ],
    "describe-image-version": [
      {
        "action": "sagemaker:DescribeImageVersion",
        "resource_mappings": {
          "ImageName": {
            "template": "${ImageName}"
          },
          "Version": {
            "template": "${Version}"
          }
        }
      }
    ],
    "describe-inference-experiment": [
      {
        "action": "sagemaker:DescribeInferenceExperiment",
        "resource_mappings": {
          "InferenceExperimentName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "describe-inference-recommendations-job": [
      {
        "action": "sagemaker:DescribeInferenceRecommendationsJob",
        "resource_mappings": {
          "InferenceRecommendationsJobName": {
            "template": "${JobName}"
          }
        }
      }
    ],
    "describe-labeling-job": [
      {
        "action": "sagemaker:DescribeLabelingJob",
        "resource_mappings": {
          "LabelingJobName": {
            "template": "${LabelingJobName}"
          }
        }
      }
    ],
    "describe-lineage-group": [
      {
        "action": "sagemaker:DescribeLineageGroup",
        "resource_mappings": {}
      }
    ],
    "describe-model": [
      {
        "action": "sagemaker:DescribeModel",
        "resource_mappings": {
          "ModelName": {
            "template": "${ModelName}"
          }
        }
      }
    ],
    "describe-model-bias-job-definition": [
      {
        "action": "sagemaker:DescribeModelBiasJobDefinition",
        "resource_mappings": {
          "ModelBiasJobDefinitionName": {
            "template": "${JobDefinitionName}"
          }
        }
      }
    ],
    "describe-model-card": [
      {
        "action": "sagemaker:DescribeModelCard",
        "resource_mappings": {
          "ModelCardName": {
            "template": "${ModelCardName}"
          }
        }
      }
    ],
    "describe-model-card-export-job": [
      {
        "action": "sagemaker:DescribeModelCardExportJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "model-card-export-job": "${ModelCardExportJobArn}"
        }
      }
    ],
    "describe-model-explainability-job-definition": [
      {
        "action": "sagemaker:DescribeModelExplainabilityJobDefinition",
        "resource_mappings": {
          "ModelExplainabilityJobDefinitionName": {
            "template": "${JobDefinitionName}"
          }
        }
      }
    ],
    "describe-model-package": [
      {
        "action": "sagemaker:DescribeModelPackage",
        "resource_mappings": {
          "ModelPackageName": {
            "template": "${ModelPackageName}"
          }
        }
      }
    ],
    "describe-model-package-group": [
      {
        "action": "sagemaker:DescribeModelPackageGroup",
        "resource_mappings": {
          "ModelPackageGroupName": {
            "template": "${ModelPackageGroupName}"
          }
        }
      }
    ],
    "describe-model-quality-job-definition": [
      {
        "action": "sagemaker:DescribeModelQualityJobDefinition",
        "resource_mappings": {
          "ModelQualityJobDefinitionName": {
            "template": "${JobDefinitionName}"
          }
        }
      }
    ],
    "describe-monitoring-schedule": [
      {
        "action": "sagemaker:DescribeMonitoringSchedule",
        "resource_mappings": {
          "MonitoringScheduleName": {
            "template": "${MonitoringScheduleName}"
          }
        }
      }
    ],
    "describe-notebook-instance": [
      {
        "action": "sagemaker:DescribeNotebookInstance",
        "resource_mappings": {
          "NotebookInstanceName": {
            "template": "${NotebookInstanceName}"
          }
        }
      }
    ],
    "describe-notebook-instance-lifecycle-config": [
      {
        "action": "sagemaker:DescribeNotebookInstanceLifecycleConfig",
        "resource_mappings": {
          "NotebookInstanceLifecycleConfigName": {
            "template": "${NotebookInstanceLifecycleConfigName}"
          }
        }
      }
    ],
    "describe-pipeline": [
      {
        "action": "sagemaker:DescribePipeline",
        "resource_mappings": {
          "PipelineName": {
            "template": "${PipelineName}"
          }
        }
      }
    ],
    "describe-pipeline-definition-for-execution": [
      {
        "action": "sagemaker:DescribePipelineDefinitionForExecution",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "pipeline-execution": "${PipelineExecutionArn}"
        }
      }
    ],
    "describe-pipeline-execution": [
      {
        "action": "sagemaker:DescribePipelineExecution",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "pipeline-execution": "${PipelineExecutionArn}"
        }
      }
    ],
    "describe-processing-job": [
      {
        "action": "sagemaker:DescribeProcessingJob",
        "resource_mappings": {
          "ProcessingJobName": {
            "template": "${ProcessingJobName}"
          }
        }
      }
    ],
    "describe-project": [
      {
        "action": "sagemaker:DescribeProject",
        "resource_mappings": {
          "ProjectName": {
            "template": "${ProjectName}"
          }
        }
      }
    ],
    "describe-space": [
      {
        "action": "sagemaker:DescribeSpace",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          },
          "SpaceName": {
            "template": "${SpaceName}"
          }
        }
      }
    ],
    "describe-studio-lifecycle-config": [
      {
        "action": "sagemaker:DescribeStudioLifecycleConfig",
        "resource_mappings": {
          "StudioLifecycleConfigName": {
            "template": "${StudioLifecycleConfigName}"
          }
        }
      }
    ],
    "describe-subscribed-workteam": [
      {
        "action": "sagemaker:DescribeSubscribedWorkteam",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "workteam": "${WorkteamArn}"
        }
      }
    ],
    "describe-training-job": [
      {
        "action": "sagemaker:DescribeTrainingJob",
        "resource_mappings": {
          "TrainingJobName": {
            "template": "${TrainingJobName}"
          }
        }
      }
    ],
    "describe-transform-job": [
      {
        "action": "sagemaker:DescribeTransformJob",
        "resource_mappings": {
          "TransformJobName": {
            "template": "${TransformJobName}"
          }
        }
      }
    ],
    "describe-trial": [
      {
        "action": "sagemaker:DescribeTrial",
        "resource_mappings": {
          "TrialName": {
            "template": "${TrialName}"
          }
        }
      }
    ],
    "describe-trial-component": [
      {
        "action": "sagemaker:DescribeTrialComponent",
        "resource_mappings": {
          "TrialComponentName": {
            "template": "${TrialComponentName}"
          }
        }
      }
    ],
    "describe-user-profile": [
      {
        "action": "sagemaker:DescribeUserProfile",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          },
          "UserProfileName": {
            "template": "${UserProfileName}"
          }
        }
      }
    ],
    "describe-workforce": [
      {
        "action": "sagemaker:DescribeWorkforce",
        "resource_mappings": {
          "WorkforceName": {
            "template": "${WorkforceName}"
          }
        }
      }
    ],
    "describe-workteam": [
      {
        "action": "sagemaker:DescribeWorkteam",
        "resource_mappings": {
          "WorkteamName": {
            "template": "${WorkteamName}"
          }
        }
      }
    ],
    "disable-sagemaker-servicecatalog-portfolio": [
      {
        "action": "sagemaker:DisableSagemakerServicecatalogPortfolio",
        "resource_mappings": {}
      }
    ],
    "disassociate-trial-component": [
      {
        "action": "sagemaker:DisassociateTrialComponent",
        "resource_mappings": {
          "TrialName": {
            "template": "${TrialName}"
          },
          "TrialComponentName": {
            "template": "${TrialComponentName}"
          },
          "ProcessingJobName": {
            "template": "*"
          }
        }
      }
    ],
    "enable-sagemaker-servicecatalog-portfolio": [
      {
        "action": "sagemaker:EnableSagemakerServicecatalogPortfolio",
        "resource_mappings": {}
      }
    ],
    "get-device-fleet-report": [
      {
        "action": "sagemaker:GetDeviceFleetReport",
        "resource_mappings": {
          "DeviceFleetName": {
            "template": "${DeviceFleetName}"
          }
        }
      }
    ],
    "get-lineage-group-policy": [
      {
        "action": "sagemaker:GetLineageGroupPolicy",
        "resource_mappings": {}
      }
    ],
    "get-model-package-group-policy": [
      {
        "action": "sagemaker:GetModelPackageGroupPolicy",
        "resource_mappings": {
          "ModelPackageGroupName": {
            "template": "${ModelPackageGroupName}"
          }
        }
      }
    ],
    "get-sagemaker-servicecatalog-portfolio-status": [
      {
        "action": "sagemaker:GetSagemakerServicecatalogPortfolioStatus",
        "resource_mappings": {}
      }
    ],
    "get-scaling-configuration-recommendation": [
      {
        "action": "sagemaker:GetScalingConfigurationRecommendation",
        "resource_mappings": {
          "InferenceRecommendationsJobName": {
            "template": "${InferenceRecommendationsJobName}"
          }
        }
      }
    ],
    "get-search-suggestions": [
      {
        "action": "sagemaker:GetSearchSuggestions",
        "resource_mappings": {}
      }
    ],
    "import-hub-content": [
      {
        "action": "sagemaker:ImportHubContent",
        "resource_mappings": {
          "HubName": {
            "template": "${HubName}"
          },
          "HubContentType": {
            "template": "${HubContentType}"
          },
          "HubContentName": {
            "template": "${HubContentName}"
          }
        }
      },
      {
        "action": "sagemaker:AddTags",
        "resource_mappings": {
          "ActionName": {
            "template": "*"
          },
          "AlgorithmName": {
            "template": "*"
          },
          "DomainId": {
            "template": "*"
          },
          "UserProfileName": {
            "template": "*"
          },
          "AppType": {
            "template": "*"
          },
          "AppName": {
            "template": "*"
          },
          "AppImageConfigName": {
            "template": "*"
          },
          "HashOfArtifactSource": {
            "template": "*"
          },
          "AutoMLJobJobName": {
            "template": "*"
          },
          "CodeRepositoryName": {
            "template": "*"
          },
          "CompilationJobName": {
            "template": "*"
          },
          "ContextName": {
            "template": "*"
          },
          "DataQualityJobDefinitionName": {
            "template": "*"
          },
          "DeviceFleetName": {
            "template": "*"
          },
          "DeviceName": {
            "template": "*"
          },
          "EdgeDeploymentPlanName": {
            "template": "*"
          },
          "EdgePackagingJobName": {
            "template": "*"
          },
          "EndpointName": {
            "template": "*"
          },
          "EndpointConfigName": {
            "template": "*"
          },
          "ExperimentName": {
            "template": "*"
          },
          "TrialName": {
            "template": "*"
          },
          "TrialComponentName": {
            "template": "*"
          },
          "FeatureGroupName": {
            "template": "*"
          },
          "FlowDefinitionName": {
            "template": "*"
          },
          "HumanTaskUiName": {
            "template": "*"
          },
          "HyperParameterTuningJobName": {
            "template": "*"
          },
          "ImageName": {
            "template": "*"
          },
          "InferenceRecommendationsJobName": {
            "template": "*"
          },
          "LabelingJobName": {
            "template": "*"
          },
          "ModelName": {
            "template": "*"
          },
          "ModelBiasJobDefinitionName": {
            "template": "*"
          },
          "ModelCardName": {
            "template": "*"
          },
          "ModelExplainabilityJobDefinitionName": {
            "template": "*"
          },
          "ModelPackageName": {
            "template": "*"
          },
          "ModelPackageGroupName": {
            "template": "*"
          },
          "ModelQualityJobDefinitionName": {
            "template": "*"
          },
          "MonitoringScheduleName": {
            "template": "*"
          },
          "NotebookInstanceName": {
            "template": "*"
          },
          "PipelineName": {
            "template": "*"
          },
          "ProcessingJobName": {
            "template": "*"
          },
          "ProjectName": {
            "template": "*"
          },
          "StudioLifecycleConfigName": {
            "template": "*"
          },
          "TrainingJobName": {
            "template": "*"
          },
          "TransformJobName": {
            "template": "*"
          },
          "WorkteamName": {
            "template": "*"
          }
        }
      }
    ],
    "list-actions": [
      {
        "action": "sagemaker:ListActions",
        "resource_mappings": {}
      }
    ],
    "list-algorithms": [
      {
        "action": "sagemaker:ListAlgorithms",
        "resource_mappings": {}
      }
    ],
    "list-aliases": [
      {
        "action": "sagemaker:ListAliases",
        "resource_mappings": {
          "ImageName": {
            "template": "${ImageName}"
          },
          "Version": {
            "template": "${Version}"
          }
        }
      }
    ],
    "list-app-image-configs": [
      {
        "action": "sagemaker:ListAppImageConfigs",
        "resource_mappings": {}
      }
    ],
    "list-apps": [
      {
        "action": "sagemaker:ListApps",
        "resource_mappings": {}
      }
    ],
    "list-artifacts": [
      {
        "action": "sagemaker:ListArtifacts",
        "resource_mappings": {}
      }
    ],
    "list-associations": [
      {
        "action": "sagemaker:ListAssociations",
        "resource_mappings": {}
      }
    ],
    "list-auto-ml-jobs": [
      {
        "action": "sagemaker:ListAutoMLJobs",
        "resource_mappings": {}
      }
    ],
    "list-candidates-for-auto-ml-job": [
      {
        "action": "sagemaker:ListCandidatesForAutoMLJob",
        "resource_mappings": {}
      }
    ],
    "list-code-repositories": [
      {
        "action": "sagemaker:ListCodeRepositories",
        "resource_mappings": {}
      }
    ],
    "list-compilation-jobs": [
      {
        "action": "sagemaker:ListCompilationJobs",
        "resource_mappings": {}
      }
    ],
    "list-contexts": [
      {
        "action": "sagemaker:ListContexts",
        "resource_mappings": {}
      }
    ],
    "list-data-quality-job-definitions": [
      {
        "action": "sagemaker:ListDataQualityJobDefinitions",
        "resource_mappings": {}
      }
    ],
    "list-device-fleets": [
      {
        "action": "sagemaker:ListDeviceFleets",
        "resource_mappings": {}
      }
    ],
    "list-devices": [
      {
        "action": "sagemaker:ListDevices",
        "resource_mappings": {}
      }
    ],
    "list-domains": [
      {
        "action": "sagemaker:ListDomains",
        "resource_mappings": {}
      }
    ],
    "list-edge-deployment-plans": [
      {
        "action": "sagemaker:ListEdgeDeploymentPlans",
        "resource_mappings": {}
      }
    ],
    "list-edge-packaging-jobs": [
      {
        "action": "sagemaker:ListEdgePackagingJobs",
        "resource_mappings": {}
      }
    ],
    "list-endpoint-configs": [
      {
        "action": "sagemaker:ListEndpointConfigs",
        "resource_mappings": {}
      }
    ],
    "list-endpoints": [
      {
        "action": "sagemaker:ListEndpoints",
        "resource_mappings": {}
      }
    ],
    "list-experiments": [
      {
        "action": "sagemaker:ListExperiments",
        "resource_mappings": {}
      }
    ],
    "list-feature-groups": [
      {
        "action": "sagemaker:ListFeatureGroups",
        "resource_mappings": {}
      }
    ],
    "list-flow-definitions": [
      {
        "action": "sagemaker:ListFlowDefinitions",
        "resource_mappings": {}
      }
    ],
    "list-hub-content-versions": [
      {
        "action": "sagemaker:ListHubContentVersions",
        "resource_mappings": {
          "HubName": {
            "template": "${HubName}"
          },
          "HubContentType": {
            "template": "${HubContentType}"
          },
          "HubContentName": {
            "template": "${HubContentName}"
          }
        }
      }
    ],
    "list-hub-contents": [
      {
        "action": "sagemaker:ListHubContents",
        "resource_mappings": {
          "HubName": {
            "template": "${HubName}"
          }
        }
      }
    ],
    "list-hubs": [
      {
        "action": "sagemaker:ListHubs",
        "resource_mappings": {}
      }
    ],
    "list-human-task-uis": [
      {
        "action": "sagemaker:ListHumanTaskUis",
        "resource_mappings": {}
      }
    ],
    "list-hyper-parameter-tuning-jobs": [
      {
        "action": "sagemaker:ListHyperParameterTuningJobs",
        "resource_mappings": {}
      }
    ],
    "list-image-versions": [
      {
        "action": "sagemaker:ListImageVersions",
        "resource_mappings": {
          "ImageName": {
            "template": "${ImageName}"
          }
        }
      }
    ],
    "list-images": [
      {
        "action": "sagemaker:ListImages",
        "resource_mappings": {}
      }
    ],
    "list-inference-experiments": [
      {
        "action": "sagemaker:ListInferenceExperiments",
        "resource_mappings": {}
      }
    ],
    "list-inference-recommendations-job-steps": [
      {
        "action": "sagemaker:ListInferenceRecommendationsJobSteps",
        "resource_mappings": {}
      }
    ],
    "list-inference-recommendations-jobs": [
      {
        "action": "sagemaker:ListInferenceRecommendationsJobs",
        "resource_mappings": {}
      }
    ],
    "list-labeling-jobs": [
      {
        "action": "sagemaker:ListLabelingJobs",
        "resource_mappings": {}
      }
    ],
    "list-labeling-jobs-for-workteam": [
      {
        "action": "sagemaker:ListLabelingJobsForWorkteam",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "workteam": "${WorkteamArn}"
        }
      }
    ],
    "list-lineage-groups": [
      {
        "action": "sagemaker:ListLineageGroups",
        "resource_mappings": {}
      }
    ],
    "list-model-bias-job-definitions": [
      {
        "action": "sagemaker:ListModelBiasJobDefinitions",
        "resource_mappings": {}
      }
    ],
    "list-model-card-export-jobs": [
      {
        "action": "sagemaker:ListModelCardExportJobs",
        "resource_mappings": {
          "ModelCardName": {
            "template": "${ModelCardName}"
          }
        }
      }
    ],
    "list-model-card-versions": [
      {
        "action": "sagemaker:ListModelCardVersions",
        "resource_mappings": {
          "ModelCardName": {
            "template": "${ModelCardName}"
          }
        }
      }
    ],
    "list-model-cards": [
      {
        "action": "sagemaker:ListModelCards",
        "resource_mappings": {}
      }
    ],
    "list-model-explainability-job-definitions": [
      {
        "action": "sagemaker:ListModelExplainabilityJobDefinitions",
        "resource_mappings": {}
      }
    ],
    "list-model-metadata": [
      {
        "action": "sagemaker:ListModelMetadata",
        "resource_mappings": {}
      }
    ],
    "list-model-package-groups": [
      {
        "action": "sagemaker:ListModelPackageGroups",
        "resource_mappings": {}
      }
    ],
    "list-model-packages": [
      {
        "action": "sagemaker:ListModelPackages",
        "resource_mappings": {}
      }
    ],
    "list-model-quality-job-definitions": [
      {
        "action": "sagemaker:ListModelQualityJobDefinitions",
        "resource_mappings": {}
      }
    ],
    "list-models": [
      {
        "action": "sagemaker:ListModels",
        "resource_mappings": {}
      }
    ],
    "list-monitoring-alert-history": [
      {
        "action": "sagemaker:ListMonitoringAlertHistory",
        "resource_mappings": {}
      }
    ],
    "list-monitoring-alerts": [
      {
        "action": "sagemaker:ListMonitoringAlerts",
        "resource_mappings": {}
      }
    ],
    "list-monitoring-executions": [
      {
        "action": "sagemaker:ListMonitoringExecutions",
        "resource_mappings": {}
      }
    ],
    "list-monitoring-schedules": [
      {
        "action": "sagemaker:ListMonitoringSchedules",
        "resource_mappings": {}
      }
    ],
    "list-notebook-instance-lifecycle-configs": [
      {
        "action": "sagemaker:ListNotebookInstanceLifecycleConfigs",
        "resource_mappings": {}
      }
    ],
    "list-notebook-instances": [
      {
        "action": "sagemaker:ListNotebookInstances",
        "resource_mappings": {}
      }
    ],
    "list-pipeline-execution-steps": [
      {
        "action": "sagemaker:ListPipelineExecutionSteps",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "pipeline-execution": "${PipelineExecutionArn}"
        }
      }
    ],
    "list-pipeline-executions": [
      {
        "action": "sagemaker:ListPipelineExecutions",
        "resource_mappings": {
          "PipelineName": {
            "template": "${PipelineName}"
          }
        }
      }
    ],
    "list-pipeline-parameters-for-execution": [
      {
        "action": "sagemaker:ListPipelineParametersForExecution",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "pipeline-execution": "${PipelineExecutionArn}"
        }
      }
    ],
    "list-pipelines": [
      {
        "action": "sagemaker:ListPipelines",
        "resource_mappings": {}
      }
    ],
    "list-processing-jobs": [
      {
        "action": "sagemaker:ListProcessingJobs",
        "resource_mappings": {}
      }
    ],
    "list-projects": [
      {
        "action": "sagemaker:ListProjects",
        "resource_mappings": {}
      }
    ],
    "list-resource-catalogs": [
      {
        "action": "sagemaker:ListResourceCatalogs",
        "resource_mappings": {}
      }
    ],
    "list-spaces": [
      {
        "action": "sagemaker:ListSpaces",
        "resource_mappings": {}
      }
    ],
    "list-stage-devices": [
      {
        "action": "sagemaker:ListStageDevices",
        "resource_mappings": {}
      }
    ],
    "list-studio-lifecycle-configs": [
      {
        "action": "sagemaker:ListStudioLifecycleConfigs",
        "resource_mappings": {}
      }
    ],
    "list-subscribed-workteams": [
      {
        "action": "sagemaker:ListSubscribedWorkteams",
        "resource_mappings": {}
      }
    ],
    "list-tags": [
      {
        "action": "sagemaker:ListTags",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "action": "%%iftemplatematch%${ResourceArn}%%",
          "algorithm": "%%iftemplatematch%${ResourceArn}%%",
          "app": "%%iftemplatematch%${ResourceArn}%%",
          "app-image-config": "%%iftemplatematch%${ResourceArn}%%",
          "artifact": "%%iftemplatematch%${ResourceArn}%%",
          "automl-job": "%%iftemplatematch%${ResourceArn}%%",
          "code-repository": "%%iftemplatematch%${ResourceArn}%%",
          "context": "%%iftemplatematch%${ResourceArn}%%",
          "data-quality-job-definition": "%%iftemplatematch%${ResourceArn}%%",
          "device": "%%iftemplatematch%${ResourceArn}%%",
          "device-fleet": "%%iftemplatematch%${ResourceArn}%%",
          "domain": "%%iftemplatematch%${ResourceArn}%%",
          "edge-packaging-job": "%%iftemplatematch%${ResourceArn}%%",
          "endpoint": "%%iftemplatematch%${ResourceArn}%%",
          "endpoint-config": "%%iftemplatematch%${ResourceArn}%%",
          "experiment": "%%iftemplatematch%${ResourceArn}%%",
          "experiment-trial": "%%iftemplatematch%${ResourceArn}%%",
          "experiment-trial-component": "%%iftemplatematch%${ResourceArn}%%",
          "feature-group": "%%iftemplatematch%${ResourceArn}%%",
          "flow-definition": "%%iftemplatematch%${ResourceArn}%%",
          "human-task-ui": "%%iftemplatematch%${ResourceArn}%%",
          "hyper-parameter-tuning-job": "%%iftemplatematch%${ResourceArn}%%",
          "image": "%%iftemplatematch%${ResourceArn}%%",
          "labeling-job": "%%iftemplatematch%${ResourceArn}%%",
          "model": "%%iftemplatematch%${ResourceArn}%%",
          "model-bias-job-definition": "%%iftemplatematch%${ResourceArn}%%",
          "model-explainability-job-definition": "%%iftemplatematch%${ResourceArn}%%",
          "model-package": "%%iftemplatematch%${ResourceArn}%%",
          "model-package-group": "%%iftemplatematch%${ResourceArn}%%",
          "model-quality-job-definition": "%%iftemplatematch%${ResourceArn}%%",
          "monitoring-schedule": "%%iftemplatematch%${ResourceArn}%%",
          "notebook-instance": "%%iftemplatematch%${ResourceArn}%%",
          "pipeline": "%%iftemplatematch%${ResourceArn}%%",
          "project": "%%iftemplatematch%${ResourceArn}%%",
          "training-job": "%%iftemplatematch%${ResourceArn}%%",
          "transform-job": "%%iftemplatematch%${ResourceArn}%%",
          "user-profile": "%%iftemplatematch%${ResourceArn}%%",
          "workteam": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "list-training-jobs": [
      {
        "action": "sagemaker:ListTrainingJobs",
        "resource_mappings": {}
      }
    ],
    "list-training-jobs-for-hyper-parameter-tuning-job": [
      {
        "action": "sagemaker:ListTrainingJobsForHyperParameterTuningJob",
        "resource_mappings": {
          "HyperParameterTuningJobName": {
            "template": "${HyperParameterTuningJobName}"
          }
        }
      }
    ],
    "list-transform-jobs": [
      {
        "action": "sagemaker:ListTransformJobs",
        "resource_mappings": {}
      }
    ],
    "list-trial-components": [
      {
        "action": "sagemaker:ListTrialComponents",
        "resource_mappings": {}
      }
    ],
    "list-trials": [
      {
        "action": "sagemaker:ListTrials",
        "resource_mappings": {}
      }
    ],
    "list-user-profiles": [
      {
        "action": "sagemaker:ListUserProfiles",
        "resource_mappings": {}
      }
    ],
    "list-workforces": [
      {
        "action": "sagemaker:ListWorkforces",
        "resource_mappings": {}
      }
    ],
    "list-workteams": [
      {
        "action": "sagemaker:ListWorkteams",
        "resource_mappings": {}
      }
    ],
    "put-model-package-group-policy": [
      {
        "action": "sagemaker:PutModelPackageGroupPolicy",
        "resource_mappings": {
          "ModelPackageGroupName": {
            "template": "${ModelPackageGroupName}"
          }
        }
      }
    ],
    "query-lineage": [
      {
        "action": "sagemaker:QueryLineage",
        "resource_mappings": {}
      }
    ],
    "register-devices": [
      {
        "action": "sagemaker:RegisterDevices",
        "resource_mappings": {
          "DeviceFleetName": {
            "template": "${DeviceFleetName}"
          },
          "DeviceName": {
            "template": "${Devices[].DeviceName}"
          }
        }
      }
    ],
    "render-ui-template": [
      {
        "action": "sagemaker:RenderUiTemplate",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "retry-pipeline-execution": [
      {
        "action": "sagemaker:RetryPipelineExecution",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "pipeline-execution": "${PipelineExecutionArn}"
        }
      }
    ],
    "search": [
      {
        "action": "sagemaker:Search",
        "resource_mappings": {}
      }
    ],
    "send-pipeline-execution-step-failure": [
      {
        "action": "sagemaker:SendPipelineExecutionStepFailure",
        "resource_mappings": {
          "PipelineName": {
            "template": "*"
          },
          "RandomString": {
            "template": "*"
          }
        }
      }
    ],
    "send-pipeline-execution-step-success": [
      {
        "action": "sagemaker:SendPipelineExecutionStepSuccess",
        "resource_mappings": {
          "PipelineName": {
            "template": "*"
          },
          "RandomString": {
            "template": "*"
          }
        }
      }
    ],
    "start-edge-deployment-stage": [
      {
        "action": "sagemaker:StartEdgeDeploymentStage",
        "resource_mappings": {
          "EdgeDeploymentPlanName": {
            "template": "${EdgeDeploymentPlanName}"
          }
        }
      }
    ],
    "start-inference-experiment": [
      {
        "action": "sagemaker:StartInferenceExperiment",
        "resource_mappings": {
          "InferenceExperimentName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "start-monitoring-schedule": [
      {
        "action": "sagemaker:StartMonitoringSchedule",
        "resource_mappings": {
          "MonitoringScheduleName": {
            "template": "${MonitoringScheduleName}"
          }
        }
      }
    ],
    "start-notebook-instance": [
      {
        "action": "sagemaker:StartNotebookInstance",
        "resource_mappings": {
          "NotebookInstanceName": {
            "template": "${NotebookInstanceName}"
          }
        }
      }
    ],
    "start-pipeline-execution": [
      {
        "action": "sagemaker:StartPipelineExecution",
        "resource_mappings": {
          "PipelineName": {
            "template": "${PipelineName}"
          }
        }
      }
    ],
    "stop-auto-ml-job": [
      {
        "action": "sagemaker:StopAutoMLJob",
        "resource_mappings": {
          "AutoMLJobJobName": {
            "template": "${AutoMLJobName}"
          }
        }
      }
    ],
    "stop-compilation-job": [
      {
        "action": "sagemaker:StopCompilationJob",
        "resource_mappings": {
          "CompilationJobName": {
            "template": "${CompilationJobName}"
          }
        }
      }
    ],
    "stop-edge-deployment-stage": [
      {
        "action": "sagemaker:StopEdgeDeploymentStage",
        "resource_mappings": {
          "EdgeDeploymentPlanName": {
            "template": "${EdgeDeploymentPlanName}"
          }
        }
      }
    ],
    "stop-edge-packaging-job": [
      {
        "action": "sagemaker:StopEdgePackagingJob",
        "resource_mappings": {
          "EdgePackagingJobName": {
            "template": "${EdgePackagingJobName}"
          }
        }
      }
    ],
    "stop-hyper-parameter-tuning-job": [
      {
        "action": "sagemaker:StopHyperParameterTuningJob",
        "resource_mappings": {
          "HyperParameterTuningJobName": {
            "template": "${HyperParameterTuningJobName}"
          }
        }
      }
    ],
    "stop-inference-experiment": [
      {
        "action": "sagemaker:StopInferenceExperiment",
        "resource_mappings": {
          "InferenceExperimentName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "stop-inference-recommendations-job": [
      {
        "action": "sagemaker:StopInferenceRecommendationsJob",
        "resource_mappings": {
          "InferenceRecommendationsJobName": {
            "template": "${JobName}"
          }
        }
      }
    ],
    "stop-labeling-job": [
      {
        "action": "sagemaker:StopLabelingJob",
        "resource_mappings": {
          "LabelingJobName": {
            "template": "${LabelingJobName}"
          }
        }
      }
    ],
    "stop-monitoring-schedule": [
      {
        "action": "sagemaker:StopMonitoringSchedule",
        "resource_mappings": {
          "MonitoringScheduleName": {
            "template": "${MonitoringScheduleName}"
          }
        }
      }
    ],
    "stop-notebook-instance": [
      {
        "action": "sagemaker:StopNotebookInstance",
        "resource_mappings": {
          "NotebookInstanceName": {
            "template": "${NotebookInstanceName}"
          }
        }
      }
    ],
    "stop-pipeline-execution": [
      {
        "action": "sagemaker:StopPipelineExecution",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "pipeline-execution": "${PipelineExecutionArn}"
        }
      }
    ],
    "stop-processing-job": [
      {
        "action": "sagemaker:StopProcessingJob",
        "resource_mappings": {
          "ProcessingJobName": {
            "template": "${ProcessingJobName}"
          }
        }
      }
    ],
    "stop-training-job": [
      {
        "action": "sagemaker:StopTrainingJob",
        "resource_mappings": {
          "TrainingJobName": {
            "template": "${TrainingJobName}"
          }
        }
      }
    ],
    "stop-transform-job": [
      {
        "action": "sagemaker:StopTransformJob",
        "resource_mappings": {
          "TransformJobName": {
            "template": "${TransformJobName}"
          }
        }
      }
    ],
    "update-action": [
      {
        "action": "sagemaker:UpdateAction",
        "resource_mappings": {
          "ActionName": {
            "template": "${ActionName}"
          }
        }
      }
    ],
    "update-app-image-config": [
      {
        "action": "sagemaker:UpdateAppImageConfig",
        "resource_mappings": {
          "AppImageConfigName": {
            "template": "${AppImageConfigName}"
          }
        }
      }
    ],
    "update-artifact": [
      {
        "action": "sagemaker:UpdateArtifact",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "artifact": "${ArtifactArn}"
        }
      }
    ],
    "update-code-repository": [
      {
        "action": "sagemaker:UpdateCodeRepository",
        "resource_mappings": {
          "CodeRepositoryName": {
            "template": "${CodeRepositoryName}"
          }
        }
      }
    ],
    "update-context": [
      {
        "action": "sagemaker:UpdateContext",
        "resource_mappings": {
          "ContextName": {
            "template": "${ContextName}"
          }
        }
      }
    ],
    "update-device-fleet": [
      {
        "action": "sagemaker:UpdateDeviceFleet",
        "resource_mappings": {
          "DeviceFleetName": {
            "template": "${DeviceFleetName}"
          }
        }
      }
    ],
    "update-devices": [
      {
        "action": "sagemaker:UpdateDevices",
        "resource_mappings": {
          "DeviceFleetName": {
            "template": "${DeviceFleetName}"
          },
          "DeviceName": {
            "template": "${Devices[].DeviceName}"
          }
        }
      }
    ],
    "update-domain": [
      {
        "action": "sagemaker:UpdateDomain",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${DefaultUserSettings.ExecutionRole}"
        }
      }
    ],
    "update-endpoint": [
      {
        "action": "sagemaker:UpdateEndpoint",
        "resource_mappings": {
          "EndpointName": {
            "template": "${EndpointName}"
          }
        }
      }
    ],
    "update-endpoint-weights-and-capacities": [
      {
        "action": "sagemaker:UpdateEndpointWeightsAndCapacities",
        "resource_mappings": {
          "EndpointName": {
            "template": "${EndpointName}"
          }
        }
      }
    ],
    "update-experiment": [
      {
        "action": "sagemaker:UpdateExperiment",
        "resource_mappings": {
          "ExperimentName": {
            "template": "${ExperimentName}"
          }
        }
      }
    ],
    "update-feature-group": [
      {
        "action": "sagemaker:UpdateFeatureGroup",
        "resource_mappings": {
          "FeatureGroupName": {
            "template": "${FeatureGroupName}"
          }
        }
      }
    ],
    "update-feature-metadata": [
      {
        "action": "sagemaker:UpdateFeatureMetadata",
        "resource_mappings": {
          "FeatureGroupName": {
            "template": "${FeatureGroupName}"
          }
        }
      }
    ],
    "update-hub": [
      {
        "action": "sagemaker:UpdateHub",
        "resource_mappings": {
          "HubName": {
            "template": "${HubName}"
          }
        }
      }
    ],
    "update-image": [
      {
        "action": "sagemaker:UpdateImage",
        "resource_mappings": {
          "ImageName": {
            "template": "${ImageName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${RoleArn}"
        }
      }
    ],
    "update-image-version": [
      {
        "action": "sagemaker:UpdateImageVersion",
        "resource_mappings": {
          "ImageName": {
            "template": "${ImageName}"
          },
          "Version": {
            "template": "${Version}"
          }
        }
      }
    ],
    "update-inference-experiment": [
      {
        "action": "sagemaker:UpdateInferenceExperiment",
        "resource_mappings": {
          "InferenceExperimentName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "update-model-card": [
      {
        "action": "sagemaker:UpdateModelCard",
        "resource_mappings": {
          "ModelCardName": {
            "template": "${ModelCardName}"
          }
        }
      }
    ],
    "update-model-package": [
      {
        "action": "sagemaker:UpdateModelPackage",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "model-package": "${ModelPackageArn}"
        }
      }
    ],
    "update-monitoring-alert": [
      {
        "action": "sagemaker:UpdateMonitoringAlert",
        "resource_mappings": {
          "MonitoringScheduleName": {
            "template": "${MonitoringScheduleName}"
          },
          "MonitoringScheduleAlertName": {
            "template": "${MonitoringAlertName}"
          }
        }
      }
    ],
    "update-monitoring-schedule": [
      {
        "action": "sagemaker:UpdateMonitoringSchedule",
        "resource_mappings": {
          "MonitoringScheduleName": {
            "template": "${MonitoringScheduleName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${MonitoringScheduleConfig.MonitoringJobDefinition.RoleArn}"
        }
      }
    ],
    "update-notebook-instance": [
      {
        "action": "sagemaker:UpdateNotebookInstance",
        "resource_mappings": {
          "NotebookInstanceName": {
            "template": "${NotebookInstanceName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "update-notebook-instance-lifecycle-config": [
      {
        "action": "sagemaker:UpdateNotebookInstanceLifecycleConfig",
        "resource_mappings": {
          "NotebookInstanceLifecycleConfigName": {
            "template": "${NotebookInstanceLifecycleConfigName}"
          }
        }
      }
    ],
    "update-pipeline": [
      {
        "action": "sagemaker:UpdatePipeline",
        "resource_mappings": {
          "PipelineName": {
            "template": "${PipelineName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${RoleArn}"
        }
      }
    ],
    "update-pipeline-execution": [
      {
        "action": "sagemaker:UpdatePipelineExecution",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "pipeline-execution": "${PipelineExecutionArn}"
        }
      }
    ],
    "update-project": [
      {
        "action": "sagemaker:UpdateProject",
        "resource_mappings": {
          "ProjectName": {
            "template": "${ProjectName}"
          }
        }
      }
    ],
    "update-space": [
      {
        "action": "sagemaker:UpdateSpace",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          },
          "SpaceName": {
            "template": "${SpaceName}"
          }
        }
      }
    ],
    "update-training-job": [
      {
        "action": "sagemaker:UpdateTrainingJob",
        "resource_mappings": {
          "TrainingJobName": {
            "template": "${TrainingJobName}"
          }
        }
      }
    ],
    "update-trial": [
      {
        "action": "sagemaker:UpdateTrial",
        "resource_mappings": {
          "TrialName": {
            "template": "${TrialName}"
          }
        }
      }
    ],
    "update-trial-component": [
      {
        "action": "sagemaker:UpdateTrialComponent",
        "resource_mappings": {
          "TrialComponentName": {
            "template": "${TrialComponentName}"
          }
        }
      }
    ],
    "update-user-profile": [
      {
        "action": "sagemaker:UpdateUserProfile",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          },
          "UserProfileName": {
            "template": "${UserProfileName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${UserSettings.ExecutionRole}"
        }
      }
    ],
    "update-workforce": [
      {
        "action": "sagemaker:UpdateWorkforce",
        "resource_mappings": {
          "WorkforceName": {
            "template": "${WorkforceName}"
          }
        }
      }
    ],
    "update-workteam": [
      {
        "action": "sagemaker:UpdateWorkteam",
        "resource_mappings": {
          "WorkteamName": {
            "template": "${WorkteamName}"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "sagemaker:DescribeEndpoint",
        "resource_mappings": {
          "EndpointName": {
            "template": "${EndpointName}"
          }
        }
      }
    ]
  },
  "sagemaker-a2i-runtime": {
    "delete-human-loop": [
      {
        "action": "sagemaker:DeleteHumanLoop",
        "resource_mappings": {
          "HumanLoopName": {
            "template": "${HumanLoopName}"
          }
        }
      }
    ],
    "describe-human-loop": [
      {
        "action": "sagemaker:DescribeHumanLoop",
        "resource_mappings": {
          "HumanLoopName": {
            "template": "${HumanLoopName}"
          }
        }
      }
    ],
    "list-human-loops": [
      {
        "action": "sagemaker:ListHumanLoops",
        "resource_mappings": {}
      }
    ],
    "start-human-loop": [
      {
        "action": "sagemaker:StartHumanLoop",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "flow-definition": "${FlowDefinitionArn}"
        }
      }
    ],
    "stop-human-loop": [
      {
        "action": "sagemaker:StopHumanLoop",
        "resource_mappings": {
          "HumanLoopName": {
            "template": "${HumanLoopName}"
          }
        }
      }
    ]
  },
  "sagemaker-edge": {
    "get-deployments": [
      {
        "action": "sagemaker:GetDeployments",
        "resource_mappings": {
          "DeviceFleetName": {
            "template": "${DeviceFleetName}"
          },
          "DeviceName": {
            "template": "${DeviceName}"
          }
        }
      }
    ],
    "get-device-registration": [
      {
        "action": "sagemaker:GetDeviceRegistration",
        "resource_mappings": {
          "DeviceFleetName": {
            "template": "${DeviceFleetName}"
          },
          "DeviceName": {
            "template": "${DeviceName}"
          }
        }
      }
    ],
    "send-heartbeat": [
      {
        "action": "sagemaker:SendHeartbeat",
        "resource_mappings": {
          "DeviceFleetName": {
            "template": "${DeviceFleetName}"
          },
          "DeviceName": {
            "template": "${DeviceName}"
          }
        }
      }
    ]
  },
  "sagemaker-featurestore-runtime": {
    "batch-get-record": [
      {
        "action": "sagemaker:BatchGetRecord",
        "resource_mappings": {
          "FeatureGroupName": {
            "template": "${Identifiers[].FeatureGroupName}"
          }
        }
      }
    ],
    "delete-record": [
      {
        "action": "sagemaker:DeleteRecord",
        "resource_mappings": {
          "FeatureGroupName": {
            "template": "${FeatureGroupName}"
          }
        }
      }
    ],
    "get-record": [
      {
        "action": "sagemaker:GetRecord",
        "resource_mappings": {
          "FeatureGroupName": {
            "template": "${FeatureGroupName}"
          }
        }
      }
    ],
    "put-record": [
      {
        "action": "sagemaker:PutRecord",
        "resource_mappings": {
          "FeatureGroupName": {
            "template": "${FeatureGroupName}"
          }
        }
      }
    ]
  },
  "sagemaker-geospatial": {
    "delete-earth-observation-job": [
      {
        "action": "sagemaker-geospatial:DeleteEarthObservationJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "EarthObservationJob": "${Arn}"
        }
      }
    ],
    "delete-vector-enrichment-job": [
      {
        "action": "sagemaker-geospatial:DeleteVectorEnrichmentJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "VectorEnrichmentJob": "${Arn}"
        }
      }
    ],
    "export-earth-observation-job": [
      {
        "action": "sagemaker-geospatial:ExportEarthObservationJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "EarthObservationJob": "${Arn}"
        }
      }
    ],
    "export-vector-enrichment-job": [
      {
        "action": "sagemaker-geospatial:ExportVectorEnrichmentJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "VectorEnrichmentJob": "${Arn}"
        }
      }
    ],
    "get-earth-observation-job": [
      {
        "action": "sagemaker-geospatial:GetEarthObservationJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "EarthObservationJob": "${Arn}"
        }
      }
    ],
    "get-raster-data-collection": [
      {
        "action": "sagemaker-geospatial:GetRasterDataCollection",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "RasterDataCollection": "${Arn}"
        }
      }
    ],
    "get-tile": [
      {
        "action": "sagemaker-geospatial:GetTile",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "EarthObservationJob": "${Arn}"
        }
      }
    ],
    "get-vector-enrichment-job": [
      {
        "action": "sagemaker-geospatial:GetVectorEnrichmentJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "VectorEnrichmentJob": "${Arn}"
        }
      }
    ],
    "list-earth-observation-jobs": [
      {
        "action": "sagemaker-geospatial:ListEarthObservationJobs",
        "resource_mappings": {}
      }
    ],
    "list-raster-data-collections": [
      {
        "action": "sagemaker-geospatial:ListRasterDataCollections",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "sagemaker-geospatial:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "EarthObservationJob": "%%iftemplatematch%${ResourceArn}%%",
          "RasterDataCollection": "%%iftemplatematch%${ResourceArn}%%",
          "VectorEnrichmentJob": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "list-vector-enrichment-jobs": [
      {
        "action": "sagemaker-geospatial:ListVectorEnrichmentJobs",
        "resource_mappings": {}
      }
    ],
    "search-raster-data-collection": [
      {
        "action": "sagemaker-geospatial:SearchRasterDataCollection",
        "resource_mappings": {}
      }
    ],
    "start-earth-observation-job": [
      {
        "action": "sagemaker-geospatial:StartEarthObservationJob",
        "resource_mappings": {
          "JobID": {
            "template": "*"
          }
        }
      }
    ],
    "start-vector-enrichment-job": [
      {
        "action": "sagemaker-geospatial:StartVectorEnrichmentJob",
        "resource_mappings": {
          "JobID": {
            "template": "*"
          }
        }
      }
    ],
    "stop-earth-observation-job": [
      {
        "action": "sagemaker-geospatial:StopEarthObservationJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "EarthObservationJob": "${Arn}"
        }
      }
    ],
    "stop-vector-enrichment-job": [
      {
        "action": "sagemaker-geospatial:StopVectorEnrichmentJob",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "VectorEnrichmentJob": "${Arn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "sagemaker-geospatial:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "EarthObservationJob": "%%iftemplatematch%${ResourceArn}%%",
          "RasterDataCollection": "%%iftemplatematch%${ResourceArn}%%",
          "VectorEnrichmentJob": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "sagemaker-geospatial:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "EarthObservationJob": "%%iftemplatematch%${ResourceArn}%%",
          "RasterDataCollection": "%%iftemplatematch%${ResourceArn}%%",
          "VectorEnrichmentJob": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ]
  },
  "sagemaker-metrics": {
    "batch-put-metrics": [
      {
        "note": "NotFound",
        "action": "SageMaker Metrics:BatchPutMetrics",
        "resource_mappings": {}
      }
    ]
  },
  "sagemaker-runtime": {
    "invoke-endpoint": [
      {
        "action": "sagemaker:InvokeEndpoint",
        "resource_mappings": {
          "EndpointName": {
            "template": "${EndpointName}"
          }
        }
      }
    ],
    "invoke-endpoint-async": [
      {
        "action": "sagemaker:InvokeEndpointAsync",
        "resource_mappings": {
          "EndpointName": {
            "template": "${EndpointName}"
          }
        }
      }
    ]
  },
  "savingsplans": {
    "create-savings-plan": [
      {
        "action": "savingsplans:CreateSavingsPlan",
        "resource_mappings": {}
      }
    ],
    "delete-queued-savings-plan": [
      {
        "action": "savingsplans:DeleteQueuedSavingsPlan",
        "resource_mappings": {
          "ResourceId": {
            "template": "${savingsPlanId}"
          }
        }
      }
    ],
    "describe-savings-plan-rates": [
      {
        "action": "savingsplans:DescribeSavingsPlanRates",
        "resource_mappings": {
          "ResourceId": {
            "template": "${savingsPlanId}"
          }
        }
      }
    ],
    "describe-savings-plans": [
      {
        "action": "savingsplans:DescribeSavingsPlans",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "savingsplan": "${savingsPlanArns[]}"
        }
      }
    ],
    "describe-savings-plans-offering-rates": [
      {
        "action": "savingsplans:DescribeSavingsPlansOfferingRates",
        "resource_mappings": {}
      }
    ],
    "describe-savings-plans-offerings": [
      {
        "action": "savingsplans:DescribeSavingsPlansOfferings",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "savingsplans:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "savingsplan": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "savingsplans:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "savingsplan": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "savingsplans:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "savingsplan": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ]
  },
  "scheduler": {
    "create-schedule": [
      {
        "action": "scheduler:CreateSchedule",
        "resource_mappings": {
          "GroupName": {
            "template": "${GroupName}"
          },
          "ScheduleName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "create-schedule-group": [
      {
        "action": "scheduler:CreateScheduleGroup",
        "resource_mappings": {
          "GroupName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-schedule": [
      {
        "action": "scheduler:DeleteSchedule",
        "resource_mappings": {
          "GroupName": {
            "template": "${GroupName}"
          },
          "ScheduleName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-schedule-group": [
      {
        "action": "scheduler:DeleteScheduleGroup",
        "resource_mappings": {
          "GroupName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-schedule": [
      {
        "action": "scheduler:GetSchedule",
        "resource_mappings": {
          "GroupName": {
            "template": "${GroupName}"
          },
          "ScheduleName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-schedule-group": [
      {
        "action": "scheduler:GetScheduleGroup",
        "resource_mappings": {
          "GroupName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "list-schedule-groups": [
      {
        "action": "scheduler:ListScheduleGroups",
        "resource_mappings": {}
      }
    ],
    "list-schedules": [
      {
        "action": "scheduler:ListSchedules",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "scheduler:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "schedule-group": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "scheduler:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "schedule-group": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "scheduler:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "schedule-group": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-schedule": [
      {
        "action": "scheduler:UpdateSchedule",
        "resource_mappings": {
          "GroupName": {
            "template": "${GroupName}"
          },
          "ScheduleName": {
            "template": "${Name}"
          }
        }
      }
    ]
  },
  "schemas": {
    "create-discoverer": [
      {
        "action": "schemas:CreateDiscoverer",
        "resource_mappings": {
          "DiscovererId": {
            "template": "*"
          }
        }
      }
    ],
    "create-registry": [
      {
        "action": "schemas:CreateRegistry",
        "resource_mappings": {
          "RegistryName": {
            "template": "${RegistryName}"
          }
        }
      }
    ],
    "create-schema": [
      {
        "action": "schemas:CreateSchema",
        "resource_mappings": {
          "RegistryName": {
            "template": "${RegistryName}"
          },
          "SchemaName": {
            "template": "${SchemaName}"
          }
        }
      }
    ],
    "delete-discoverer": [
      {
        "action": "schemas:DeleteDiscoverer",
        "resource_mappings": {
          "DiscovererId": {
            "template": "${DiscovererId}"
          }
        }
      }
    ],
    "delete-registry": [
      {
        "action": "schemas:DeleteRegistry",
        "resource_mappings": {
          "RegistryName": {
            "template": "${RegistryName}"
          }
        }
      }
    ],
    "delete-resource-policy": [
      {
        "action": "schemas:DeleteResourcePolicy",
        "resource_mappings": {
          "RegistryName": {
            "template": "${RegistryName}"
          }
        }
      }
    ],
    "delete-schema": [
      {
        "action": "schemas:DeleteSchema",
        "resource_mappings": {
          "RegistryName": {
            "template": "${RegistryName}"
          },
          "SchemaName": {
            "template": "${SchemaName}"
          }
        }
      }
    ],
    "delete-schema-version": [
      {
        "action": "schemas:DeleteSchemaVersion",
        "resource_mappings": {
          "RegistryName": {
            "template": "${RegistryName}"
          },
          "SchemaName": {
            "template": "${SchemaName}"
          }
        }
      }
    ],
    "describe-code-binding": [
      {
        "action": "schemas:DescribeCodeBinding",
        "resource_mappings": {
          "RegistryName": {
            "template": "${RegistryName}"
          },
          "SchemaName": {
            "template": "${SchemaName}"
          }
        }
      }
    ],
    "describe-discoverer": [
      {
        "action": "schemas:DescribeDiscoverer",
        "resource_mappings": {
          "DiscovererId": {
            "template": "${DiscovererId}"
          }
        }
      }
    ],
    "describe-registry": [
      {
        "action": "schemas:DescribeRegistry",
        "resource_mappings": {
          "RegistryName": {
            "template": "${RegistryName}"
          }
        }
      }
    ],
    "describe-schema": [
      {
        "action": "schemas:DescribeSchema",
        "resource_mappings": {
          "RegistryName": {
            "template": "${RegistryName}"
          },
          "SchemaName": {
            "template": "${SchemaName}"
          }
        }
      }
    ],
    "export-schema": [
      {
        "action": "schemas:ExportSchema",
        "resource_mappings": {
          "RegistryName": {
            "template": "${RegistryName}"
          },
          "SchemaName": {
            "template": "${SchemaName}"
          }
        }
      }
    ],
    "get-code-binding-source": [
      {
        "action": "schemas:GetCodeBindingSource",
        "resource_mappings": {
          "RegistryName": {
            "template": "${RegistryName}"
          },
          "SchemaName": {
            "template": "${SchemaName}"
          }
        }
      }
    ],
    "get-discovered-schema": [
      {
        "action": "schemas:GetDiscoveredSchema",
        "resource_mappings": {}
      }
    ],
    "get-resource-policy": [
      {
        "action": "schemas:GetResourcePolicy",
        "resource_mappings": {
          "RegistryName": {
            "template": "${RegistryName}"
          }
        }
      }
    ],
    "list-discoverers": [
      {
        "action": "schemas:ListDiscoverers",
        "resource_mappings": {
          "DiscovererId": {
            "template": "${DiscovererIdPrefix}*"
          }
        }
      }
    ],
    "list-registries": [
      {
        "action": "schemas:ListRegistries",
        "resource_mappings": {
          "RegistryName": {
            "template": "${RegistryNamePrefix}*"
          }
        }
      }
    ],
    "list-schema-versions": [
      {
        "action": "schemas:ListSchemaVersions",
        "resource_mappings": {
          "RegistryName": {
            "template": "${RegistryName}"
          },
          "SchemaName": {
            "template": "${SchemaName}"
          }
        }
      }
    ],
    "list-schemas": [
      {
        "action": "schemas:ListSchemas",
        "resource_mappings": {
          "RegistryName": {
            "template": "${RegistryName}"
          },
          "SchemaName": {
            "template": "${SchemaNamePrefix}*"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "schemas:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "discoverer": "%%iftemplatematch%${ResourceArn}%%",
          "registry": "%%iftemplatematch%${ResourceArn}%%",
          "schema": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "put-code-binding": [
      {
        "action": "schemas:PutCodeBinding",
        "resource_mappings": {
          "RegistryName": {
            "template": "${RegistryName}"
          },
          "SchemaName": {
            "template": "${SchemaName}"
          }
        }
      }
    ],
    "put-resource-policy": [
      {
        "action": "schemas:PutResourcePolicy",
        "resource_mappings": {
          "RegistryName": {
            "template": "${RegistryName}"
          }
        }
      }
    ],
    "search-schemas": [
      {
        "action": "schemas:SearchSchemas",
        "resource_mappings": {
          "RegistryName": {
            "template": "${RegistryName}"
          },
          "SchemaName": {
            "template": "*"
          }
        }
      }
    ],
    "start-discoverer": [
      {
        "action": "schemas:StartDiscoverer",
        "resource_mappings": {
          "DiscovererId": {
            "template": "${DiscovererId}"
          }
        }
      }
    ],
    "stop-discoverer": [
      {
        "action": "schemas:StopDiscoverer",
        "resource_mappings": {
          "DiscovererId": {
            "template": "${DiscovererId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "schemas:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "discoverer": "%%iftemplatematch%${ResourceArn}%%",
          "registry": "%%iftemplatematch%${ResourceArn}%%",
          "schema": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "schemas:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "discoverer": "%%iftemplatematch%${ResourceArn}%%",
          "registry": "%%iftemplatematch%${ResourceArn}%%",
          "schema": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-discoverer": [
      {
        "action": "schemas:UpdateDiscoverer",
        "resource_mappings": {
          "DiscovererId": {
            "template": "${DiscovererId}"
          }
        }
      }
    ],
    "update-registry": [
      {
        "action": "schemas:UpdateRegistry",
        "resource_mappings": {
          "RegistryName": {
            "template": "${RegistryName}"
          }
        }
      }
    ],
    "update-schema": [
      {
        "action": "schemas:UpdateSchema",
        "resource_mappings": {
          "RegistryName": {
            "template": "${RegistryName}"
          },
          "SchemaName": {
            "template": "${SchemaName}"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "schemas:DescribeCodeBinding",
        "resource_mappings": {
          "RegistryName": {
            "template": "${RegistryName}"
          },
          "SchemaName": {
            "template": "${SchemaName}"
          }
        }
      }
    ]
  },
  "sdb": {
    "batch-delete-attributes": [
      {
        "action": "sdb:BatchDeleteAttributes",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "batch-put-attributes": [
      {
        "action": "sdb:BatchPutAttributes",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "create-domain": [
      {
        "action": "sdb:CreateDomain",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "delete-attributes": [
      {
        "action": "sdb:DeleteAttributes",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "delete-domain": [
      {
        "action": "sdb:DeleteDomain",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "domain-metadata": [
      {
        "action": "sdb:DomainMetadata",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "get-attributes": [
      {
        "action": "sdb:GetAttributes",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "list-domains": [
      {
        "action": "sdb:ListDomains",
        "resource_mappings": {}
      }
    ],
    "put-attributes": [
      {
        "action": "sdb:PutAttributes",
        "resource_mappings": {
          "DomainName": {
            "template": "${DomainName}"
          }
        }
      }
    ],
    "select": [
      {
        "action": "sdb:Select",
        "resource_mappings": {
          "DomainName": {
            "template": "*"
          }
        }
      }
    ]
  },
  "secretsmanager": {
    "cancel-rotate-secret": [
      {
        "action": "secretsmanager:CancelRotateSecret",
        "arn_override": {
          "template": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:%%regex%${SecretId}%/(?:arn.*:)?([a-zA-Z0-9/_\\+=\\.@-]+?)(?:-[a-zA-Z0-9]{6})?$/g%%-??????"
        }
      }
    ],
    "create-secret": [
      {
        "action": "secretsmanager:CreateSecret",
        "arn_override": {
          "template": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:${Name}-??????"
        }
      }
    ],
    "delete-resource-policy": [
      {
        "action": "secretsmanager:DeleteResourcePolicy",
        "arn_override": {
          "template": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:%%regex%${SecretId}%/(?:arn.*:)?([a-zA-Z0-9/_\\+=\\.@-]+?)(?:-[a-zA-Z0-9]{6})?$/g%%-??????"
        }
      }
    ],
    "delete-secret": [
      {
        "action": "secretsmanager:DeleteSecret",
        "arn_override": {
          "template": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:%%regex%${SecretId}%/(?:arn.*:)?([a-zA-Z0-9/_\\+=\\.@-]+?)(?:-[a-zA-Z0-9]{6})?$/g%%-??????"
        }
      }
    ],
    "describe-secret": [
      {
        "action": "secretsmanager:DescribeSecret",
        "arn_override": {
          "template": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:%%regex%${SecretId}%/(?:arn.*:)?([a-zA-Z0-9/_\\+=\\.@-]+?)(?:-[a-zA-Z0-9]{6})?$/g%%-??????"
        }
      }
    ],
    "get-random-password": [
      {
        "action": "secretsmanager:GetRandomPassword",
        "resource_mappings": {}
      }
    ],
    "get-resource-policy": [
      {
        "action": "secretsmanager:GetResourcePolicy",
        "arn_override": {
          "template": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:%%regex%${SecretId}%/(?:arn.*:)?([a-zA-Z0-9/_\\+=\\.@-]+?)(?:-[a-zA-Z0-9]{6})?$/g%%-??????"
        }
      }
    ],
    "get-secret-value": [
      {
        "action": "secretsmanager:GetSecretValue",
        "arn_override": {
          "template": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:%%regex%${SecretId}%/(?:arn.*:)?([a-zA-Z0-9/_\\+=\\.@-]+?)(?:-[a-zA-Z0-9]{6})?$/g%%-??????"
        }
      }
    ],
    "list-secret-version-ids": [
      {
        "action": "secretsmanager:ListSecretVersionIds",
        "arn_override": {
          "template": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:%%regex%${SecretId}%/(?:arn.*:)?([a-zA-Z0-9/_\\+=\\.@-]+?)(?:-[a-zA-Z0-9]{6})?$/g%%-??????"
        }
      }
    ],
    "list-secrets": [
      {
        "action": "secretsmanager:ListSecrets",
        "resource_mappings": {}
      }
    ],
    "put-resource-policy": [
      {
        "action": "secretsmanager:PutResourcePolicy",
        "arn_override": {
          "template": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:%%regex%${SecretId}%/(?:arn.*:)?([a-zA-Z0-9/_\\+=\\.@-]+?)(?:-[a-zA-Z0-9]{6})?$/g%%-??????"
        }
      }
    ],
    "put-secret-value": [
      {
        "action": "secretsmanager:PutSecretValue",
        "arn_override": {
          "template": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:%%regex%${SecretId}%/(?:arn.*:)?([a-zA-Z0-9/_\\+=\\.@-]+?)(?:-[a-zA-Z0-9]{6})?$/g%%-??????"
        }
      }
    ],
    "remove-regions-from-replication": [
      {
        "action": "secretsmanager:RemoveRegionsFromReplication",
        "resource_mappings": {
          "SecretId": {
            "template": "${SecretId}"
          }
        }
      }
    ],
    "replicate-secret-to-regions": [
      {
        "action": "secretsmanager:ReplicateSecretToRegions",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Secret": "arn:${Partition}:secretsmanager:${AddReplicaRegions[].Region}:${Account}:secret:${SecretId}"
        }
      }
    ],
    "restore-secret": [
      {
        "action": "secretsmanager:RestoreSecret",
        "arn_override": {
          "template": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:%%regex%${SecretId}%/(?:arn.*:)?([a-zA-Z0-9/_\\+=\\.@-]+?)(?:-[a-zA-Z0-9]{6})?$/g%%-??????"
        }
      }
    ],
    "rotate-secret": [
      {
        "action": "secretsmanager:RotateSecret",
        "arn_override": {
          "template": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:%%regex%${SecretId}%/(?:arn.*:)?([a-zA-Z0-9/_\\+=\\.@-]+?)(?:-[a-zA-Z0-9]{6})?$/g%%-??????"
        }
      }
    ],
    "stop-replication-to-replica": [
      {
        "action": "secretsmanager:StopReplicationToReplica",
        "resource_mappings": {
          "SecretId": {
            "template": "${SecretId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "secretsmanager:TagResource",
        "arn_override": {
          "template": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:%%regex%${SecretId}%/(?:arn.*:)?([a-zA-Z0-9/_\\+=\\.@-]+?)(?:-[a-zA-Z0-9]{6})?$/g%%-??????"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "secretsmanager:UntagResource",
        "arn_override": {
          "template": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:%%regex%${SecretId}%/(?:arn.*:)?([a-zA-Z0-9/_\\+=\\.@-]+?)(?:-[a-zA-Z0-9]{6})?$/g%%-??????"
        }
      }
    ],
    "update-secret": [
      {
        "action": "secretsmanager:UpdateSecret",
        "arn_override": {
          "template": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:%%regex%${SecretId}%/(?:arn.*:)?([a-zA-Z0-9/_\\+=\\.@-]+?)(?:-[a-zA-Z0-9]{6})?$/g%%-??????"
        }
      }
    ],
    "update-secret-version-stage": [
      {
        "action": "secretsmanager:UpdateSecretVersionStage",
        "arn_override": {
          "template": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:%%regex%${SecretId}%/(?:arn.*:)?([a-zA-Z0-9/_\\+=\\.@-]+?)(?:-[a-zA-Z0-9]{6})?$/g%%-??????"
        }
      }
    ],
    "validate-resource-policy": [
      {
        "action": "secretsmanager:ValidateResourcePolicy",
        "arn_override": {
          "template": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:%%regex%${SecretId}%/(?:arn.*:)?([a-zA-Z0-9/_\\+=\\.@-]+?)(?:-[a-zA-Z0-9]{6})?$/g%%-??????"
        }
      }
    ]
  },
  "securityhub": {
    "accept-administrator-invitation": [
      {
        "action": "securityhub:AcceptAdministratorInvitation",
        "resource_mappings": {}
      }
    ],
    "accept-invitation": [
      {
        "action": "securityhub:AcceptInvitation",
        "resource_mappings": {}
      }
    ],
    "batch-delete-automation-rules": [
      {
        "action": "securityhub:BatchDeleteAutomationRules",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "automation-rule": "${AutomationRulesArns[]}"
        }
      }
    ],
    "batch-disable-standards": [
      {
        "action": "securityhub:BatchDisableStandards",
        "resource_mappings": {}
      }
    ],
    "batch-enable-standards": [
      {
        "action": "securityhub:BatchEnableStandards",
        "resource_mappings": {}
      }
    ],
    "batch-get-automation-rules": [
      {
        "action": "securityhub:BatchGetAutomationRules",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "automation-rule": "${AutomationRulesArns[]}"
        }
      }
    ],
    "batch-get-security-controls": [
      {
        "action": "securityhub:BatchGetSecurityControls",
        "resource_mappings": {}
      },
      {
        "action": "securityhub:DescribeStandardsControls",
        "resource_mappings": {}
      }
    ],
    "batch-get-standards-control-associations": [
      {
        "action": "securityhub:BatchGetStandardsControlAssociations",
        "resource_mappings": {}
      },
      {
        "action": "securityhub:DescribeStandardsControls",
        "resource_mappings": {}
      }
    ],
    "batch-import-findings": [
      {
        "action": "securityhub:BatchImportFindings",
        "resource_mappings": {
          "Company": {
            "template": "*"
          },
          "ProductId": {
            "template": "*"
          }
        }
      }
    ],
    "batch-update-automation-rules": [
      {
        "action": "securityhub:BatchUpdateAutomationRules",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "automation-rule": "${UpdateAutomationRulesRequestItems[].RuleArn}"
        }
      }
    ],
    "batch-update-findings": [
      {
        "action": "securityhub:BatchUpdateFindings",
        "resource_mappings": {}
      }
    ],
    "batch-update-standards-control-associations": [
      {
        "action": "securityhub:BatchUpdateStandardsControlAssociations",
        "resource_mappings": {}
      },
      {
        "action": "securityhub:UpdateStandardsControl",
        "resource_mappings": {}
      }
    ],
    "create-action-target": [
      {
        "action": "securityhub:CreateActionTarget",
        "resource_mappings": {}
      }
    ],
    "create-automation-rule": [
      {
        "action": "securityhub:CreateAutomationRule",
        "resource_mappings": {}
      }
    ],
    "create-finding-aggregator": [
      {
        "action": "securityhub:CreateFindingAggregator",
        "resource_mappings": {}
      }
    ],
    "create-insight": [
      {
        "action": "securityhub:CreateInsight",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "create-members": [
      {
        "action": "securityhub:CreateMembers",
        "resource_mappings": {}
      }
    ],
    "decline-invitations": [
      {
        "action": "securityhub:DeclineInvitations",
        "resource_mappings": {}
      }
    ],
    "delete-action-target": [
      {
        "action": "securityhub:DeleteActionTarget",
        "resource_mappings": {}
      }
    ],
    "delete-finding-aggregator": [
      {
        "action": "securityhub:DeleteFindingAggregator",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "finding-aggregator": "${FindingAggregatorArn}"
        }
      }
    ],
    "delete-insight": [
      {
        "action": "securityhub:DeleteInsight",
        "resource_mappings": {}
      }
    ],
    "delete-invitations": [
      {
        "action": "securityhub:DeleteInvitations",
        "resource_mappings": {}
      }
    ],
    "delete-members": [
      {
        "action": "securityhub:DeleteMembers",
        "resource_mappings": {}
      }
    ],
    "describe-action-targets": [
      {
        "action": "securityhub:DescribeActionTargets",
        "resource_mappings": {}
      }
    ],
    "describe-hub": [
      {
        "action": "securityhub:DescribeHub",
        "resource_mappings": {}
      }
    ],
    "describe-organization-configuration": [
      {
        "action": "securityhub:DescribeOrganizationConfiguration",
        "resource_mappings": {}
      }
    ],
    "describe-products": [
      {
        "action": "securityhub:DescribeProducts",
        "resource_mappings": {}
      }
    ],
    "describe-standards": [
      {
        "action": "securityhub:DescribeStandards",
        "resource_mappings": {}
      }
    ],
    "describe-standards-controls": [
      {
        "action": "securityhub:DescribeStandardsControls",
        "resource_mappings": {}
      }
    ],
    "disable-import-findings-for-product": [
      {
        "action": "securityhub:DisableImportFindingsForProduct",
        "resource_mappings": {}
      }
    ],
    "disable-organization-admin-account": [
      {
        "action": "securityhub:DisableOrganizationAdminAccount",
        "resource_mappings": {}
      },
      {
        "action": "organizations:DescribeOrganization",
        "resource_mappings": {}
      }
    ],
    "disable-security-hub": [
      {
        "action": "securityhub:DisableSecurityHub",
        "resource_mappings": {}
      }
    ],
    "disassociate-from-administrator-account": [
      {
        "action": "securityhub:DisassociateFromAdministratorAccount",
        "resource_mappings": {}
      }
    ],
    "disassociate-from-master-account": [
      {
        "action": "securityhub:DisassociateFromMasterAccount",
        "resource_mappings": {}
      }
    ],
    "disassociate-members": [
      {
        "action": "securityhub:DisassociateMembers",
        "resource_mappings": {}
      }
    ],
    "enable-import-findings-for-product": [
      {
        "action": "securityhub:EnableImportFindingsForProduct",
        "resource_mappings": {}
      }
    ],
    "enable-organization-admin-account": [
      {
        "action": "securityhub:EnableOrganizationAdminAccount",
        "resource_mappings": {}
      },
      {
        "action": "organizations:DescribeOrganization",
        "resource_mappings": {}
      },
      {
        "action": "organizations:EnableAWSServiceAccess",
        "resource_mappings": {}
      },
      {
        "action": "organizations:RegisterDelegatedAdministrator",
        "resource_mappings": {}
      }
    ],
    "enable-security-hub": [
      {
        "action": "securityhub:EnableSecurityHub",
        "resource_mappings": {}
      }
    ],
    "get-administrator-account": [
      {
        "action": "securityhub:GetAdministratorAccount",
        "resource_mappings": {}
      }
    ],
    "get-enabled-standards": [
      {
        "action": "securityhub:GetEnabledStandards",
        "resource_mappings": {}
      }
    ],
    "get-finding-aggregator": [
      {
        "action": "securityhub:GetFindingAggregator",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "finding-aggregator": "${FindingAggregatorArn}"
        }
      }
    ],
    "get-finding-history": [
      {
        "action": "securityhub:GetFindingHistory",
        "resource_mappings": {}
      }
    ],
    "get-findings": [
      {
        "action": "securityhub:GetFindings",
        "resource_mappings": {}
      }
    ],
    "get-insight-results": [
      {
        "action": "securityhub:GetInsightResults",
        "resource_mappings": {}
      }
    ],
    "get-insights": [
      {
        "action": "securityhub:GetInsights",
        "resource_mappings": {}
      }
    ],
    "get-invitations-count": [
      {
        "action": "securityhub:GetInvitationsCount",
        "resource_mappings": {}
      }
    ],
    "get-master-account": [
      {
        "action": "securityhub:GetMasterAccount",
        "resource_mappings": {}
      }
    ],
    "get-members": [
      {
        "action": "securityhub:GetMembers",
        "resource_mappings": {}
      }
    ],
    "invite-members": [
      {
        "action": "securityhub:InviteMembers",
        "resource_mappings": {}
      }
    ],
    "list-automation-rules": [
      {
        "action": "securityhub:ListAutomationRules",
        "resource_mappings": {}
      }
    ],
    "list-enabled-products-for-import": [
      {
        "action": "securityhub:ListEnabledProductsForImport",
        "resource_mappings": {}
      }
    ],
    "list-finding-aggregators": [
      {
        "action": "securityhub:ListFindingAggregators",
        "resource_mappings": {}
      }
    ],
    "list-invitations": [
      {
        "action": "securityhub:ListInvitations",
        "resource_mappings": {}
      }
    ],
    "list-members": [
      {
        "action": "securityhub:ListMembers",
        "resource_mappings": {}
      }
    ],
    "list-organization-admin-accounts": [
      {
        "action": "securityhub:ListOrganizationAdminAccounts",
        "resource_mappings": {}
      },
      {
        "action": "organizations:DescribeOrganization",
        "resource_mappings": {}
      }
    ],
    "list-security-control-definitions": [
      {
        "action": "securityhub:ListSecurityControlDefinitions",
        "resource_mappings": {}
      }
    ],
    "list-standards-control-associations": [
      {
        "action": "securityhub:ListStandardsControlAssociations",
        "resource_mappings": {}
      },
      {
        "action": "securityhub:DescribeStandardsControls",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "securityhub:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "securityhub:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "securityhub:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-action-target": [
      {
        "action": "securityhub:UpdateActionTarget",
        "resource_mappings": {}
      }
    ],
    "update-finding-aggregator": [
      {
        "action": "securityhub:UpdateFindingAggregator",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "finding-aggregator": "${FindingAggregatorArn}"
        }
      }
    ],
    "update-findings": [
      {
        "action": "securityhub:UpdateFindings",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "update-insight": [
      {
        "action": "securityhub:UpdateInsight",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "update-organization-configuration": [
      {
        "action": "securityhub:UpdateOrganizationConfiguration",
        "resource_mappings": {}
      }
    ],
    "update-security-hub-configuration": [
      {
        "action": "securityhub:UpdateSecurityHubConfiguration",
        "resource_mappings": {}
      }
    ],
    "update-standards-control": [
      {
        "action": "securityhub:UpdateStandardsControl",
        "resource_mappings": {}
      }
    ]
  },
  "securitylake": {
    "create-aws-log-source": [
      {
        "action": "securitylake:CreateAwsLogSource",
        "resource_mappings": {}
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "kms:CreateGrant",
        "resource_mappings": {
          "KeyId": {
            "template": "*"
          }
        }
      },
      {
        "action": "kms:DescribeKey",
        "resource_mappings": {
          "KeyId": {
            "template": "*"
          }
        }
      }
    ],
    "create-custom-log-source": [
      {
        "action": "securitylake:CreateCustomLogSource",
        "resource_mappings": {}
      },
      {
        "action": "glue:CreateCrawler",
        "resource_mappings": {}
      },
      {
        "action": "glue:CreateDatabase",
        "resource_mappings": {
          "DatabaseName": {
            "template": "*"
          }
        }
      },
      {
        "action": "glue:CreateTable",
        "resource_mappings": {
          "DatabaseName": {
            "template": "*"
          }
        }
      },
      {
        "action": "glue:StartCrawlerSchedule",
        "resource_mappings": {}
      },
      {
        "action": "iam:DeleteRolePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${glueInvocationRoleArn}"
        }
      },
      {
        "action": "iam:GetRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${glueInvocationRoleArn}"
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${glueInvocationRoleArn}"
        }
      },
      {
        "action": "iam:PutRolePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${glueInvocationRoleArn}"
        }
      },
      {
        "action": "kms:CreateGrant",
        "resource_mappings": {
          "KeyId": {
            "template": "*"
          }
        }
      },
      {
        "action": "kms:DescribeKey",
        "resource_mappings": {
          "KeyId": {
            "template": "*"
          }
        }
      },
      {
        "action": "kms:GenerateDataKey",
        "resource_mappings": {
          "KeyId": {
            "template": "*"
          }
        }
      },
      {
        "action": "lakeformation:GrantPermissions",
        "resource_mappings": {}
      },
      {
        "action": "lakeformation:RegisterResource",
        "resource_mappings": {}
      },
      {
        "action": "s3:ListBucket",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          }
        }
      },
      {
        "action": "s3:PutObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      }
    ],
    "create-data-lake": [
      {
        "note": "NotFound",
        "action": "SecurityLake:CreateDataLake",
        "resource_mappings": {}
      }
    ],
    "create-data-lake-exception-subscription": [
      {
        "action": "securitylake:CreateDataLakeExceptionSubscription",
        "resource_mappings": {}
      }
    ],
    "create-data-lake-organization-configuration": [
      {
        "action": "securitylake:CreateDataLakeOrganizationConfiguration",
        "resource_mappings": {}
      }
    ],
    "create-subscriber": [
      {
        "action": "securitylake:CreateSubscriber",
        "resource_mappings": {}
      },
      {
        "action": "iam:CreateRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:DeleteRolePolicy",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:GetRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PutRolePolicy",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "lakeformation:GrantPermissions",
        "resource_mappings": {}
      },
      {
        "action": "lakeformation:ListPermissions",
        "resource_mappings": {}
      },
      {
        "action": "lakeformation:RegisterResource",
        "resource_mappings": {}
      },
      {
        "action": "lakeformation:RevokePermissions",
        "resource_mappings": {}
      },
      {
        "action": "ram:GetResourceShareAssociations",
        "resource_mappings": {}
      },
      {
        "action": "ram:GetResourceShares",
        "resource_mappings": {}
      },
      {
        "action": "ram:UpdateResourceShare",
        "resource_mappings": {
          "ResourcePath": {
            "template": "*"
          }
        }
      },
      {
        "action": "s3:PutObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      }
    ],
    "create-subscriber-notification": [
      {
        "note": "NotFound",
        "action": "SecurityLake:CreateSubscriberNotification",
        "resource_mappings": {}
      }
    ],
    "delete-aws-log-source": [
      {
        "action": "securitylake:DeleteAwsLogSource",
        "resource_mappings": {}
      }
    ],
    "delete-custom-log-source": [
      {
        "action": "securitylake:DeleteCustomLogSource",
        "resource_mappings": {}
      },
      {
        "action": "glue:StopCrawlerSchedule",
        "resource_mappings": {}
      }
    ],
    "delete-data-lake": [
      {
        "action": "securitylake:DeleteDataLake",
        "resource_mappings": {}
      },
      {
        "action": "organizations:DescribeOrganization",
        "resource_mappings": {}
      },
      {
        "action": "organizations:ListDelegatedAdministrators",
        "resource_mappings": {}
      },
      {
        "action": "organizations:ListDelegatedServicesForAccount",
        "resource_mappings": {
          "OrganizationId": {
            "template": "*"
          },
          "AccountId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-data-lake-exception-subscription": [
      {
        "action": "securitylake:DeleteDataLakeExceptionSubscription",
        "resource_mappings": {}
      }
    ],
    "delete-data-lake-organization-configuration": [
      {
        "action": "securitylake:DeleteDataLakeOrganizationConfiguration",
        "resource_mappings": {}
      }
    ],
    "delete-subscriber": [
      {
        "action": "securitylake:DeleteSubscriber",
        "resource_mappings": {}
      },
      {
        "action": "events:DeleteApiDestination",
        "resource_mappings": {
          "ApiDestinationName": {
            "template": "*"
          }
        }
      },
      {
        "action": "events:DeleteConnection",
        "resource_mappings": {
          "ConnectionName": {
            "template": "*"
          }
        }
      },
      {
        "action": "events:DeleteRule",
        "resource_mappings": {
          "EventBusName": {
            "template": "*"
          },
          "RuleName": {
            "template": "*"
          }
        }
      },
      {
        "action": "events:DescribeRule",
        "resource_mappings": {
          "EventBusName": {
            "template": "*"
          },
          "RuleName": {
            "template": "*"
          }
        }
      },
      {
        "action": "events:ListApiDestinations",
        "resource_mappings": {}
      },
      {
        "action": "events:ListTargetsByRule",
        "resource_mappings": {
          "EventBusName": {
            "template": "*"
          },
          "RuleName": {
            "template": "*"
          }
        }
      },
      {
        "action": "events:RemoveTargets",
        "resource_mappings": {
          "EventBusName": {
            "template": "*"
          },
          "RuleName": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:DeleteRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:DeleteRolePolicy",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:GetRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:ListRolePolicies",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "lakeformation:ListPermissions",
        "resource_mappings": {}
      },
      {
        "action": "lakeformation:RevokePermissions",
        "resource_mappings": {}
      },
      {
        "action": "sqs:DeleteQueue",
        "resource_mappings": {
          "QueueName": {
            "template": "*"
          }
        }
      },
      {
        "action": "sqs:GetQueueUrl",
        "resource_mappings": {
          "QueueName": {
            "template": "*"
          }
        }
      }
    ],
    "delete-subscriber-notification": [
      {
        "action": "securitylake:DeleteSubscriberNotification",
        "resource_mappings": {
          "SubscriberId": {
            "template": "${subscriberId}"
          }
        }
      },
      {
        "action": "events:DeleteApiDestination",
        "resource_mappings": {
          "ApiDestinationName": {
            "template": "*"
          }
        }
      },
      {
        "action": "events:DeleteConnection",
        "resource_mappings": {
          "ConnectionName": {
            "template": "*"
          }
        }
      },
      {
        "action": "events:DeleteRule",
        "resource_mappings": {
          "EventBusName": {
            "template": "*"
          },
          "RuleName": {
            "template": "*"
          }
        }
      },
      {
        "action": "events:DescribeRule",
        "resource_mappings": {
          "EventBusName": {
            "template": "*"
          },
          "RuleName": {
            "template": "*"
          }
        }
      },
      {
        "action": "events:ListApiDestinations",
        "resource_mappings": {}
      },
      {
        "action": "events:ListTargetsByRule",
        "resource_mappings": {
          "EventBusName": {
            "template": "*"
          },
          "RuleName": {
            "template": "*"
          }
        }
      },
      {
        "action": "events:RemoveTargets",
        "resource_mappings": {
          "EventBusName": {
            "template": "*"
          },
          "RuleName": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:DeleteRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:DeleteRolePolicy",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:GetRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:ListRolePolicies",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "lakeformation:RevokePermissions",
        "resource_mappings": {}
      },
      {
        "action": "sqs:DeleteQueue",
        "resource_mappings": {
          "QueueName": {
            "template": "*"
          }
        }
      },
      {
        "action": "sqs:GetQueueUrl",
        "resource_mappings": {
          "QueueName": {
            "template": "*"
          }
        }
      }
    ],
    "deregister-data-lake-delegated-administrator": [
      {
        "action": "securitylake:DeregisterDataLakeDelegatedAdministrator",
        "resource_mappings": {}
      },
      {
        "action": "organizations:DeregisterDelegatedAdministrator",
        "resource_mappings": {
          "OrganizationId": {
            "template": "*"
          },
          "AccountId": {
            "template": "*"
          }
        }
      },
      {
        "action": "organizations:DescribeOrganization",
        "resource_mappings": {}
      },
      {
        "action": "organizations:ListDelegatedServicesForAccount",
        "resource_mappings": {
          "OrganizationId": {
            "template": "*"
          },
          "AccountId": {
            "template": "*"
          }
        }
      }
    ],
    "get-data-lake-exception-subscription": [
      {
        "action": "securitylake:GetDataLakeExceptionSubscription",
        "resource_mappings": {}
      }
    ],
    "get-data-lake-organization-configuration": [
      {
        "action": "securitylake:GetDataLakeOrganizationConfiguration",
        "resource_mappings": {}
      },
      {
        "action": "organizations:DescribeOrganization",
        "resource_mappings": {}
      }
    ],
    "get-data-lake-sources": [
      {
        "action": "securitylake:GetDataLakeSources",
        "resource_mappings": {}
      }
    ],
    "get-subscriber": [
      {
        "action": "securitylake:GetSubscriber",
        "resource_mappings": {}
      }
    ],
    "list-data-lake-exceptions": [
      {
        "action": "securitylake:ListDataLakeExceptions",
        "resource_mappings": {}
      }
    ],
    "list-data-lakes": [
      {
        "action": "securitylake:ListDataLakes",
        "resource_mappings": {}
      }
    ],
    "list-log-sources": [
      {
        "action": "securitylake:ListLogSources",
        "resource_mappings": {}
      }
    ],
    "list-subscribers": [
      {
        "action": "securitylake:ListSubscribers",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "securitylake:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "data-lake": "%%iftemplatematch%${resourceArn}%%",
          "subscriber": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "register-data-lake-delegated-administrator": [
      {
        "action": "securitylake:RegisterDataLakeDelegatedAdministrator",
        "resource_mappings": {}
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "organizations:DescribeOrganization",
        "resource_mappings": {}
      },
      {
        "action": "organizations:EnableAWSServiceAccess",
        "resource_mappings": {}
      },
      {
        "action": "organizations:ListDelegatedAdministrators",
        "resource_mappings": {}
      },
      {
        "action": "organizations:ListDelegatedServicesForAccount",
        "resource_mappings": {
          "OrganizationId": {
            "template": "*"
          },
          "AccountId": {
            "template": "${accountId}"
          }
        }
      },
      {
        "action": "organizations:RegisterDelegatedAdministrator",
        "resource_mappings": {
          "OrganizationId": {
            "template": "*"
          },
          "AccountId": {
            "template": "${accountId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "securitylake:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "data-lake": "%%iftemplatematch%${resourceArn}%%",
          "subscriber": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "securitylake:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "data-lake": "%%iftemplatematch%${resourceArn}%%",
          "subscriber": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-data-lake": [
      {
        "note": "NotFound",
        "action": "SecurityLake:UpdateDataLake",
        "resource_mappings": {}
      }
    ],
    "update-data-lake-exception-subscription": [
      {
        "action": "securitylake:UpdateDataLakeExceptionSubscription",
        "resource_mappings": {}
      }
    ],
    "update-subscriber": [
      {
        "action": "securitylake:UpdateSubscriber",
        "resource_mappings": {}
      },
      {
        "action": "events:CreateApiDestination",
        "resource_mappings": {
          "ApiDestinationName": {
            "template": "*"
          },
          "ConnectionName": {
            "template": "*"
          }
        }
      },
      {
        "action": "events:CreateConnection",
        "resource_mappings": {
          "ConnectionName": {
            "template": "*"
          }
        }
      },
      {
        "action": "events:DescribeRule",
        "resource_mappings": {
          "EventBusName": {
            "template": "*"
          },
          "RuleName": {
            "template": "*"
          }
        }
      },
      {
        "action": "events:ListApiDestinations",
        "resource_mappings": {}
      },
      {
        "action": "events:ListConnections",
        "resource_mappings": {}
      },
      {
        "action": "events:PutRule",
        "resource_mappings": {
          "EventBusName": {
            "template": "*"
          },
          "RuleName": {
            "template": "*"
          }
        }
      },
      {
        "action": "events:PutTargets",
        "resource_mappings": {
          "EventBusName": {
            "template": "*"
          },
          "RuleName": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:DeleteRolePolicy",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:GetRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PutRolePolicy",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "update-subscriber-notification": [
      {
        "note": "NotFound",
        "action": "SecurityLake:UpdateSubscriberNotification",
        "resource_mappings": {}
      }
    ]
  },
  "serverlessrepo": {
    "create-application": [
      {
        "action": "serverlessrepo:CreateApplication",
        "resource_mappings": {}
      }
    ],
    "create-application-version": [
      {
        "action": "serverlessrepo:CreateApplicationVersion",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "create-cloud-formation-change-set": [
      {
        "action": "serverlessrepo:CreateCloudFormationChangeSet",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "create-cloud-formation-template": [
      {
        "action": "serverlessrepo:CreateCloudFormationTemplate",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "delete-application": [
      {
        "action": "serverlessrepo:DeleteApplication",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "get-application": [
      {
        "action": "serverlessrepo:GetApplication",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "get-application-policy": [
      {
        "action": "serverlessrepo:GetApplicationPolicy",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "get-cloud-formation-template": [
      {
        "action": "serverlessrepo:GetCloudFormationTemplate",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "list-application-dependencies": [
      {
        "action": "serverlessrepo:ListApplicationDependencies",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "list-application-versions": [
      {
        "action": "serverlessrepo:ListApplicationVersions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "list-applications": [
      {
        "action": "serverlessrepo:ListApplications",
        "resource_mappings": {}
      }
    ],
    "put-application-policy": [
      {
        "action": "serverlessrepo:PutApplicationPolicy",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "unshare-application": [
      {
        "action": "serverlessrepo:UnshareApplication",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "update-application": [
      {
        "action": "serverlessrepo:UpdateApplication",
        "resource_mappings": {
          "ResourceId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ]
  },
  "service-quotas": {
    "associate-service-quota-template": [
      {
        "action": "servicequotas:AssociateServiceQuotaTemplate",
        "resource_mappings": {}
      }
    ],
    "delete-service-quota-increase-request-from-template": [
      {
        "action": "servicequotas:DeleteServiceQuotaIncreaseRequestFromTemplate",
        "resource_mappings": {}
      }
    ],
    "disassociate-service-quota-template": [
      {
        "action": "servicequotas:DisassociateServiceQuotaTemplate",
        "resource_mappings": {}
      }
    ],
    "get-aws-default-service-quota": [
      {
        "action": "servicequotas:GetAWSDefaultServiceQuota",
        "resource_mappings": {}
      }
    ],
    "get-association-for-service-quota-template": [
      {
        "action": "servicequotas:GetAssociationForServiceQuotaTemplate",
        "resource_mappings": {}
      }
    ],
    "get-requested-service-quota-change": [
      {
        "action": "servicequotas:GetRequestedServiceQuotaChange",
        "resource_mappings": {}
      }
    ],
    "get-service-quota": [
      {
        "action": "servicequotas:GetServiceQuota",
        "resource_mappings": {}
      }
    ],
    "get-service-quota-increase-request-from-template": [
      {
        "action": "servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
        "resource_mappings": {}
      }
    ],
    "list-aws-default-service-quotas": [
      {
        "action": "servicequotas:ListAWSDefaultServiceQuotas",
        "resource_mappings": {}
      }
    ],
    "list-requested-service-quota-change-history": [
      {
        "action": "servicequotas:ListRequestedServiceQuotaChangeHistory",
        "resource_mappings": {}
      }
    ],
    "list-requested-service-quota-change-history-by-quota": [
      {
        "action": "servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
        "resource_mappings": {}
      }
    ],
    "list-service-quota-increase-requests-in-template": [
      {
        "action": "servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
        "resource_mappings": {}
      }
    ],
    "list-service-quotas": [
      {
        "action": "servicequotas:ListServiceQuotas",
        "resource_mappings": {}
      }
    ],
    "list-services": [
      {
        "action": "servicequotas:ListServices",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "servicequotas:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "put-service-quota-increase-request-into-template": [
      {
        "action": "servicequotas:PutServiceQuotaIncreaseRequestIntoTemplate",
        "resource_mappings": {
          "ServiceCode": {
            "template": "${ServiceCode}"
          },
          "QuotaCode": {
            "template": "${QuotaCode}"
          }
        }
      }
    ],
    "request-service-quota-increase": [
      {
        "action": "servicequotas:RequestServiceQuotaIncrease",
        "resource_mappings": {
          "ServiceCode": {
            "template": "${ServiceCode}"
          },
          "QuotaCode": {
            "template": "${QuotaCode}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "servicequotas:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "servicequotas:UntagResource",
        "resource_mappings": {}
      }
    ]
  },
  "servicecatalog": {
    "accept-portfolio-share": [
      {
        "action": "servicecatalog:AcceptPortfolioShare",
        "resource_mappings": {
          "PortfolioId": {
            "template": "${PortfolioId}"
          }
        }
      }
    ],
    "associate-budget-with-resource": [
      {
        "action": "servicecatalog:AssociateBudgetWithResource",
        "resource_mappings": {}
      }
    ],
    "associate-principal-with-portfolio": [
      {
        "action": "servicecatalog:AssociatePrincipalWithPortfolio",
        "resource_mappings": {
          "PortfolioId": {
            "template": "${PortfolioId}"
          }
        }
      }
    ],
    "associate-product-with-portfolio": [
      {
        "action": "servicecatalog:AssociateProductWithPortfolio",
        "resource_mappings": {}
      }
    ],
    "associate-service-action-with-provisioning-artifact": [
      {
        "action": "servicecatalog:AssociateServiceActionWithProvisioningArtifact",
        "resource_mappings": {
          "ProductId": {
            "template": "${ProductId}"
          }
        }
      }
    ],
    "associate-tag-option-with-resource": [
      {
        "action": "servicecatalog:AssociateTagOptionWithResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Portfolio": "%%iftemplatematch%${ResourceId}%%",
          "Product": "%%iftemplatematch%${ResourceId}%%"
        }
      }
    ],
    "batch-associate-service-action-with-provisioning-artifact": [
      {
        "action": "servicecatalog:BatchAssociateServiceActionWithProvisioningArtifact",
        "resource_mappings": {}
      }
    ],
    "batch-disassociate-service-action-from-provisioning-artifact": [
      {
        "action": "servicecatalog:BatchDisassociateServiceActionFromProvisioningArtifact",
        "resource_mappings": {}
      }
    ],
    "copy-product": [
      {
        "action": "servicecatalog:CopyProduct",
        "resource_mappings": {}
      }
    ],
    "create-constraint": [
      {
        "action": "servicecatalog:CreateConstraint",
        "resource_mappings": {
          "ProductId": {
            "template": "${PortfolioId}"
          }
        }
      }
    ],
    "create-portfolio": [
      {
        "action": "servicecatalog:CreatePortfolio",
        "resource_mappings": {
          "PortfolioId": {
            "template": "*"
          }
        }
      }
    ],
    "create-portfolio-share": [
      {
        "action": "servicecatalog:CreatePortfolioShare",
        "resource_mappings": {
          "PortfolioId": {
            "template": "${PortfolioId}"
          }
        }
      }
    ],
    "create-product": [
      {
        "action": "servicecatalog:CreateProduct",
        "resource_mappings": {
          "ProductId": {
            "template": "*"
          }
        }
      }
    ],
    "create-provisioned-product-plan": [
      {
        "action": "servicecatalog:CreateProvisionedProductPlan",
        "resource_mappings": {}
      }
    ],
    "create-provisioning-artifact": [
      {
        "action": "servicecatalog:CreateProvisioningArtifact",
        "resource_mappings": {
          "ProductId": {
            "template": "${ProductId}"
          }
        }
      }
    ],
    "create-service-action": [
      {
        "action": "servicecatalog:CreateServiceAction",
        "resource_mappings": {}
      }
    ],
    "create-tag-option": [
      {
        "action": "servicecatalog:CreateTagOption",
        "resource_mappings": {}
      }
    ],
    "delete-constraint": [
      {
        "action": "servicecatalog:DeleteConstraint",
        "resource_mappings": {}
      }
    ],
    "delete-portfolio": [
      {
        "action": "servicecatalog:DeletePortfolio",
        "resource_mappings": {
          "PortfolioId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-portfolio-share": [
      {
        "action": "servicecatalog:DeletePortfolioShare",
        "resource_mappings": {
          "PortfolioId": {
            "template": "${PortfolioId}"
          }
        }
      }
    ],
    "delete-product": [
      {
        "action": "servicecatalog:DeleteProduct",
        "resource_mappings": {
          "ProductId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-provisioned-product-plan": [
      {
        "action": "servicecatalog:DeleteProvisionedProductPlan",
        "resource_mappings": {}
      }
    ],
    "delete-provisioning-artifact": [
      {
        "action": "servicecatalog:DeleteProvisioningArtifact",
        "resource_mappings": {
          "ProductId": {
            "template": "${ProductId}"
          }
        }
      }
    ],
    "delete-service-action": [
      {
        "action": "servicecatalog:DeleteServiceAction",
        "resource_mappings": {}
      }
    ],
    "delete-tag-option": [
      {
        "action": "servicecatalog:DeleteTagOption",
        "resource_mappings": {}
      }
    ],
    "describe-constraint": [
      {
        "action": "servicecatalog:DescribeConstraint",
        "resource_mappings": {}
      }
    ],
    "describe-copy-product-status": [
      {
        "action": "servicecatalog:DescribeCopyProductStatus",
        "resource_mappings": {}
      }
    ],
    "describe-portfolio": [
      {
        "action": "servicecatalog:DescribePortfolio",
        "resource_mappings": {
          "PortfolioId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "describe-portfolio-share-status": [
      {
        "action": "servicecatalog:DescribePortfolioShareStatus",
        "resource_mappings": {}
      }
    ],
    "describe-portfolio-shares": [
      {
        "action": "servicecatalog:DescribePortfolioShares",
        "resource_mappings": {
          "PortfolioId": {
            "template": "${PortfolioId}"
          }
        }
      }
    ],
    "describe-product": [
      {
        "action": "servicecatalog:DescribeProduct",
        "resource_mappings": {
          "ProductId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "describe-product-as-admin": [
      {
        "action": "servicecatalog:DescribeProductAsAdmin",
        "resource_mappings": {
          "ProductId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "describe-product-view": [
      {
        "action": "servicecatalog:DescribeProductView",
        "resource_mappings": {}
      }
    ],
    "describe-provisioned-product": [
      {
        "action": "servicecatalog:DescribeProvisionedProduct",
        "resource_mappings": {}
      }
    ],
    "describe-provisioned-product-plan": [
      {
        "action": "servicecatalog:DescribeProvisionedProductPlan",
        "resource_mappings": {}
      }
    ],
    "describe-provisioning-artifact": [
      {
        "action": "servicecatalog:DescribeProvisioningArtifact",
        "resource_mappings": {
          "ProductId": {
            "template": "${ProductId}"
          }
        }
      }
    ],
    "describe-provisioning-parameters": [
      {
        "action": "servicecatalog:DescribeProvisioningParameters",
        "resource_mappings": {
          "ProductId": {
            "template": "${ProductId}"
          }
        }
      }
    ],
    "describe-record": [
      {
        "action": "servicecatalog:DescribeRecord",
        "resource_mappings": {}
      }
    ],
    "describe-service-action": [
      {
        "action": "servicecatalog:DescribeServiceAction",
        "resource_mappings": {}
      }
    ],
    "describe-service-action-execution-parameters": [
      {
        "action": "servicecatalog:DescribeServiceActionExecutionParameters",
        "resource_mappings": {}
      }
    ],
    "describe-tag-option": [
      {
        "action": "servicecatalog:DescribeTagOption",
        "resource_mappings": {}
      }
    ],
    "disable-aws-organizations-access": [
      {
        "action": "servicecatalog:DisableAWSOrganizationsAccess",
        "resource_mappings": {}
      }
    ],
    "disassociate-budget-from-resource": [
      {
        "action": "servicecatalog:DisassociateBudgetFromResource",
        "resource_mappings": {}
      }
    ],
    "disassociate-principal-from-portfolio": [
      {
        "action": "servicecatalog:DisassociatePrincipalFromPortfolio",
        "resource_mappings": {
          "PortfolioId": {
            "template": "${PortfolioId}"
          }
        }
      }
    ],
    "disassociate-product-from-portfolio": [
      {
        "action": "servicecatalog:DisassociateProductFromPortfolio",
        "resource_mappings": {}
      }
    ],
    "disassociate-service-action-from-provisioning-artifact": [
      {
        "action": "servicecatalog:DisassociateServiceActionFromProvisioningArtifact",
        "resource_mappings": {
          "ProductId": {
            "template": "${ProductId}"
          }
        }
      }
    ],
    "disassociate-tag-option-from-resource": [
      {
        "action": "servicecatalog:DisassociateTagOptionFromResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Portfolio": "%%iftemplatematch%${ResourceId}%%",
          "Product": "%%iftemplatematch%${ResourceId}%%"
        }
      }
    ],
    "enable-aws-organizations-access": [
      {
        "action": "servicecatalog:EnableAWSOrganizationsAccess",
        "resource_mappings": {}
      }
    ],
    "execute-provisioned-product-plan": [
      {
        "action": "servicecatalog:ExecuteProvisionedProductPlan",
        "resource_mappings": {}
      }
    ],
    "execute-provisioned-product-service-action": [
      {
        "action": "servicecatalog:ExecuteProvisionedProductServiceAction",
        "resource_mappings": {}
      }
    ],
    "get-aws-organizations-access-status": [
      {
        "action": "servicecatalog:GetAWSOrganizationsAccessStatus",
        "resource_mappings": {}
      }
    ],
    "get-provisioned-product-outputs": [
      {
        "action": "servicecatalog:GetProvisionedProductOutputs",
        "resource_mappings": {}
      }
    ],
    "import-as-provisioned-product": [
      {
        "action": "servicecatalog:ImportAsProvisionedProduct",
        "resource_mappings": {
          "ProductId": {
            "template": "${ProductId}"
          }
        }
      }
    ],
    "list-accepted-portfolio-shares": [
      {
        "action": "servicecatalog:ListAcceptedPortfolioShares",
        "resource_mappings": {}
      }
    ],
    "list-budgets-for-resource": [
      {
        "action": "servicecatalog:ListBudgetsForResource",
        "resource_mappings": {}
      }
    ],
    "list-constraints-for-portfolio": [
      {
        "action": "servicecatalog:ListConstraintsForPortfolio",
        "resource_mappings": {}
      }
    ],
    "list-launch-paths": [
      {
        "action": "servicecatalog:ListLaunchPaths",
        "resource_mappings": {
          "ProductId": {
            "template": "${ProductId}"
          }
        }
      }
    ],
    "list-organization-portfolio-access": [
      {
        "action": "servicecatalog:ListOrganizationPortfolioAccess",
        "resource_mappings": {}
      }
    ],
    "list-portfolio-access": [
      {
        "action": "servicecatalog:ListPortfolioAccess",
        "resource_mappings": {
          "PortfolioId": {
            "template": "${PortfolioId}"
          }
        }
      }
    ],
    "list-portfolios": [
      {
        "action": "servicecatalog:ListPortfolios",
        "resource_mappings": {}
      }
    ],
    "list-portfolios-for-product": [
      {
        "action": "servicecatalog:ListPortfoliosForProduct",
        "resource_mappings": {
          "ProductId": {
            "template": "${ProductId}"
          }
        }
      }
    ],
    "list-principals-for-portfolio": [
      {
        "action": "servicecatalog:ListPrincipalsForPortfolio",
        "resource_mappings": {
          "PortfolioId": {
            "template": "${PortfolioId}"
          }
        }
      }
    ],
    "list-provisioned-product-plans": [
      {
        "action": "servicecatalog:ListProvisionedProductPlans",
        "resource_mappings": {}
      }
    ],
    "list-provisioning-artifacts": [
      {
        "action": "servicecatalog:ListProvisioningArtifacts",
        "resource_mappings": {
          "ProductId": {
            "template": "${ProductId}"
          }
        }
      }
    ],
    "list-provisioning-artifacts-for-service-action": [
      {
        "action": "servicecatalog:ListProvisioningArtifactsForServiceAction",
        "resource_mappings": {}
      }
    ],
    "list-record-history": [
      {
        "action": "servicecatalog:ListRecordHistory",
        "resource_mappings": {}
      }
    ],
    "list-resources-for-tag-option": [
      {
        "action": "servicecatalog:ListResourcesForTagOption",
        "resource_mappings": {}
      }
    ],
    "list-service-actions": [
      {
        "action": "servicecatalog:ListServiceActions",
        "resource_mappings": {}
      }
    ],
    "list-service-actions-for-provisioning-artifact": [
      {
        "action": "servicecatalog:ListServiceActionsForProvisioningArtifact",
        "resource_mappings": {
          "ProductId": {
            "template": "${ProductId}"
          }
        }
      }
    ],
    "list-stack-instances-for-provisioned-product": [
      {
        "action": "servicecatalog:ListStackInstancesForProvisionedProduct",
        "resource_mappings": {}
      }
    ],
    "list-tag-options": [
      {
        "action": "servicecatalog:ListTagOptions",
        "resource_mappings": {}
      }
    ],
    "notify-provision-product-engine-workflow-result": [
      {
        "action": "servicecatalog:NotifyProvisionProductEngineWorkflowResult",
        "resource_mappings": {}
      }
    ],
    "notify-terminate-provisioned-product-engine-workflow-result": [
      {
        "action": "servicecatalog:NotifyTerminateProvisionedProductEngineWorkflowResult",
        "resource_mappings": {}
      }
    ],
    "notify-update-provisioned-product-engine-workflow-result": [
      {
        "action": "servicecatalog:NotifyUpdateProvisionedProductEngineWorkflowResult",
        "resource_mappings": {}
      }
    ],
    "provision-product": [
      {
        "action": "servicecatalog:ProvisionProduct",
        "resource_mappings": {
          "ProductId": {
            "template": "${ProductId}"
          }
        }
      }
    ],
    "reject-portfolio-share": [
      {
        "action": "servicecatalog:RejectPortfolioShare",
        "resource_mappings": {
          "PortfolioId": {
            "template": "${PortfolioId}"
          }
        }
      }
    ],
    "scan-provisioned-products": [
      {
        "action": "servicecatalog:ScanProvisionedProducts",
        "resource_mappings": {}
      }
    ],
    "search-products": [
      {
        "action": "servicecatalog:SearchProducts",
        "resource_mappings": {}
      }
    ],
    "search-products-as-admin": [
      {
        "action": "servicecatalog:SearchProductsAsAdmin",
        "resource_mappings": {}
      }
    ],
    "search-provisioned-products": [
      {
        "action": "servicecatalog:SearchProvisionedProducts",
        "resource_mappings": {}
      }
    ],
    "terminate-provisioned-product": [
      {
        "action": "servicecatalog:TerminateProvisionedProduct",
        "resource_mappings": {}
      }
    ],
    "update-constraint": [
      {
        "action": "servicecatalog:UpdateConstraint",
        "resource_mappings": {}
      }
    ],
    "update-portfolio": [
      {
        "action": "servicecatalog:UpdatePortfolio",
        "resource_mappings": {
          "PortfolioId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "update-portfolio-share": [
      {
        "action": "servicecatalog:UpdatePortfolioShare",
        "resource_mappings": {
          "PortfolioId": {
            "template": "${PortfolioId}"
          }
        }
      }
    ],
    "update-product": [
      {
        "action": "servicecatalog:UpdateProduct",
        "resource_mappings": {
          "ProductId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "update-provisioned-product": [
      {
        "action": "servicecatalog:UpdateProvisionedProduct",
        "resource_mappings": {}
      }
    ],
    "update-provisioned-product-properties": [
      {
        "action": "servicecatalog:UpdateProvisionedProductProperties",
        "resource_mappings": {}
      }
    ],
    "update-provisioning-artifact": [
      {
        "action": "servicecatalog:UpdateProvisioningArtifact",
        "resource_mappings": {
          "ProductId": {
            "template": "${ProductId}"
          }
        }
      }
    ],
    "update-service-action": [
      {
        "action": "servicecatalog:UpdateServiceAction",
        "resource_mappings": {}
      }
    ],
    "update-tag-option": [
      {
        "action": "servicecatalog:UpdateTagOption",
        "resource_mappings": {}
      }
    ]
  },
  "servicecatalog-appregistry": {
    "associate-attribute-group": [
      {
        "action": "servicecatalog:AssociateAttributeGroup",
        "resource_mappings": {
          "ApplicationId": {
            "template": "*"
          },
          "AttributeGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "associate-resource": [
      {
        "action": "servicecatalog:AssociateResource",
        "resource_mappings": {
          "ApplicationId": {
            "template": "*"
          }
        }
      }
    ],
    "create-application": [
      {
        "action": "servicecatalog:CreateApplication",
        "resource_mappings": {
          "ApplicationId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "create-attribute-group": [
      {
        "action": "servicecatalog:CreateAttributeGroup",
        "resource_mappings": {
          "AttributeGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-application": [
      {
        "action": "servicecatalog:DeleteApplication",
        "resource_mappings": {
          "ApplicationId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-attribute-group": [
      {
        "action": "servicecatalog:DeleteAttributeGroup",
        "resource_mappings": {
          "AttributeGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "disassociate-attribute-group": [
      {
        "action": "servicecatalog:DisassociateAttributeGroup",
        "resource_mappings": {
          "ApplicationId": {
            "template": "*"
          },
          "AttributeGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "disassociate-resource": [
      {
        "action": "servicecatalog:DisassociateResource",
        "resource_mappings": {
          "ApplicationId": {
            "template": "*"
          }
        }
      }
    ],
    "get-application": [
      {
        "action": "servicecatalog:GetApplication",
        "resource_mappings": {
          "ApplicationId": {
            "template": "*"
          }
        }
      }
    ],
    "get-associated-resource": [
      {
        "action": "servicecatalog:GetAssociatedResource",
        "resource_mappings": {
          "ApplicationId": {
            "template": "*"
          }
        }
      }
    ],
    "get-attribute-group": [
      {
        "action": "servicecatalog:GetAttributeGroup",
        "resource_mappings": {
          "AttributeGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "get-configuration": [
      {
        "action": "servicecatalog:GetConfiguration",
        "resource_mappings": {}
      }
    ],
    "list-applications": [
      {
        "action": "servicecatalog:ListApplications",
        "resource_mappings": {}
      }
    ],
    "list-associated-attribute-groups": [
      {
        "action": "servicecatalog:ListAssociatedAttributeGroups",
        "resource_mappings": {
          "ApplicationId": {
            "template": "*"
          }
        }
      }
    ],
    "list-associated-resources": [
      {
        "action": "servicecatalog:ListAssociatedResources",
        "resource_mappings": {
          "ApplicationId": {
            "template": "*"
          }
        }
      }
    ],
    "list-attribute-groups": [
      {
        "action": "servicecatalog:ListAttributeGroups",
        "resource_mappings": {}
      }
    ],
    "list-attribute-groups-for-application": [
      {
        "action": "servicecatalog:ListAttributeGroupsForApplication",
        "resource_mappings": {
          "ApplicationId": {
            "template": "*"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "servicecatalog:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Application": "%%iftemplatematch%${resourceArn}%%",
          "AttributeGroup": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "put-configuration": [
      {
        "action": "servicecatalog:PutConfiguration",
        "resource_mappings": {}
      }
    ],
    "sync-resource": [
      {
        "action": "servicecatalog:SyncResource",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "servicecatalog:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Application": "%%iftemplatematch%${resourceArn}%%",
          "AttributeGroup": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "servicecatalog:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Application": "%%iftemplatematch%${resourceArn}%%",
          "AttributeGroup": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-application": [
      {
        "action": "servicecatalog:UpdateApplication",
        "resource_mappings": {
          "ApplicationId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "update-attribute-group": [
      {
        "action": "servicecatalog:UpdateAttributeGroup",
        "resource_mappings": {
          "AttributeGroupId": {
            "template": "*"
          }
        }
      }
    ]
  },
  "servicediscovery": {
    "create-http-namespace": [
      {
        "action": "servicediscovery:CreateHttpNamespace",
        "resource_mappings": {}
      }
    ],
    "create-private-dns-namespace": [
      {
        "action": "servicediscovery:CreatePrivateDnsNamespace",
        "resource_mappings": {}
      }
    ],
    "create-public-dns-namespace": [
      {
        "action": "servicediscovery:CreatePublicDnsNamespace",
        "resource_mappings": {}
      }
    ],
    "create-service": [
      {
        "action": "servicediscovery:CreateService",
        "resource_mappings": {
          "NamespaceId": {
            "template": "${NamespaceId}"
          }
        }
      }
    ],
    "delete-namespace": [
      {
        "action": "servicediscovery:DeleteNamespace",
        "resource_mappings": {
          "NamespaceId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-service": [
      {
        "action": "servicediscovery:DeleteService",
        "resource_mappings": {
          "ServiceId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "deregister-instance": [
      {
        "action": "servicediscovery:DeregisterInstance",
        "resource_mappings": {
          "ServiceId": {
            "template": "${ServiceId}"
          }
        }
      }
    ],
    "discover-instances": [
      {
        "action": "servicediscovery:DiscoverInstances",
        "resource_mappings": {}
      }
    ],
    "discover-instances-revision": [
      {
        "note": "NotFound",
        "action": "ServiceDiscovery:DiscoverInstancesRevision",
        "resource_mappings": {}
      }
    ],
    "get-instance": [
      {
        "action": "servicediscovery:GetInstance",
        "resource_mappings": {}
      }
    ],
    "get-instances-health-status": [
      {
        "action": "servicediscovery:GetInstancesHealthStatus",
        "resource_mappings": {}
      }
    ],
    "get-namespace": [
      {
        "action": "servicediscovery:GetNamespace",
        "resource_mappings": {
          "NamespaceId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-operation": [
      {
        "action": "servicediscovery:GetOperation",
        "resource_mappings": {}
      }
    ],
    "get-service": [
      {
        "action": "servicediscovery:GetService",
        "resource_mappings": {
          "ServiceId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "list-instances": [
      {
        "action": "servicediscovery:ListInstances",
        "resource_mappings": {}
      }
    ],
    "list-namespaces": [
      {
        "action": "servicediscovery:ListNamespaces",
        "resource_mappings": {}
      }
    ],
    "list-operations": [
      {
        "action": "servicediscovery:ListOperations",
        "resource_mappings": {}
      }
    ],
    "list-services": [
      {
        "action": "servicediscovery:ListServices",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "servicediscovery:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "register-instance": [
      {
        "action": "servicediscovery:RegisterInstance",
        "resource_mappings": {
          "ServiceId": {
            "template": "${ServiceId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "servicediscovery:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "servicediscovery:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-http-namespace": [
      {
        "action": "servicediscovery:UpdateHttpNamespace",
        "resource_mappings": {
          "NamespaceId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "update-instance-custom-health-status": [
      {
        "action": "servicediscovery:UpdateInstanceCustomHealthStatus",
        "resource_mappings": {}
      }
    ],
    "update-private-dns-namespace": [
      {
        "action": "servicediscovery:UpdatePrivateDnsNamespace",
        "resource_mappings": {
          "NamespaceId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "update-public-dns-namespace": [
      {
        "action": "servicediscovery:UpdatePublicDnsNamespace",
        "resource_mappings": {
          "NamespaceId": {
            "template": "${Id}"
          }
        }
      }
    ],
    "update-service": [
      {
        "action": "servicediscovery:UpdateService",
        "resource_mappings": {
          "ServiceId": {
            "template": "${Id}"
          }
        }
      }
    ]
  },
  "ses": {
    "clone-receipt-rule-set": [
      {
        "action": "ses:CloneReceiptRuleSet",
        "resource_mappings": {}
      }
    ],
    "create-configuration-set": [
      {
        "action": "ses:CreateConfigurationSet",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSet.Name}"
          }
        }
      }
    ],
    "create-configuration-set-event-destination": [
      {
        "action": "ses:CreateConfigurationSetEventDestination",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${EventDestination.KinesisFirehoseDestination.IAMRoleARN}"
        }
      }
    ],
    "create-configuration-set-tracking-options": [
      {
        "action": "ses:CreateConfigurationSetTrackingOptions",
        "resource_mappings": {}
      }
    ],
    "create-custom-verification-email-template": [
      {
        "action": "ses:CreateCustomVerificationEmailTemplate",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      },
      {
        "action": "ses:CreateCustomVerificationEmailTemplate",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "create-receipt-filter": [
      {
        "action": "ses:CreateReceiptFilter",
        "resource_mappings": {}
      }
    ],
    "create-receipt-rule": [
      {
        "action": "ses:CreateReceiptRule",
        "resource_mappings": {}
      }
    ],
    "create-receipt-rule-set": [
      {
        "action": "ses:CreateReceiptRuleSet",
        "resource_mappings": {}
      }
    ],
    "create-template": [
      {
        "action": "ses:CreateTemplate",
        "resource_mappings": {}
      }
    ],
    "delete-configuration-set": [
      {
        "action": "ses:DeleteConfigurationSet",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      }
    ],
    "delete-configuration-set-event-destination": [
      {
        "action": "ses:DeleteConfigurationSetEventDestination",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      }
    ],
    "delete-configuration-set-tracking-options": [
      {
        "action": "ses:DeleteConfigurationSetTrackingOptions",
        "resource_mappings": {}
      }
    ],
    "delete-custom-verification-email-template": [
      {
        "action": "ses:DeleteCustomVerificationEmailTemplate",
        "resource_mappings": {}
      }
    ],
    "delete-identity": [
      {
        "action": "ses:DeleteIdentity",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "delete-identity-policy": [
      {
        "action": "ses:DeleteIdentityPolicy",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "delete-receipt-filter": [
      {
        "action": "ses:DeleteReceiptFilter",
        "resource_mappings": {}
      }
    ],
    "delete-receipt-rule": [
      {
        "action": "ses:DeleteReceiptRule",
        "resource_mappings": {}
      }
    ],
    "delete-receipt-rule-set": [
      {
        "action": "ses:DeleteReceiptRuleSet",
        "resource_mappings": {}
      }
    ],
    "delete-template": [
      {
        "action": "ses:DeleteTemplate",
        "resource_mappings": {}
      }
    ],
    "describe-active-receipt-rule-set": [
      {
        "action": "ses:DescribeActiveReceiptRuleSet",
        "resource_mappings": {}
      }
    ],
    "describe-configuration-set": [
      {
        "action": "ses:DescribeConfigurationSet",
        "resource_mappings": {}
      }
    ],
    "describe-receipt-rule": [
      {
        "action": "ses:DescribeReceiptRule",
        "resource_mappings": {}
      }
    ],
    "describe-receipt-rule-set": [
      {
        "action": "ses:DescribeReceiptRuleSet",
        "resource_mappings": {}
      }
    ],
    "get-account-sending-enabled": [
      {
        "action": "ses:GetAccountSendingEnabled",
        "resource_mappings": {}
      }
    ],
    "get-custom-verification-email-template": [
      {
        "action": "ses:GetCustomVerificationEmailTemplate",
        "resource_mappings": {}
      }
    ],
    "get-identity-dkim-attributes": [
      {
        "action": "ses:GetIdentityDkimAttributes",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "get-identity-mail-from-domain-attributes": [
      {
        "action": "ses:GetIdentityMailFromDomainAttributes",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "get-identity-notification-attributes": [
      {
        "action": "ses:GetIdentityNotificationAttributes",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "get-identity-policies": [
      {
        "action": "ses:GetIdentityPolicies",
        "resource_mappings": {}
      }
    ],
    "get-identity-verification-attributes": [
      {
        "action": "ses:GetIdentityVerificationAttributes",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "get-send-quota": [
      {
        "action": "ses:GetSendQuota",
        "resource_mappings": {}
      }
    ],
    "get-send-statistics": [
      {
        "action": "ses:GetSendStatistics",
        "resource_mappings": {}
      }
    ],
    "get-template": [
      {
        "action": "ses:GetTemplate",
        "resource_mappings": {}
      }
    ],
    "list-configuration-sets": [
      {
        "action": "ses:ListConfigurationSets",
        "resource_mappings": {}
      }
    ],
    "list-custom-verification-email-templates": [
      {
        "action": "ses:ListCustomVerificationEmailTemplates",
        "resource_mappings": {}
      }
    ],
    "list-identities": [
      {
        "action": "ses:ListIdentities",
        "resource_mappings": {}
      }
    ],
    "list-identity-policies": [
      {
        "action": "ses:ListIdentityPolicies",
        "resource_mappings": {}
      }
    ],
    "list-receipt-filters": [
      {
        "action": "ses:ListReceiptFilters",
        "resource_mappings": {}
      }
    ],
    "list-receipt-rule-sets": [
      {
        "action": "ses:ListReceiptRuleSets",
        "resource_mappings": {}
      }
    ],
    "list-templates": [
      {
        "action": "ses:ListTemplates",
        "resource_mappings": {}
      }
    ],
    "put-configuration-set-delivery-options": [
      {
        "action": "ses:PutConfigurationSetDeliveryOptions",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      }
    ],
    "put-identity-policy": [
      {
        "action": "ses:PutIdentityPolicy",
        "resource_mappings": {}
      }
    ],
    "reorder-receipt-rule-set": [
      {
        "action": "ses:ReorderReceiptRuleSet",
        "resource_mappings": {}
      }
    ],
    "send-bounce": [
      {
        "action": "ses:SendBounce",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "send-bulk-templated-email": [
      {
        "action": "ses:SendBulkTemplatedEmail",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "send-custom-verification-email": [
      {
        "action": "ses:SendCustomVerificationEmail",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "send-email": [
      {
        "action": "ses:SendEmail",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "send-raw-email": [
      {
        "action": "ses:SendRawEmail",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "send-templated-email": [
      {
        "action": "ses:SendTemplatedEmail",
        "resource_mappings": {}
      }
    ],
    "set-active-receipt-rule-set": [
      {
        "action": "ses:SetActiveReceiptRuleSet",
        "resource_mappings": {}
      }
    ],
    "set-identity-dkim-enabled": [
      {
        "action": "ses:SetIdentityDkimEnabled",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "set-identity-feedback-forwarding-enabled": [
      {
        "action": "ses:SetIdentityFeedbackForwardingEnabled",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "set-identity-headers-in-notifications-enabled": [
      {
        "action": "ses:SetIdentityHeadersInNotificationsEnabled",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "set-identity-mail-from-domain": [
      {
        "action": "ses:SetIdentityMailFromDomain",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "set-identity-notification-topic": [
      {
        "action": "ses:SetIdentityNotificationTopic",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "set-receipt-rule-position": [
      {
        "action": "ses:SetReceiptRulePosition",
        "resource_mappings": {}
      }
    ],
    "test-render-template": [
      {
        "action": "ses:TestRenderTemplate",
        "resource_mappings": {}
      }
    ],
    "update-account-sending-enabled": [
      {
        "action": "ses:UpdateAccountSendingEnabled",
        "resource_mappings": {}
      }
    ],
    "update-configuration-set-event-destination": [
      {
        "action": "ses:UpdateConfigurationSetEventDestination",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${EventDestination.KinesisFirehoseDestination.IAMRoleARN}"
        }
      }
    ],
    "update-configuration-set-reputation-metrics-enabled": [
      {
        "action": "ses:UpdateConfigurationSetReputationMetricsEnabled",
        "resource_mappings": {}
      }
    ],
    "update-configuration-set-sending-enabled": [
      {
        "action": "ses:UpdateConfigurationSetSendingEnabled",
        "resource_mappings": {}
      }
    ],
    "update-configuration-set-tracking-options": [
      {
        "action": "ses:UpdateConfigurationSetTrackingOptions",
        "resource_mappings": {}
      }
    ],
    "update-custom-verification-email-template": [
      {
        "action": "ses:UpdateCustomVerificationEmailTemplate",
        "resource_mappings": {}
      }
    ],
    "update-receipt-rule": [
      {
        "action": "ses:UpdateReceiptRule",
        "resource_mappings": {}
      }
    ],
    "update-template": [
      {
        "action": "ses:UpdateTemplate",
        "resource_mappings": {}
      }
    ],
    "verify-domain-dkim": [
      {
        "action": "ses:VerifyDomainDkim",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "verify-domain-identity": [
      {
        "action": "ses:VerifyDomainIdentity",
        "resource_mappings": {}
      }
    ],
    "verify-email-identity": [
      {
        "action": "ses:VerifyEmailIdentity",
        "resource_mappings": {}
      }
    ],
    "wait": [
      {
        "action": "ses:GetIdentityVerificationAttributes",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ]
  },
  "sesv2": {
    "batch-get-metric-data": [
      {
        "action": "ses:BatchGetMetricData",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "*"
          },
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "cancel-export-job": [
      {
        "action": "ses:CancelExportJob",
        "resource_mappings": {
          "ExportJobId": {
            "template": "${JobId}"
          }
        }
      }
    ],
    "create-configuration-set": [
      {
        "action": "ses:CreateConfigurationSet",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      }
    ],
    "create-configuration-set-event-destination": [
      {
        "action": "ses:CreateConfigurationSetEventDestination",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${EventDestination.KinesisFirehoseDestination.IAMRoleARN}"
        }
      }
    ],
    "create-contact": [
      {
        "action": "ses:CreateContact",
        "resource_mappings": {
          "ContactListName": {
            "template": "${ContactListName}"
          }
        }
      }
    ],
    "create-contact-list": [
      {
        "action": "ses:CreateContactList",
        "resource_mappings": {}
      }
    ],
    "create-custom-verification-email-template": [
      {
        "action": "ses:CreateCustomVerificationEmailTemplate",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      },
      {
        "action": "ses:CreateCustomVerificationEmailTemplate",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "create-dedicated-ip-pool": [
      {
        "action": "ses:CreateDedicatedIpPool",
        "resource_mappings": {
          "TemplateName": {
            "template": "${PoolName}"
          }
        }
      }
    ],
    "create-deliverability-test-report": [
      {
        "action": "ses:CreateDeliverabilityTestReport",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "create-email-identity": [
      {
        "action": "ses:CreateEmailIdentity",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "create-email-identity-policy": [
      {
        "action": "ses:CreateEmailIdentityPolicy",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "create-email-template": [
      {
        "action": "ses:CreateEmailTemplate",
        "resource_mappings": {}
      }
    ],
    "create-export-job": [
      {
        "action": "ses:CreateExportJob",
        "resource_mappings": {}
      }
    ],
    "create-import-job": [
      {
        "action": "ses:CreateImportJob",
        "resource_mappings": {}
      }
    ],
    "delete-configuration-set": [
      {
        "action": "ses:DeleteConfigurationSet",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      }
    ],
    "delete-configuration-set-event-destination": [
      {
        "action": "ses:DeleteConfigurationSetEventDestination",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      }
    ],
    "delete-contact": [
      {
        "action": "ses:DeleteContact",
        "resource_mappings": {
          "ContactListName": {
            "template": "${ContactListName}"
          }
        }
      }
    ],
    "delete-contact-list": [
      {
        "action": "ses:DeleteContactList",
        "resource_mappings": {
          "ContactListName": {
            "template": "${ContactListName}"
          }
        }
      }
    ],
    "delete-custom-verification-email-template": [
      {
        "action": "ses:DeleteCustomVerificationEmailTemplate",
        "resource_mappings": {}
      }
    ],
    "delete-dedicated-ip-pool": [
      {
        "action": "ses:DeleteDedicatedIpPool",
        "resource_mappings": {
          "TemplateName": {
            "template": "${PoolName}"
          }
        }
      }
    ],
    "delete-email-identity": [
      {
        "action": "ses:DeleteEmailIdentity",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "delete-email-identity-policy": [
      {
        "action": "ses:DeleteEmailIdentityPolicy",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "delete-email-template": [
      {
        "action": "ses:DeleteEmailTemplate",
        "resource_mappings": {
          "TemplateName": {
            "template": "${TemplateName}"
          }
        }
      }
    ],
    "delete-suppressed-destination": [
      {
        "action": "ses:DeleteSuppressedDestination",
        "resource_mappings": {}
      }
    ],
    "get-account": [
      {
        "action": "ses:GetAccount",
        "resource_mappings": {}
      }
    ],
    "get-blacklist-reports": [
      {
        "action": "ses:GetBlacklistReports",
        "resource_mappings": {}
      }
    ],
    "get-configuration-set": [
      {
        "action": "ses:GetConfigurationSet",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      }
    ],
    "get-configuration-set-event-destinations": [
      {
        "action": "ses:GetConfigurationSetEventDestinations",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      }
    ],
    "get-contact": [
      {
        "action": "ses:GetContact",
        "resource_mappings": {
          "ContactListName": {
            "template": "${ContactListName}"
          }
        }
      }
    ],
    "get-contact-list": [
      {
        "action": "ses:GetContactList",
        "resource_mappings": {
          "ContactListName": {
            "template": "${ContactListName}"
          }
        }
      }
    ],
    "get-custom-verification-email-template": [
      {
        "action": "ses:GetCustomVerificationEmailTemplate",
        "resource_mappings": {}
      }
    ],
    "get-dedicated-ip": [
      {
        "action": "ses:GetDedicatedIp",
        "resource_mappings": {}
      }
    ],
    "get-dedicated-ip-pool": [
      {
        "action": "ses:GetDedicatedIpPool",
        "resource_mappings": {
          "DedicatedIPPool": {
            "template": "*"
          }
        }
      }
    ],
    "get-dedicated-ips": [
      {
        "action": "ses:GetDedicatedIps",
        "resource_mappings": {
          "TemplateName": {
            "template": "${PoolName}"
          }
        }
      }
    ],
    "get-deliverability-dashboard-options": [
      {
        "action": "ses:GetDeliverabilityDashboardOptions",
        "resource_mappings": {}
      }
    ],
    "get-deliverability-test-report": [
      {
        "action": "ses:GetDeliverabilityTestReport",
        "resource_mappings": {
          "TemplateName": {
            "template": "${ReportId}"
          }
        }
      }
    ],
    "get-domain-deliverability-campaign": [
      {
        "action": "ses:GetDomainDeliverabilityCampaign",
        "resource_mappings": {}
      },
      {
        "action": "ses:GetDomainDeliverabilityCampaign",
        "resource_mappings": {}
      }
    ],
    "get-domain-statistics-report": [
      {
        "action": "ses:GetDomainStatisticsReport",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "get-email-identity": [
      {
        "action": "ses:GetEmailIdentity",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "get-email-identity-policies": [
      {
        "action": "ses:GetEmailIdentityPolicies",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "get-email-template": [
      {
        "action": "ses:GetEmailTemplate",
        "resource_mappings": {
          "TemplateName": {
            "template": "${TemplateName}"
          }
        }
      }
    ],
    "get-export-job": [
      {
        "action": "ses:GetExportJob",
        "resource_mappings": {
          "ExportJobId": {
            "template": "${JobId}"
          }
        }
      }
    ],
    "get-import-job": [
      {
        "action": "ses:GetImportJob",
        "resource_mappings": {
          "ImportJobId": {
            "template": "${JobId}"
          }
        }
      }
    ],
    "get-message-insights": [
      {
        "action": "ses:GetMessageInsights",
        "resource_mappings": {}
      }
    ],
    "get-suppressed-destination": [
      {
        "action": "ses:GetSuppressedDestination",
        "resource_mappings": {}
      }
    ],
    "list-configuration-sets": [
      {
        "action": "ses:ListConfigurationSets",
        "resource_mappings": {}
      }
    ],
    "list-contact-lists": [
      {
        "action": "ses:ListContactLists",
        "resource_mappings": {}
      }
    ],
    "list-contacts": [
      {
        "action": "ses:ListContacts",
        "resource_mappings": {
          "ContactListName": {
            "template": "${ContactListName}"
          }
        }
      }
    ],
    "list-custom-verification-email-templates": [
      {
        "action": "ses:ListCustomVerificationEmailTemplates",
        "resource_mappings": {}
      }
    ],
    "list-dedicated-ip-pools": [
      {
        "action": "ses:ListDedicatedIpPools",
        "resource_mappings": {}
      }
    ],
    "list-deliverability-test-reports": [
      {
        "action": "ses:ListDeliverabilityTestReports",
        "resource_mappings": {}
      }
    ],
    "list-domain-deliverability-campaigns": [
      {
        "action": "ses:ListDomainDeliverabilityCampaigns",
        "resource_mappings": {}
      },
      {
        "action": "ses:ListDomainDeliverabilityCampaigns",
        "resource_mappings": {}
      }
    ],
    "list-email-identities": [
      {
        "action": "ses:ListEmailIdentities",
        "resource_mappings": {}
      }
    ],
    "list-email-templates": [
      {
        "action": "ses:ListEmailTemplates",
        "resource_mappings": {}
      }
    ],
    "list-export-jobs": [
      {
        "action": "ses:ListExportJobs",
        "resource_mappings": {}
      }
    ],
    "list-import-jobs": [
      {
        "action": "ses:ListImportJobs",
        "resource_mappings": {}
      }
    ],
    "list-recommendations": [
      {
        "action": "ses:ListRecommendations",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "list-suppressed-destinations": [
      {
        "action": "ses:ListSuppressedDestinations",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "ses:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "configuration-set": "%%iftemplatematch%${ResourceArn}%%",
          "dedicated-ip-pool": "%%iftemplatematch%${ResourceArn}%%",
          "deliverability-test-report": "%%iftemplatematch%${ResourceArn}%%",
          "identity": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "put-account-dedicated-ip-warmup-attributes": [
      {
        "action": "ses:PutAccountDedicatedIpWarmupAttributes",
        "resource_mappings": {}
      }
    ],
    "put-account-details": [
      {
        "action": "ses:PutAccountDetails",
        "resource_mappings": {}
      }
    ],
    "put-account-sending-attributes": [
      {
        "action": "ses:PutAccountSendingAttributes",
        "resource_mappings": {}
      }
    ],
    "put-account-suppression-attributes": [
      {
        "action": "ses:PutAccountSuppressionAttributes",
        "resource_mappings": {}
      }
    ],
    "put-account-vdm-attributes": [
      {
        "action": "ses:PutAccountVdmAttributes",
        "resource_mappings": {}
      }
    ],
    "put-configuration-set-delivery-options": [
      {
        "action": "ses:PutConfigurationSetDeliveryOptions",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      }
    ],
    "put-configuration-set-reputation-options": [
      {
        "action": "ses:PutConfigurationSetReputationOptions",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      }
    ],
    "put-configuration-set-sending-options": [
      {
        "action": "ses:PutConfigurationSetSendingOptions",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      }
    ],
    "put-configuration-set-suppression-options": [
      {
        "action": "ses:PutConfigurationSetSuppressionOptions",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      }
    ],
    "put-configuration-set-tracking-options": [
      {
        "action": "ses:PutConfigurationSetTrackingOptions",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      }
    ],
    "put-configuration-set-vdm-options": [
      {
        "action": "ses:PutConfigurationSetVdmOptions",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      }
    ],
    "put-dedicated-ip-in-pool": [
      {
        "action": "ses:PutDedicatedIpInPool",
        "resource_mappings": {
          "TemplateName": {
            "template": "${DestinationPoolName}"
          }
        }
      }
    ],
    "put-dedicated-ip-pool-scaling-attributes": [
      {
        "note": "NotFound",
        "action": "SESv2:PutDedicatedIpPoolScalingAttributes",
        "resource_mappings": {}
      }
    ],
    "put-dedicated-ip-warmup-attributes": [
      {
        "action": "ses:PutDedicatedIpWarmupAttributes",
        "resource_mappings": {}
      }
    ],
    "put-deliverability-dashboard-option": [
      {
        "action": "ses:PutDeliverabilityDashboardOption",
        "resource_mappings": {}
      }
    ],
    "put-email-identity-configuration-set-attributes": [
      {
        "action": "ses:PutEmailIdentityConfigurationSetAttributes",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          },
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      }
    ],
    "put-email-identity-dkim-attributes": [
      {
        "action": "ses:PutEmailIdentityDkimAttributes",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "put-email-identity-dkim-signing-attributes": [
      {
        "action": "ses:PutEmailIdentityDkimSigningAttributes",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "put-email-identity-feedback-attributes": [
      {
        "action": "ses:PutEmailIdentityFeedbackAttributes",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "put-email-identity-mail-from-attributes": [
      {
        "action": "ses:PutEmailIdentityMailFromAttributes",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "put-suppressed-destination": [
      {
        "action": "ses:PutSuppressedDestination",
        "resource_mappings": {}
      }
    ],
    "send-bulk-email": [
      {
        "action": "ses:SendBulkEmail",
        "resource_mappings": {}
      }
    ],
    "send-custom-verification-email": [
      {
        "action": "ses:SendCustomVerificationEmail",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "send-email": [
      {
        "action": "ses:SendEmail",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "ses:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "configuration-set": "%%iftemplatematch%${ResourceArn}%%",
          "dedicated-ip-pool": "%%iftemplatematch%${ResourceArn}%%",
          "deliverability-test-report": "%%iftemplatematch%${ResourceArn}%%",
          "identity": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "test-render-email-template": [
      {
        "action": "ses:TestRenderEmailTemplate",
        "resource_mappings": {
          "TemplateName": {
            "template": "${TemplateName}"
          }
        }
      }
    ],
    "untag-resource": [
      {
        "action": "ses:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "configuration-set": "%%iftemplatematch%${ResourceArn}%%",
          "dedicated-ip-pool": "%%iftemplatematch%${ResourceArn}%%",
          "deliverability-test-report": "%%iftemplatematch%${ResourceArn}%%",
          "identity": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-configuration-set-event-destination": [
      {
        "action": "ses:UpdateConfigurationSetEventDestination",
        "resource_mappings": {
          "ConfigurationSetName": {
            "template": "${ConfigurationSetName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${EventDestination.KinesisFirehoseDestination.IAMRoleARN}"
        }
      }
    ],
    "update-contact": [
      {
        "action": "ses:UpdateContact",
        "resource_mappings": {
          "ContactListName": {
            "template": "${ContactListName}"
          }
        }
      }
    ],
    "update-contact-list": [
      {
        "action": "ses:UpdateContactList",
        "resource_mappings": {
          "ContactListName": {
            "template": "${ContactListName}"
          }
        }
      }
    ],
    "update-custom-verification-email-template": [
      {
        "action": "ses:UpdateCustomVerificationEmailTemplate",
        "resource_mappings": {}
      }
    ],
    "update-email-identity-policy": [
      {
        "action": "ses:UpdateEmailIdentityPolicy",
        "resource_mappings": {
          "IdentityName": {
            "template": "*"
          }
        }
      }
    ],
    "update-email-template": [
      {
        "action": "ses:UpdateEmailTemplate",
        "resource_mappings": {
          "TemplateName": {
            "template": "${TemplateName}"
          }
        }
      }
    ]
  },
  "shield": {
    "associate-drt-log-bucket": [
      {
        "action": "shield:AssociateDRTLogBucket",
        "resource_mappings": {}
      }
    ],
    "associate-drt-role": [
      {
        "action": "shield:AssociateDRTRole",
        "resource_mappings": {}
      },
      {
        "action": "iam:GetRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${RoleArn}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "associate-health-check": [
      {
        "action": "shield:AssociateHealthCheck",
        "resource_mappings": {
          "Id": {
            "template": "${ProtectionId}"
          }
        }
      },
      {
        "action": "route53:GetHealthCheck",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "healthcheck": "${HealthCheckArn}"
        }
      }
    ],
    "associate-proactive-engagement-details": [
      {
        "action": "shield:AssociateProactiveEngagementDetails",
        "resource_mappings": {}
      }
    ],
    "create-protection": [
      {
        "action": "shield:CreateProtection",
        "resource_mappings": {}
      }
    ],
    "create-protection-group": [
      {
        "action": "shield:CreateProtectionGroup",
        "resource_mappings": {}
      }
    ],
    "create-subscription": [
      {
        "action": "shield:CreateSubscription",
        "resource_mappings": {}
      }
    ],
    "delete-protection": [
      {
        "action": "shield:DeleteProtection",
        "resource_mappings": {
          "Id": {
            "template": "${ProtectionId}"
          }
        }
      }
    ],
    "delete-protection-group": [
      {
        "action": "shield:DeleteProtectionGroup",
        "resource_mappings": {
          "Id": {
            "template": "${ProtectionGroupId}"
          }
        }
      }
    ],
    "delete-subscription": [
      {
        "action": "shield:DeleteSubscription",
        "resource_mappings": {}
      }
    ],
    "describe-attack": [
      {
        "action": "shield:DescribeAttack",
        "resource_mappings": {
          "Id": {
            "template": "${AttackId}"
          }
        }
      }
    ],
    "describe-attack-statistics": [
      {
        "action": "shield:DescribeAttackStatistics",
        "resource_mappings": {}
      }
    ],
    "describe-drt-access": [
      {
        "action": "shield:DescribeDRTAccess",
        "resource_mappings": {}
      }
    ],
    "describe-emergency-contact-settings": [
      {
        "action": "shield:DescribeEmergencyContactSettings",
        "resource_mappings": {}
      }
    ],
    "describe-protection": [
      {
        "action": "shield:DescribeProtection",
        "resource_mappings": {
          "Id": {
            "template": "${ProtectionId}"
          }
        }
      }
    ],
    "describe-protection-group": [
      {
        "action": "shield:DescribeProtectionGroup",
        "resource_mappings": {
          "Id": {
            "template": "${ProtectionGroupId}"
          }
        }
      }
    ],
    "describe-subscription": [
      {
        "action": "shield:DescribeSubscription",
        "resource_mappings": {}
      }
    ],
    "disable-application-layer-automatic-response": [
      {
        "action": "shield:DisableApplicationLayerAutomaticResponse",
        "resource_mappings": {}
      }
    ],
    "disable-proactive-engagement": [
      {
        "action": "shield:DisableProactiveEngagement",
        "resource_mappings": {}
      }
    ],
    "disassociate-drt-log-bucket": [
      {
        "action": "shield:DisassociateDRTLogBucket",
        "resource_mappings": {}
      },
      {
        "action": "s3:DeleteBucketPolicy",
        "resource_mappings": {
          "BucketName": {
            "template": "${LogBucket}"
          }
        }
      }
    ],
    "disassociate-drt-role": [
      {
        "action": "shield:DisassociateDRTRole",
        "resource_mappings": {}
      }
    ],
    "disassociate-health-check": [
      {
        "action": "shield:DisassociateHealthCheck",
        "resource_mappings": {
          "Id": {
            "template": "${ProtectionId}"
          }
        }
      }
    ],
    "enable-application-layer-automatic-response": [
      {
        "action": "shield:EnableApplicationLayerAutomaticResponse",
        "resource_mappings": {}
      },
      {
        "action": "cloudfront:GetDistribution",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "distribution": "%%iftemplatematch%${ResourceArn}%%"
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:GetRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "enable-proactive-engagement": [
      {
        "action": "shield:EnableProactiveEngagement",
        "resource_mappings": {}
      }
    ],
    "get-subscription-state": [
      {
        "action": "shield:GetSubscriptionState",
        "resource_mappings": {}
      }
    ],
    "list-attacks": [
      {
        "action": "shield:ListAttacks",
        "resource_mappings": {}
      }
    ],
    "list-protection-groups": [
      {
        "action": "shield:ListProtectionGroups",
        "resource_mappings": {}
      }
    ],
    "list-protections": [
      {
        "action": "shield:ListProtections",
        "resource_mappings": {}
      }
    ],
    "list-resources-in-protection-group": [
      {
        "action": "shield:ListResourcesInProtectionGroup",
        "resource_mappings": {
          "Id": {
            "template": "${ProtectionGroupId}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "shield:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "protection": "%%iftemplatematch%${ResourceARN}%%",
          "protection-group": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "shield:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "protection": "%%iftemplatematch%${ResourceARN}%%",
          "protection-group": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "shield:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "protection": "%%iftemplatematch%${ResourceARN}%%",
          "protection-group": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "update-application-layer-automatic-response": [
      {
        "action": "shield:UpdateApplicationLayerAutomaticResponse",
        "resource_mappings": {}
      }
    ],
    "update-emergency-contact-settings": [
      {
        "action": "shield:UpdateEmergencyContactSettings",
        "resource_mappings": {}
      }
    ],
    "update-protection-group": [
      {
        "action": "shield:UpdateProtectionGroup",
        "resource_mappings": {
          "Id": {
            "template": "${ProtectionGroupId}"
          }
        }
      }
    ],
    "update-subscription": [
      {
        "action": "shield:UpdateSubscription",
        "resource_mappings": {}
      }
    ]
  },
  "signer": {
    "add-profile-permission": [
      {
        "action": "signer:AddProfilePermission",
        "resource_mappings": {
          "profileName": {
            "template": "${profileName}"
          }
        }
      }
    ],
    "cancel-signing-profile": [
      {
        "action": "signer:CancelSigningProfile",
        "resource_mappings": {
          "profileName": {
            "template": "${profileName}"
          }
        }
      }
    ],
    "describe-signing-job": [
      {
        "action": "signer:DescribeSigningJob",
        "resource_mappings": {
          "jobId": {
            "template": "${jobId}"
          }
        }
      }
    ],
    "get-revocation-status": [
      {
        "action": "signer:GetRevocationStatus",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "signing-job": "${jobArn}",
          "signing-profile": "${profileVersionArn}"
        }
      }
    ],
    "get-signing-platform": [
      {
        "action": "signer:GetSigningPlatform",
        "resource_mappings": {}
      }
    ],
    "get-signing-profile": [
      {
        "action": "signer:GetSigningProfile",
        "resource_mappings": {
          "profileName": {
            "template": "${profileName}"
          }
        }
      }
    ],
    "list-profile-permissions": [
      {
        "action": "signer:ListProfilePermissions",
        "resource_mappings": {
          "profileName": {
            "template": "${profileName}"
          }
        }
      }
    ],
    "list-signing-jobs": [
      {
        "action": "signer:ListSigningJobs",
        "resource_mappings": {}
      }
    ],
    "list-signing-platforms": [
      {
        "action": "signer:ListSigningPlatforms",
        "resource_mappings": {}
      }
    ],
    "list-signing-profiles": [
      {
        "action": "signer:ListSigningProfiles",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "signer:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "signing-profile": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "put-signing-profile": [
      {
        "action": "signer:PutSigningProfile",
        "resource_mappings": {}
      }
    ],
    "remove-profile-permission": [
      {
        "action": "signer:RemoveProfilePermission",
        "resource_mappings": {
          "profileName": {
            "template": "${profileName}"
          }
        }
      }
    ],
    "revoke-signature": [
      {
        "action": "signer:RevokeSignature",
        "resource_mappings": {
          "jobId": {
            "template": "${jobId}"
          }
        }
      }
    ],
    "revoke-signing-profile": [
      {
        "action": "signer:RevokeSigningProfile",
        "resource_mappings": {
          "profileName": {
            "template": "${profileName}"
          }
        }
      }
    ],
    "sign-payload": [
      {
        "action": "signer:SignPayload",
        "resource_mappings": {
          "ProfileName": {
            "template": "${profileName}"
          }
        }
      }
    ],
    "start-signing-job": [
      {
        "action": "signer:StartSigningJob",
        "resource_mappings": {
          "profileName": {
            "template": "${profileName}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "signer:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "signing-profile": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "signer:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "signing-profile": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "wait": [
      {
        "action": "signer:DescribeSigningJob",
        "resource_mappings": {
          "jobId": {
            "template": "${jobId}"
          }
        }
      }
    ]
  },
  "simspaceweaver": {
    "create-snapshot": [
      {
        "action": "simspaceweaver:CreateSnapshot",
        "resource_mappings": {
          "SimulationName": {
            "template": "${Simulation}"
          }
        }
      }
    ],
    "delete-app": [
      {
        "action": "simspaceweaver:DeleteApp",
        "resource_mappings": {
          "SimulationName": {
            "template": "${Simulation}"
          }
        }
      }
    ],
    "delete-simulation": [
      {
        "action": "simspaceweaver:DeleteSimulation",
        "resource_mappings": {
          "SimulationName": {
            "template": "${Simulation}"
          }
        }
      }
    ],
    "describe-app": [
      {
        "action": "simspaceweaver:DescribeApp",
        "resource_mappings": {
          "SimulationName": {
            "template": "${Simulation}"
          }
        }
      }
    ],
    "describe-simulation": [
      {
        "action": "simspaceweaver:DescribeSimulation",
        "resource_mappings": {
          "SimulationName": {
            "template": "${Simulation}"
          }
        }
      }
    ],
    "list-apps": [
      {
        "action": "simspaceweaver:ListApps",
        "resource_mappings": {
          "SimulationName": {
            "template": "${Simulation}"
          }
        }
      }
    ],
    "list-simulations": [
      {
        "action": "simspaceweaver:ListSimulations",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "simspaceweaver:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "start-app": [
      {
        "action": "simspaceweaver:StartApp",
        "resource_mappings": {
          "SimulationName": {
            "template": "${Simulation}"
          }
        }
      }
    ],
    "start-clock": [
      {
        "action": "simspaceweaver:StartClock",
        "resource_mappings": {
          "SimulationName": {
            "template": "${Simulation}"
          }
        }
      }
    ],
    "start-simulation": [
      {
        "action": "simspaceweaver:StartSimulation",
        "resource_mappings": {}
      }
    ],
    "stop-app": [
      {
        "action": "simspaceweaver:StopApp",
        "resource_mappings": {
          "SimulationName": {
            "template": "${Simulation}"
          }
        }
      }
    ],
    "stop-clock": [
      {
        "action": "simspaceweaver:StopClock",
        "resource_mappings": {
          "SimulationName": {
            "template": "${Simulation}"
          }
        }
      }
    ],
    "stop-simulation": [
      {
        "action": "simspaceweaver:StopSimulation",
        "resource_mappings": {
          "SimulationName": {
            "template": "${Simulation}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "simspaceweaver:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Simulation": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "simspaceweaver:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Simulation": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ]
  },
  "sms": {
    "create-app": [
      {
        "action": "sms:CreateApp",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "arn:${Partition}:iam::${Account}:role/${roleName}"
        }
      }
    ],
    "create-replication-job": [
      {
        "action": "sms:CreateReplicationJob",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "arn:${Partition}:iam::${Account}:role/${roleName}"
        }
      }
    ],
    "delete-app": [
      {
        "action": "sms:DeleteApp",
        "resource_mappings": {}
      }
    ],
    "delete-app-launch-configuration": [
      {
        "action": "sms:DeleteAppLaunchConfiguration",
        "resource_mappings": {}
      }
    ],
    "delete-app-replication-configuration": [
      {
        "action": "sms:DeleteAppReplicationConfiguration",
        "resource_mappings": {}
      }
    ],
    "delete-app-validation-configuration": [
      {
        "action": "sms:DeleteAppValidationConfiguration",
        "resource_mappings": {}
      }
    ],
    "delete-replication-job": [
      {
        "action": "sms:DeleteReplicationJob",
        "resource_mappings": {}
      }
    ],
    "delete-server-catalog": [
      {
        "action": "sms:DeleteServerCatalog",
        "resource_mappings": {}
      }
    ],
    "disassociate-connector": [
      {
        "action": "sms:DisassociateConnector",
        "resource_mappings": {}
      }
    ],
    "generate-change-set": [
      {
        "action": "sms:GenerateChangeSet",
        "resource_mappings": {}
      }
    ],
    "generate-template": [
      {
        "action": "sms:GenerateTemplate",
        "resource_mappings": {}
      }
    ],
    "get-app": [
      {
        "action": "sms:GetApp",
        "resource_mappings": {}
      }
    ],
    "get-app-launch-configuration": [
      {
        "action": "sms:GetAppLaunchConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-app-replication-configuration": [
      {
        "action": "sms:GetAppReplicationConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-app-validation-configuration": [
      {
        "action": "sms:GetAppValidationConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-app-validation-output": [
      {
        "action": "sms:GetAppValidationOutput",
        "resource_mappings": {}
      }
    ],
    "get-connectors": [
      {
        "action": "sms:GetConnectors",
        "resource_mappings": {}
      }
    ],
    "get-replication-jobs": [
      {
        "action": "sms:GetReplicationJobs",
        "resource_mappings": {}
      }
    ],
    "get-replication-runs": [
      {
        "action": "sms:GetReplicationRuns",
        "resource_mappings": {}
      }
    ],
    "get-servers": [
      {
        "action": "sms:GetServers",
        "resource_mappings": {}
      }
    ],
    "import-app-catalog": [
      {
        "action": "sms:ImportAppCatalog",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "arn:${Partition}:iam::${Account}:role/${roleName}"
        }
      }
    ],
    "import-server-catalog": [
      {
        "action": "sms:ImportServerCatalog",
        "resource_mappings": {}
      }
    ],
    "launch-app": [
      {
        "action": "sms:LaunchApp",
        "resource_mappings": {}
      }
    ],
    "list-apps": [
      {
        "action": "sms:ListApps",
        "resource_mappings": {}
      }
    ],
    "notify-app-validation-output": [
      {
        "action": "sms:NotifyAppValidationOutput",
        "resource_mappings": {}
      }
    ],
    "put-app-launch-configuration": [
      {
        "action": "sms:PutAppLaunchConfiguration",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "put-app-replication-configuration": [
      {
        "action": "sms:PutAppReplicationConfiguration",
        "resource_mappings": {}
      }
    ],
    "put-app-validation-configuration": [
      {
        "action": "sms:PutAppValidationConfiguration",
        "resource_mappings": {}
      }
    ],
    "start-app-replication": [
      {
        "action": "sms:StartAppReplication",
        "resource_mappings": {}
      }
    ],
    "start-on-demand-app-replication": [
      {
        "action": "sms:StartOnDemandAppReplication",
        "resource_mappings": {}
      }
    ],
    "start-on-demand-replication-run": [
      {
        "action": "sms:StartOnDemandReplicationRun",
        "resource_mappings": {}
      }
    ],
    "stop-app-replication": [
      {
        "action": "sms:StopAppReplication",
        "resource_mappings": {}
      }
    ],
    "terminate-app": [
      {
        "action": "sms:TerminateApp",
        "resource_mappings": {}
      }
    ],
    "update-app": [
      {
        "action": "sms:UpdateApp",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "arn:${Partition}:iam::${Account}:role/${roleName}"
        }
      }
    ],
    "update-replication-job": [
      {
        "action": "sms:UpdateReplicationJob",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "arn:${Partition}:iam::${Account}:role/${roleName}"
        }
      }
    ]
  },
  "sms-voice": {
    "create-configuration-set": [
      {
        "action": "sms-voice:CreateConfigurationSet",
        "resource_mappings": {}
      }
    ],
    "create-configuration-set-event-destination": [
      {
        "action": "sms-voice:CreateConfigurationSetEventDestination",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${EventDestination.CloudWatchLogsDestination.IamRoleArn}%${EventDestination.KinesisFirehoseDestination.IamRoleArn}%%"
        }
      }
    ],
    "delete-configuration-set": [
      {
        "action": "sms-voice:DeleteConfigurationSet",
        "resource_mappings": {}
      }
    ],
    "delete-configuration-set-event-destination": [
      {
        "action": "sms-voice:DeleteConfigurationSetEventDestination",
        "resource_mappings": {}
      }
    ],
    "get-configuration-set-event-destinations": [
      {
        "action": "sms-voice:GetConfigurationSetEventDestinations",
        "resource_mappings": {}
      }
    ],
    "list-configuration-sets": [
      {
        "action": "sms-voice:ListConfigurationSets",
        "resource_mappings": {}
      }
    ],
    "send-voice-message": [
      {
        "action": "sms-voice:SendVoiceMessage",
        "resource_mappings": {}
      }
    ],
    "update-configuration-set-event-destination": [
      {
        "action": "sms-voice:UpdateConfigurationSetEventDestination",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${EventDestination.CloudWatchLogsDestination.IamRoleArn}%${EventDestination.KinesisFirehoseDestination.IamRoleArn}%%"
        }
      }
    ]
  },
  "snow-device-management": {
    "cancel-task": [
      {
        "action": "snow-device-management:CancelTask",
        "resource_mappings": {
          "ResourceId": {
            "template": "${taskId}"
          }
        }
      }
    ],
    "create-task": [
      {
        "action": "snow-device-management:CreateTask",
        "resource_mappings": {}
      }
    ],
    "describe-device": [
      {
        "action": "snow-device-management:DescribeDevice",
        "resource_mappings": {
          "ResourceId": {
            "template": "${managedDeviceId}"
          }
        }
      }
    ],
    "describe-device-ec2-instances": [
      {
        "action": "snow-device-management:DescribeDeviceEc2Instances",
        "resource_mappings": {
          "ResourceId": {
            "template": "${managedDeviceId}"
          }
        }
      }
    ],
    "describe-execution": [
      {
        "action": "snow-device-management:DescribeExecution",
        "resource_mappings": {}
      }
    ],
    "describe-task": [
      {
        "action": "snow-device-management:DescribeTask",
        "resource_mappings": {
          "ResourceId": {
            "template": "${taskId}"
          }
        }
      }
    ],
    "list-device-resources": [
      {
        "action": "snow-device-management:ListDeviceResources",
        "resource_mappings": {
          "ResourceId": {
            "template": "${managedDeviceId}"
          }
        }
      }
    ],
    "list-devices": [
      {
        "action": "snow-device-management:ListDevices",
        "resource_mappings": {}
      }
    ],
    "list-executions": [
      {
        "action": "snow-device-management:ListExecutions",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "snow-device-management:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "list-tasks": [
      {
        "action": "snow-device-management:ListTasks",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "snow-device-management:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "managed-device": "%%iftemplatematch%${resourceArn}%%",
          "task": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "snow-device-management:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "managed-device": "%%iftemplatematch%${resourceArn}%%",
          "task": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ]
  },
  "snowball": {
    "cancel-cluster": [
      {
        "action": "snowball:CancelCluster",
        "resource_mappings": {}
      }
    ],
    "cancel-job": [
      {
        "action": "snowball:CancelJob",
        "resource_mappings": {}
      }
    ],
    "create-address": [
      {
        "action": "snowball:CreateAddress",
        "resource_mappings": {}
      }
    ],
    "create-cluster": [
      {
        "action": "snowball:CreateCluster",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleARN}"
        }
      }
    ],
    "create-job": [
      {
        "action": "snowball:CreateJob",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleARN}"
        }
      }
    ],
    "create-long-term-pricing": [
      {
        "action": "snowball:CreateLongTermPricing",
        "resource_mappings": {}
      }
    ],
    "create-return-shipping-label": [
      {
        "action": "snowball:CreateReturnShippingLabel",
        "resource_mappings": {}
      }
    ],
    "describe-address": [
      {
        "action": "snowball:DescribeAddress",
        "resource_mappings": {}
      }
    ],
    "describe-addresses": [
      {
        "action": "snowball:DescribeAddresses",
        "resource_mappings": {}
      }
    ],
    "describe-cluster": [
      {
        "action": "snowball:DescribeCluster",
        "resource_mappings": {}
      }
    ],
    "describe-job": [
      {
        "action": "snowball:DescribeJob",
        "resource_mappings": {}
      }
    ],
    "describe-return-shipping-label": [
      {
        "action": "snowball:DescribeReturnShippingLabel",
        "resource_mappings": {}
      }
    ],
    "get-job-manifest": [
      {
        "action": "snowball:GetJobManifest",
        "resource_mappings": {}
      }
    ],
    "get-job-unlock-code": [
      {
        "action": "snowball:GetJobUnlockCode",
        "resource_mappings": {}
      }
    ],
    "get-snowball-usage": [
      {
        "action": "snowball:GetSnowballUsage",
        "resource_mappings": {}
      }
    ],
    "get-software-updates": [
      {
        "action": "snowball:GetSoftwareUpdates",
        "resource_mappings": {}
      }
    ],
    "list-cluster-jobs": [
      {
        "action": "snowball:ListClusterJobs",
        "resource_mappings": {}
      }
    ],
    "list-clusters": [
      {
        "action": "snowball:ListClusters",
        "resource_mappings": {}
      }
    ],
    "list-compatible-images": [
      {
        "action": "snowball:ListCompatibleImages",
        "resource_mappings": {}
      }
    ],
    "list-jobs": [
      {
        "action": "snowball:ListJobs",
        "resource_mappings": {}
      }
    ],
    "list-long-term-pricing": [
      {
        "action": "snowball:ListLongTermPricing",
        "resource_mappings": {}
      }
    ],
    "list-pickup-locations": [
      {
        "action": "snowball:ListPickupLocations",
        "resource_mappings": {}
      }
    ],
    "list-service-versions": [
      {
        "action": "snowball:ListServiceVersions",
        "resource_mappings": {}
      }
    ],
    "update-cluster": [
      {
        "action": "snowball:UpdateCluster",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleARN}"
        }
      }
    ],
    "update-job": [
      {
        "action": "snowball:UpdateJob",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleARN}"
        }
      }
    ],
    "update-job-shipment-state": [
      {
        "action": "snowball:UpdateJobShipmentState",
        "resource_mappings": {}
      }
    ],
    "update-long-term-pricing": [
      {
        "action": "snowball:UpdateLongTermPricing",
        "resource_mappings": {}
      }
    ]
  },
  "sns": {
    "add-permission": [
      {
        "action": "sns:AddPermission",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "topic": "${TopicArn}"
        }
      }
    ],
    "check-if-phone-number-is-opted-out": [
      {
        "action": "sns:CheckIfPhoneNumberIsOptedOut",
        "resource_mappings": {}
      }
    ],
    "confirm-subscription": [
      {
        "action": "sns:ConfirmSubscription",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "topic": "${TopicArn}"
        }
      }
    ],
    "create-platform-application": [
      {
        "action": "sns:CreatePlatformApplication",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "create-platform-endpoint": [
      {
        "action": "sns:CreatePlatformEndpoint",
        "resource_mappings": {}
      }
    ],
    "create-sms-sandbox-phone-number": [
      {
        "action": "sns:CreateSMSSandboxPhoneNumber",
        "resource_mappings": {}
      }
    ],
    "create-topic": [
      {
        "action": "sns:CreateTopic",
        "resource_mappings": {
          "TopicName": {
            "template": "${Name}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "delete-endpoint": [
      {
        "action": "sns:DeleteEndpoint",
        "resource_mappings": {}
      }
    ],
    "delete-platform-application": [
      {
        "action": "sns:DeletePlatformApplication",
        "resource_mappings": {}
      }
    ],
    "delete-sms-sandbox-phone-number": [
      {
        "action": "sns:DeleteSMSSandboxPhoneNumber",
        "resource_mappings": {}
      }
    ],
    "delete-topic": [
      {
        "action": "sns:DeleteTopic",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "topic": "${TopicArn}"
        }
      }
    ],
    "get-data-protection-policy": [
      {
        "action": "sns:GetDataProtectionPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "topic": "${ResourceArn}"
        }
      }
    ],
    "get-endpoint-attributes": [
      {
        "action": "sns:GetEndpointAttributes",
        "resource_mappings": {}
      }
    ],
    "get-platform-application-attributes": [
      {
        "action": "sns:GetPlatformApplicationAttributes",
        "resource_mappings": {}
      }
    ],
    "get-sms-attributes": [
      {
        "action": "sns:GetSMSAttributes",
        "resource_mappings": {}
      }
    ],
    "get-sms-sandbox-account-status": [
      {
        "action": "sns:GetSMSSandboxAccountStatus",
        "resource_mappings": {}
      }
    ],
    "get-subscription-attributes": [
      {
        "action": "sns:GetSubscriptionAttributes",
        "resource_mappings": {}
      }
    ],
    "get-topic-attributes": [
      {
        "action": "sns:GetTopicAttributes",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "topic": "${TopicArn}"
        }
      }
    ],
    "list-endpoints-by-platform-application": [
      {
        "action": "sns:ListEndpointsByPlatformApplication",
        "resource_mappings": {}
      }
    ],
    "list-origination-numbers": [
      {
        "action": "sns:ListOriginationNumbers",
        "resource_mappings": {}
      }
    ],
    "list-phone-numbers-opted-out": [
      {
        "action": "sns:ListPhoneNumbersOptedOut",
        "resource_mappings": {}
      }
    ],
    "list-platform-applications": [
      {
        "action": "sns:ListPlatformApplications",
        "resource_mappings": {}
      }
    ],
    "list-sms-sandbox-phone-numbers": [
      {
        "action": "sns:ListSMSSandboxPhoneNumbers",
        "resource_mappings": {}
      }
    ],
    "list-subscriptions": [
      {
        "action": "sns:ListSubscriptions",
        "resource_mappings": {}
      }
    ],
    "list-subscriptions-by-topic": [
      {
        "action": "sns:ListSubscriptionsByTopic",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "topic": "${TopicArn}"
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "sns:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "topic": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "list-topics": [
      {
        "action": "sns:ListTopics",
        "resource_mappings": {}
      }
    ],
    "opt-in-phone-number": [
      {
        "action": "sns:OptInPhoneNumber",
        "resource_mappings": {}
      }
    ],
    "publish": [
      {
        "action": "sns:Publish",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "topic": "%%iftruthy%${TopicArn}%${TopicArn}%*%%"
        }
      }
    ],
    "publish-batch": [
      {
        "action": "sns:Publish",
        "undocumented": true,
        "resource_mappings": {},
        "resourcearn_mappings": {
          "topic": "%%iftruthy%${TopicArn}%${TopicArn}%*%%"
        }
      }
    ],
    "put-data-protection-policy": [
      {
        "action": "sns:PutDataProtectionPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "topic": "${ResourceArn}"
        }
      }
    ],
    "remove-permission": [
      {
        "action": "sns:RemovePermission",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "topic": "${TopicArn}"
        }
      }
    ],
    "set-endpoint-attributes": [
      {
        "action": "sns:SetEndpointAttributes",
        "resource_mappings": {}
      }
    ],
    "set-platform-application-attributes": [
      {
        "action": "sns:SetPlatformApplicationAttributes",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "set-sms-attributes": [
      {
        "action": "sns:SetSMSAttributes",
        "resource_mappings": {}
      }
    ],
    "set-subscription-attributes": [
      {
        "action": "sns:SetSubscriptionAttributes",
        "resource_mappings": {}
      }
    ],
    "set-topic-attributes": [
      {
        "action": "sns:SetTopicAttributes",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "topic": "${TopicArn}"
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "subscribe": [
      {
        "action": "sns:Subscribe",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "topic": "${TopicArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "sns:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "topic": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "unsubscribe": [
      {
        "action": "sns:Unsubscribe",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "sns:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "topic": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "verify-sms-sandbox-phone-number": [
      {
        "action": "sns:VerifySMSSandboxPhoneNumber",
        "resource_mappings": {}
      }
    ]
  },
  "sqs": {
    "add-permission": [
      {
        "action": "sqs:AddPermission",
        "resource_mappings": {
          "QueueName": {
            "template": "%%regex%${QueueUrl}%/^.+\\/(.+?)$/g%%"
          }
        }
      }
    ],
    "cancel-message-move-task": [
      {
        "action": "sqs:CancelMessageMoveTask",
        "resource_mappings": {
          "QueueName": {
            "template": "*"
          }
        }
      }
    ],
    "change-message-visibility": [
      {
        "action": "sqs:ChangeMessageVisibility",
        "resource_mappings": {
          "QueueName": {
            "template": "%%regex%${QueueUrl}%/^.+\\/(.+?)$/g%%"
          }
        }
      }
    ],
    "change-message-visibility-batch": [
      {
        "action": "sqs:ChangeMessageVisibilityBatch",
        "resource_mappings": {
          "QueueName": {
            "template": "%%regex%${QueueUrl}%/^.+\\/(.+?)$/g%%"
          }
        }
      }
    ],
    "create-queue": [
      {
        "action": "sqs:CreateQueue",
        "resource_mappings": {
          "QueueName": {
            "template": "${QueueName}"
          }
        }
      },
      {
        "action": "sqs:TagQueue",
        "resource_mappings": {
          "QueueName": {
            "template": "${QueueName}"
          }
        },
        "conditions": {
          "lhs": "tags",
          "op": "Exists"
        }
      }
    ],
    "delete-message": [
      {
        "action": "sqs:DeleteMessage",
        "resource_mappings": {
          "QueueName": {
            "template": "%%regex%${QueueUrl}%/^.+\\/(.+?)$/g%%"
          }
        }
      }
    ],
    "delete-message-batch": [
      {
        "action": "sqs:DeleteMessageBatch",
        "resource_mappings": {
          "QueueName": {
            "template": "%%regex%${QueueUrl}%/^.+\\/(.+?)$/g%%"
          }
        }
      }
    ],
    "delete-queue": [
      {
        "action": "sqs:DeleteQueue",
        "resource_mappings": {
          "QueueName": {
            "template": "%%regex%${QueueUrl}%/^.+\\/(.+?)$/g%%"
          }
        }
      }
    ],
    "get-queue-attributes": [
      {
        "action": "sqs:GetQueueAttributes",
        "resource_mappings": {
          "QueueName": {
            "template": "%%regex%${QueueUrl}%/^.+\\/(.+?)$/g%%"
          }
        }
      }
    ],
    "get-queue-url": [
      {
        "action": "sqs:GetQueueUrl",
        "resource_mappings": {
          "QueueName": {
            "template": "${QueueName}"
          }
        }
      }
    ],
    "list-dead-letter-source-queues": [
      {
        "action": "sqs:ListDeadLetterSourceQueues",
        "resource_mappings": {
          "QueueName": {
            "template": "%%regex%${QueueUrl}%/^.+\\/(.+?)$/g%%"
          }
        }
      }
    ],
    "list-message-move-tasks": [
      {
        "action": "sqs:ListMessageMoveTasks",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "queue": "${SourceArn}"
        }
      }
    ],
    "list-queue-tags": [
      {
        "action": "sqs:ListQueueTags",
        "resource_mappings": {
          "QueueName": {
            "template": "%%regex%${QueueUrl}%/^.+\\/(.+?)$/g%%"
          }
        }
      }
    ],
    "list-queues": [
      {
        "action": "sqs:ListQueues",
        "resource_mappings": {}
      }
    ],
    "purge-queue": [
      {
        "action": "sqs:PurgeQueue",
        "resource_mappings": {
          "QueueName": {
            "template": "%%regex%${QueueUrl}%/^.+\\/(.+?)$/g%%"
          }
        }
      }
    ],
    "receive-message": [
      {
        "action": "sqs:ReceiveMessage",
        "resource_mappings": {
          "QueueName": {
            "template": "%%regex%${QueueUrl}%/^.+\\/(.+?)$/g%%"
          }
        }
      }
    ],
    "remove-permission": [
      {
        "action": "sqs:RemovePermission",
        "resource_mappings": {
          "QueueName": {
            "template": "%%regex%${QueueUrl}%/^.+\\/(.+?)$/g%%"
          }
        }
      }
    ],
    "send-message": [
      {
        "action": "sqs:SendMessage",
        "resource_mappings": {
          "QueueName": {
            "template": "%%regex%${QueueUrl}%/^.+\\/(.+?)$/g%%"
          }
        }
      }
    ],
    "send-message-batch": [
      {
        "action": "sqs:SendMessage",
        "resource_mappings": {
          "QueueName": {
            "template": "%%regex%${QueueUrl}%/^.+\\/(.+?)$/g%%"
          }
        }
      }
    ],
    "set-queue-attributes": [
      {
        "action": "sqs:SetQueueAttributes",
        "resource_mappings": {
          "QueueName": {
            "template": "%%regex%${QueueUrl}%/^.+\\/(.+?)$/g%%"
          }
        }
      }
    ],
    "start-message-move-task": [
      {
        "action": "sqs:StartMessageMoveTask",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "queue": "%%many%${SourceArn}%${DestinationArn}%%"
        }
      }
    ],
    "tag-queue": [
      {
        "action": "sqs:TagQueue",
        "resource_mappings": {
          "QueueName": {
            "template": "%%regex%${QueueUrl}%/^.+\\/(.+?)$/g%%"
          }
        }
      }
    ],
    "untag-queue": [
      {
        "action": "sqs:UntagQueue",
        "resource_mappings": {
          "QueueName": {
            "template": "%%regex%${QueueUrl}%/^.+\\/(.+?)$/g%%"
          }
        }
      }
    ]
  },
  "ssm": {
    "add-tags-to-resource": [
      {
        "action": "ssm:AddTagsToResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "document": "%%iftemplatematch%${ResourceId}%%",
          "maintenancewindow": "%%iftemplatematch%${ResourceId}%%",
          "managed-instance": "%%iftemplatematch%${ResourceId}%%",
          "parameter": "%%iftemplatematch%${ResourceId}%%",
          "patchbaseline": "%%iftemplatematch%${ResourceId}%%"
        }
      }
    ],
    "associate-ops-item-related-item": [
      {
        "action": "ssm:AssociateOpsItemRelatedItem",
        "resource_mappings": {}
      }
    ],
    "cancel-command": [
      {
        "action": "ssm:CancelCommand",
        "resource_mappings": {}
      }
    ],
    "cancel-maintenance-window-execution": [
      {
        "action": "ssm:CancelMaintenanceWindowExecution",
        "resource_mappings": {}
      }
    ],
    "create-activation": [
      {
        "action": "ssm:CreateActivation",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${IamRole}"
        }
      }
    ],
    "create-association": [
      {
        "action": "ssm:CreateAssociation",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "document": "%%iftemplatematch%${Name}%%"
        }
      }
    ],
    "create-association-batch": [
      {
        "action": "ssm:CreateAssociationBatch",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "document": "%%iftemplatematch%${Entries[].Name}%%"
        }
      }
    ],
    "create-document": [
      {
        "action": "ssm:CreateDocument",
        "resource_mappings": {
          "DocumentName": {
            "template": "${Name}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "*"
        }
      }
    ],
    "create-maintenance-window": [
      {
        "action": "ssm:CreateMaintenanceWindow",
        "resource_mappings": {}
      }
    ],
    "create-ops-item": [
      {
        "action": "ssm:CreateOpsItem",
        "resource_mappings": {}
      }
    ],
    "create-ops-metadata": [
      {
        "action": "ssm:CreateOpsMetadata",
        "resource_mappings": {}
      }
    ],
    "create-patch-baseline": [
      {
        "action": "ssm:CreatePatchBaseline",
        "resource_mappings": {}
      }
    ],
    "create-resource-data-sync": [
      {
        "action": "ssm:CreateResourceDataSync",
        "resource_mappings": {
          "SyncName": {
            "template": "${SyncName}"
          }
        }
      }
    ],
    "delete-activation": [
      {
        "action": "ssm:DeleteActivation",
        "resource_mappings": {}
      }
    ],
    "delete-association": [
      {
        "action": "ssm:DeleteAssociation",
        "resource_mappings": {
          "AssociationId": {
            "template": "${AssociationId}"
          },
          "InstanceId": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "document": "%%iftemplatematch%${Name}%%"
        }
      }
    ],
    "delete-document": [
      {
        "action": "ssm:DeleteDocument",
        "resource_mappings": {
          "DocumentName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-inventory": [
      {
        "action": "ssm:DeleteInventory",
        "resource_mappings": {}
      }
    ],
    "delete-maintenance-window": [
      {
        "action": "ssm:DeleteMaintenanceWindow",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WindowId}"
          }
        }
      }
    ],
    "delete-ops-item": [
      {
        "note": "NotFound",
        "action": "SSM:DeleteOpsItem",
        "resource_mappings": {}
      }
    ],
    "delete-ops-metadata": [
      {
        "action": "ssm:DeleteOpsMetadata",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "opsmetadata": "${OpsMetadataArn}"
        }
      }
    ],
    "delete-parameter": [
      {
        "action": "ssm:DeleteParameter",
        "resource_mappings": {
          "ParameterNameWithoutLeadingSlash": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-parameters": [
      {
        "action": "ssm:DeleteParameters",
        "resource_mappings": {
          "ParameterNameWithoutLeadingSlash": {
            "template": "${Names[]}"
          }
        }
      }
    ],
    "delete-patch-baseline": [
      {
        "action": "ssm:DeletePatchBaseline",
        "resource_mappings": {
          "PatchBaselineIdResourceId": {
            "template": "${BaselineId}"
          }
        }
      }
    ],
    "delete-resource-data-sync": [
      {
        "action": "ssm:DeleteResourceDataSync",
        "resource_mappings": {
          "SyncName": {
            "template": "${SyncName}"
          }
        }
      }
    ],
    "delete-resource-policy": [
      {
        "action": "ssm:DeleteResourcePolicy",
        "resource_mappings": {}
      }
    ],
    "deregister-managed-instance": [
      {
        "action": "ssm:DeregisterManagedInstance",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      }
    ],
    "deregister-patch-baseline-for-patch-group": [
      {
        "action": "ssm:DeregisterPatchBaselineForPatchGroup",
        "resource_mappings": {
          "PatchBaselineIdResourceId": {
            "template": "${BaselineId}"
          }
        }
      }
    ],
    "deregister-target-from-maintenance-window": [
      {
        "action": "ssm:DeregisterTargetFromMaintenanceWindow",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WindowId}"
          }
        }
      }
    ],
    "deregister-task-from-maintenance-window": [
      {
        "action": "ssm:DeregisterTaskFromMaintenanceWindow",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WindowId}"
          }
        }
      }
    ],
    "describe-activations": [
      {
        "action": "ssm:DescribeActivations",
        "resource_mappings": {}
      }
    ],
    "describe-association": [
      {
        "action": "ssm:DescribeAssociation",
        "resource_mappings": {
          "AssociationId": {
            "template": "${AssociationId}"
          },
          "InstanceId": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "document": "%%iftemplatematch%${Name}%%"
        }
      }
    ],
    "describe-association-execution-targets": [
      {
        "action": "ssm:DescribeAssociationExecutionTargets",
        "resource_mappings": {}
      }
    ],
    "describe-association-executions": [
      {
        "action": "ssm:DescribeAssociationExecutions",
        "resource_mappings": {}
      }
    ],
    "describe-automation-executions": [
      {
        "action": "ssm:DescribeAutomationExecutions",
        "resource_mappings": {}
      }
    ],
    "describe-automation-step-executions": [
      {
        "action": "ssm:DescribeAutomationStepExecutions",
        "resource_mappings": {}
      }
    ],
    "describe-available-patches": [
      {
        "action": "ssm:DescribeAvailablePatches",
        "resource_mappings": {}
      }
    ],
    "describe-document": [
      {
        "action": "ssm:DescribeDocument",
        "resource_mappings": {
          "DocumentName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "describe-document-permission": [
      {
        "action": "ssm:DescribeDocumentPermission",
        "resource_mappings": {
          "DocumentName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "describe-effective-instance-associations": [
      {
        "action": "ssm:DescribeEffectiveInstanceAssociations",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-effective-patches-for-patch-baseline": [
      {
        "action": "ssm:DescribeEffectivePatchesForPatchBaseline",
        "resource_mappings": {
          "PatchBaselineIdResourceId": {
            "template": "${BaselineId}"
          }
        }
      }
    ],
    "describe-instance-associations-status": [
      {
        "action": "ssm:DescribeInstanceAssociationsStatus",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-instance-information": [
      {
        "action": "ssm:DescribeInstanceInformation",
        "resource_mappings": {}
      }
    ],
    "describe-instance-patch-states": [
      {
        "action": "ssm:DescribeInstancePatchStates",
        "resource_mappings": {}
      }
    ],
    "describe-instance-patch-states-for-patch-group": [
      {
        "action": "ssm:DescribeInstancePatchStatesForPatchGroup",
        "resource_mappings": {}
      }
    ],
    "describe-instance-patches": [
      {
        "action": "ssm:DescribeInstancePatches",
        "resource_mappings": {}
      }
    ],
    "describe-inventory-deletions": [
      {
        "action": "ssm:DescribeInventoryDeletions",
        "resource_mappings": {}
      }
    ],
    "describe-maintenance-window-execution-task-invocations": [
      {
        "action": "ssm:DescribeMaintenanceWindowExecutionTaskInvocations",
        "resource_mappings": {}
      }
    ],
    "describe-maintenance-window-execution-tasks": [
      {
        "action": "ssm:DescribeMaintenanceWindowExecutionTasks",
        "resource_mappings": {}
      }
    ],
    "describe-maintenance-window-executions": [
      {
        "action": "ssm:DescribeMaintenanceWindowExecutions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WindowId}"
          }
        }
      }
    ],
    "describe-maintenance-window-schedule": [
      {
        "action": "ssm:DescribeMaintenanceWindowSchedule",
        "resource_mappings": {}
      }
    ],
    "describe-maintenance-window-targets": [
      {
        "action": "ssm:DescribeMaintenanceWindowTargets",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WindowId}"
          }
        }
      }
    ],
    "describe-maintenance-window-tasks": [
      {
        "action": "ssm:DescribeMaintenanceWindowTasks",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WindowId}"
          }
        }
      }
    ],
    "describe-maintenance-windows": [
      {
        "action": "ssm:DescribeMaintenanceWindows",
        "resource_mappings": {}
      }
    ],
    "describe-maintenance-windows-for-target": [
      {
        "action": "ssm:DescribeMaintenanceWindowsForTarget",
        "resource_mappings": {}
      }
    ],
    "describe-ops-items": [
      {
        "action": "ssm:DescribeOpsItems",
        "resource_mappings": {}
      }
    ],
    "describe-parameters": [
      {
        "action": "ssm:DescribeParameters",
        "resource_mappings": {}
      }
    ],
    "describe-patch-baselines": [
      {
        "action": "ssm:DescribePatchBaselines",
        "resource_mappings": {}
      }
    ],
    "describe-patch-group-state": [
      {
        "action": "ssm:DescribePatchGroupState",
        "resource_mappings": {}
      }
    ],
    "describe-patch-groups": [
      {
        "action": "ssm:DescribePatchGroups",
        "resource_mappings": {}
      }
    ],
    "describe-patch-properties": [
      {
        "action": "ssm:DescribePatchProperties",
        "resource_mappings": {}
      }
    ],
    "describe-sessions": [
      {
        "action": "ssm:DescribeSessions",
        "resource_mappings": {}
      }
    ],
    "disassociate-ops-item-related-item": [
      {
        "action": "ssm:DisassociateOpsItemRelatedItem",
        "resource_mappings": {}
      }
    ],
    "get-automation-execution": [
      {
        "action": "ssm:GetAutomationExecution",
        "resource_mappings": {}
      }
    ],
    "get-calendar-state": [
      {
        "action": "ssm:GetCalendarState",
        "resource_mappings": {
          "DocumentName": {
            "template": "*"
          }
        }
      }
    ],
    "get-command-invocation": [
      {
        "action": "ssm:GetCommandInvocation",
        "resource_mappings": {}
      }
    ],
    "get-connection-status": [
      {
        "action": "ssm:GetConnectionStatus",
        "resource_mappings": {}
      }
    ],
    "get-default-patch-baseline": [
      {
        "action": "ssm:GetDefaultPatchBaseline",
        "resource_mappings": {
          "PatchBaselineIdResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "get-deployable-patch-snapshot-for-instance": [
      {
        "action": "ssm:GetDeployablePatchSnapshotForInstance",
        "resource_mappings": {}
      }
    ],
    "get-document": [
      {
        "action": "ssm:GetDocument",
        "resource_mappings": {
          "DocumentName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-inventory": [
      {
        "action": "ssm:GetInventory",
        "resource_mappings": {}
      }
    ],
    "get-inventory-schema": [
      {
        "action": "ssm:GetInventory",
        "resource_mappings": {}
      },
      {
        "action": "ssm:GetInventorySchema",
        "resource_mappings": {}
      }
    ],
    "get-maintenance-window": [
      {
        "action": "ssm:GetMaintenanceWindow",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WindowId}"
          }
        }
      }
    ],
    "get-maintenance-window-execution": [
      {
        "action": "ssm:GetMaintenanceWindowExecution",
        "resource_mappings": {}
      }
    ],
    "get-maintenance-window-execution-task": [
      {
        "action": "ssm:GetMaintenanceWindowExecutionTask",
        "resource_mappings": {}
      }
    ],
    "get-maintenance-window-execution-task-invocation": [
      {
        "action": "ssm:GetMaintenanceWindowExecutionTaskInvocation",
        "resource_mappings": {}
      }
    ],
    "get-maintenance-window-task": [
      {
        "action": "ssm:GetMaintenanceWindowTask",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WindowId}"
          }
        }
      }
    ],
    "get-ops-item": [
      {
        "action": "ssm:GetOpsItem",
        "resource_mappings": {}
      }
    ],
    "get-ops-metadata": [
      {
        "action": "ssm:GetOpsMetadata",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "opsmetadata": "${OpsMetadataArn}"
        }
      }
    ],
    "get-ops-summary": [
      {
        "action": "ssm:GetOpsSummary",
        "resource_mappings": {
          "SyncName": {
            "template": "${SyncName}"
          }
        }
      }
    ],
    "get-parameter": [
      {
        "action": "ssm:GetParameter",
        "resource_mappings": {
          "ParameterNameWithoutLeadingSlash": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-parameter-history": [
      {
        "action": "ssm:GetParameterHistory",
        "resource_mappings": {
          "ParameterNameWithoutLeadingSlash": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-parameters": [
      {
        "action": "ssm:GetParameters",
        "resource_mappings": {
          "ParameterNameWithoutLeadingSlash": {
            "template": "${Names[]}"
          }
        }
      }
    ],
    "get-parameters-by-path": [
      {
        "action": "ssm:GetParametersByPath",
        "resource_mappings": {
          "ParameterNameWithoutLeadingSlash": {
            "template": "%%regex%${Path}%/^\\/(.+)$/g%%*"
          }
        }
      }
    ],
    "get-patch-baseline": [
      {
        "action": "ssm:GetPatchBaseline",
        "resource_mappings": {
          "PatchBaselineIdResourceId": {
            "template": "${BaselineId}"
          }
        }
      }
    ],
    "get-patch-baseline-for-patch-group": [
      {
        "action": "ssm:GetPatchBaselineForPatchGroup",
        "resource_mappings": {
          "PatchBaselineIdResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "get-resource-policies": [
      {
        "action": "ssm:GetResourcePolicies",
        "resource_mappings": {}
      }
    ],
    "get-service-setting": [
      {
        "action": "ssm:GetServiceSetting",
        "resource_mappings": {
          "ResourceId": {
            "template": "${SettingId}"
          }
        }
      }
    ],
    "label-parameter-version": [
      {
        "action": "ssm:LabelParameterVersion",
        "resource_mappings": {
          "ParameterNameWithoutLeadingSlash": {
            "template": "${Name}"
          }
        }
      }
    ],
    "list-association-versions": [
      {
        "action": "ssm:ListAssociationVersions",
        "resource_mappings": {}
      }
    ],
    "list-associations": [
      {
        "action": "ssm:ListAssociations",
        "resource_mappings": {}
      }
    ],
    "list-command-invocations": [
      {
        "action": "ssm:ListCommandInvocations",
        "resource_mappings": {}
      }
    ],
    "list-commands": [
      {
        "action": "ssm:ListCommands",
        "resource_mappings": {}
      }
    ],
    "list-compliance-items": [
      {
        "action": "ssm:ListComplianceItems",
        "resource_mappings": {}
      }
    ],
    "list-compliance-summaries": [
      {
        "action": "ssm:ListComplianceSummaries",
        "resource_mappings": {}
      }
    ],
    "list-document-metadata-history": [
      {
        "action": "ssm:ListDocumentMetadataHistory",
        "resource_mappings": {
          "DocumentName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "list-document-versions": [
      {
        "action": "ssm:ListDocumentVersions",
        "resource_mappings": {
          "DocumentName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "list-documents": [
      {
        "action": "ssm:ListDocuments",
        "resource_mappings": {}
      }
    ],
    "list-inventory-entries": [
      {
        "action": "ssm:ListInventoryEntries",
        "resource_mappings": {}
      }
    ],
    "list-ops-item-events": [
      {
        "action": "ssm:ListOpsItemEvents",
        "resource_mappings": {}
      }
    ],
    "list-ops-item-related-items": [
      {
        "action": "ssm:ListOpsItemRelatedItems",
        "resource_mappings": {}
      }
    ],
    "list-ops-metadata": [
      {
        "action": "ssm:ListOpsMetadata",
        "resource_mappings": {}
      }
    ],
    "list-resource-compliance-summaries": [
      {
        "action": "ssm:ListResourceComplianceSummaries",
        "resource_mappings": {}
      }
    ],
    "list-resource-data-sync": [
      {
        "action": "ssm:ListResourceDataSync",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "ssm:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "document": "%%iftemplatematch%${ResourceId}%%",
          "maintenancewindow": "%%iftemplatematch%${ResourceId}%%",
          "managed-instance": "%%iftemplatematch%${ResourceId}%%",
          "parameter": "%%iftemplatematch%${ResourceId}%%",
          "patchbaseline": "%%iftemplatematch%${ResourceId}%%"
        }
      }
    ],
    "modify-document-permission": [
      {
        "action": "ssm:ModifyDocumentPermission",
        "resource_mappings": {
          "DocumentName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "put-compliance-items": [
      {
        "action": "ssm:PutComplianceItems",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          }
        }
      }
    ],
    "put-inventory": [
      {
        "action": "ssm:PutInventory",
        "resource_mappings": {}
      }
    ],
    "put-parameter": [
      {
        "action": "ssm:PutParameter",
        "resource_mappings": {
          "ParameterNameWithoutLeadingSlash": {
            "template": "${Name}"
          }
        }
      }
    ],
    "put-resource-policy": [
      {
        "action": "ssm:PutResourcePolicy",
        "resource_mappings": {}
      }
    ],
    "register-default-patch-baseline": [
      {
        "action": "ssm:RegisterDefaultPatchBaseline",
        "resource_mappings": {
          "PatchBaselineIdResourceId": {
            "template": "${BaselineId}"
          }
        }
      }
    ],
    "register-patch-baseline-for-patch-group": [
      {
        "action": "ssm:RegisterPatchBaselineForPatchGroup",
        "resource_mappings": {
          "PatchBaselineIdResourceId": {
            "template": "${BaselineId}"
          }
        }
      }
    ],
    "register-target-with-maintenance-window": [
      {
        "action": "ssm:RegisterTargetWithMaintenanceWindow",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WindowId}"
          }
        }
      }
    ],
    "register-task-with-maintenance-window": [
      {
        "action": "ssm:RegisterTaskWithMaintenanceWindow",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WindowId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${ServiceRoleArn}%${TaskInvocationParameters.RunCommand.ServiceRoleArn}%%"
        }
      }
    ],
    "remove-tags-from-resource": [
      {
        "action": "ssm:RemoveTagsFromResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "document": "%%iftemplatematch%${ResourceId}%%",
          "maintenancewindow": "%%iftemplatematch%${ResourceId}%%",
          "managed-instance": "%%iftemplatematch%${ResourceId}%%",
          "parameter": "%%iftemplatematch%${ResourceId}%%",
          "patchbaseline": "%%iftemplatematch%${ResourceId}%%"
        }
      }
    ],
    "reset-service-setting": [
      {
        "action": "ssm:ResetServiceSetting",
        "resource_mappings": {
          "ResourceId": {
            "template": "${SettingId}"
          }
        }
      }
    ],
    "resume-session": [
      {
        "action": "ssm:ResumeSession",
        "resource_mappings": {
          "SessionId": {
            "template": "${SessionId}"
          }
        }
      }
    ],
    "send-automation-signal": [
      {
        "action": "ssm:SendAutomationSignal",
        "resource_mappings": {}
      }
    ],
    "send-command": [
      {
        "action": "ssm:SendCommand",
        "resource_mappings": {
          "BucketName": {
            "template": "${OutputS3BucketName}"
          },
          "InstanceId": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "document": "%%iftemplatematch%${DocumentName}%%"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${ServiceRoleArn}"
        }
      }
    ],
    "start-associations-once": [
      {
        "action": "ssm:StartAssociationsOnce",
        "resource_mappings": {
          "AssociationId": {
            "template": "${AssociationIds[]}"
          }
        }
      }
    ],
    "start-automation-execution": [
      {
        "action": "ssm:StartAutomationExecution",
        "resource_mappings": {
          "AutomationDefinitionName": {
            "template": "*"
          },
          "VersionId": {
            "template": "*"
          }
        }
      }
    ],
    "start-change-request-execution": [
      {
        "action": "ssm:StartChangeRequestExecution",
        "resource_mappings": {
          "AutomationDefinitionName": {
            "template": "*"
          },
          "VersionId": {
            "template": "*"
          }
        }
      }
    ],
    "start-session": [
      {
        "action": "ssm:StartSession",
        "resource_mappings": {
          "DocumentName": {
            "template": "${DocumentName}"
          },
          "TaskId": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "instance": "${Target}"
        }
      }
    ],
    "stop-automation-execution": [
      {
        "action": "ssm:StopAutomationExecution",
        "resource_mappings": {}
      }
    ],
    "terminate-session": [
      {
        "action": "ssm:TerminateSession",
        "resource_mappings": {
          "SessionId": {
            "template": "${SessionId}"
          }
        }
      }
    ],
    "unlabel-parameter-version": [
      {
        "action": "ssm:UnlabelParameterVersion",
        "resource_mappings": {
          "ParameterNameWithoutLeadingSlash": {
            "template": "${Name}"
          }
        }
      }
    ],
    "update-association": [
      {
        "action": "ssm:UpdateAssociation",
        "resource_mappings": {
          "AssociationId": {
            "template": "${AssociationId}"
          },
          "InstanceId": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "document": "%%iftemplatematch%${Name}%%"
        }
      }
    ],
    "update-association-status": [
      {
        "action": "ssm:UpdateAssociationStatus",
        "resource_mappings": {
          "InstanceId": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "document": "%%iftemplatematch%${Name}%%"
        }
      }
    ],
    "update-document": [
      {
        "action": "ssm:UpdateDocument",
        "resource_mappings": {
          "DocumentName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "update-document-default-version": [
      {
        "action": "ssm:UpdateDocumentDefaultVersion",
        "resource_mappings": {
          "DocumentName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "update-document-metadata": [
      {
        "action": "ssm:UpdateDocumentMetadata",
        "resource_mappings": {
          "DocumentName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "update-maintenance-window": [
      {
        "action": "ssm:UpdateMaintenanceWindow",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WindowId}"
          }
        }
      }
    ],
    "update-maintenance-window-target": [
      {
        "action": "ssm:UpdateMaintenanceWindowTarget",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WindowId}"
          }
        }
      }
    ],
    "update-maintenance-window-task": [
      {
        "action": "ssm:UpdateMaintenanceWindowTask",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WindowId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${ServiceRoleArn}%${TaskInvocationParameters.RunCommand.ServiceRoleArn}%%"
        }
      }
    ],
    "update-managed-instance-role": [
      {
        "action": "ssm:UpdateManagedInstanceRole",
        "resource_mappings": {
          "InstanceId": {
            "template": "${InstanceId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${IamRole}"
        }
      }
    ],
    "update-ops-item": [
      {
        "action": "ssm:UpdateOpsItem",
        "resource_mappings": {}
      }
    ],
    "update-ops-metadata": [
      {
        "action": "ssm:UpdateOpsMetadata",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "opsmetadata": "${OpsMetadataArn}"
        }
      }
    ],
    "update-patch-baseline": [
      {
        "action": "ssm:UpdatePatchBaseline",
        "resource_mappings": {
          "PatchBaselineIdResourceId": {
            "template": "${BaselineId}"
          }
        }
      }
    ],
    "update-resource-data-sync": [
      {
        "action": "ssm:UpdateResourceDataSync",
        "resource_mappings": {
          "SyncName": {
            "template": "${SyncName}"
          }
        }
      }
    ],
    "update-service-setting": [
      {
        "action": "ssm:UpdateServiceSetting",
        "resource_mappings": {
          "ResourceId": {
            "template": "${SettingId}"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "ssm:GetCommandInvocation",
        "resource_mappings": {}
      }
    ]
  },
  "ssm-contacts": {
    "accept-page": [
      {
        "action": "ssm-contacts:AcceptPage",
        "resource_mappings": {
          "ContactAlias": {
            "template": "*"
          },
          "pageId": {
            "template": "${PageId}"
          }
        }
      }
    ],
    "activate-contact-channel": [
      {
        "action": "ssm-contacts:ActivateContactChannel",
        "resource_mappings": {
          "ContactAlias": {
            "template": "*"
          },
          "ContactChannelId": {
            "template": "${ContactChannelId}"
          }
        }
      }
    ],
    "create-contact": [
      {
        "action": "ssm-contacts:CreateContact",
        "resource_mappings": {
          "ContactAlias": {
            "template": "${Alias}"
          }
        }
      },
      {
        "action": "ssm-contacts:AssociateContact",
        "resource_mappings": {
          "ContactAlias": {
            "template": "${Alias}"
          }
        }
      }
    ],
    "create-contact-channel": [
      {
        "action": "ssm-contacts:CreateContactChannel",
        "resource_mappings": {
          "ContactAlias": {
            "template": "*"
          }
        }
      }
    ],
    "create-rotation": [
      {
        "action": "ssm-contacts:CreateRotation",
        "resource_mappings": {
          "RotationId": {
            "template": "*"
          }
        }
      }
    ],
    "create-rotation-override": [
      {
        "action": "ssm-contacts:CreateRotationOverride",
        "resource_mappings": {
          "RotationId": {
            "template": "${RotationId}"
          }
        }
      }
    ],
    "deactivate-contact-channel": [
      {
        "action": "ssm-contacts:DeactivateContactChannel",
        "resource_mappings": {
          "ContactAlias": {
            "template": "*"
          },
          "ContactChannelId": {
            "template": "${ContactChannelId}"
          }
        }
      }
    ],
    "delete-contact": [
      {
        "action": "ssm-contacts:DeleteContact",
        "resource_mappings": {
          "ContactAlias": {
            "template": "*"
          }
        }
      }
    ],
    "delete-contact-channel": [
      {
        "action": "ssm-contacts:DeleteContactChannel",
        "resource_mappings": {
          "ContactAlias": {
            "template": "*"
          },
          "ContactChannelId": {
            "template": "${ContactChannelId}"
          }
        }
      }
    ],
    "delete-rotation": [
      {
        "action": "ssm-contacts:DeleteRotation",
        "resource_mappings": {
          "RotationId": {
            "template": "${RotationId}"
          }
        }
      }
    ],
    "delete-rotation-override": [
      {
        "action": "ssm-contacts:DeleteRotationOverride",
        "resource_mappings": {
          "RotationId": {
            "template": "${RotationId}"
          }
        }
      }
    ],
    "describe-engagement": [
      {
        "action": "ssm-contacts:DescribeEngagement",
        "resource_mappings": {
          "EngagementId": {
            "template": "${EngagementId}"
          }
        }
      }
    ],
    "describe-page": [
      {
        "action": "ssm-contacts:DescribePage",
        "resource_mappings": {
          "ContactAlias": {
            "template": "*"
          },
          "pageId": {
            "template": "${PageId}"
          }
        }
      }
    ],
    "get-contact": [
      {
        "action": "ssm-contacts:GetContact",
        "resource_mappings": {
          "ContactAlias": {
            "template": "*"
          }
        }
      }
    ],
    "get-contact-channel": [
      {
        "action": "ssm-contacts:GetContactChannel",
        "resource_mappings": {
          "ContactAlias": {
            "template": "*"
          },
          "ContactChannelId": {
            "template": "${ContactChannelId}"
          }
        }
      }
    ],
    "get-contact-policy": [
      {
        "action": "ssm-contacts:GetContactPolicy",
        "undocumented": true,
        "resource_mappings": {}
      }
    ],
    "get-rotation": [
      {
        "action": "ssm-contacts:GetRotation",
        "resource_mappings": {
          "RotationId": {
            "template": "${RotationId}"
          }
        }
      }
    ],
    "get-rotation-override": [
      {
        "action": "ssm-contacts:GetRotationOverride",
        "resource_mappings": {
          "RotationId": {
            "template": "${RotationId}"
          }
        }
      }
    ],
    "list-contact-channels": [
      {
        "action": "ssm-contacts:ListContactChannels",
        "resource_mappings": {
          "ContactAlias": {
            "template": "*"
          }
        }
      }
    ],
    "list-contacts": [
      {
        "action": "ssm-contacts:ListContacts",
        "resource_mappings": {}
      }
    ],
    "list-engagements": [
      {
        "action": "ssm-contacts:ListEngagements",
        "resource_mappings": {}
      }
    ],
    "list-page-receipts": [
      {
        "action": "ssm-contacts:ListPageReceipts",
        "resource_mappings": {
          "ContactAlias": {
            "template": "*"
          },
          "pageId": {
            "template": "${PageId}"
          }
        }
      }
    ],
    "list-page-resolutions": [
      {
        "action": "ssm-contacts:ListPageResolutions",
        "resource_mappings": {
          "ContactAlias": {
            "template": "*"
          },
          "PageId": {
            "template": "${PageId}"
          }
        }
      }
    ],
    "list-pages-by-contact": [
      {
        "action": "ssm-contacts:ListPagesByContact",
        "resource_mappings": {
          "ContactAlias": {
            "template": "*"
          }
        }
      }
    ],
    "list-pages-by-engagement": [
      {
        "action": "ssm-contacts:ListPagesByEngagement",
        "resource_mappings": {
          "EngagementId": {
            "template": "${EngagementId}"
          }
        }
      }
    ],
    "list-preview-rotation-shifts": [
      {
        "action": "ssm-contacts:ListPreviewRotationShifts",
        "resource_mappings": {
          "RotationId": {
            "template": "*"
          }
        }
      }
    ],
    "list-rotation-overrides": [
      {
        "action": "ssm-contacts:ListRotationOverrides",
        "resource_mappings": {
          "RotationId": {
            "template": "${RotationId}"
          }
        }
      }
    ],
    "list-rotation-shifts": [
      {
        "action": "ssm-contacts:ListRotationShifts",
        "resource_mappings": {
          "RotationId": {
            "template": "${RotationId}"
          }
        }
      }
    ],
    "list-rotations": [
      {
        "action": "ssm-contacts:ListRotations",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "ssm-contacts:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "contact": "%%iftemplatematch%${ResourceARN}%%",
          "rotation": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "put-contact-policy": [
      {
        "action": "ssm-contacts:PutContactPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "contact": "${ContactArn}"
        }
      }
    ],
    "send-activation-code": [
      {
        "action": "ssm-contacts:SendActivationCode",
        "resource_mappings": {
          "ContactAlias": {
            "template": "*"
          },
          "ContactChannelId": {
            "template": "${ContactChannelId}"
          }
        }
      }
    ],
    "start-engagement": [
      {
        "action": "ssm-contacts:StartEngagement",
        "resource_mappings": {
          "ContactAlias": {
            "template": "*"
          }
        }
      }
    ],
    "stop-engagement": [
      {
        "action": "ssm-contacts:StopEngagement",
        "resource_mappings": {
          "EngagementId": {
            "template": "${EngagementId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "ssm-contacts:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "contact": "${ResourceARN}"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "ssm-contacts:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "contact": "${ResourceARN}"
        }
      }
    ],
    "update-contact": [
      {
        "action": "ssm-contacts:UpdateContact",
        "resource_mappings": {
          "ContactAlias": {
            "template": "*"
          }
        }
      },
      {
        "action": "ssm-contacts:AssociateContact",
        "resource_mappings": {
          "ContactAlias": {
            "template": "*"
          }
        }
      }
    ],
    "update-contact-channel": [
      {
        "action": "ssm-contacts:UpdateContactChannel",
        "resource_mappings": {
          "ContactAlias": {
            "template": "*"
          },
          "ContactChannelId": {
            "template": "${ContactChannelId}"
          }
        }
      }
    ],
    "update-rotation": [
      {
        "action": "ssm-contacts:UpdateRotation",
        "resource_mappings": {
          "RotationId": {
            "template": "${RotationId}"
          }
        }
      }
    ]
  },
  "ssm-incidents": {
    "create-replication-set": [
      {
        "action": "ssm-incidents:CreateReplicationSet",
        "resource_mappings": {}
      }
    ],
    "create-response-plan": [
      {
        "action": "ssm-incidents:CreateResponsePlan",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${actions[].ssmAutomation.roleArn}"
        }
      }
    ],
    "create-timeline-event": [
      {
        "action": "ssm-incidents:CreateTimelineEvent",
        "resource_mappings": {
          "ResponsePlan": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "incident-record": "${incidentRecordArn}"
        }
      }
    ],
    "delete-incident-record": [
      {
        "action": "ssm-incidents:DeleteIncidentRecord",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "incident-record": "${arn}"
        }
      }
    ],
    "delete-replication-set": [
      {
        "action": "ssm-incidents:DeleteReplicationSet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "replication-set": "${arn}"
        }
      }
    ],
    "delete-resource-policy": [
      {
        "action": "ssm-incidents:DeleteResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "response-plan": "%%iftruthy%${resourceArn}%%"
        }
      }
    ],
    "delete-response-plan": [
      {
        "action": "ssm-incidents:DeleteResponsePlan",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "response-plan": "${arn}"
        }
      }
    ],
    "delete-timeline-event": [
      {
        "action": "ssm-incidents:DeleteTimelineEvent",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "incident-record": "${incidentRecordArn}"
        }
      }
    ],
    "get-incident-record": [
      {
        "action": "ssm-incidents:GetIncidentRecord",
        "resource_mappings": {
          "ResponsePlan": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "incident-record": "${arn}"
        }
      }
    ],
    "get-replication-set": [
      {
        "action": "ssm-incidents:GetReplicationSet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "replication-set": "${arn}"
        }
      }
    ],
    "get-resource-policies": [
      {
        "action": "ssm-incidents:GetResourcePolicies",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "response-plan": "${resourceArn}"
        }
      }
    ],
    "get-response-plan": [
      {
        "action": "ssm-incidents:GetResponsePlan",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "response-plan": "${arn}"
        }
      }
    ],
    "get-timeline-event": [
      {
        "action": "ssm-incidents:GetTimelineEvent",
        "resource_mappings": {
          "ResponsePlan": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "incident-record": "${incidentRecordArn}"
        }
      }
    ],
    "list-incident-records": [
      {
        "action": "ssm-incidents:ListIncidentRecords",
        "resource_mappings": {}
      }
    ],
    "list-related-items": [
      {
        "action": "ssm-incidents:ListRelatedItems",
        "resource_mappings": {
          "ResponsePlan": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "incident-record": "${incidentRecordArn}"
        }
      }
    ],
    "list-replication-sets": [
      {
        "action": "ssm-incidents:ListReplicationSets",
        "resource_mappings": {}
      }
    ],
    "list-response-plans": [
      {
        "action": "ssm-incidents:ListResponsePlans",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "ssm-incidents:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "response-plan": "%%iftruthy%${resourceArn}%%"
        }
      }
    ],
    "list-timeline-events": [
      {
        "action": "ssm-incidents:ListTimelineEvents",
        "resource_mappings": {
          "ResponsePlan": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "incident-record": "${incidentRecordArn}"
        }
      }
    ],
    "put-resource-policy": [
      {
        "action": "ssm-incidents:PutResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "response-plan": "%%iftruthy%${resourceArn}%%"
        }
      }
    ],
    "start-incident": [
      {
        "action": "ssm-incidents:StartIncident",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "response-plan": "${responsePlanArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "ssm-incidents:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "response-plan": "%%iftruthy%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "ssm-incidents:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "response-plan": "%%iftruthy%${resourceArn}%%"
        }
      }
    ],
    "update-deletion-protection": [
      {
        "action": "ssm-incidents:UpdateDeletionProtection",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "replication-set": "${arn}"
        }
      }
    ],
    "update-incident-record": [
      {
        "action": "ssm-incidents:UpdateIncidentRecord",
        "resource_mappings": {
          "ResponsePlan": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "incident-record": "${arn}"
        }
      }
    ],
    "update-related-items": [
      {
        "action": "ssm-incidents:UpdateRelatedItems",
        "resource_mappings": {
          "ResponsePlan": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "incident-record": "${incidentRecordArn}"
        }
      }
    ],
    "update-replication-set": [
      {
        "action": "ssm-incidents:UpdateReplicationSet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "replication-set": "${arn}"
        }
      }
    ],
    "update-response-plan": [
      {
        "action": "ssm-incidents:UpdateResponsePlan",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "response-plan": "${arn}"
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${actions[].ssmAutomation.roleArn}"
        }
      }
    ],
    "update-timeline-event": [
      {
        "action": "ssm-incidents:UpdateTimelineEvent",
        "resource_mappings": {
          "ResponsePlan": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "incident-record": "${incidentRecordArn}"
        }
      }
    ],
    "wait": [
      {
        "action": "ssm-incidents:GetReplicationSet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "replication-set": "${arn}"
        }
      }
    ]
  },
  "ssm-sap": {
    "delete-resource-permission": [
      {
        "action": "ssm-sap:DeleteResourcePermission",
        "resource_mappings": {}
      }
    ],
    "deregister-application": [
      {
        "action": "ssm-sap:DeregisterApplication",
        "resource_mappings": {}
      }
    ],
    "get-application": [
      {
        "action": "ssm-sap:GetApplication",
        "resource_mappings": {}
      }
    ],
    "get-component": [
      {
        "action": "ssm-sap:GetComponent",
        "resource_mappings": {}
      }
    ],
    "get-database": [
      {
        "action": "ssm-sap:GetDatabase",
        "resource_mappings": {}
      }
    ],
    "get-operation": [
      {
        "action": "ssm-sap:GetOperation",
        "resource_mappings": {}
      }
    ],
    "get-resource-permission": [
      {
        "action": "ssm-sap:GetResourcePermission",
        "resource_mappings": {}
      }
    ],
    "list-applications": [
      {
        "action": "ssm-sap:ListApplications",
        "resource_mappings": {}
      }
    ],
    "list-components": [
      {
        "action": "ssm-sap:ListComponents",
        "resource_mappings": {}
      }
    ],
    "list-databases": [
      {
        "action": "ssm-sap:ListDatabases",
        "resource_mappings": {}
      }
    ],
    "list-operations": [
      {
        "action": "ssm-sap:ListOperations",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "ssm-sap:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "put-resource-permission": [
      {
        "action": "ssm-sap:PutResourcePermission",
        "resource_mappings": {}
      }
    ],
    "register-application": [
      {
        "action": "ssm-sap:RegisterApplication",
        "resource_mappings": {}
      }
    ],
    "start-application-refresh": [
      {
        "action": "ssm-sap:StartApplicationRefresh",
        "resource_mappings": {
          "ApplicationType": {
            "template": "*"
          },
          "ApplicationId": {
            "template": "${ApplicationId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "ssm-sap:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "%%iftemplatematch%${resourceArn}%%",
          "database": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "ssm-sap:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "%%iftemplatematch%${resourceArn}%%",
          "database": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-application-settings": [
      {
        "action": "ssm-sap:UpdateApplicationSettings",
        "resource_mappings": {}
      }
    ]
  },
  "sso": {
    "get-role-credentials": [
      {
        "note": "NotFound",
        "action": "SSO:GetRoleCredentials",
        "resource_mappings": {}
      }
    ],
    "list-account-roles": [
      {
        "note": "NotFound",
        "action": "SSO:ListAccountRoles",
        "resource_mappings": {}
      }
    ],
    "list-accounts": [
      {
        "note": "NotFound",
        "action": "SSO:ListAccounts",
        "resource_mappings": {}
      }
    ],
    "logout": [
      {
        "note": "NotFound",
        "action": "SSO:Logout",
        "resource_mappings": {}
      }
    ]
  },
  "sso-admin": {
    "attach-customer-managed-policy-reference-to-permission-set": [
      {
        "action": "sso:AttachCustomerManagedPolicyReferenceToPermissionSet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}",
          "PermissionSet": "${PermissionSetArn}"
        }
      }
    ],
    "attach-managed-policy-to-permission-set": [
      {
        "action": "sso:AttachManagedPolicyToPermissionSet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}",
          "PermissionSet": "${PermissionSetArn}"
        }
      }
    ],
    "create-account-assignment": [
      {
        "action": "sso:CreateAccountAssignment",
        "resource_mappings": {
          "AccountId": {
            "template": "${TargetId}"
          }
        },
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}",
          "PermissionSet": "${PermissionSetArn}"
        }
      }
    ],
    "create-instance-access-control-attribute-configuration": [
      {
        "action": "sso:CreateInstanceAccessControlAttributeConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}"
        }
      }
    ],
    "create-permission-set": [
      {
        "action": "sso:CreatePermissionSet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}"
        }
      }
    ],
    "delete-account-assignment": [
      {
        "action": "sso:DeleteAccountAssignment",
        "resource_mappings": {
          "AccountId": {
            "template": "${TargetId}"
          }
        },
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}",
          "PermissionSet": "${PermissionSetArn}"
        }
      }
    ],
    "delete-inline-policy-from-permission-set": [
      {
        "action": "sso:DeleteInlinePolicyFromPermissionSet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}",
          "PermissionSet": "${PermissionSetArn}"
        }
      }
    ],
    "delete-instance-access-control-attribute-configuration": [
      {
        "action": "sso:DeleteInstanceAccessControlAttributeConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}"
        }
      }
    ],
    "delete-permission-set": [
      {
        "action": "sso:DeletePermissionSet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}",
          "PermissionSet": "${PermissionSetArn}"
        }
      }
    ],
    "delete-permissions-boundary-from-permission-set": [
      {
        "action": "sso:DeletePermissionsBoundaryFromPermissionSet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}",
          "PermissionSet": "${PermissionSetArn}"
        }
      }
    ],
    "describe-account-assignment-creation-status": [
      {
        "action": "sso:DescribeAccountAssignmentCreationStatus",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}"
        }
      }
    ],
    "describe-account-assignment-deletion-status": [
      {
        "action": "sso:DescribeAccountAssignmentDeletionStatus",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}"
        }
      }
    ],
    "describe-instance-access-control-attribute-configuration": [
      {
        "action": "sso:DescribeInstanceAccessControlAttributeConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}"
        }
      }
    ],
    "describe-permission-set": [
      {
        "action": "sso:DescribePermissionSet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}",
          "PermissionSet": "${PermissionSetArn}"
        }
      }
    ],
    "describe-permission-set-provisioning-status": [
      {
        "action": "sso:DescribePermissionSetProvisioningStatus",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}"
        }
      }
    ],
    "detach-customer-managed-policy-reference-from-permission-set": [
      {
        "action": "sso:DetachCustomerManagedPolicyReferenceFromPermissionSet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}",
          "PermissionSet": "${PermissionSetArn}"
        }
      }
    ],
    "detach-managed-policy-from-permission-set": [
      {
        "action": "sso:DetachManagedPolicyFromPermissionSet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}",
          "PermissionSet": "${PermissionSetArn}"
        }
      }
    ],
    "get-inline-policy-for-permission-set": [
      {
        "action": "sso:GetInlinePolicyForPermissionSet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}",
          "PermissionSet": "${PermissionSetArn}"
        }
      }
    ],
    "get-permissions-boundary-for-permission-set": [
      {
        "action": "sso:GetPermissionsBoundaryForPermissionSet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}",
          "PermissionSet": "${PermissionSetArn}"
        }
      }
    ],
    "list-account-assignment-creation-status": [
      {
        "action": "sso:ListAccountAssignmentCreationStatus",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}"
        }
      }
    ],
    "list-account-assignment-deletion-status": [
      {
        "action": "sso:ListAccountAssignmentDeletionStatus",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}"
        }
      }
    ],
    "list-account-assignments": [
      {
        "action": "sso:ListAccountAssignments",
        "resource_mappings": {
          "AccountId": {
            "template": "${AccountId}"
          }
        },
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}",
          "PermissionSet": "${PermissionSetArn}"
        }
      }
    ],
    "list-accounts-for-provisioned-permission-set": [
      {
        "action": "sso:ListAccountsForProvisionedPermissionSet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}",
          "PermissionSet": "${PermissionSetArn}"
        }
      }
    ],
    "list-customer-managed-policy-references-in-permission-set": [
      {
        "action": "sso:ListCustomerManagedPolicyReferencesInPermissionSet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}",
          "PermissionSet": "${PermissionSetArn}"
        }
      }
    ],
    "list-instances": [
      {
        "action": "sso:ListInstances",
        "resource_mappings": {}
      }
    ],
    "list-managed-policies-in-permission-set": [
      {
        "action": "sso:ListManagedPoliciesInPermissionSet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}",
          "PermissionSet": "${PermissionSetArn}"
        }
      }
    ],
    "list-permission-set-provisioning-status": [
      {
        "action": "sso:ListPermissionSetProvisioningStatus",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}"
        }
      }
    ],
    "list-permission-sets": [
      {
        "action": "sso:ListPermissionSets",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}"
        }
      }
    ],
    "list-permission-sets-provisioned-to-account": [
      {
        "action": "sso:ListPermissionSetsProvisionedToAccount",
        "resource_mappings": {
          "AccountId": {
            "template": "${AccountId}"
          }
        },
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}"
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "sso:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}",
          "PermissionSet": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "provision-permission-set": [
      {
        "action": "sso:ProvisionPermissionSet",
        "resource_mappings": {
          "AccountId": {
            "template": "${TargetId}"
          }
        },
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}",
          "PermissionSet": "${PermissionSetArn}"
        }
      }
    ],
    "put-inline-policy-to-permission-set": [
      {
        "action": "sso:PutInlinePolicyToPermissionSet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}",
          "PermissionSet": "${PermissionSetArn}"
        }
      }
    ],
    "put-permissions-boundary-to-permission-set": [
      {
        "action": "sso:PutPermissionsBoundaryToPermissionSet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}",
          "PermissionSet": "${PermissionSetArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "sso:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}",
          "PermissionSet": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "sso:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}",
          "PermissionSet": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-instance-access-control-attribute-configuration": [
      {
        "action": "sso:UpdateInstanceAccessControlAttributeConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}"
        }
      }
    ],
    "update-permission-set": [
      {
        "action": "sso:UpdatePermissionSet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Instance": "${InstanceArn}",
          "PermissionSet": "${PermissionSetArn}"
        }
      }
    ]
  },
  "sso-oidc": {
    "create-token": [
      {
        "note": "NotFound",
        "action": "SSO OIDC:CreateToken",
        "resource_mappings": {}
      }
    ],
    "register-client": [
      {
        "note": "NotFound",
        "action": "SSO OIDC:RegisterClient",
        "resource_mappings": {}
      }
    ],
    "start-device-authorization": [
      {
        "note": "NotFound",
        "action": "SSO OIDC:StartDeviceAuthorization",
        "resource_mappings": {}
      }
    ]
  },
  "stepfunctions": {
    "create-activity": [
      {
        "action": "states:CreateActivity",
        "resource_mappings": {
          "ActivityName": {
            "template": "${name}"
          }
        }
      }
    ],
    "create-state-machine": [
      {
        "action": "states:CreateStateMachine",
        "resource_mappings": {
          "StateMachineName": {
            "template": "${name}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${roleArn}"
        }
      }
    ],
    "create-state-machine-alias": [
      {
        "action": "states:CreateStateMachineAlias",
        "resource_mappings": {
          "StateMachineName": {
            "template": "%%regex%${routingConfiguration[].stateMachineVersionArn}%/([^:]+):[^:]+$/g%%"
          }
        }
      }
    ],
    "delete-activity": [
      {
        "action": "states:DeleteActivity",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "activity": "${activityArn}"
        }
      }
    ],
    "delete-state-machine": [
      {
        "action": "states:DeleteStateMachine",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "statemachine": "${stateMachineArn}"
        }
      }
    ],
    "delete-state-machine-alias": [
      {
        "action": "states:DeleteStateMachineAlias",
        "resource_mappings": {
          "StateMachineName": {
            "template": "%%regex%${stateMachineAliasArn}%/([^:]+):[^:]+$/g%%"
          }
        }
      }
    ],
    "delete-state-machine-version": [
      {
        "action": "states:DeleteStateMachineVersion",
        "resource_mappings": {
          "StateMachineName": {
            "template": "%%regex%${stateMachineVersionArn}%/([^:]+):[^:]+$/g%%"
          }
        }
      }
    ],
    "describe-activity": [
      {
        "action": "states:DescribeActivity",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "activity": "${activityArn}"
        }
      }
    ],
    "describe-execution": [
      {
        "action": "states:DescribeExecution",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "execution": "${executionArn}"
        }
      }
    ],
    "describe-map-run": [
      {
        "action": "states:DescribeMapRun",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "maprun": "${mapRunArn}"
        }
      }
    ],
    "describe-state-machine": [
      {
        "action": "states:DescribeStateMachine",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "statemachine": "${stateMachineArn}"
        }
      }
    ],
    "describe-state-machine-alias": [
      {
        "action": "states:DescribeStateMachineAlias",
        "resource_mappings": {
          "StateMachineName": {
            "template": "%%regex%${stateMachineAliasArn}%/([^:]+):[^:]+$/g%%"
          }
        }
      }
    ],
    "describe-state-machine-for-execution": [
      {
        "action": "states:DescribeStateMachineForExecution",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "execution": "${executionArn}"
        }
      }
    ],
    "get-activity-task": [
      {
        "action": "states:GetActivityTask",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "activity": "${activityArn}"
        }
      }
    ],
    "get-execution-history": [
      {
        "action": "states:GetExecutionHistory",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "execution": "${executionArn}"
        }
      }
    ],
    "list-activities": [
      {
        "action": "states:ListActivities",
        "resource_mappings": {}
      }
    ],
    "list-executions": [
      {
        "action": "states:ListExecutions",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "statemachine": "${stateMachineArn}"
        }
      }
    ],
    "list-map-runs": [
      {
        "action": "states:ListMapRuns",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "execution": "${executionArn}"
        }
      }
    ],
    "list-state-machine-aliases": [
      {
        "action": "states:ListStateMachineAliases",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "statemachine": "${stateMachineArn}"
        }
      }
    ],
    "list-state-machine-versions": [
      {
        "action": "states:ListStateMachineVersions",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "statemachine": "${stateMachineArn}"
        }
      }
    ],
    "list-state-machines": [
      {
        "action": "states:ListStateMachines",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "states:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "activity": "%%iftemplatematch%${resourceArn}%%",
          "statemachine": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "publish-state-machine-version": [
      {
        "action": "states:PublishStateMachineVersion",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "statemachine": "${stateMachineArn}"
        }
      }
    ],
    "send-task-failure": [
      {
        "action": "states:SendTaskFailure",
        "resource_mappings": {}
      }
    ],
    "send-task-heartbeat": [
      {
        "action": "states:SendTaskHeartbeat",
        "resource_mappings": {}
      }
    ],
    "send-task-success": [
      {
        "action": "states:SendTaskSuccess",
        "resource_mappings": {}
      }
    ],
    "start-execution": [
      {
        "action": "states:StartExecution",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "statemachine": "${stateMachineArn}"
        }
      }
    ],
    "start-sync-execution": [
      {
        "action": "states:StartSyncExecution",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "statemachine": "${stateMachineArn}"
        }
      }
    ],
    "stop-execution": [
      {
        "action": "states:StopExecution",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "execution": "${executionArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "states:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "activity": "%%iftemplatematch%${resourceArn}%%",
          "statemachine": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "states:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "activity": "%%iftemplatematch%${resourceArn}%%",
          "statemachine": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-map-run": [
      {
        "action": "states:UpdateMapRun",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "maprun": "${mapRunArn}"
        }
      }
    ],
    "update-state-machine": [
      {
        "action": "states:UpdateStateMachine",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "statemachine": "${stateMachineArn}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${roleArn}"
        }
      }
    ],
    "update-state-machine-alias": [
      {
        "action": "states:UpdateStateMachineAlias",
        "resource_mappings": {
          "StateMachineName": {
            "template": "%%regex%${stateMachineAliasArn}%/([^:]+):[^:]+$/g%%"
          }
        }
      }
    ]
  },
  "storagegateway": {
    "activate-gateway": [
      {
        "action": "storagegateway:ActivateGateway",
        "resource_mappings": {}
      }
    ],
    "add-cache": [
      {
        "action": "storagegateway:AddCache",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "add-tags-to-resource": [
      {
        "action": "storagegateway:AddTagsToResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "%%iftemplatematch%${ResourceARN}%%",
          "share": "%%iftemplatematch%${ResourceARN}%%",
          "tape": "%%iftemplatematch%${ResourceARN}%%",
          "volume": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "add-upload-buffer": [
      {
        "action": "storagegateway:AddUploadBuffer",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "add-working-storage": [
      {
        "action": "storagegateway:AddWorkingStorage",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "assign-tape-pool": [
      {
        "action": "storagegateway:AssignTapePool",
        "resource_mappings": {
          "PoolId": {
            "template": "${PoolId}"
          }
        },
        "resourcearn_mappings": {
          "tape": "${TapeARN}"
        }
      }
    ],
    "associate-file-system": [
      {
        "action": "storagegateway:AssociateFileSystem",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "attach-volume": [
      {
        "action": "storagegateway:AttachVolume",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}",
          "volume": "${VolumeARN}"
        }
      }
    ],
    "cancel-archival": [
      {
        "action": "storagegateway:CancelArchival",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}",
          "tape": "${TapeARN}"
        }
      }
    ],
    "cancel-retrieval": [
      {
        "action": "storagegateway:CancelRetrieval",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}",
          "tape": "${TapeARN}"
        }
      }
    ],
    "create-cached-iscsi-volume": [
      {
        "action": "storagegateway:CreateCachediSCSIVolume",
        "resource_mappings": {
          "GatewayId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          }
        },
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "create-nfs-file-share": [
      {
        "action": "storagegateway:CreateNFSFileShare",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${Role}"
        }
      }
    ],
    "create-smb-file-share": [
      {
        "action": "storagegateway:CreateSMBFileShare",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${Role}"
        }
      }
    ],
    "create-snapshot": [
      {
        "action": "storagegateway:CreateSnapshot",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "volume": "${VolumeARN}"
        }
      }
    ],
    "create-snapshot-from-volume-recovery-point": [
      {
        "action": "storagegateway:CreateSnapshotFromVolumeRecoveryPoint",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "volume": "${VolumeARN}"
        }
      }
    ],
    "create-stored-iscsi-volume": [
      {
        "action": "storagegateway:CreateStorediSCSIVolume",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "create-tape-pool": [
      {
        "action": "storagegateway:CreateTapePool",
        "resource_mappings": {}
      }
    ],
    "create-tape-with-barcode": [
      {
        "action": "storagegateway:CreateTapeWithBarcode",
        "resource_mappings": {
          "PoolId": {
            "template": "${PoolId}"
          }
        },
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "create-tapes": [
      {
        "action": "storagegateway:CreateTapes",
        "resource_mappings": {
          "PoolId": {
            "template": "${PoolId}"
          }
        },
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "delete-automatic-tape-creation-policy": [
      {
        "action": "storagegateway:DeleteAutomaticTapeCreationPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "delete-bandwidth-rate-limit": [
      {
        "action": "storagegateway:DeleteBandwidthRateLimit",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "delete-chap-credentials": [
      {
        "action": "storagegateway:DeleteChapCredentials",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "target": "${TargetARN}"
        }
      }
    ],
    "delete-file-share": [
      {
        "action": "storagegateway:DeleteFileShare",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "share": "${FileShareARN}"
        }
      }
    ],
    "delete-gateway": [
      {
        "action": "storagegateway:DeleteGateway",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "delete-snapshot-schedule": [
      {
        "action": "storagegateway:DeleteSnapshotSchedule",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "volume": "${VolumeARN}"
        }
      }
    ],
    "delete-tape": [
      {
        "action": "storagegateway:DeleteTape",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}",
          "tape": "${TapeARN}"
        }
      }
    ],
    "delete-tape-archive": [
      {
        "action": "storagegateway:DeleteTapeArchive",
        "resource_mappings": {}
      }
    ],
    "delete-tape-pool": [
      {
        "action": "storagegateway:DeleteTapePool",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "tapepool": "${PoolARN}"
        }
      }
    ],
    "delete-volume": [
      {
        "action": "storagegateway:DeleteVolume",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "volume": "${VolumeARN}"
        }
      }
    ],
    "describe-availability-monitor-test": [
      {
        "action": "storagegateway:DescribeAvailabilityMonitorTest",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "describe-bandwidth-rate-limit": [
      {
        "action": "storagegateway:DescribeBandwidthRateLimit",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "describe-bandwidth-rate-limit-schedule": [
      {
        "action": "storagegateway:DescribeBandwidthRateLimitSchedule",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "describe-cache": [
      {
        "action": "storagegateway:DescribeCache",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "describe-cached-iscsi-volumes": [
      {
        "action": "storagegateway:DescribeCachediSCSIVolumes",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "volume": "${VolumeARNs}"
        }
      }
    ],
    "describe-chap-credentials": [
      {
        "action": "storagegateway:DescribeChapCredentials",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "target": "${TargetARN}"
        }
      }
    ],
    "describe-file-system-associations": [
      {
        "action": "storagegateway:DescribeFileSystemAssociations",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fs-association": "${FileSystemAssociationARNList[]}"
        }
      }
    ],
    "describe-gateway-information": [
      {
        "action": "storagegateway:DescribeGatewayInformation",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "describe-maintenance-start-time": [
      {
        "action": "storagegateway:DescribeMaintenanceStartTime",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "describe-nfs-file-shares": [
      {
        "action": "storagegateway:DescribeNFSFileShares",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "share": "${FileShareARNList[]}"
        }
      }
    ],
    "describe-smb-file-shares": [
      {
        "action": "storagegateway:DescribeSMBFileShares",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "share": "${FileShareARNList[]}"
        }
      }
    ],
    "describe-smb-settings": [
      {
        "action": "storagegateway:DescribeSMBSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "describe-snapshot-schedule": [
      {
        "action": "storagegateway:DescribeSnapshotSchedule",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "volume": "${VolumeARN}"
        }
      }
    ],
    "describe-stored-iscsi-volumes": [
      {
        "action": "storagegateway:DescribeStorediSCSIVolumes",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "volume": "${VolumeARNs[]}"
        }
      }
    ],
    "describe-tape-archives": [
      {
        "action": "storagegateway:DescribeTapeArchives",
        "resource_mappings": {}
      }
    ],
    "describe-tape-recovery-points": [
      {
        "action": "storagegateway:DescribeTapeRecoveryPoints",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "describe-tapes": [
      {
        "action": "storagegateway:DescribeTapes",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "describe-upload-buffer": [
      {
        "action": "storagegateway:DescribeUploadBuffer",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "describe-vtl-devices": [
      {
        "action": "storagegateway:DescribeVTLDevices",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "describe-working-storage": [
      {
        "action": "storagegateway:DescribeWorkingStorage",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "detach-volume": [
      {
        "action": "storagegateway:DetachVolume",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "volume": "${VolumeARN}"
        }
      }
    ],
    "disable-gateway": [
      {
        "action": "storagegateway:DisableGateway",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "disassociate-file-system": [
      {
        "action": "storagegateway:DisassociateFileSystem",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fs-association": "${FileSystemAssociationARN}"
        }
      }
    ],
    "join-domain": [
      {
        "action": "storagegateway:JoinDomain",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "list-automatic-tape-creation-policies": [
      {
        "action": "storagegateway:ListAutomaticTapeCreationPolicies",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "list-file-shares": [
      {
        "action": "storagegateway:ListFileShares",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "list-file-system-associations": [
      {
        "action": "storagegateway:ListFileSystemAssociations",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "list-gateways": [
      {
        "action": "storagegateway:ListGateways",
        "resource_mappings": {}
      }
    ],
    "list-local-disks": [
      {
        "action": "storagegateway:ListLocalDisks",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "storagegateway:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "%%iftemplatematch%${ResourceARN}%%",
          "share": "%%iftemplatematch%${ResourceARN}%%",
          "tape": "%%iftemplatematch%${ResourceARN}%%",
          "volume": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "list-tape-pools": [
      {
        "action": "storagegateway:ListTapePools",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "tapepool": "${PoolARNs[]}"
        }
      }
    ],
    "list-tapes": [
      {
        "action": "storagegateway:ListTapes",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "tape": "${TapeARNs[]}"
        }
      }
    ],
    "list-volume-initiators": [
      {
        "action": "storagegateway:ListVolumeInitiators",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "volume": "${VolumeARN}"
        }
      }
    ],
    "list-volume-recovery-points": [
      {
        "action": "storagegateway:ListVolumeRecoveryPoints",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "list-volumes": [
      {
        "action": "storagegateway:ListVolumes",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "notify-when-uploaded": [
      {
        "action": "storagegateway:NotifyWhenUploaded",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "share": "${FileShareARN}"
        }
      }
    ],
    "refresh-cache": [
      {
        "action": "storagegateway:RefreshCache",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "share": "${FileShareARN}"
        }
      }
    ],
    "remove-tags-from-resource": [
      {
        "action": "storagegateway:RemoveTagsFromResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "%%iftemplatematch%${ResourceARN}%%",
          "share": "%%iftemplatematch%${ResourceARN}%%",
          "tape": "%%iftemplatematch%${ResourceARN}%%",
          "volume": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "reset-cache": [
      {
        "action": "storagegateway:ResetCache",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "retrieve-tape-archive": [
      {
        "action": "storagegateway:RetrieveTapeArchive",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}",
          "tape": "${TapeARN}"
        }
      }
    ],
    "retrieve-tape-recovery-point": [
      {
        "action": "storagegateway:RetrieveTapeRecoveryPoint",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}",
          "tape": "${TapeARN}"
        }
      }
    ],
    "set-local-console-password": [
      {
        "action": "storagegateway:SetLocalConsolePassword",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "set-smb-guest-password": [
      {
        "action": "storagegateway:SetSMBGuestPassword",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "shutdown-gateway": [
      {
        "action": "storagegateway:ShutdownGateway",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "start-availability-monitor-test": [
      {
        "action": "storagegateway:StartAvailabilityMonitorTest",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "start-gateway": [
      {
        "action": "storagegateway:StartGateway",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "update-automatic-tape-creation-policy": [
      {
        "action": "storagegateway:UpdateAutomaticTapeCreationPolicy",
        "resource_mappings": {
          "PoolId": {
            "template": "${AutomaticTapeCreationRules[].PoolId}"
          }
        },
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "update-bandwidth-rate-limit": [
      {
        "action": "storagegateway:UpdateBandwidthRateLimit",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "update-bandwidth-rate-limit-schedule": [
      {
        "action": "storagegateway:UpdateBandwidthRateLimitSchedule",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "update-chap-credentials": [
      {
        "action": "storagegateway:UpdateChapCredentials",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "target": "${TargetARN}"
        }
      }
    ],
    "update-file-system-association": [
      {
        "action": "storagegateway:UpdateFileSystemAssociation",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fs-association": "${FileSystemAssociationARN}"
        }
      }
    ],
    "update-gateway-information": [
      {
        "action": "storagegateway:UpdateGatewayInformation",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "update-gateway-software-now": [
      {
        "action": "storagegateway:UpdateGatewaySoftwareNow",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "update-maintenance-start-time": [
      {
        "action": "storagegateway:UpdateMaintenanceStartTime",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "update-nfs-file-share": [
      {
        "action": "storagegateway:UpdateNFSFileShare",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "share": "${FileShareARN}"
        }
      }
    ],
    "update-smb-file-share": [
      {
        "action": "storagegateway:UpdateSMBFileShare",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "share": "${FileShareARN}"
        }
      }
    ],
    "update-smb-file-share-visibility": [
      {
        "action": "storagegateway:UpdateSMBFileShareVisibility",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "update-smb-local-groups": [
      {
        "action": "storagegateway:UpdateSMBLocalGroups",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "update-smb-security-strategy": [
      {
        "action": "storagegateway:UpdateSMBSecurityStrategy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "gateway": "${GatewayARN}"
        }
      }
    ],
    "update-snapshot-schedule": [
      {
        "action": "storagegateway:UpdateSnapshotSchedule",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "volume": "${VolumeARN}"
        }
      }
    ],
    "update-vtl-device-type": [
      {
        "action": "storagegateway:UpdateVTLDeviceType",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "device": "${VTLDeviceARN}"
        }
      }
    ]
  },
  "sts": {
    "assume-role": [
      {
        "action": "sts:AssumeRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${RoleArn}"
        }
      }
    ],
    "assume-role-with-saml": [
      {
        "action": "sts:AssumeRoleWithSAML",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${RoleArn}"
        }
      }
    ],
    "assume-role-with-web-identity": [
      {
        "action": "sts:AssumeRoleWithWebIdentity",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${RoleArn}"
        }
      }
    ],
    "decode-authorization-message": [
      {
        "action": "sts:DecodeAuthorizationMessage",
        "resource_mappings": {}
      }
    ],
    "get-access-key-info": [
      {
        "action": "sts:GetAccessKeyInfo",
        "resource_mappings": {}
      }
    ],
    "get-caller-identity": [
      {
        "action": "sts:GetCallerIdentity",
        "resource_mappings": {}
      }
    ],
    "get-federation-token": [
      {
        "action": "sts:GetFederationToken",
        "resource_mappings": {
          "UserNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "get-session-token": [
      {
        "action": "sts:GetSessionToken",
        "resource_mappings": {}
      }
    ]
  },
  "support": {
    "add-attachments-to-set": [
      {
        "action": "support:AddAttachmentsToSet",
        "resource_mappings": {}
      }
    ],
    "add-communication-to-case": [
      {
        "action": "support:AddCommunicationToCase",
        "resource_mappings": {}
      }
    ],
    "create-case": [
      {
        "action": "support:CreateCase",
        "resource_mappings": {}
      }
    ],
    "describe-attachment": [
      {
        "action": "support:DescribeAttachment",
        "resource_mappings": {}
      }
    ],
    "describe-cases": [
      {
        "action": "support:DescribeCases",
        "resource_mappings": {}
      }
    ],
    "describe-communications": [
      {
        "action": "support:DescribeCommunications",
        "resource_mappings": {}
      }
    ],
    "describe-create-case-options": [
      {
        "action": "support:DescribeCreateCaseOptions",
        "resource_mappings": {}
      }
    ],
    "describe-services": [
      {
        "action": "support:DescribeServices",
        "resource_mappings": {}
      }
    ],
    "describe-severity-levels": [
      {
        "action": "support:DescribeSeverityLevels",
        "resource_mappings": {}
      }
    ],
    "describe-supported-languages": [
      {
        "action": "support:DescribeSupportedLanguages",
        "resource_mappings": {}
      }
    ],
    "describe-trusted-advisor-check-refresh-statuses": [
      {
        "action": "support:DescribeTrustedAdvisorCheckRefreshStatuses",
        "resource_mappings": {}
      }
    ],
    "describe-trusted-advisor-check-result": [
      {
        "action": "support:DescribeTrustedAdvisorCheckResult",
        "resource_mappings": {}
      }
    ],
    "describe-trusted-advisor-check-summaries": [
      {
        "action": "support:DescribeTrustedAdvisorCheckSummaries",
        "resource_mappings": {}
      }
    ],
    "describe-trusted-advisor-checks": [
      {
        "action": "support:DescribeTrustedAdvisorChecks",
        "resource_mappings": {}
      }
    ],
    "refresh-trusted-advisor-check": [
      {
        "action": "support:RefreshTrustedAdvisorCheck",
        "resource_mappings": {}
      }
    ],
    "resolve-case": [
      {
        "action": "support:ResolveCase",
        "resource_mappings": {}
      }
    ]
  },
  "support-app": {
    "create-slack-channel-configuration": [
      {
        "action": "supportapp:CreateSlackChannelConfiguration",
        "resource_mappings": {}
      }
    ],
    "delete-account-alias": [
      {
        "action": "supportapp:DeleteAccountAlias",
        "resource_mappings": {}
      }
    ],
    "delete-slack-channel-configuration": [
      {
        "action": "supportapp:DeleteSlackChannelConfiguration",
        "resource_mappings": {}
      }
    ],
    "delete-slack-workspace-configuration": [
      {
        "action": "supportapp:DeleteSlackWorkspaceConfiguration",
        "resource_mappings": {}
      }
    ],
    "get-account-alias": [
      {
        "action": "supportapp:GetAccountAlias",
        "resource_mappings": {}
      }
    ],
    "list-slack-channel-configurations": [
      {
        "action": "supportapp:ListSlackChannelConfigurations",
        "resource_mappings": {}
      }
    ],
    "list-slack-workspace-configurations": [
      {
        "action": "supportapp:ListSlackWorkspaceConfigurations",
        "resource_mappings": {}
      }
    ],
    "put-account-alias": [
      {
        "action": "supportapp:PutAccountAlias",
        "resource_mappings": {}
      }
    ],
    "register-slack-workspace-for-organization": [
      {
        "action": "supportapp:RegisterSlackWorkspaceForOrganization",
        "resource_mappings": {}
      }
    ],
    "update-slack-channel-configuration": [
      {
        "action": "supportapp:UpdateSlackChannelConfiguration",
        "resource_mappings": {}
      }
    ]
  },
  "swf": {
    "count-closed-workflow-executions": [
      {
        "action": "swf:CountClosedWorkflowExecutions",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "count-open-workflow-executions": [
      {
        "action": "swf:CountOpenWorkflowExecutions",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "count-pending-activity-tasks": [
      {
        "action": "swf:CountPendingActivityTasks",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "count-pending-decision-tasks": [
      {
        "action": "swf:CountPendingDecisionTasks",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "deprecate-activity-type": [
      {
        "action": "swf:DeprecateActivityType",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "deprecate-domain": [
      {
        "action": "swf:DeprecateDomain",
        "resource_mappings": {
          "DomainName": {
            "template": "${name}"
          }
        }
      }
    ],
    "deprecate-workflow-type": [
      {
        "action": "swf:DeprecateWorkflowType",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "describe-activity-type": [
      {
        "action": "swf:DescribeActivityType",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "describe-domain": [
      {
        "action": "swf:DescribeDomain",
        "resource_mappings": {
          "DomainName": {
            "template": "${name}"
          }
        }
      }
    ],
    "describe-workflow-execution": [
      {
        "action": "swf:DescribeWorkflowExecution",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "describe-workflow-type": [
      {
        "action": "swf:DescribeWorkflowType",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "get-workflow-execution-history": [
      {
        "action": "swf:GetWorkflowExecutionHistory",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "list-activity-types": [
      {
        "action": "swf:ListActivityTypes",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "list-closed-workflow-executions": [
      {
        "action": "swf:ListClosedWorkflowExecutions",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "list-domains": [
      {
        "action": "swf:ListDomains",
        "resource_mappings": {}
      }
    ],
    "list-open-workflow-executions": [
      {
        "action": "swf:ListOpenWorkflowExecutions",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "swf:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "domain": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "list-workflow-types": [
      {
        "action": "swf:ListWorkflowTypes",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "poll-for-activity-task": [
      {
        "action": "swf:PollForActivityTask",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "poll-for-decision-task": [
      {
        "action": "swf:PollForDecisionTask",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "record-activity-task-heartbeat": [
      {
        "action": "swf:RecordActivityTaskHeartbeat",
        "resource_mappings": {
          "DomainName": {
            "template": "*"
          }
        }
      }
    ],
    "register-activity-type": [
      {
        "action": "swf:RegisterActivityType",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "register-domain": [
      {
        "action": "swf:RegisterDomain",
        "resource_mappings": {}
      }
    ],
    "register-workflow-type": [
      {
        "action": "swf:RegisterWorkflowType",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${defaultLambdaRole}"
        }
      }
    ],
    "request-cancel-workflow-execution": [
      {
        "action": "swf:RequestCancelWorkflowExecution",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "respond-activity-task-canceled": [
      {
        "action": "swf:RespondActivityTaskCanceled",
        "resource_mappings": {
          "DomainName": {
            "template": "*"
          }
        }
      }
    ],
    "respond-activity-task-completed": [
      {
        "action": "swf:RespondActivityTaskCompleted",
        "resource_mappings": {
          "DomainName": {
            "template": "*"
          }
        }
      }
    ],
    "respond-activity-task-failed": [
      {
        "action": "swf:RespondActivityTaskFailed",
        "resource_mappings": {
          "DomainName": {
            "template": "*"
          }
        }
      }
    ],
    "respond-decision-task-completed": [
      {
        "action": "swf:RespondDecisionTaskCompleted",
        "resource_mappings": {
          "DomainName": {
            "template": "*"
          }
        }
      }
    ],
    "signal-workflow-execution": [
      {
        "action": "swf:SignalWorkflowExecution",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "start-workflow-execution": [
      {
        "action": "swf:StartWorkflowExecution",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${lambdaRole}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "swf:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "domain": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "terminate-workflow-execution": [
      {
        "action": "swf:TerminateWorkflowExecution",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "undeprecate-activity-type": [
      {
        "action": "swf:UndeprecateActivityType",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "undeprecate-domain": [
      {
        "action": "swf:UndeprecateDomain",
        "resource_mappings": {
          "DomainName": {
            "template": "${name}"
          }
        }
      }
    ],
    "undeprecate-workflow-type": [
      {
        "action": "swf:UndeprecateWorkflowType",
        "resource_mappings": {
          "DomainName": {
            "template": "${domain}"
          }
        }
      }
    ],
    "untag-resource": [
      {
        "action": "swf:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "domain": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ]
  },
  "synthetics": {
    "associate-resource": [
      {
        "action": "synthetics:AssociateResource",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupIdentifier}"
          }
        }
      }
    ],
    "create-canary": [
      {
        "action": "synthetics:CreateCanary",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${ExecutionRoleArn}"
        }
      }
    ],
    "create-group": [
      {
        "action": "synthetics:CreateGroup",
        "resource_mappings": {}
      }
    ],
    "delete-canary": [
      {
        "action": "synthetics:DeleteCanary",
        "resource_mappings": {
          "CanaryName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "delete-group": [
      {
        "action": "synthetics:DeleteGroup",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupIdentifier}"
          }
        }
      }
    ],
    "describe-canaries": [
      {
        "action": "synthetics:DescribeCanaries",
        "resource_mappings": {}
      }
    ],
    "describe-canaries-last-run": [
      {
        "action": "synthetics:DescribeCanariesLastRun",
        "resource_mappings": {}
      }
    ],
    "describe-runtime-versions": [
      {
        "action": "synthetics:DescribeRuntimeVersions",
        "resource_mappings": {}
      }
    ],
    "disassociate-resource": [
      {
        "action": "synthetics:DisassociateResource",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupIdentifier}"
          }
        }
      }
    ],
    "get-canary": [
      {
        "action": "synthetics:GetCanary",
        "resource_mappings": {
          "CanaryName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-canary-runs": [
      {
        "action": "synthetics:GetCanaryRuns",
        "resource_mappings": {
          "CanaryName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "get-group": [
      {
        "action": "synthetics:GetGroup",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupIdentifier}"
          }
        }
      }
    ],
    "list-associated-groups": [
      {
        "action": "synthetics:ListAssociatedGroups",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "canary": "${ResourceArn}"
        }
      }
    ],
    "list-group-resources": [
      {
        "action": "synthetics:ListGroupResources",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupIdentifier}"
          }
        }
      }
    ],
    "list-groups": [
      {
        "action": "synthetics:ListGroups",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "synthetics:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "canary": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "start-canary": [
      {
        "action": "synthetics:StartCanary",
        "resource_mappings": {
          "CanaryName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "stop-canary": [
      {
        "action": "synthetics:StopCanary",
        "resource_mappings": {
          "CanaryName": {
            "template": "${Name}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "synthetics:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "canary": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "synthetics:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "canary": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-canary": [
      {
        "action": "synthetics:UpdateCanary",
        "resource_mappings": {
          "CanaryName": {
            "template": "${Name}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${ExecutionRoleArn}"
        }
      }
    ]
  },
  "textract": {
    "analyze-document": [
      {
        "action": "textract:AnalyzeDocument",
        "resource_mappings": {}
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "${Document.S3Object.Bucket}"
          },
          "ObjectName": {
            "template": "${Document.S3Object.Name}"
          }
        }
      }
    ],
    "analyze-expense": [
      {
        "action": "textract:AnalyzeExpense",
        "resource_mappings": {}
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "${Document.S3Object.Bucket}"
          },
          "ObjectName": {
            "template": "${Document.S3Object.Name}"
          }
        }
      }
    ],
    "analyze-id": [
      {
        "action": "textract:AnalyzeID",
        "resource_mappings": {}
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "${DocumentPages[].S3Object.Bucket}"
          },
          "ObjectName": {
            "template": "${DocumentPages[].S3Object.Name}"
          }
        }
      }
    ],
    "create-adapter": [
      {
        "note": "NotFound",
        "action": "Textract:CreateAdapter",
        "resource_mappings": {}
      }
    ],
    "create-adapter-version": [
      {
        "note": "NotFound",
        "action": "Textract:CreateAdapterVersion",
        "resource_mappings": {}
      }
    ],
    "delete-adapter": [
      {
        "note": "NotFound",
        "action": "Textract:DeleteAdapter",
        "resource_mappings": {}
      }
    ],
    "delete-adapter-version": [
      {
        "note": "NotFound",
        "action": "Textract:DeleteAdapterVersion",
        "resource_mappings": {}
      }
    ],
    "detect-document-text": [
      {
        "action": "textract:DetectDocumentText",
        "resource_mappings": {}
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "${Document.S3Object.Bucket}"
          },
          "ObjectName": {
            "template": "${Document.S3Object.Name}"
          }
        }
      }
    ],
    "get-adapter": [
      {
        "note": "NotFound",
        "action": "Textract:GetAdapter",
        "resource_mappings": {}
      }
    ],
    "get-adapter-version": [
      {
        "note": "NotFound",
        "action": "Textract:GetAdapterVersion",
        "resource_mappings": {}
      }
    ],
    "get-document-analysis": [
      {
        "action": "textract:GetDocumentAnalysis",
        "resource_mappings": {}
      }
    ],
    "get-document-text-detection": [
      {
        "action": "textract:GetDocumentTextDetection",
        "resource_mappings": {}
      }
    ],
    "get-expense-analysis": [
      {
        "action": "textract:GetExpenseAnalysis",
        "resource_mappings": {}
      }
    ],
    "get-lending-analysis": [
      {
        "action": "textract:GetLendingAnalysis",
        "resource_mappings": {}
      }
    ],
    "get-lending-analysis-summary": [
      {
        "action": "textract:GetLendingAnalysisSummary",
        "resource_mappings": {}
      }
    ],
    "list-adapter-versions": [
      {
        "note": "NotFound",
        "action": "Textract:ListAdapterVersions",
        "resource_mappings": {}
      }
    ],
    "list-adapters": [
      {
        "note": "NotFound",
        "action": "Textract:ListAdapters",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "note": "NotFound",
        "action": "Textract:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "start-document-analysis": [
      {
        "action": "textract:StartDocumentAnalysis",
        "resource_mappings": {}
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "%%many%${DocumentLocation.S3Object.Bucket}%${OutputConfig.S3Bucket}%%"
          },
          "ObjectName": {
            "template": "%%many%${DocumentLocation.S3Object.Name}%${OutputConfig.S3Prefix}*%%"
          }
        }
      }
    ],
    "start-document-text-detection": [
      {
        "action": "textract:StartDocumentTextDetection",
        "resource_mappings": {}
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "%%many%${DocumentLocation.S3Object.Bucket}%${OutputConfig.S3Bucket}%%"
          },
          "ObjectName": {
            "template": "%%many%${DocumentLocation.S3Object.Name}%${OutputConfig.S3Prefix}*%%"
          }
        }
      }
    ],
    "start-expense-analysis": [
      {
        "action": "textract:StartExpenseAnalysis",
        "resource_mappings": {}
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "${DocumentLocation.S3Object.Bucket}"
          },
          "ObjectName": {
            "template": "${DocumentLocation.S3Object.Name}"
          }
        }
      }
    ],
    "start-lending-analysis": [
      {
        "action": "textract:StartLendingAnalysis",
        "resource_mappings": {}
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "${DocumentLocation.S3Object.Bucket}"
          },
          "ObjectName": {
            "template": "${DocumentLocation.S3Object.Name}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "note": "NotFound",
        "action": "Textract:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "note": "NotFound",
        "action": "Textract:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-adapter": [
      {
        "note": "NotFound",
        "action": "Textract:UpdateAdapter",
        "resource_mappings": {}
      }
    ]
  },
  "timestream-query": {
    "cancel-query": [
      {
        "action": "timestream:CancelQuery",
        "resource_mappings": {}
      }
    ],
    "create-scheduled-query": [
      {
        "action": "timestream:CreateScheduledQuery",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${ScheduledQueryExecutionRoleArn}"
        }
      }
    ],
    "delete-scheduled-query": [
      {
        "action": "timestream:DeleteScheduledQuery",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "scheduled-query": "${ScheduledQueryArn}"
        }
      }
    ],
    "describe-endpoints": [
      {
        "action": "timestream:DescribeEndpoints",
        "resource_mappings": {}
      }
    ],
    "describe-scheduled-query": [
      {
        "action": "timestream:DescribeScheduledQuery",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "scheduled-query": "${ScheduledQueryArn}"
        }
      }
    ],
    "execute-scheduled-query": [
      {
        "action": "timestream:ExecuteScheduledQuery",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "scheduled-query": "${ScheduledQueryArn}"
        }
      }
    ],
    "list-scheduled-queries": [
      {
        "action": "timestream:ListScheduledQueries",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "timestream:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "database": "%%iftemplatematch%${ResourceARN}%%",
          "scheduled-query": "%%iftemplatematch%${ResourceARN}%%",
          "table": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "prepare-query": [
      {
        "action": "timestream:PrepareQuery",
        "resource_mappings": {}
      }
    ],
    "query": [
      {
        "action": "timestream:Select",
        "resource_mappings": {},
        "conditions": {
          "lhs": "QueryString",
          "op": "IContains",
          "rhs": "SELECT ",
          "andCondition": {
            "lhs": "QueryString",
            "op": "INotContains",
            "rhs": " FROM "
          }
        }
      },
      {
        "action": "timestream:SelectValues",
        "resource_mappings": {},
        "conditions": {
          "lhs": "QueryString",
          "op": "IContains",
          "rhs": "SELECT ",
          "andCondition": {
            "lhs": "QueryString",
            "op": "IContains",
            "rhs": " FROM "
          }
        }
      },
      {
        "action": "timestream:ListDatabases",
        "resource_mappings": {},
        "conditions": {
          "lhs": "QueryString",
          "op": "IContains",
          "rhs": "SHOW DATABASES "
        }
      },
      {
        "action": "timestream:ListTables",
        "resource_mappings": {},
        "conditions": {
          "lhs": "QueryString",
          "op": "IContains",
          "rhs": "SHOW TABLES "
        }
      },
      {
        "action": "timestream:ListMeasures",
        "resource_mappings": {},
        "conditions": {
          "lhs": "QueryString",
          "op": "IContains",
          "rhs": "SHOW MEASURES "
        }
      },
      {
        "action": "timestream:DescribeTable",
        "resource_mappings": {},
        "conditions": {
          "lhs": "QueryString",
          "op": "IContains",
          "rhs": "DESCRIBE "
        }
      }
    ],
    "tag-resource": [
      {
        "action": "timestream:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "database": "%%iftemplatematch%${ResourceARN}%%",
          "scheduled-query": "%%iftemplatematch%${ResourceARN}%%",
          "table": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "timestream:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "database": "%%iftemplatematch%${ResourceARN}%%",
          "scheduled-query": "%%iftemplatematch%${ResourceARN}%%",
          "table": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "update-scheduled-query": [
      {
        "action": "timestream:UpdateScheduledQuery",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "scheduled-query": "${ScheduledQueryArn}"
        }
      }
    ]
  },
  "timestream-write": {
    "create-batch-load-task": [
      {
        "action": "timestream:CreateBatchLoadTask",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${TargetDatabaseName}"
          },
          "TableName": {
            "template": "${TargetTableName}"
          }
        }
      },
      {
        "action": "timestream:DescribeEndpoints",
        "resource_mappings": {}
      },
      {
        "action": "timestream:WriteRecords",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${TargetDatabaseName}"
          },
          "TableName": {
            "template": "${TargetTableName}"
          }
        }
      }
    ],
    "create-database": [
      {
        "action": "timestream:CreateDatabase",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          }
        }
      }
    ],
    "create-table": [
      {
        "action": "timestream:CreateTable",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "delete-database": [
      {
        "action": "timestream:DeleteDatabase",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          }
        }
      }
    ],
    "delete-table": [
      {
        "action": "timestream:DeleteTable",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "describe-batch-load-task": [
      {
        "action": "timestream:DescribeBatchLoadTask",
        "resource_mappings": {}
      },
      {
        "action": "timestream:DescribeEndpoints",
        "resource_mappings": {}
      }
    ],
    "describe-database": [
      {
        "action": "timestream:DescribeDatabase",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          }
        }
      }
    ],
    "describe-endpoints": [
      {
        "action": "timestream:DescribeEndpoints",
        "resource_mappings": {}
      }
    ],
    "describe-table": [
      {
        "action": "timestream:DescribeTable",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "list-batch-load-tasks": [
      {
        "action": "timestream:ListBatchLoadTasks",
        "resource_mappings": {}
      },
      {
        "action": "timestream:DescribeEndpoints",
        "resource_mappings": {}
      }
    ],
    "list-databases": [
      {
        "action": "timestream:ListDatabases",
        "resource_mappings": {}
      }
    ],
    "list-tables": [
      {
        "action": "timestream:ListTables",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "timestream:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "database": "%%iftemplatematch%${ResourceARN}%%",
          "table": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "resume-batch-load-task": [
      {
        "action": "timestream:ResumeBatchLoadTask",
        "resource_mappings": {}
      },
      {
        "action": "timestream:DescribeEndpoints",
        "resource_mappings": {}
      },
      {
        "action": "timestream:WriteRecords",
        "resource_mappings": {
          "DatabaseName": {
            "template": "*"
          },
          "TableName": {
            "template": "*"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "timestream:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "database": "%%iftemplatematch%${ResourceARN}%%",
          "table": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "timestream:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "database": "%%iftemplatematch%${ResourceARN}%%",
          "table": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "update-database": [
      {
        "action": "timestream:UpdateDatabase",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          }
        }
      }
    ],
    "update-table": [
      {
        "action": "timestream:UpdateTable",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ],
    "write-records": [
      {
        "action": "timestream:WriteRecords",
        "resource_mappings": {
          "DatabaseName": {
            "template": "${DatabaseName}"
          },
          "TableName": {
            "template": "${TableName}"
          }
        }
      }
    ]
  },
  "tnb": {
    "cancel-sol-network-operation": [
      {
        "action": "tnb:CancelSolNetworkOperation",
        "resource_mappings": {
          "NetworkOperationId": {
            "template": "${nsLcmOpOccId}"
          }
        }
      }
    ],
    "create-sol-function-package": [
      {
        "action": "tnb:CreateSolFunctionPackage",
        "resource_mappings": {
          "FunctionPackageId": {
            "template": "*"
          }
        }
      }
    ],
    "create-sol-network-instance": [
      {
        "action": "tnb:CreateSolNetworkInstance",
        "resource_mappings": {
          "NetworkInstanceId": {
            "template": "*"
          },
          "NetworkPackageId": {
            "template": "*"
          }
        }
      }
    ],
    "create-sol-network-package": [
      {
        "action": "tnb:CreateSolNetworkPackage",
        "resource_mappings": {
          "NetworkPackageId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-sol-function-package": [
      {
        "action": "tnb:DeleteSolFunctionPackage",
        "resource_mappings": {
          "FunctionPackageId": {
            "template": "${vnfPkgId}"
          }
        }
      }
    ],
    "delete-sol-network-instance": [
      {
        "action": "tnb:DeleteSolNetworkInstance",
        "resource_mappings": {
          "NetworkInstanceId": {
            "template": "${nsInstanceId}"
          }
        }
      }
    ],
    "delete-sol-network-package": [
      {
        "action": "tnb:DeleteSolNetworkPackage",
        "resource_mappings": {
          "NetworkPackageId": {
            "template": "${nsdInfoId}"
          }
        }
      }
    ],
    "get-sol-function-instance": [
      {
        "action": "tnb:GetSolFunctionInstance",
        "resource_mappings": {
          "FunctionInstanceId": {
            "template": "${vnfInstanceId}"
          }
        }
      }
    ],
    "get-sol-function-package": [
      {
        "action": "tnb:GetSolFunctionPackage",
        "resource_mappings": {
          "FunctionPackageId": {
            "template": "${vnfPkgId}"
          }
        }
      }
    ],
    "get-sol-function-package-content": [
      {
        "action": "tnb:GetSolFunctionPackageContent",
        "resource_mappings": {
          "FunctionPackageId": {
            "template": "${vnfPkgId}"
          }
        }
      }
    ],
    "get-sol-function-package-descriptor": [
      {
        "action": "tnb:GetSolFunctionPackageDescriptor",
        "resource_mappings": {
          "FunctionPackageId": {
            "template": "${vnfPkgId}"
          }
        }
      }
    ],
    "get-sol-network-instance": [
      {
        "action": "tnb:GetSolNetworkInstance",
        "resource_mappings": {
          "NetworkInstanceId": {
            "template": "${nsInstanceId}"
          }
        }
      }
    ],
    "get-sol-network-operation": [
      {
        "action": "tnb:GetSolNetworkOperation",
        "resource_mappings": {
          "NetworkOperationId": {
            "template": "${nsLcmOpOccId}"
          }
        }
      }
    ],
    "get-sol-network-package": [
      {
        "action": "tnb:GetSolNetworkPackage",
        "resource_mappings": {
          "NetworkPackageId": {
            "template": "${nsdInfoId}"
          }
        }
      }
    ],
    "get-sol-network-package-content": [
      {
        "action": "tnb:GetSolNetworkPackageContent",
        "resource_mappings": {
          "NetworkPackageId": {
            "template": "${nsdInfoId}"
          }
        }
      }
    ],
    "get-sol-network-package-descriptor": [
      {
        "action": "tnb:GetSolNetworkPackageDescriptor",
        "resource_mappings": {
          "NetworkPackageId": {
            "template": "${nsdInfoId}"
          }
        }
      }
    ],
    "instantiate-sol-network-instance": [
      {
        "action": "tnb:InstantiateSolNetworkInstance",
        "resource_mappings": {
          "NetworkInstanceId": {
            "template": "${nsInstanceId}"
          }
        }
      }
    ],
    "list-sol-function-instances": [
      {
        "action": "tnb:ListSolFunctionInstances",
        "resource_mappings": {
          "FunctionInstanceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-sol-function-packages": [
      {
        "action": "tnb:ListSolFunctionPackages",
        "resource_mappings": {
          "FunctionPackageId": {
            "template": "*"
          }
        }
      }
    ],
    "list-sol-network-instances": [
      {
        "action": "tnb:ListSolNetworkInstances",
        "resource_mappings": {
          "NetworkInstanceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-sol-network-operations": [
      {
        "action": "tnb:ListSolNetworkOperations",
        "resource_mappings": {
          "NetworkOperationId": {
            "template": "*"
          }
        }
      }
    ],
    "list-sol-network-packages": [
      {
        "action": "tnb:ListSolNetworkPackages",
        "resource_mappings": {
          "NetworkPackageId": {
            "template": "*"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "tnb:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "put-sol-function-package-content": [
      {
        "action": "tnb:PutSolFunctionPackageContent",
        "resource_mappings": {
          "FunctionPackageId": {
            "template": "${vnfPkgId}"
          }
        }
      }
    ],
    "put-sol-network-package-content": [
      {
        "action": "tnb:PutSolNetworkPackageContent",
        "resource_mappings": {
          "NetworkPackageId": {
            "template": "${nsdInfoId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "tnb:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "function-instance": "%%iftemplatematch%${resourceArn}%%",
          "function-package": "%%iftemplatematch%${resourceArn}%%",
          "network-instance": "%%iftemplatematch%${resourceArn}%%",
          "network-operation": "%%iftemplatematch%${resourceArn}%%",
          "network-package": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "terminate-sol-network-instance": [
      {
        "action": "tnb:TerminateSolNetworkInstance",
        "resource_mappings": {
          "NetworkInstanceId": {
            "template": "${nsInstanceId}"
          }
        }
      }
    ],
    "untag-resource": [
      {
        "action": "tnb:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "function-instance": "%%iftemplatematch%${resourceArn}%%",
          "function-package": "%%iftemplatematch%${resourceArn}%%",
          "network-instance": "%%iftemplatematch%${resourceArn}%%",
          "network-operation": "%%iftemplatematch%${resourceArn}%%",
          "network-package": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-sol-function-package": [
      {
        "action": "tnb:UpdateSolFunctionPackage",
        "resource_mappings": {
          "FunctionPackageId": {
            "template": "${vnfPkgId}"
          }
        }
      }
    ],
    "update-sol-network-instance": [
      {
        "action": "tnb:UpdateSolNetworkInstance",
        "resource_mappings": {
          "FunctionInstanceId": {
            "template": "${modifyVnfInfoData.vnfInstanceId}"
          },
          "NetworkInstanceId": {
            "template": "${nsInstanceId}"
          }
        }
      }
    ],
    "update-sol-network-package": [
      {
        "action": "tnb:UpdateSolNetworkPackage",
        "resource_mappings": {
          "NetworkPackageId": {
            "template": "${nsdInfoId}"
          }
        }
      }
    ],
    "validate-sol-function-package-content": [
      {
        "action": "tnb:ValidateSolFunctionPackageContent",
        "resource_mappings": {
          "FunctionPackageId": {
            "template": "${vnfPkgId}"
          }
        }
      }
    ],
    "validate-sol-network-package-content": [
      {
        "action": "tnb:ValidateSolNetworkPackageContent",
        "resource_mappings": {
          "NetworkPackageId": {
            "template": "${nsdInfoId}"
          }
        }
      }
    ]
  },
  "transcribe": {
    "create-call-analytics-category": [
      {
        "action": "transcribe:CreateCallAnalyticsCategory",
        "resource_mappings": {}
      }
    ],
    "create-language-model": [
      {
        "action": "transcribe:CreateLanguageModel",
        "resource_mappings": {}
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      }
    ],
    "create-medical-vocabulary": [
      {
        "action": "transcribe:CreateMedicalVocabulary",
        "resource_mappings": {}
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      }
    ],
    "create-vocabulary": [
      {
        "action": "transcribe:CreateVocabulary",
        "resource_mappings": {}
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      }
    ],
    "create-vocabulary-filter": [
      {
        "action": "transcribe:CreateVocabularyFilter",
        "resource_mappings": {}
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      }
    ],
    "delete-call-analytics-category": [
      {
        "action": "transcribe:DeleteCallAnalyticsCategory",
        "resource_mappings": {}
      }
    ],
    "delete-call-analytics-job": [
      {
        "action": "transcribe:DeleteCallAnalyticsJob",
        "resource_mappings": {}
      }
    ],
    "delete-language-model": [
      {
        "action": "transcribe:DeleteLanguageModel",
        "resource_mappings": {}
      }
    ],
    "delete-medical-transcription-job": [
      {
        "action": "transcribe:DeleteMedicalTranscriptionJob",
        "resource_mappings": {}
      }
    ],
    "delete-medical-vocabulary": [
      {
        "action": "transcribe:DeleteMedicalVocabulary",
        "resource_mappings": {}
      }
    ],
    "delete-transcription-job": [
      {
        "action": "transcribe:DeleteTranscriptionJob",
        "resource_mappings": {}
      }
    ],
    "delete-vocabulary": [
      {
        "action": "transcribe:DeleteVocabulary",
        "resource_mappings": {}
      }
    ],
    "delete-vocabulary-filter": [
      {
        "action": "transcribe:DeleteVocabularyFilter",
        "resource_mappings": {}
      }
    ],
    "describe-language-model": [
      {
        "action": "transcribe:DescribeLanguageModel",
        "resource_mappings": {}
      }
    ],
    "get-call-analytics-category": [
      {
        "action": "transcribe:GetCallAnalyticsCategory",
        "resource_mappings": {}
      }
    ],
    "get-call-analytics-job": [
      {
        "action": "transcribe:GetCallAnalyticsJob",
        "resource_mappings": {}
      }
    ],
    "get-medical-transcription-job": [
      {
        "action": "transcribe:GetMedicalTranscriptionJob",
        "resource_mappings": {}
      }
    ],
    "get-medical-vocabulary": [
      {
        "action": "transcribe:GetMedicalVocabulary",
        "resource_mappings": {}
      }
    ],
    "get-transcription-job": [
      {
        "action": "transcribe:GetTranscriptionJob",
        "resource_mappings": {}
      }
    ],
    "get-vocabulary": [
      {
        "action": "transcribe:GetVocabulary",
        "resource_mappings": {}
      }
    ],
    "get-vocabulary-filter": [
      {
        "action": "transcribe:GetVocabularyFilter",
        "resource_mappings": {}
      }
    ],
    "list-call-analytics-categories": [
      {
        "action": "transcribe:ListCallAnalyticsCategories",
        "resource_mappings": {}
      }
    ],
    "list-call-analytics-jobs": [
      {
        "action": "transcribe:ListCallAnalyticsJobs",
        "resource_mappings": {}
      }
    ],
    "list-language-models": [
      {
        "action": "transcribe:ListLanguageModels",
        "resource_mappings": {}
      }
    ],
    "list-medical-transcription-jobs": [
      {
        "action": "transcribe:ListMedicalTranscriptionJobs",
        "resource_mappings": {}
      }
    ],
    "list-medical-vocabularies": [
      {
        "action": "transcribe:ListMedicalVocabularies",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "transcribe:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "list-transcription-jobs": [
      {
        "action": "transcribe:ListTranscriptionJobs",
        "resource_mappings": {}
      }
    ],
    "list-vocabularies": [
      {
        "action": "transcribe:ListVocabularies",
        "resource_mappings": {}
      }
    ],
    "list-vocabulary-filters": [
      {
        "action": "transcribe:ListVocabularyFilters",
        "resource_mappings": {}
      }
    ],
    "start-call-analytics-job": [
      {
        "action": "transcribe:StartCallAnalyticsJob",
        "resource_mappings": {}
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      }
    ],
    "start-medical-transcription-job": [
      {
        "action": "transcribe:StartMedicalTranscriptionJob",
        "resource_mappings": {}
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      }
    ],
    "start-transcription-job": [
      {
        "action": "transcribe:StartTranscriptionJob",
        "resource_mappings": {}
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "transcribe:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "transcribe:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-call-analytics-category": [
      {
        "action": "transcribe:UpdateCallAnalyticsCategory",
        "resource_mappings": {}
      }
    ],
    "update-medical-vocabulary": [
      {
        "action": "transcribe:UpdateMedicalVocabulary",
        "resource_mappings": {}
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      }
    ],
    "update-vocabulary": [
      {
        "action": "transcribe:UpdateVocabulary",
        "resource_mappings": {}
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      }
    ],
    "update-vocabulary-filter": [
      {
        "action": "transcribe:UpdateVocabularyFilter",
        "resource_mappings": {}
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "*"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      }
    ]
  },
  "transfer": {
    "create-access": [
      {
        "action": "transfer:CreateAccess",
        "resource_mappings": {
          "region": {
            "template": "${Region}"
          },
          "account": {
            "template": "${Account}"
          },
          "serverId": {
            "template": "${ServerId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${Role}"
        }
      }
    ],
    "create-agreement": [
      {
        "action": "transfer:CreateAgreement",
        "resource_mappings": {
          "ServerId": {
            "template": "${ServerId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${AccessRole}"
        }
      }
    ],
    "create-connector": [
      {
        "action": "transfer:CreateConnector",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${AccessRole}"
        }
      }
    ],
    "create-profile": [
      {
        "action": "transfer:CreateProfile",
        "resource_mappings": {}
      }
    ],
    "create-server": [
      {
        "action": "transfer:CreateServer",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${IdentityProviderDetails.InvocationRole}%${LoggingRole}$$"
        }
      }
    ],
    "create-user": [
      {
        "action": "transfer:CreateUser",
        "resource_mappings": {
          "region": {
            "template": "${Region}"
          },
          "account": {
            "template": "${Account}"
          },
          "serverId": {
            "template": "${ServerId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${Role}"
        }
      }
    ],
    "create-workflow": [
      {
        "action": "transfer:CreateWorkflow",
        "resource_mappings": {}
      }
    ],
    "delete-access": [
      {
        "action": "transfer:DeleteAccess",
        "resource_mappings": {
          "region": {
            "template": "${Region}"
          },
          "account": {
            "template": "${Account}"
          },
          "serverId": {
            "template": "${ServerId}"
          }
        }
      }
    ],
    "delete-agreement": [
      {
        "action": "transfer:DeleteAgreement",
        "resource_mappings": {
          "AgreementId": {
            "template": "${AgreementId}"
          }
        }
      }
    ],
    "delete-certificate": [
      {
        "action": "transfer:DeleteCertificate",
        "resource_mappings": {
          "CertificateId": {
            "template": "${CertificateId}"
          }
        }
      }
    ],
    "delete-connector": [
      {
        "action": "transfer:DeleteConnector",
        "resource_mappings": {
          "ConnectorId": {
            "template": "${ConnectorId}"
          }
        }
      }
    ],
    "delete-host-key": [
      {
        "action": "transfer:DeleteHostKey",
        "resource_mappings": {
          "ServerId": {
            "template": "${ServerId}"
          },
          "HostKeyId": {
            "template": "${HostKeyId}"
          }
        }
      }
    ],
    "delete-profile": [
      {
        "action": "transfer:DeleteProfile",
        "resource_mappings": {
          "ProfileId": {
            "template": "${ProfileId}"
          }
        }
      }
    ],
    "delete-server": [
      {
        "action": "transfer:DeleteServer",
        "resource_mappings": {
          "region": {
            "template": "${Region}"
          },
          "account": {
            "template": "${Account}"
          },
          "serverId": {
            "template": "${ServerId}"
          }
        }
      }
    ],
    "delete-ssh-public-key": [
      {
        "action": "transfer:DeleteSshPublicKey",
        "resource_mappings": {
          "region": {
            "template": "${Region}"
          },
          "account": {
            "template": "${Account}"
          },
          "serverId": {
            "template": "${ServerId}"
          },
          "username": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "delete-user": [
      {
        "action": "transfer:DeleteUser",
        "resource_mappings": {
          "region": {
            "template": "${Region}"
          },
          "account": {
            "template": "${Account}"
          },
          "serverId": {
            "template": "${ServerId}"
          },
          "username": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "delete-workflow": [
      {
        "action": "transfer:DeleteWorkflow",
        "resource_mappings": {
          "region": {
            "template": "${Region}"
          },
          "account": {
            "template": "${Account}"
          },
          "workflowId": {
            "template": "${WorkflowId}"
          }
        }
      }
    ],
    "describe-access": [
      {
        "action": "transfer:DescribeAccess",
        "resource_mappings": {
          "region": {
            "template": "${Region}"
          },
          "account": {
            "template": "${Account}"
          },
          "serverId": {
            "template": "${ServerId}"
          }
        }
      }
    ],
    "describe-agreement": [
      {
        "action": "transfer:DescribeAgreement",
        "resource_mappings": {
          "AgreementId": {
            "template": "${AgreementId}"
          }
        }
      }
    ],
    "describe-certificate": [
      {
        "action": "transfer:DescribeCertificate",
        "resource_mappings": {
          "CertificateId": {
            "template": "${CertificateId}"
          }
        }
      }
    ],
    "describe-connector": [
      {
        "action": "transfer:DescribeConnector",
        "resource_mappings": {
          "ConnectorId": {
            "template": "${ConnectorId}"
          }
        }
      }
    ],
    "describe-execution": [
      {
        "action": "transfer:DescribeExecution",
        "resource_mappings": {
          "region": {
            "template": "${Region}"
          },
          "account": {
            "template": "${Account}"
          },
          "workflowId": {
            "template": "${WorkflowId}"
          }
        }
      }
    ],
    "describe-host-key": [
      {
        "action": "transfer:DescribeHostKey",
        "resource_mappings": {
          "ServerId": {
            "template": "${ServerId}"
          },
          "HostKeyId": {
            "template": "${HostKeyId}"
          }
        }
      }
    ],
    "describe-profile": [
      {
        "action": "transfer:DescribeProfile",
        "resource_mappings": {
          "ProfileId": {
            "template": "${ProfileId}"
          }
        }
      }
    ],
    "describe-security-policy": [
      {
        "action": "transfer:DescribeSecurityPolicy",
        "resource_mappings": {}
      }
    ],
    "describe-server": [
      {
        "action": "transfer:DescribeServer",
        "resource_mappings": {
          "region": {
            "template": "${Region}"
          },
          "account": {
            "template": "${Account}"
          },
          "serverId": {
            "template": "${ServerId}"
          }
        }
      }
    ],
    "describe-user": [
      {
        "action": "transfer:DescribeUser",
        "resource_mappings": {
          "region": {
            "template": "${Region}"
          },
          "account": {
            "template": "${Account}"
          },
          "serverId": {
            "template": "${ServerId}"
          },
          "username": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "describe-workflow": [
      {
        "action": "transfer:DescribeWorkflow",
        "resource_mappings": {
          "region": {
            "template": "${Region}"
          },
          "account": {
            "template": "${Account}"
          },
          "workflowId": {
            "template": "${WorkflowId}"
          }
        }
      }
    ],
    "import-certificate": [
      {
        "action": "transfer:ImportCertificate",
        "resource_mappings": {}
      }
    ],
    "import-host-key": [
      {
        "action": "transfer:ImportHostKey",
        "resource_mappings": {
          "ServerId": {
            "template": "${ServerId}"
          }
        }
      }
    ],
    "import-ssh-public-key": [
      {
        "action": "transfer:ImportSshPublicKey",
        "resource_mappings": {
          "region": {
            "template": "${Region}"
          },
          "account": {
            "template": "${Account}"
          },
          "serverId": {
            "template": "${ServerId}"
          },
          "username": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "list-accesses": [
      {
        "action": "transfer:ListAccesses",
        "resource_mappings": {
          "region": {
            "template": "${Region}"
          },
          "account": {
            "template": "${Account}"
          },
          "serverId": {
            "template": "${ServerId}"
          }
        }
      }
    ],
    "list-agreements": [
      {
        "action": "transfer:ListAgreements",
        "resource_mappings": {
          "ServerId": {
            "template": "${ServerId}"
          }
        }
      }
    ],
    "list-certificates": [
      {
        "action": "transfer:ListCertificates",
        "resource_mappings": {}
      }
    ],
    "list-connectors": [
      {
        "action": "transfer:ListConnectors",
        "resource_mappings": {}
      }
    ],
    "list-executions": [
      {
        "action": "transfer:ListExecutions",
        "resource_mappings": {
          "region": {
            "template": "${Region}"
          },
          "account": {
            "template": "${Account}"
          },
          "workflowId": {
            "template": "${WorkflowId}"
          }
        }
      }
    ],
    "list-host-keys": [
      {
        "action": "transfer:ListHostKeys",
        "resource_mappings": {
          "ServerId": {
            "template": "${ServerId}"
          }
        }
      }
    ],
    "list-profiles": [
      {
        "action": "transfer:ListProfiles",
        "resource_mappings": {}
      }
    ],
    "list-security-policies": [
      {
        "action": "transfer:ListSecurityPolicies",
        "resource_mappings": {}
      }
    ],
    "list-servers": [
      {
        "action": "transfer:ListServers",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "transfer:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "server": "%%iftemplatematch%${Arn}%%",
          "user": "%%iftemplatematch%${Arn}%%"
        }
      }
    ],
    "list-users": [
      {
        "action": "transfer:ListUsers",
        "resource_mappings": {
          "region": {
            "template": "${Region}"
          },
          "account": {
            "template": "${Account}"
          },
          "serverId": {
            "template": "${ServerId}"
          }
        }
      }
    ],
    "list-workflows": [
      {
        "action": "transfer:ListWorkflows",
        "resource_mappings": {}
      }
    ],
    "send-workflow-step-state": [
      {
        "action": "transfer:SendWorkflowStepState",
        "resource_mappings": {
          "region": {
            "template": "${Region}"
          },
          "account": {
            "template": "${Account}"
          },
          "workflowId": {
            "template": "${WorkflowId}"
          }
        }
      }
    ],
    "start-file-transfer": [
      {
        "action": "transfer:StartFileTransfer",
        "resource_mappings": {
          "ConnectorId": {
            "template": "${ConnectorId}"
          }
        }
      }
    ],
    "start-server": [
      {
        "action": "transfer:StartServer",
        "resource_mappings": {
          "region": {
            "template": "${Region}"
          },
          "account": {
            "template": "${Account}"
          },
          "serverId": {
            "template": "${ServerId}"
          }
        }
      }
    ],
    "stop-server": [
      {
        "action": "transfer:StopServer",
        "resource_mappings": {
          "region": {
            "template": "${Region}"
          },
          "account": {
            "template": "${Account}"
          },
          "serverId": {
            "template": "${ServerId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "transfer:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "server": "%%iftemplatematch%${Arn}%%",
          "user": "%%iftemplatematch%${Arn}%%"
        }
      }
    ],
    "test-connection": [
      {
        "action": "transfer:TestConnection",
        "resource_mappings": {
          "ConnectorId": {
            "template": "${ConnectorId}"
          }
        }
      }
    ],
    "test-identity-provider": [
      {
        "action": "transfer:TestIdentityProvider",
        "resource_mappings": {
          "region": {
            "template": "${Region}"
          },
          "account": {
            "template": "${Account}"
          },
          "serverId": {
            "template": "${ServerId}"
          },
          "username": {
            "template": "${UserName}"
          }
        }
      }
    ],
    "untag-resource": [
      {
        "action": "transfer:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "server": "%%iftemplatematch%${Arn}%%",
          "user": "%%iftemplatematch%${Arn}%%"
        }
      }
    ],
    "update-access": [
      {
        "action": "transfer:UpdateAccess",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${Role}"
        }
      }
    ],
    "update-agreement": [
      {
        "action": "transfer:UpdateAgreement",
        "resource_mappings": {
          "AgreementId": {
            "template": "${AgreementId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "${AccessRole}"
        }
      }
    ],
    "update-certificate": [
      {
        "action": "transfer:UpdateCertificate",
        "resource_mappings": {
          "CertificateId": {
            "template": "${CertificateId}"
          }
        }
      }
    ],
    "update-connector": [
      {
        "action": "transfer:UpdateConnector",
        "resource_mappings": {
          "ConnectorId": {
            "template": "${ConnectorId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "role": "%%many%${AccessRole}%${LoggingRole}%%"
        }
      }
    ],
    "update-host-key": [
      {
        "action": "transfer:UpdateHostKey",
        "resource_mappings": {
          "ServerId": {
            "template": "${ServerId}"
          },
          "HostKeyId": {
            "template": "${HostKeyId}"
          }
        }
      }
    ],
    "update-profile": [
      {
        "action": "transfer:UpdateProfile",
        "resource_mappings": {
          "ProfileId": {
            "template": "${ProfileId}"
          }
        }
      }
    ],
    "update-server": [
      {
        "action": "transfer:UpdateServer",
        "resource_mappings": {
          "region": {
            "template": "${Region}"
          },
          "account": {
            "template": "${Account}"
          },
          "serverId": {
            "template": "${ServerId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%many%${IdentityProviderDetails.InvocationRole}%${LoggingRole}$$"
        }
      }
    ],
    "update-user": [
      {
        "action": "transfer:UpdateUser",
        "resource_mappings": {
          "region": {
            "template": "${Region}"
          },
          "account": {
            "template": "${Account}"
          },
          "serverId": {
            "template": "${ServerId}"
          },
          "username": {
            "template": "${UserName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${Role}"
        }
      }
    ],
    "wait": [
      {
        "action": "transfer:DescribeServer",
        "resource_mappings": {
          "region": {
            "template": "${Region}"
          },
          "account": {
            "template": "${Account}"
          },
          "serverId": {
            "template": "${ServerId}"
          }
        }
      }
    ]
  },
  "translate": {
    "create-parallel-data": [
      {
        "action": "translate:CreateParallelData",
        "resource_mappings": {}
      }
    ],
    "delete-parallel-data": [
      {
        "action": "translate:DeleteParallelData",
        "resource_mappings": {}
      }
    ],
    "delete-terminology": [
      {
        "action": "translate:DeleteTerminology",
        "resource_mappings": {}
      }
    ],
    "describe-text-translation-job": [
      {
        "action": "translate:DescribeTextTranslationJob",
        "resource_mappings": {}
      }
    ],
    "get-parallel-data": [
      {
        "action": "translate:GetParallelData",
        "resource_mappings": {}
      }
    ],
    "get-terminology": [
      {
        "action": "translate:GetTerminology",
        "resource_mappings": {}
      }
    ],
    "import-terminology": [
      {
        "action": "translate:ImportTerminology",
        "resource_mappings": {}
      }
    ],
    "list-languages": [
      {
        "action": "translate:ListLanguages",
        "resource_mappings": {}
      }
    ],
    "list-parallel-data": [
      {
        "action": "translate:ListParallelData",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "translate:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "parallel-data": "%%iftemplatematch%${ResourceArn}%%",
          "terminology": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "list-terminologies": [
      {
        "action": "translate:ListTerminologies",
        "resource_mappings": {}
      }
    ],
    "list-text-translation-jobs": [
      {
        "action": "translate:ListTextTranslationJobs",
        "resource_mappings": {}
      }
    ],
    "start-text-translation-job": [
      {
        "action": "translate:StartTextTranslationJob",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${DataAccessRoleArn}"
        }
      }
    ],
    "stop-text-translation-job": [
      {
        "action": "translate:StopTextTranslationJob",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "translate:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "parallel-data": "%%iftemplatematch%${ResourceArn}%%",
          "terminology": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "translate-document": [
      {
        "action": "translate:TranslateDocument",
        "resource_mappings": {
          "ResourceName": {
            "template": "${TerminologyNames[]}"
          }
        }
      }
    ],
    "translate-text": [
      {
        "action": "translate:TranslateText",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "translate:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "parallel-data": "%%iftemplatematch%${ResourceArn}%%",
          "terminology": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-parallel-data": [
      {
        "action": "translate:UpdateParallelData",
        "resource_mappings": {}
      }
    ]
  },
  "verifiedpermissions": {
    "create-identity-source": [
      {
        "action": "verifiedpermissions:CreateIdentitySource",
        "resource_mappings": {
          "PolicyStoreId": {
            "template": "${policyStoreId}"
          }
        }
      }
    ],
    "create-policy": [
      {
        "action": "verifiedpermissions:CreatePolicy",
        "resource_mappings": {
          "PolicyStoreId": {
            "template": "${policyStoreId}"
          }
        }
      }
    ],
    "create-policy-store": [
      {
        "action": "verifiedpermissions:CreatePolicyStore",
        "resource_mappings": {}
      }
    ],
    "create-policy-template": [
      {
        "action": "verifiedpermissions:CreatePolicyTemplate",
        "resource_mappings": {
          "PolicyStoreId": {
            "template": "${policyStoreId}"
          }
        }
      }
    ],
    "delete-identity-source": [
      {
        "action": "verifiedpermissions:DeleteIdentitySource",
        "resource_mappings": {
          "PolicyStoreId": {
            "template": "${policyStoreId}"
          }
        }
      }
    ],
    "delete-policy": [
      {
        "action": "verifiedpermissions:DeletePolicy",
        "resource_mappings": {
          "PolicyStoreId": {
            "template": "${policyStoreId}"
          }
        }
      }
    ],
    "delete-policy-store": [
      {
        "action": "verifiedpermissions:DeletePolicyStore",
        "resource_mappings": {
          "PolicyStoreId": {
            "template": "${policyStoreId}"
          }
        }
      }
    ],
    "delete-policy-template": [
      {
        "action": "verifiedpermissions:DeletePolicyTemplate",
        "resource_mappings": {
          "PolicyStoreId": {
            "template": "${policyStoreId}"
          }
        }
      }
    ],
    "get-identity-source": [
      {
        "action": "verifiedpermissions:GetIdentitySource",
        "resource_mappings": {
          "PolicyStoreId": {
            "template": "${policyStoreId}"
          }
        }
      }
    ],
    "get-policy": [
      {
        "action": "verifiedpermissions:GetPolicy",
        "resource_mappings": {
          "PolicyStoreId": {
            "template": "${policyStoreId}"
          }
        }
      }
    ],
    "get-policy-store": [
      {
        "action": "verifiedpermissions:GetPolicyStore",
        "resource_mappings": {
          "PolicyStoreId": {
            "template": "${policyStoreId}"
          }
        }
      }
    ],
    "get-policy-template": [
      {
        "action": "verifiedpermissions:GetPolicyTemplate",
        "resource_mappings": {
          "PolicyStoreId": {
            "template": "${policyStoreId}"
          }
        }
      }
    ],
    "get-schema": [
      {
        "action": "verifiedpermissions:GetSchema",
        "resource_mappings": {
          "PolicyStoreId": {
            "template": "${policyStoreId}"
          }
        }
      }
    ],
    "is-authorized": [
      {
        "action": "verifiedpermissions:IsAuthorized",
        "resource_mappings": {
          "PolicyStoreId": {
            "template": "${policyStoreId}"
          }
        }
      }
    ],
    "is-authorized-with-token": [
      {
        "action": "verifiedpermissions:IsAuthorizedWithToken",
        "resource_mappings": {
          "PolicyStoreId": {
            "template": "${policyStoreId}"
          }
        }
      }
    ],
    "list-identity-sources": [
      {
        "action": "verifiedpermissions:ListIdentitySources",
        "resource_mappings": {
          "PolicyStoreId": {
            "template": "${policyStoreId}"
          }
        }
      }
    ],
    "list-policies": [
      {
        "action": "verifiedpermissions:ListPolicies",
        "resource_mappings": {
          "PolicyStoreId": {
            "template": "${policyStoreId}"
          }
        }
      }
    ],
    "list-policy-stores": [
      {
        "action": "verifiedpermissions:ListPolicyStores",
        "resource_mappings": {}
      }
    ],
    "list-policy-templates": [
      {
        "action": "verifiedpermissions:ListPolicyTemplates",
        "resource_mappings": {
          "PolicyStoreId": {
            "template": "${policyStoreId}"
          }
        }
      }
    ],
    "put-schema": [
      {
        "action": "verifiedpermissions:PutSchema",
        "resource_mappings": {
          "PolicyStoreId": {
            "template": "${policyStoreId}"
          }
        }
      }
    ],
    "update-identity-source": [
      {
        "action": "verifiedpermissions:UpdateIdentitySource",
        "resource_mappings": {
          "PolicyStoreId": {
            "template": "${policyStoreId}"
          }
        }
      }
    ],
    "update-policy": [
      {
        "action": "verifiedpermissions:UpdatePolicy",
        "resource_mappings": {
          "PolicyStoreId": {
            "template": "${policyStoreId}"
          }
        }
      }
    ],
    "update-policy-store": [
      {
        "action": "verifiedpermissions:UpdatePolicyStore",
        "resource_mappings": {
          "PolicyStoreId": {
            "template": "${policyStoreId}"
          }
        }
      }
    ],
    "update-policy-template": [
      {
        "action": "verifiedpermissions:UpdatePolicyTemplate",
        "resource_mappings": {
          "PolicyStoreId": {
            "template": "${policyStoreId}"
          }
        }
      }
    ]
  },
  "voice-id": {
    "associate-fraudster": [
      {
        "action": "voiceid:AssociateFraudster",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          }
        }
      }
    ],
    "create-domain": [
      {
        "action": "voiceid:CreateDomain",
        "resource_mappings": {}
      }
    ],
    "create-watchlist": [
      {
        "action": "voiceid:CreateWatchlist",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          }
        }
      }
    ],
    "delete-domain": [
      {
        "action": "voiceid:DeleteDomain",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          }
        }
      }
    ],
    "delete-fraudster": [
      {
        "action": "voiceid:DeleteFraudster",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          }
        }
      }
    ],
    "delete-speaker": [
      {
        "action": "voiceid:DeleteSpeaker",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          }
        }
      }
    ],
    "delete-watchlist": [
      {
        "action": "voiceid:DeleteWatchlist",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          }
        }
      }
    ],
    "describe-domain": [
      {
        "action": "voiceid:DescribeDomain",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          }
        }
      }
    ],
    "describe-fraudster": [
      {
        "action": "voiceid:DescribeFraudster",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          }
        }
      }
    ],
    "describe-fraudster-registration-job": [
      {
        "action": "voiceid:DescribeFraudsterRegistrationJob",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          }
        }
      }
    ],
    "describe-speaker": [
      {
        "action": "voiceid:DescribeSpeaker",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          }
        }
      }
    ],
    "describe-speaker-enrollment-job": [
      {
        "action": "voiceid:DescribeSpeakerEnrollmentJob",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          }
        }
      }
    ],
    "describe-watchlist": [
      {
        "action": "voiceid:DescribeWatchlist",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          }
        }
      }
    ],
    "disassociate-fraudster": [
      {
        "action": "voiceid:DisassociateFraudster",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          }
        }
      }
    ],
    "evaluate-session": [
      {
        "action": "voiceid:EvaluateSession",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          }
        }
      }
    ],
    "list-domains": [
      {
        "action": "voiceid:ListDomains",
        "resource_mappings": {}
      }
    ],
    "list-fraudster-registration-jobs": [
      {
        "action": "voiceid:ListFraudsterRegistrationJobs",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          }
        }
      }
    ],
    "list-fraudsters": [
      {
        "action": "voiceid:ListFraudsters",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          }
        }
      }
    ],
    "list-speaker-enrollment-jobs": [
      {
        "action": "voiceid:ListSpeakerEnrollmentJobs",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          }
        }
      }
    ],
    "list-speakers": [
      {
        "action": "voiceid:ListSpeakers",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "voiceid:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "domain": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "list-watchlists": [
      {
        "action": "voiceid:ListWatchlists",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          }
        }
      }
    ],
    "opt-out-speaker": [
      {
        "action": "voiceid:OptOutSpeaker",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          }
        }
      }
    ],
    "start-fraudster-registration-job": [
      {
        "action": "voiceid:StartFraudsterRegistrationJob",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          }
        }
      }
    ],
    "start-speaker-enrollment-job": [
      {
        "action": "voiceid:StartSpeakerEnrollmentJob",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "voiceid:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "domain": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "voiceid:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "domain": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-domain": [
      {
        "action": "voiceid:UpdateDomain",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          }
        }
      }
    ],
    "update-watchlist": [
      {
        "action": "voiceid:UpdateWatchlist",
        "resource_mappings": {
          "DomainId": {
            "template": "${DomainId}"
          }
        }
      }
    ]
  },
  "vpc-lattice": {
    "batch-update-rule": [
      {
        "note": "NotFound",
        "action": "VPC Lattice:BatchUpdateRule",
        "resource_mappings": {}
      }
    ],
    "create-access-log-subscription": [
      {
        "action": "vpc-lattice:CreateAccessLogSubscription",
        "resource_mappings": {
          "AccessLogSubscriptionId": {
            "template": "*"
          }
        }
      },
      {
        "action": "logs:CreateLogDelivery",
        "resource_mappings": {}
      },
      {
        "action": "logs:GetLogDelivery",
        "resource_mappings": {}
      }
    ],
    "create-listener": [
      {
        "action": "vpc-lattice:CreateListener",
        "resource_mappings": {
          "ServiceId": {
            "template": "%%regex%${serviceIdentifier}%/(?:arn.*/)?(.+)/g%%"
          },
          "ListenerId": {
            "template": ""
          }
        }
      }
    ],
    "create-rule": [
      {
        "action": "vpc-lattice:CreateRule",
        "resource_mappings": {
          "ServiceId": {
            "template": "%%regex%${serviceIdentifier}%/(?:arn.*/)?(.+)/g%%"
          },
          "ListenerId": {
            "template": "%%regex%${listenerIdentifier}%/(?:arn.*/)?(.+)/g%%"
          },
          "RuleId": {
            "template": "*"
          }
        }
      }
    ],
    "create-service": [
      {
        "action": "vpc-lattice:CreateService",
        "resource_mappings": {
          "ServiceId": {
            "template": "%%regex%${serviceIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "create-service-network": [
      {
        "action": "vpc-lattice:CreateServiceNetwork",
        "resource_mappings": {
          "ServiceNetworkId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "create-service-network-service-association": [
      {
        "action": "vpc-lattice:CreateServiceNetworkServiceAssociation",
        "resource_mappings": {
          "ServiceId": {
            "template": "%%regex%${serviceIdentifier}%/(?:arn.*/)?(.+)/g%%"
          },
          "ServiceNetworkId": {
            "template": "%%regex%${serviceNetworkIdentifier}%/(?:arn.*/)?(.+)/g%%"
          },
          "ServiceNetworkServiceAssociationId": {
            "template": "*"
          }
        }
      }
    ],
    "create-service-network-vpc-association": [
      {
        "action": "vpc-lattice:CreateServiceNetworkVpcAssociation",
        "resource_mappings": {
          "ServiceNetworkId": {
            "template": "%%regex%${serviceNetworkIdentifier}%/(?:arn.*/)?(.+)/g%%"
          },
          "ServiceNetworkVpcAssociationId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      }
    ],
    "create-target-group": [
      {
        "action": "vpc-lattice:CreateTargetGroup",
        "resource_mappings": {
          "TargetGroupId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "delete-access-log-subscription": [
      {
        "action": "vpc-lattice:DeleteAccessLogSubscription",
        "resource_mappings": {
          "AccessLogSubscriptionId": {
            "template": "%%regex%${accessLogSubscriptionIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      },
      {
        "action": "logs:DeleteLogDelivery",
        "resource_mappings": {}
      },
      {
        "action": "logs:GetLogDelivery",
        "resource_mappings": {}
      }
    ],
    "delete-auth-policy": [
      {
        "action": "vpc-lattice:DeleteAuthPolicy",
        "resource_mappings": {
          "ServiceId": {
            "template": "%%regex%${resourceIdentifier}%/(?:arn.*/)?(.+)/g%%"
          },
          "ServiceNetworkId": {
            "template": "%%regex%${resourceIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      }
    ],
    "delete-listener": [
      {
        "action": "vpc-lattice:DeleteListener",
        "resource_mappings": {
          "ServiceId": {
            "template": "%%regex%${serviceIdentifier}%/(?:arn.*/)?(.+)/g%%"
          },
          "ListenerId": {
            "template": "%%regex%${listenerIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      }
    ],
    "delete-resource-policy": [
      {
        "action": "vpc-lattice:DeleteResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Service": "%%iftemplatematch%${resourceArn}%%",
          "ServiceNetwork": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "delete-rule": [
      {
        "action": "vpc-lattice:DeleteRule",
        "resource_mappings": {
          "ServiceId": {
            "template": "%%regex%${serviceIdentifier}%/(?:arn.*/)?(.+)/g%%"
          },
          "ListenerId": {
            "template": "%%regex%${listenerIdentifier}%/(?:arn.*/)?(.+)/g%%"
          },
          "RuleId": {
            "template": "%%regex%${ruleIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      }
    ],
    "delete-service": [
      {
        "action": "vpc-lattice:DeleteService",
        "resource_mappings": {
          "ServiceId": {
            "template": "%%regex%${serviceIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      }
    ],
    "delete-service-network": [
      {
        "action": "vpc-lattice:DeleteServiceNetwork",
        "resource_mappings": {
          "ServiceNetworkId": {
            "template": "%%regex%${serviceNetworkIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      }
    ],
    "delete-service-network-service-association": [
      {
        "action": "vpc-lattice:DeleteServiceNetworkServiceAssociation",
        "resource_mappings": {
          "ServiceNetworkServiceAssociationId": {
            "template": "%%regex%${serviceNetworkServiceAssociationIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      }
    ],
    "delete-service-network-vpc-association": [
      {
        "action": "vpc-lattice:DeleteServiceNetworkVpcAssociation",
        "resource_mappings": {
          "ServiceNetworkVpcAssociationId": {
            "template": "%%regex%${serviceNetworkVpcAssociationIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      }
    ],
    "delete-target-group": [
      {
        "action": "vpc-lattice:DeleteTargetGroup",
        "resource_mappings": {
          "TargetGroupId": {
            "template": "%%regex%${targetGroupIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      }
    ],
    "deregister-targets": [
      {
        "action": "vpc-lattice:DeregisterTargets",
        "resource_mappings": {
          "TargetGroupId": {
            "template": "%%regex%${targetGroupIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      }
    ],
    "get-access-log-subscription": [
      {
        "action": "vpc-lattice:GetAccessLogSubscription",
        "resource_mappings": {
          "AccessLogSubscriptionId": {
            "template": "%%regex%${accessLogSubscriptionIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      },
      {
        "action": "logs:GetLogDelivery",
        "resource_mappings": {}
      }
    ],
    "get-auth-policy": [
      {
        "action": "vpc-lattice:GetAuthPolicy",
        "resource_mappings": {
          "ServiceId": {
            "template": "%%regex%${resourceIdentifier}%/(?:arn.*/)?(.+)/g%%"
          },
          "ServiceNetworkId": {
            "template": "%%regex%${resourceIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      }
    ],
    "get-listener": [
      {
        "action": "vpc-lattice:GetListener",
        "resource_mappings": {
          "ServiceId": {
            "template": "%%regex%${serviceIdentifier}%/(?:arn.*/)?(.+)/g%%"
          },
          "ListenerId": {
            "template": "%%regex%${listenerIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      }
    ],
    "get-resource-policy": [
      {
        "action": "vpc-lattice:GetResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Service": "%%iftemplatematch%${resourceArn}%%",
          "ServiceNetwork": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "get-rule": [
      {
        "action": "vpc-lattice:GetRule",
        "resource_mappings": {
          "ServiceId": {
            "template": "%%regex%${serviceIdentifier}%/(?:arn.*/)?(.+)/g%%"
          },
          "ListenerId": {
            "template": "%%regex%${listenerIdentifier}%/(?:arn.*/)?(.+)/g%%"
          },
          "RuleId": {
            "template": "%%regex%${ruleIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      }
    ],
    "get-service": [
      {
        "action": "vpc-lattice:GetService",
        "resource_mappings": {
          "ServiceId": {
            "template": "%%regex%${serviceIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      }
    ],
    "get-service-network": [
      {
        "action": "vpc-lattice:GetServiceNetwork",
        "resource_mappings": {
          "ServiceNetworkId": {
            "template": "%%regex%${serviceNetworkIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      }
    ],
    "get-service-network-service-association": [
      {
        "action": "vpc-lattice:GetServiceNetworkServiceAssociation",
        "resource_mappings": {
          "ServiceNetworkServiceAssociationId": {
            "template": "%%regex%${serviceNetworkServiceAssociationIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      }
    ],
    "get-service-network-vpc-association": [
      {
        "action": "vpc-lattice:GetServiceNetworkVpcAssociation",
        "resource_mappings": {
          "ServiceNetworkVpcAssociationId": {
            "template": "%%regex%${serviceNetworkVpcAssociationIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      }
    ],
    "get-target-group": [
      {
        "action": "vpc-lattice:GetTargetGroup",
        "resource_mappings": {
          "TargetGroupId": {
            "template": "%%regex%${targetGroupIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      }
    ],
    "list-access-log-subscriptions": [
      {
        "action": "vpc-lattice:ListAccessLogSubscriptions",
        "resource_mappings": {}
      }
    ],
    "list-listeners": [
      {
        "action": "vpc-lattice:ListListeners",
        "resource_mappings": {}
      }
    ],
    "list-rules": [
      {
        "action": "vpc-lattice:ListRules",
        "resource_mappings": {}
      }
    ],
    "list-service-network-service-associations": [
      {
        "action": "vpc-lattice:ListServiceNetworkServiceAssociations",
        "resource_mappings": {}
      }
    ],
    "list-service-network-vpc-associations": [
      {
        "action": "vpc-lattice:ListServiceNetworkVpcAssociations",
        "resource_mappings": {}
      }
    ],
    "list-service-networks": [
      {
        "action": "vpc-lattice:ListServiceNetworks",
        "resource_mappings": {}
      }
    ],
    "list-services": [
      {
        "action": "vpc-lattice:ListServices",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "vpc-lattice:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "list-target-groups": [
      {
        "action": "vpc-lattice:ListTargetGroups",
        "resource_mappings": {}
      }
    ],
    "list-targets": [
      {
        "action": "vpc-lattice:ListTargets",
        "resource_mappings": {
          "TargetGroupId": {
            "template": "%%regex%${targetGroupIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      }
    ],
    "put-auth-policy": [
      {
        "action": "vpc-lattice:PutAuthPolicy",
        "resource_mappings": {
          "ServiceId": {
            "template": "%%regex%${resourceIdentifier}%/(?:arn.*/)?(.+)/g%%"
          },
          "ServiceNetworkId": {
            "template": "%%regex%${resourceIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      }
    ],
    "put-resource-policy": [
      {
        "action": "vpc-lattice:PutResourcePolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "Service": "%%iftemplatematch%${resourceArn}%%",
          "ServiceNetwork": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "register-targets": [
      {
        "action": "vpc-lattice:RegisterTargets",
        "resource_mappings": {
          "TargetGroupId": {
            "template": "%%regex%${targetGroupIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "vpc-lattice:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "AccessLogSubscription": "%%iftemplatematch%${resourceArn}%%",
          "Listener": "%%iftemplatematch%${resourceArn}%%",
          "Rule": "%%iftemplatematch%${resourceArn}%%",
          "Service": "%%iftemplatematch%${resourceArn}%%",
          "ServiceNetwork": "%%iftemplatematch%${resourceArn}%%",
          "ServiceNetworkServiceAssociation": "%%iftemplatematch%${resourceArn}%%",
          "ServiceNetworkVpcAssociation": "%%iftemplatematch%${resourceArn}%%",
          "TargetGroup": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "vpc-lattice:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "AccessLogSubscription": "%%iftemplatematch%${resourceArn}%%",
          "Listener": "%%iftemplatematch%${resourceArn}%%",
          "Rule": "%%iftemplatematch%${resourceArn}%%",
          "Service": "%%iftemplatematch%${resourceArn}%%",
          "ServiceNetwork": "%%iftemplatematch%${resourceArn}%%",
          "ServiceNetworkServiceAssociation": "%%iftemplatematch%${resourceArn}%%",
          "ServiceNetworkVpcAssociation": "%%iftemplatematch%${resourceArn}%%",
          "TargetGroup": "%%iftemplatematch%${resourceArn}%%"
        }
      }
    ],
    "update-access-log-subscription": [
      {
        "action": "vpc-lattice:UpdateAccessLogSubscription",
        "resource_mappings": {
          "AccessLogSubscriptionId": {
            "template": "%%regex%${accessLogSubscriptionIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      },
      {
        "action": "logs:GetLogDelivery",
        "resource_mappings": {}
      },
      {
        "action": "logs:UpdateLogDelivery",
        "resource_mappings": {}
      }
    ],
    "update-listener": [
      {
        "action": "vpc-lattice:UpdateListener",
        "resource_mappings": {
          "ServiceId": {
            "template": "%%regex%${serviceIdentifier}%/(?:arn.*/)?(.+)/g%%"
          },
          "ListenerId": {
            "template": "%%regex%${listenerIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      }
    ],
    "update-rule": [
      {
        "action": "vpc-lattice:UpdateRule",
        "resource_mappings": {
          "ServiceId": {
            "template": "%%regex%${serviceIdentifier}%/(?:arn.*/)?(.+)/g%%"
          },
          "ListenerId": {
            "template": "%%regex%${listenerIdentifier}%/(?:arn.*/)?(.+)/g%%"
          },
          "RuleId": {
            "template": "%%regex%${ruleIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      }
    ],
    "update-service": [
      {
        "action": "vpc-lattice:UpdateService",
        "resource_mappings": {
          "ServiceId": {
            "template": "%%regex%${serviceIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      }
    ],
    "update-service-network": [
      {
        "action": "vpc-lattice:UpdateServiceNetwork",
        "resource_mappings": {
          "ServiceNetworkId": {
            "template": "%%regex%${serviceNetworkIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      }
    ],
    "update-service-network-vpc-association": [
      {
        "action": "vpc-lattice:UpdateServiceNetworkVpcAssociation",
        "resource_mappings": {
          "ServiceNetworkVpcAssociationId": {
            "template": "%%regex%${serviceNetworkVpcAssociationIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      },
      {
        "action": "ec2:DescribeSecurityGroups",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeVpcs",
        "resource_mappings": {}
      }
    ],
    "update-target-group": [
      {
        "action": "vpc-lattice:UpdateTargetGroup",
        "resource_mappings": {
          "TargetGroupId": {
            "template": "%%regex%${targetGroupIdentifier}%/(?:arn.*/)?(.+)/g%%"
          }
        }
      }
    ]
  },
  "waf": {
    "create-byte-match-set": [
      {
        "action": "waf:CreateByteMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-geo-match-set": [
      {
        "action": "waf:CreateGeoMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-ip-set": [
      {
        "action": "waf:CreateIPSet",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-rate-based-rule": [
      {
        "action": "waf:CreateRateBasedRule",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-regex-match-set": [
      {
        "action": "waf:CreateRegexMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-regex-pattern-set": [
      {
        "action": "waf:CreateRegexPatternSet",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-rule": [
      {
        "action": "waf:CreateRule",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-rule-group": [
      {
        "action": "waf:CreateRuleGroup",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-size-constraint-set": [
      {
        "action": "waf:CreateSizeConstraintSet",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-sql-injection-match-set": [
      {
        "action": "waf:CreateSqlInjectionMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-web-acl": [
      {
        "action": "waf:CreateWebACL",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-web-acl-migration-stack": [
      {
        "action": "waf:CreateWebACLMigrationStack",
        "resource_mappings": {
          "Id": {
            "template": "${WebACLId}"
          }
        }
      },
      {
        "action": "s3:PutObject",
        "resource_mappings": {
          "BucketName": {
            "template": "${S3BucketName}"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      }
    ],
    "create-xss-match-set": [
      {
        "action": "waf:CreateXssMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-byte-match-set": [
      {
        "action": "waf:DeleteByteMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${ByteMatchSetId}"
          }
        }
      }
    ],
    "delete-geo-match-set": [
      {
        "action": "waf:DeleteGeoMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${GeoMatchSetId}"
          }
        }
      }
    ],
    "delete-ip-set": [
      {
        "action": "waf:DeleteIPSet",
        "resource_mappings": {
          "Id": {
            "template": "${IPSetId}"
          }
        }
      }
    ],
    "delete-logging-configuration": [
      {
        "action": "waf:DeleteLoggingConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "webacl": "${ResourceArn}"
        }
      }
    ],
    "delete-permission-policy": [
      {
        "action": "waf:DeletePermissionPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "rulegroup": "${ResourceArn}"
        }
      }
    ],
    "delete-rate-based-rule": [
      {
        "action": "waf:DeleteRateBasedRule",
        "resource_mappings": {
          "Id": {
            "template": "${RuleId}"
          }
        }
      }
    ],
    "delete-regex-match-set": [
      {
        "action": "waf:DeleteRegexMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${RegexMatchSetId}"
          }
        }
      }
    ],
    "delete-regex-pattern-set": [
      {
        "action": "waf:DeleteRegexPatternSet",
        "resource_mappings": {
          "Id": {
            "template": "${RegexPatternSetId}"
          }
        }
      }
    ],
    "delete-rule": [
      {
        "action": "waf:DeleteRule",
        "resource_mappings": {
          "Id": {
            "template": "${RuleId}"
          }
        }
      }
    ],
    "delete-rule-group": [
      {
        "action": "waf:DeleteRuleGroup",
        "resource_mappings": {
          "Id": {
            "template": "${RuleGroupId}"
          }
        }
      }
    ],
    "delete-size-constraint-set": [
      {
        "action": "waf:DeleteSizeConstraintSet",
        "resource_mappings": {
          "Id": {
            "template": "${SizeConstraintSetId}"
          }
        }
      }
    ],
    "delete-sql-injection-match-set": [
      {
        "action": "waf:DeleteSqlInjectionMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${SqlInjectionMatchSetId}"
          }
        }
      }
    ],
    "delete-web-acl": [
      {
        "action": "waf:DeleteWebACL",
        "resource_mappings": {
          "Id": {
            "template": "${WebACLId}"
          }
        }
      }
    ],
    "delete-xss-match-set": [
      {
        "action": "waf:DeleteXssMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${XssMatchSetId}"
          }
        }
      }
    ],
    "get-byte-match-set": [
      {
        "action": "waf:GetByteMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${ByteMatchSetId}"
          }
        }
      }
    ],
    "get-change-token": [
      {
        "action": "waf:GetChangeToken",
        "resource_mappings": {}
      }
    ],
    "get-change-token-status": [
      {
        "action": "waf:GetChangeTokenStatus",
        "resource_mappings": {}
      }
    ],
    "get-geo-match-set": [
      {
        "action": "waf:GetGeoMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${GeoMatchSetId}"
          }
        }
      }
    ],
    "get-ip-set": [
      {
        "action": "waf:GetIPSet",
        "resource_mappings": {
          "Id": {
            "template": "${IPSetId}"
          }
        }
      }
    ],
    "get-logging-configuration": [
      {
        "action": "waf:GetLoggingConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "webacl": "${ResourceArn}"
        }
      }
    ],
    "get-permission-policy": [
      {
        "action": "waf:GetPermissionPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "rulegroup": "${ResourceArn}"
        }
      }
    ],
    "get-rate-based-rule": [
      {
        "action": "waf:GetRateBasedRule",
        "resource_mappings": {
          "Id": {
            "template": "${RuleId}"
          }
        }
      }
    ],
    "get-rate-based-rule-managed-keys": [
      {
        "action": "waf:GetRateBasedRuleManagedKeys",
        "resource_mappings": {
          "Id": {
            "template": "${RuleId}"
          }
        }
      }
    ],
    "get-regex-match-set": [
      {
        "action": "waf:GetRegexMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${RegexMatchSetId}"
          }
        }
      }
    ],
    "get-regex-pattern-set": [
      {
        "action": "waf:GetRegexPatternSet",
        "resource_mappings": {
          "Id": {
            "template": "${RegexPatternSetId}"
          }
        }
      }
    ],
    "get-rule": [
      {
        "action": "waf:GetRule",
        "resource_mappings": {
          "Id": {
            "template": "${RuleId}"
          }
        }
      }
    ],
    "get-rule-group": [
      {
        "action": "waf:GetRuleGroup",
        "resource_mappings": {
          "Id": {
            "template": "${RuleGroupId}"
          }
        }
      }
    ],
    "get-sampled-requests": [
      {
        "action": "waf:GetSampledRequests",
        "resource_mappings": {
          "Id": {
            "template": "${WebAclId}"
          }
        }
      }
    ],
    "get-size-constraint-set": [
      {
        "action": "waf:GetSizeConstraintSet",
        "resource_mappings": {
          "Id": {
            "template": "${SizeConstraintSetId}"
          }
        }
      }
    ],
    "get-sql-injection-match-set": [
      {
        "action": "waf:GetSqlInjectionMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${SqlInjectionMatchSetId}"
          }
        }
      }
    ],
    "get-web-acl": [
      {
        "action": "waf:GetWebACL",
        "resource_mappings": {
          "Id": {
            "template": "${WebACLId}"
          }
        }
      }
    ],
    "get-xss-match-set": [
      {
        "action": "waf:GetXssMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${XssMatchSetId}"
          }
        }
      }
    ],
    "list-activated-rules-in-rule-group": [
      {
        "action": "waf:ListActivatedRulesInRuleGroup",
        "resource_mappings": {}
      }
    ],
    "list-byte-match-sets": [
      {
        "action": "waf:ListByteMatchSets",
        "resource_mappings": {}
      }
    ],
    "list-geo-match-sets": [
      {
        "action": "waf:ListGeoMatchSets",
        "resource_mappings": {}
      }
    ],
    "list-ip-sets": [
      {
        "action": "waf:ListIPSets",
        "resource_mappings": {}
      }
    ],
    "list-logging-configurations": [
      {
        "action": "waf:ListLoggingConfigurations",
        "resource_mappings": {}
      }
    ],
    "list-rate-based-rules": [
      {
        "action": "waf:ListRateBasedRules",
        "resource_mappings": {}
      }
    ],
    "list-regex-match-sets": [
      {
        "action": "waf:ListRegexMatchSets",
        "resource_mappings": {}
      }
    ],
    "list-regex-pattern-sets": [
      {
        "action": "waf:ListRegexPatternSets",
        "resource_mappings": {}
      }
    ],
    "list-rule-groups": [
      {
        "action": "waf:ListRuleGroups",
        "resource_mappings": {}
      }
    ],
    "list-rules": [
      {
        "action": "waf:ListRules",
        "resource_mappings": {}
      }
    ],
    "list-size-constraint-sets": [
      {
        "action": "waf:ListSizeConstraintSets",
        "resource_mappings": {}
      }
    ],
    "list-sql-injection-match-sets": [
      {
        "action": "waf:ListSqlInjectionMatchSets",
        "resource_mappings": {}
      }
    ],
    "list-subscribed-rule-groups": [
      {
        "action": "waf:ListSubscribedRuleGroups",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "waf:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ratebasedrule": "%%iftemplatematch%${ResourceARN}%%",
          "rule": "%%iftemplatematch%${ResourceARN}%%",
          "rulegroup": "%%iftemplatematch%${ResourceARN}%%",
          "webacl": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "list-web-acls": [
      {
        "action": "waf:ListWebACLs",
        "resource_mappings": {}
      }
    ],
    "list-xss-match-sets": [
      {
        "action": "waf:ListXssMatchSets",
        "resource_mappings": {}
      }
    ],
    "put-logging-configuration": [
      {
        "action": "waf:PutLoggingConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "webacl": "%%iftemplatematch%${LoggingConfiguration.ResourceArn}%%"
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "put-permission-policy": [
      {
        "action": "waf:PutPermissionPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "rulegroup": "${ResourceArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "waf:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ratebasedrule": "%%iftemplatematch%${ResourceARN}%%",
          "rule": "%%iftemplatematch%${ResourceARN}%%",
          "rulegroup": "%%iftemplatematch%${ResourceARN}%%",
          "webacl": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "waf:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ratebasedrule": "%%iftemplatematch%${ResourceARN}%%",
          "rule": "%%iftemplatematch%${ResourceARN}%%",
          "rulegroup": "%%iftemplatematch%${ResourceARN}%%",
          "webacl": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "update-byte-match-set": [
      {
        "action": "waf:UpdateByteMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${ByteMatchSetId}"
          }
        }
      }
    ],
    "update-geo-match-set": [
      {
        "action": "waf:UpdateGeoMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${GeoMatchSetId}"
          }
        }
      }
    ],
    "update-ip-set": [
      {
        "action": "waf:UpdateIPSet",
        "resource_mappings": {
          "Id": {
            "template": "${IPSetId}"
          }
        }
      }
    ],
    "update-rate-based-rule": [
      {
        "action": "waf:UpdateRateBasedRule",
        "resource_mappings": {
          "Id": {
            "template": "${RuleId}"
          }
        }
      }
    ],
    "update-regex-match-set": [
      {
        "action": "waf:UpdateRegexMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${RegexMatchSetId}"
          }
        }
      }
    ],
    "update-regex-pattern-set": [
      {
        "action": "waf:UpdateRegexPatternSet",
        "resource_mappings": {
          "Id": {
            "template": "${RegexPatternSetId}"
          }
        }
      }
    ],
    "update-rule": [
      {
        "action": "waf:UpdateRule",
        "resource_mappings": {
          "Id": {
            "template": "${RuleId}"
          }
        }
      }
    ],
    "update-rule-group": [
      {
        "action": "waf:UpdateRuleGroup",
        "resource_mappings": {
          "Id": {
            "template": "${RuleGroupId}"
          }
        }
      }
    ],
    "update-size-constraint-set": [
      {
        "action": "waf:UpdateSizeConstraintSet",
        "resource_mappings": {
          "Id": {
            "template": "${SizeConstraintSetId}"
          }
        }
      }
    ],
    "update-sql-injection-match-set": [
      {
        "action": "waf:UpdateSqlInjectionMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${SqlInjectionMatchSetId}"
          }
        }
      }
    ],
    "update-web-acl": [
      {
        "action": "waf:UpdateWebACL",
        "resource_mappings": {
          "Id": {
            "template": "${WebACLId}"
          }
        }
      }
    ],
    "update-xss-match-set": [
      {
        "action": "waf:UpdateXssMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${XssMatchSetId}"
          }
        }
      }
    ]
  },
  "waf-regional": {
    "associate-web-acl": [
      {
        "action": "waf-regional:AssociateWebACL",
        "resource_mappings": {
          "Id": {
            "template": "${WebACLId}"
          }
        },
        "resourcearn_mappings": {
          "loadbalancer/app/": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "create-byte-match-set": [
      {
        "action": "waf-regional:CreateByteMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-geo-match-set": [
      {
        "action": "waf-regional:CreateGeoMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-ip-set": [
      {
        "action": "waf-regional:CreateIPSet",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-rate-based-rule": [
      {
        "action": "waf-regional:CreateRateBasedRule",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-regex-match-set": [
      {
        "action": "waf-regional:CreateRegexMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-regex-pattern-set": [
      {
        "action": "waf-regional:CreateRegexPatternSet",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-rule": [
      {
        "action": "waf-regional:CreateRule",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-rule-group": [
      {
        "action": "waf-regional:CreateRuleGroup",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-size-constraint-set": [
      {
        "action": "waf-regional:CreateSizeConstraintSet",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-sql-injection-match-set": [
      {
        "action": "waf-regional:CreateSqlInjectionMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-web-acl": [
      {
        "action": "waf-regional:CreateWebACL",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-web-acl-migration-stack": [
      {
        "action": "waf-regional:CreateWebACLMigrationStack",
        "resource_mappings": {
          "Id": {
            "template": "${WebACLId}"
          }
        }
      },
      {
        "action": "s3:PutObject",
        "resource_mappings": {
          "BucketName": {
            "template": "${S3BucketName}"
          },
          "ObjectName": {
            "template": "*"
          }
        }
      }
    ],
    "create-xss-match-set": [
      {
        "action": "waf-regional:CreateXssMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-byte-match-set": [
      {
        "action": "waf-regional:DeleteByteMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${ByteMatchSetId}"
          }
        }
      }
    ],
    "delete-geo-match-set": [
      {
        "action": "waf-regional:DeleteGeoMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${GeoMatchSetId}"
          }
        }
      }
    ],
    "delete-ip-set": [
      {
        "action": "waf-regional:DeleteIPSet",
        "resource_mappings": {
          "Id": {
            "template": "${IPSetId}"
          }
        }
      }
    ],
    "delete-logging-configuration": [
      {
        "action": "waf-regional:DeleteLoggingConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "webacl": "${ResourceArn}"
        }
      }
    ],
    "delete-permission-policy": [
      {
        "action": "waf-regional:DeletePermissionPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "rulegroup": "${ResourceArn}"
        }
      }
    ],
    "delete-rate-based-rule": [
      {
        "action": "waf-regional:DeleteRateBasedRule",
        "resource_mappings": {
          "Id": {
            "template": "${RuleId}"
          }
        }
      }
    ],
    "delete-regex-match-set": [
      {
        "action": "waf-regional:DeleteRegexMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${RegexMatchSetId}"
          }
        }
      }
    ],
    "delete-regex-pattern-set": [
      {
        "action": "waf-regional:DeleteRegexPatternSet",
        "resource_mappings": {
          "Id": {
            "template": "${RegexPatternSetId}"
          }
        }
      }
    ],
    "delete-rule": [
      {
        "action": "waf-regional:DeleteRule",
        "resource_mappings": {
          "Id": {
            "template": "${RuleId}"
          }
        }
      }
    ],
    "delete-rule-group": [
      {
        "action": "waf-regional:DeleteRuleGroup",
        "resource_mappings": {
          "Id": {
            "template": "${RuleGroupId}"
          }
        }
      }
    ],
    "delete-size-constraint-set": [
      {
        "action": "waf-regional:DeleteSizeConstraintSet",
        "resource_mappings": {
          "Id": {
            "template": "${SizeConstraintSetId}"
          }
        }
      }
    ],
    "delete-sql-injection-match-set": [
      {
        "action": "waf-regional:DeleteSqlInjectionMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${SqlInjectionMatchSetId}"
          }
        }
      }
    ],
    "delete-web-acl": [
      {
        "action": "waf-regional:DeleteWebACL",
        "resource_mappings": {
          "Id": {
            "template": "${WebACLId}"
          }
        }
      }
    ],
    "delete-xss-match-set": [
      {
        "action": "waf-regional:DeleteXssMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${XssMatchSetId}"
          }
        }
      }
    ],
    "disassociate-web-acl": [
      {
        "action": "waf-regional:DisassociateWebACL",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "loadbalancer/app/": "${ResourceArn}"
        }
      }
    ],
    "get-byte-match-set": [
      {
        "action": "waf-regional:GetByteMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${ByteMatchSetId}"
          }
        }
      }
    ],
    "get-change-token": [
      {
        "action": "waf-regional:GetChangeToken",
        "resource_mappings": {}
      }
    ],
    "get-change-token-status": [
      {
        "action": "waf-regional:GetChangeTokenStatus",
        "resource_mappings": {}
      }
    ],
    "get-geo-match-set": [
      {
        "action": "waf-regional:GetGeoMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${GeoMatchSetId}"
          }
        }
      }
    ],
    "get-ip-set": [
      {
        "action": "waf-regional:GetIPSet",
        "resource_mappings": {
          "Id": {
            "template": "${IPSetId}"
          }
        }
      }
    ],
    "get-logging-configuration": [
      {
        "action": "waf-regional:GetLoggingConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "webacl": "${ResourceArn}"
        }
      }
    ],
    "get-permission-policy": [
      {
        "action": "waf-regional:GetPermissionPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "rulegroup": "${ResourceArn}"
        }
      }
    ],
    "get-rate-based-rule": [
      {
        "action": "waf-regional:GetRateBasedRule",
        "resource_mappings": {
          "Id": {
            "template": "${RuleId}"
          }
        }
      }
    ],
    "get-rate-based-rule-managed-keys": [
      {
        "action": "waf-regional:GetRateBasedRuleManagedKeys",
        "resource_mappings": {
          "Id": {
            "template": "${RuleId}"
          }
        }
      }
    ],
    "get-regex-match-set": [
      {
        "action": "waf-regional:GetRegexMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${RegexMatchSetId}"
          }
        }
      }
    ],
    "get-regex-pattern-set": [
      {
        "action": "waf-regional:GetRegexPatternSet",
        "resource_mappings": {
          "Id": {
            "template": "${RegexPatternSetId}"
          }
        }
      }
    ],
    "get-rule": [
      {
        "action": "waf-regional:GetRule",
        "resource_mappings": {
          "Id": {
            "template": "${RuleId}"
          }
        }
      }
    ],
    "get-rule-group": [
      {
        "action": "waf-regional:GetRuleGroup",
        "resource_mappings": {
          "Id": {
            "template": "${RuleGroupId}"
          }
        }
      }
    ],
    "get-sampled-requests": [
      {
        "action": "waf-regional:GetSampledRequests",
        "resource_mappings": {
          "Id": {
            "template": "${WebAclId}"
          }
        }
      }
    ],
    "get-size-constraint-set": [
      {
        "action": "waf-regional:GetSizeConstraintSet",
        "resource_mappings": {
          "Id": {
            "template": "${SizeConstraintSetId}"
          }
        }
      }
    ],
    "get-sql-injection-match-set": [
      {
        "action": "waf-regional:GetSqlInjectionMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${SqlInjectionMatchSetId}"
          }
        }
      }
    ],
    "get-web-acl": [
      {
        "action": "waf-regional:GetWebACL",
        "resource_mappings": {
          "Id": {
            "template": "${WebACLId}"
          }
        }
      }
    ],
    "get-web-acl-for-resource": [
      {
        "action": "waf-regional:GetWebACLForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "loadbalancer/app/": "${ResourceArn}"
        }
      }
    ],
    "get-xss-match-set": [
      {
        "action": "waf-regional:GetXssMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${XssMatchSetId}"
          }
        }
      }
    ],
    "list-activated-rules-in-rule-group": [
      {
        "action": "waf-regional:ListActivatedRulesInRuleGroup",
        "resource_mappings": {}
      }
    ],
    "list-byte-match-sets": [
      {
        "action": "waf-regional:ListByteMatchSets",
        "resource_mappings": {}
      }
    ],
    "list-geo-match-sets": [
      {
        "action": "waf-regional:ListGeoMatchSets",
        "resource_mappings": {}
      }
    ],
    "list-ip-sets": [
      {
        "action": "waf-regional:ListIPSets",
        "resource_mappings": {}
      }
    ],
    "list-logging-configurations": [
      {
        "action": "waf-regional:ListLoggingConfigurations",
        "resource_mappings": {}
      }
    ],
    "list-rate-based-rules": [
      {
        "action": "waf-regional:ListRateBasedRules",
        "resource_mappings": {}
      }
    ],
    "list-regex-match-sets": [
      {
        "action": "waf-regional:ListRegexMatchSets",
        "resource_mappings": {}
      }
    ],
    "list-regex-pattern-sets": [
      {
        "action": "waf-regional:ListRegexPatternSets",
        "resource_mappings": {}
      }
    ],
    "list-resources-for-web-acl": [
      {
        "action": "waf-regional:ListResourcesForWebACL",
        "resource_mappings": {
          "Id": {
            "template": "${WebACLId}"
          }
        }
      }
    ],
    "list-rule-groups": [
      {
        "action": "waf-regional:ListRuleGroups",
        "resource_mappings": {}
      }
    ],
    "list-rules": [
      {
        "action": "waf-regional:ListRules",
        "resource_mappings": {}
      }
    ],
    "list-size-constraint-sets": [
      {
        "action": "waf-regional:ListSizeConstraintSets",
        "resource_mappings": {}
      }
    ],
    "list-sql-injection-match-sets": [
      {
        "action": "waf-regional:ListSqlInjectionMatchSets",
        "resource_mappings": {}
      }
    ],
    "list-subscribed-rule-groups": [
      {
        "action": "waf-regional:ListSubscribedRuleGroups",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "waf-regional:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ratebasedrule": "%%iftemplatematch%${ResourceARN}%%",
          "rule": "%%iftemplatematch%${ResourceARN}%%",
          "rulegroup": "%%iftemplatematch%${ResourceARN}%%",
          "webacl": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "list-web-acls": [
      {
        "action": "waf-regional:ListWebACLs",
        "resource_mappings": {}
      }
    ],
    "list-xss-match-sets": [
      {
        "action": "waf-regional:ListXssMatchSets",
        "resource_mappings": {}
      }
    ],
    "put-logging-configuration": [
      {
        "action": "waf-regional:PutLoggingConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "webacl": "${LoggingConfiguration.ResourceArn}"
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "put-permission-policy": [
      {
        "action": "waf-regional:PutPermissionPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "rulegroup": "${ResourceArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "waf-regional:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ratebasedrule": "%%iftemplatematch%${ResourceARN}%%",
          "rule": "%%iftemplatematch%${ResourceARN}%%",
          "rulegroup": "%%iftemplatematch%${ResourceARN}%%",
          "webacl": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "waf-regional:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ratebasedrule": "%%iftemplatematch%${ResourceARN}%%",
          "rule": "%%iftemplatematch%${ResourceARN}%%",
          "rulegroup": "%%iftemplatematch%${ResourceARN}%%",
          "webacl": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "update-byte-match-set": [
      {
        "action": "waf-regional:UpdateByteMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${ByteMatchSetId}"
          }
        }
      }
    ],
    "update-geo-match-set": [
      {
        "action": "waf-regional:UpdateGeoMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${GeoMatchSetId}"
          }
        }
      }
    ],
    "update-ip-set": [
      {
        "action": "waf-regional:UpdateIPSet",
        "resource_mappings": {
          "Id": {
            "template": "${IPSetId}"
          }
        }
      }
    ],
    "update-rate-based-rule": [
      {
        "action": "waf-regional:UpdateRateBasedRule",
        "resource_mappings": {
          "Id": {
            "template": "${RuleId}"
          }
        }
      }
    ],
    "update-regex-match-set": [
      {
        "action": "waf-regional:UpdateRegexMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${RegexMatchSetId}"
          }
        }
      }
    ],
    "update-regex-pattern-set": [
      {
        "action": "waf-regional:UpdateRegexPatternSet",
        "resource_mappings": {
          "Id": {
            "template": "${RegexPatternSetId}"
          }
        }
      }
    ],
    "update-rule": [
      {
        "action": "waf-regional:UpdateRule",
        "resource_mappings": {
          "Id": {
            "template": "${RuleId}"
          }
        }
      }
    ],
    "update-rule-group": [
      {
        "action": "waf-regional:UpdateRuleGroup",
        "resource_mappings": {
          "Id": {
            "template": "${RuleGroupId}"
          }
        }
      }
    ],
    "update-size-constraint-set": [
      {
        "action": "waf-regional:UpdateSizeConstraintSet",
        "resource_mappings": {
          "Id": {
            "template": "${SizeConstraintSetId}"
          }
        }
      }
    ],
    "update-sql-injection-match-set": [
      {
        "action": "waf-regional:UpdateSqlInjectionMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${SqlInjectionMatchSetId}"
          }
        }
      }
    ],
    "update-web-acl": [
      {
        "action": "waf-regional:UpdateWebACL",
        "resource_mappings": {
          "Id": {
            "template": "${WebACLId}"
          }
        }
      }
    ],
    "update-xss-match-set": [
      {
        "action": "waf-regional:UpdateXssMatchSet",
        "resource_mappings": {
          "Id": {
            "template": "${XssMatchSetId}"
          }
        }
      }
    ]
  },
  "wafv2": {
    "associate-web-acl": [
      {
        "action": "wafv2:AssociateWebACL",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "webacl": "${WebACLArn}",
          "apigateway": "%%iftemplatematch%${ResourceArn}%%",
          "appsync": "%%iftemplatematch%${ResourceArn}%%",
          "loadbalancer/app/": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "check-capacity": [
      {
        "action": "wafv2:CheckCapacity",
        "resource_mappings": {}
      }
    ],
    "create-api-key": [
      {
        "action": "wafv2:CreateAPIKey",
        "resource_mappings": {}
      }
    ],
    "create-ip-set": [
      {
        "action": "wafv2:CreateIPSet",
        "resource_mappings": {
          "Scope": {
            "template": "${Scope}"
          },
          "Name": {
            "template": "${Name}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-regex-pattern-set": [
      {
        "action": "wafv2:CreateRegexPatternSet",
        "resource_mappings": {
          "Scope": {
            "template": "${Scope}"
          },
          "Name": {
            "template": "${Name}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-rule-group": [
      {
        "action": "wafv2:CreateRuleGroup",
        "resource_mappings": {
          "Scope": {
            "template": "${Scope}"
          },
          "Name": {
            "template": "${Name}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-web-acl": [
      {
        "action": "wafv2:CreateWebACL",
        "resource_mappings": {
          "Scope": {
            "template": "${Scope}"
          },
          "Name": {
            "template": "${Name}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-firewall-manager-rule-groups": [
      {
        "action": "wafv2:DeleteFirewallManagerRuleGroups",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "webacl": "${WebACLArn}"
        }
      }
    ],
    "delete-ip-set": [
      {
        "action": "wafv2:DeleteIPSet",
        "resource_mappings": {
          "Scope": {
            "template": "${Scope}"
          },
          "Name": {
            "template": "${Name}"
          },
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-logging-configuration": [
      {
        "action": "wafv2:DeleteLoggingConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "webacl": "${ResourceArn}"
        }
      }
    ],
    "delete-permission-policy": [
      {
        "action": "wafv2:DeletePermissionPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "rulegroup": "${ResourceArn}"
        }
      }
    ],
    "delete-regex-pattern-set": [
      {
        "action": "wafv2:DeleteRegexPatternSet",
        "resource_mappings": {
          "Scope": {
            "template": "${Scope}"
          },
          "Name": {
            "template": "${Name}"
          },
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-rule-group": [
      {
        "action": "wafv2:DeleteRuleGroup",
        "resource_mappings": {
          "Scope": {
            "template": "${Scope}"
          },
          "Name": {
            "template": "${Name}"
          },
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "delete-web-acl": [
      {
        "action": "wafv2:DeleteWebACL",
        "resource_mappings": {
          "Scope": {
            "template": "${Scope}"
          },
          "Name": {
            "template": "${Name}"
          },
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "describe-all-managed-products": [
      {
        "action": "wafv2:DescribeAllManagedProducts",
        "resource_mappings": {}
      }
    ],
    "describe-managed-products-by-vendor": [
      {
        "action": "wafv2:DescribeManagedProductsByVendor",
        "resource_mappings": {}
      }
    ],
    "describe-managed-rule-group": [
      {
        "action": "wafv2:DescribeManagedRuleGroup",
        "resource_mappings": {}
      }
    ],
    "disassociate-web-acl": [
      {
        "action": "wafv2:DisassociateWebACL",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "apigateway": "%%iftemplatematch%${ResourceArn}%%",
          "appsync": "%%iftemplatematch%${ResourceArn}%%",
          "loadbalancer/app/": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "generate-mobile-sdk-release-url": [
      {
        "action": "wafv2:GenerateMobileSdkReleaseUrl",
        "resource_mappings": {}
      }
    ],
    "get-decrypted-api-key": [
      {
        "action": "wafv2:GetDecryptedAPIKey",
        "resource_mappings": {}
      }
    ],
    "get-ip-set": [
      {
        "action": "wafv2:GetIPSet",
        "resource_mappings": {
          "Scope": {
            "template": "${Scope}"
          },
          "Name": {
            "template": "${Name}"
          },
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-logging-configuration": [
      {
        "action": "wafv2:GetLoggingConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "webacl": "${ResourceArn}"
        }
      }
    ],
    "get-managed-rule-set": [
      {
        "action": "wafv2:GetManagedRuleSet",
        "resource_mappings": {
          "Scope": {
            "template": "${Scope}"
          },
          "Name": {
            "template": "${Name}"
          },
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-mobile-sdk-release": [
      {
        "action": "wafv2:GetMobileSdkRelease",
        "resource_mappings": {}
      }
    ],
    "get-permission-policy": [
      {
        "action": "wafv2:GetPermissionPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "rulegroup": "${ResourceArn}"
        }
      }
    ],
    "get-rate-based-statement-managed-keys": [
      {
        "action": "wafv2:GetRateBasedStatementManagedKeys",
        "resource_mappings": {
          "Scope": {
            "template": "${Scope}"
          },
          "Name": {
            "template": "${WebACLName}"
          },
          "Id": {
            "template": "${WebACLId}"
          }
        }
      }
    ],
    "get-regex-pattern-set": [
      {
        "action": "wafv2:GetRegexPatternSet",
        "resource_mappings": {
          "Scope": {
            "template": "${Scope}"
          },
          "Name": {
            "template": "${Name}"
          },
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-rule-group": [
      {
        "action": "wafv2:GetRuleGroup",
        "resource_mappings": {
          "Scope": {
            "template": "${Scope}"
          },
          "Name": {
            "template": "${Name}"
          },
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-sampled-requests": [
      {
        "action": "wafv2:GetSampledRequests",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "webacl": "${WebAclArn}"
        }
      }
    ],
    "get-web-acl": [
      {
        "action": "wafv2:GetWebACL",
        "resource_mappings": {
          "Scope": {
            "template": "${Scope}"
          },
          "Name": {
            "template": "${Name}"
          },
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "get-web-acl-for-resource": [
      {
        "action": "wafv2:GetWebACLForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "apigateway": "%%iftemplatematch%${ResourceArn}%%",
          "appsync": "%%iftemplatematch%${ResourceArn}%%",
          "loadbalancer/app/": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "list-api-keys": [
      {
        "action": "wafv2:ListAPIKeys",
        "resource_mappings": {}
      }
    ],
    "list-available-managed-rule-group-versions": [
      {
        "action": "wafv2:ListAvailableManagedRuleGroupVersions",
        "resource_mappings": {}
      }
    ],
    "list-available-managed-rule-groups": [
      {
        "action": "wafv2:ListAvailableManagedRuleGroups",
        "resource_mappings": {}
      }
    ],
    "list-ip-sets": [
      {
        "action": "wafv2:ListIPSets",
        "resource_mappings": {}
      }
    ],
    "list-logging-configurations": [
      {
        "action": "wafv2:ListLoggingConfigurations",
        "resource_mappings": {}
      }
    ],
    "list-managed-rule-sets": [
      {
        "action": "wafv2:ListManagedRuleSets",
        "resource_mappings": {}
      }
    ],
    "list-mobile-sdk-releases": [
      {
        "action": "wafv2:ListMobileSdkReleases",
        "resource_mappings": {}
      }
    ],
    "list-regex-pattern-sets": [
      {
        "action": "wafv2:ListRegexPatternSets",
        "resource_mappings": {}
      }
    ],
    "list-resources-for-web-acl": [
      {
        "action": "wafv2:ListResourcesForWebACL",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "webacl": "${WebACLArn}"
        }
      }
    ],
    "list-rule-groups": [
      {
        "action": "wafv2:ListRuleGroups",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "wafv2:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ipset": "%%iftemplatematch%${ResourceARN}%%",
          "regexpatternset": "%%iftemplatematch%${ResourceARN}%%",
          "rulegroup": "%%iftemplatematch%${ResourceARN}%%",
          "webacl": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "list-web-acls": [
      {
        "action": "wafv2:ListWebACLs",
        "resource_mappings": {}
      }
    ],
    "put-logging-configuration": [
      {
        "action": "wafv2:PutLoggingConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "webacl": "${LoggingConfiguration.ResourceArn}"
        }
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "put-managed-rule-set-versions": [
      {
        "action": "wafv2:PutManagedRuleSetVersions",
        "resource_mappings": {
          "Scope": {
            "template": "${Scope}"
          },
          "Name": {
            "template": "${Name}"
          },
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "put-permission-policy": [
      {
        "action": "wafv2:PutPermissionPolicy",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "rulegroup": "${ResourceArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "wafv2:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ipset": "%%iftemplatematch%${ResourceARN}%%",
          "regexpatternset": "%%iftemplatematch%${ResourceARN}%%",
          "rulegroup": "%%iftemplatematch%${ResourceARN}%%",
          "webacl": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "wafv2:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ipset": "%%iftemplatematch%${ResourceARN}%%",
          "regexpatternset": "%%iftemplatematch%${ResourceARN}%%",
          "rulegroup": "%%iftemplatematch%${ResourceARN}%%",
          "webacl": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "update-ip-set": [
      {
        "action": "wafv2:UpdateIPSet",
        "resource_mappings": {
          "Scope": {
            "template": "${Scope}"
          },
          "Name": {
            "template": "${Name}"
          },
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "update-managed-rule-set-version-expiry-date": [
      {
        "action": "wafv2:UpdateManagedRuleSetVersionExpiryDate",
        "resource_mappings": {
          "Scope": {
            "template": "${Scope}"
          },
          "Name": {
            "template": "${Name}"
          },
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "update-regex-pattern-set": [
      {
        "action": "wafv2:UpdateRegexPatternSet",
        "resource_mappings": {
          "Scope": {
            "template": "${Scope}"
          },
          "Name": {
            "template": "${Name}"
          },
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "update-rule-group": [
      {
        "action": "wafv2:UpdateRuleGroup",
        "resource_mappings": {
          "Scope": {
            "template": "${Scope}"
          },
          "Name": {
            "template": "${Name}"
          },
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ],
    "update-web-acl": [
      {
        "action": "wafv2:UpdateWebACL",
        "resource_mappings": {
          "Scope": {
            "template": "${Scope}"
          },
          "Name": {
            "template": "${Name}"
          },
          "Id": {
            "template": "${Id}"
          }
        }
      }
    ]
  },
  "wellarchitected": {
    "associate-lenses": [
      {
        "action": "wellarchitected:AssociateLenses",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WorkloadId}"
          }
        }
      }
    ],
    "associate-profiles": [
      {
        "action": "wellarchitected:AssociateProfiles",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WorkloadId}"
          }
        }
      }
    ],
    "create-lens-share": [
      {
        "action": "wellarchitected:CreateLensShare",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-lens-version": [
      {
        "action": "wellarchitected:CreateLensVersion",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-milestone": [
      {
        "action": "wellarchitected:CreateMilestone",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WorkloadId}"
          }
        }
      }
    ],
    "create-profile": [
      {
        "action": "wellarchitected:CreateProfile",
        "resource_mappings": {}
      }
    ],
    "create-profile-share": [
      {
        "action": "wellarchitected:CreateProfileShare",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "profile": "${ProfileArn}"
        }
      }
    ],
    "create-review-template": [
      {
        "note": "NotFound",
        "action": "WellArchitected:CreateReviewTemplate",
        "resource_mappings": {}
      }
    ],
    "create-template-share": [
      {
        "note": "NotFound",
        "action": "WellArchitected:CreateTemplateShare",
        "resource_mappings": {}
      }
    ],
    "create-workload": [
      {
        "action": "wellarchitected:CreateWorkload",
        "resource_mappings": {}
      }
    ],
    "create-workload-share": [
      {
        "action": "wellarchitected:CreateWorkloadShare",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WorkloadId}"
          }
        }
      }
    ],
    "delete-lens": [
      {
        "action": "wellarchitected:DeleteLens",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-lens-share": [
      {
        "action": "wellarchitected:DeleteLensShare",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-profile": [
      {
        "action": "wellarchitected:DeleteProfile",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "profile": "${ProfileArn}"
        }
      }
    ],
    "delete-profile-share": [
      {
        "action": "wellarchitected:DeleteProfileShare",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "profile": "${ProfileArn}"
        }
      }
    ],
    "delete-review-template": [
      {
        "note": "NotFound",
        "action": "WellArchitected:DeleteReviewTemplate",
        "resource_mappings": {}
      }
    ],
    "delete-template-share": [
      {
        "note": "NotFound",
        "action": "WellArchitected:DeleteTemplateShare",
        "resource_mappings": {}
      }
    ],
    "delete-workload": [
      {
        "action": "wellarchitected:DeleteWorkload",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WorkloadId}"
          }
        }
      }
    ],
    "delete-workload-share": [
      {
        "action": "wellarchitected:DeleteWorkloadShare",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WorkloadId}"
          }
        }
      }
    ],
    "disassociate-lenses": [
      {
        "action": "wellarchitected:DisassociateLenses",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WorkloadId}"
          }
        }
      }
    ],
    "disassociate-profiles": [
      {
        "action": "wellarchitected:DisassociateProfiles",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WorkloadId}"
          }
        }
      }
    ],
    "export-lens": [
      {
        "action": "wellarchitected:ExportLens",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "get-answer": [
      {
        "action": "wellarchitected:GetAnswer",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WorkloadId}"
          }
        }
      }
    ],
    "get-consolidated-report": [
      {
        "action": "wellarchitected:GetConsolidatedReport",
        "resource_mappings": {}
      }
    ],
    "get-lens": [
      {
        "action": "wellarchitected:GetLens",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "get-lens-review": [
      {
        "action": "wellarchitected:GetLensReview",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WorkloadId}"
          }
        }
      }
    ],
    "get-lens-review-report": [
      {
        "action": "wellarchitected:GetLensReviewReport",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WorkloadId}"
          }
        }
      }
    ],
    "get-lens-version-difference": [
      {
        "action": "wellarchitected:GetLensVersionDifference",
        "resource_mappings": {}
      }
    ],
    "get-milestone": [
      {
        "action": "wellarchitected:GetMilestone",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WorkloadId}"
          }
        }
      }
    ],
    "get-profile": [
      {
        "action": "wellarchitected:GetProfile",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "profile": "${ProfileArn}"
        }
      }
    ],
    "get-profile-template": [
      {
        "action": "wellarchitected:GetProfileTemplate",
        "resource_mappings": {}
      }
    ],
    "get-review-template": [
      {
        "note": "NotFound",
        "action": "WellArchitected:GetReviewTemplate",
        "resource_mappings": {}
      }
    ],
    "get-review-template-answer": [
      {
        "note": "NotFound",
        "action": "WellArchitected:GetReviewTemplateAnswer",
        "resource_mappings": {}
      }
    ],
    "get-review-template-lens-review": [
      {
        "note": "NotFound",
        "action": "WellArchitected:GetReviewTemplateLensReview",
        "resource_mappings": {}
      }
    ],
    "get-workload": [
      {
        "action": "wellarchitected:GetWorkload",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WorkloadId}"
          }
        }
      }
    ],
    "import-lens": [
      {
        "action": "wellarchitected:ImportLens",
        "resource_mappings": {}
      }
    ],
    "list-answers": [
      {
        "action": "wellarchitected:ListAnswers",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WorkloadId}"
          }
        }
      }
    ],
    "list-check-details": [
      {
        "action": "wellarchitected:ListCheckDetails",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WorkloadId}"
          }
        }
      }
    ],
    "list-check-summaries": [
      {
        "action": "wellarchitected:ListCheckSummaries",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WorkloadId}"
          }
        }
      }
    ],
    "list-lens-review-improvements": [
      {
        "action": "wellarchitected:ListLensReviewImprovements",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WorkloadId}"
          }
        }
      }
    ],
    "list-lens-reviews": [
      {
        "action": "wellarchitected:ListLensReviews",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WorkloadId}"
          }
        }
      }
    ],
    "list-lens-shares": [
      {
        "action": "wellarchitected:ListLensShares",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "list-lenses": [
      {
        "action": "wellarchitected:ListLenses",
        "resource_mappings": {}
      }
    ],
    "list-milestones": [
      {
        "action": "wellarchitected:ListMilestones",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WorkloadId}"
          }
        }
      }
    ],
    "list-notifications": [
      {
        "action": "wellarchitected:ListNotifications",
        "resource_mappings": {}
      }
    ],
    "list-profile-notifications": [
      {
        "action": "wellarchitected:ListProfileNotifications",
        "resource_mappings": {}
      }
    ],
    "list-profile-shares": [
      {
        "action": "wellarchitected:ListProfileShares",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "profile": "${ProfileArn}"
        }
      }
    ],
    "list-profiles": [
      {
        "action": "wellarchitected:ListProfiles",
        "resource_mappings": {}
      }
    ],
    "list-review-template-answers": [
      {
        "note": "NotFound",
        "action": "WellArchitected:ListReviewTemplateAnswers",
        "resource_mappings": {}
      }
    ],
    "list-review-templates": [
      {
        "note": "NotFound",
        "action": "WellArchitected:ListReviewTemplates",
        "resource_mappings": {}
      }
    ],
    "list-share-invitations": [
      {
        "action": "wellarchitected:ListShareInvitations",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "wellarchitected:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "workload": "${WorkloadArn}"
        }
      }
    ],
    "list-template-shares": [
      {
        "note": "NotFound",
        "action": "WellArchitected:ListTemplateShares",
        "resource_mappings": {}
      }
    ],
    "list-workload-shares": [
      {
        "action": "wellarchitected:ListWorkloadShares",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WorkloadId}"
          }
        }
      }
    ],
    "list-workloads": [
      {
        "action": "wellarchitected:ListWorkloads",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "wellarchitected:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "workload": "${WorkloadArn}"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "wellarchitected:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "workload": "${WorkloadArn}"
        }
      }
    ],
    "update-answer": [
      {
        "action": "wellarchitected:UpdateAnswer",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WorkloadId}"
          }
        }
      }
    ],
    "update-global-settings": [
      {
        "action": "wellarchitected:UpdateGlobalSettings",
        "resource_mappings": {}
      }
    ],
    "update-lens-review": [
      {
        "action": "wellarchitected:UpdateLensReview",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WorkloadId}"
          }
        }
      }
    ],
    "update-profile": [
      {
        "action": "wellarchitected:UpdateProfile",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "profile": "${ProfileArn}"
        }
      }
    ],
    "update-review-template": [
      {
        "note": "NotFound",
        "action": "WellArchitected:UpdateReviewTemplate",
        "resource_mappings": {}
      }
    ],
    "update-review-template-answer": [
      {
        "note": "NotFound",
        "action": "WellArchitected:UpdateReviewTemplateAnswer",
        "resource_mappings": {}
      }
    ],
    "update-review-template-lens-review": [
      {
        "note": "NotFound",
        "action": "WellArchitected:UpdateReviewTemplateLensReview",
        "resource_mappings": {}
      }
    ],
    "update-share-invitation": [
      {
        "action": "wellarchitected:UpdateShareInvitation",
        "resource_mappings": {
          "ResourceId": {
            "template": "*"
          }
        }
      }
    ],
    "update-workload": [
      {
        "action": "wellarchitected:UpdateWorkload",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WorkloadId}"
          }
        }
      }
    ],
    "update-workload-share": [
      {
        "action": "wellarchitected:UpdateWorkloadShare",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WorkloadId}"
          }
        }
      }
    ],
    "upgrade-lens-review": [
      {
        "action": "wellarchitected:UpgradeLensReview",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WorkloadId}"
          }
        }
      }
    ],
    "upgrade-profile-version": [
      {
        "action": "wellarchitected:UpgradeProfileVersion",
        "resource_mappings": {
          "ResourceId": {
            "template": "${WorkloadId}"
          }
        },
        "resourcearn_mappings": {
          "profile": "${ProfileArn}"
        }
      }
    ],
    "upgrade-review-template-lens-review": [
      {
        "note": "NotFound",
        "action": "WellArchitected:UpgradeReviewTemplateLensReview",
        "resource_mappings": {}
      }
    ]
  },
  "wisdom": {
    "create-assistant": [
      {
        "action": "wisdom:CreateAssistant",
        "resource_mappings": {}
      }
    ],
    "create-assistant-association": [
      {
        "action": "wisdom:CreateAssistantAssociation",
        "resource_mappings": {
          "AssistantId": {
            "template": "${assistantId}"
          }
        }
      }
    ],
    "create-content": [
      {
        "action": "wisdom:CreateContent",
        "resource_mappings": {
          "KnowledgeBaseId": {
            "template": "${knowledgeBaseId}"
          }
        }
      }
    ],
    "create-knowledge-base": [
      {
        "action": "wisdom:CreateKnowledgeBase",
        "resource_mappings": {}
      }
    ],
    "create-session": [
      {
        "action": "wisdom:CreateSession",
        "resource_mappings": {
          "AssistantId": {
            "template": "${assistantId}"
          }
        }
      }
    ],
    "delete-assistant": [
      {
        "action": "wisdom:DeleteAssistant",
        "resource_mappings": {
          "AssistantId": {
            "template": "${assistantId}"
          }
        }
      }
    ],
    "delete-assistant-association": [
      {
        "action": "wisdom:DeleteAssistantAssociation",
        "resource_mappings": {
          "AssistantId": {
            "template": "${assistantId}"
          },
          "AssistantAssociationId": {
            "template": "${assistantAssociationId}"
          }
        }
      }
    ],
    "delete-content": [
      {
        "action": "wisdom:DeleteContent",
        "resource_mappings": {
          "KnowledgeBaseId": {
            "template": "${knowledgeBaseId}"
          },
          "ContentId": {
            "template": "${contentId}"
          }
        }
      }
    ],
    "delete-knowledge-base": [
      {
        "action": "wisdom:DeleteKnowledgeBase",
        "resource_mappings": {
          "KnowledgeBaseId": {
            "template": "${knowledgeBaseId}"
          }
        }
      }
    ],
    "get-assistant": [
      {
        "action": "wisdom:GetAssistant",
        "resource_mappings": {
          "AssistantId": {
            "template": "${assistantId}"
          }
        }
      }
    ],
    "get-assistant-association": [
      {
        "action": "wisdom:GetAssistantAssociation",
        "resource_mappings": {
          "AssistantId": {
            "template": "${assistantId}"
          },
          "AssistantAssociationId": {
            "template": "${assistantAssociationId}"
          }
        }
      }
    ],
    "get-content": [
      {
        "action": "wisdom:GetContent",
        "resource_mappings": {
          "KnowledgeBaseId": {
            "template": "${knowledgeBaseId}"
          },
          "ContentId": {
            "template": "${contentId}"
          }
        }
      }
    ],
    "get-content-summary": [
      {
        "action": "wisdom:GetContentSummary",
        "resource_mappings": {
          "KnowledgeBaseId": {
            "template": "${knowledgeBaseId}"
          },
          "ContentId": {
            "template": "${contentId}"
          }
        }
      }
    ],
    "get-knowledge-base": [
      {
        "action": "wisdom:GetKnowledgeBase",
        "resource_mappings": {
          "KnowledgeBaseId": {
            "template": "${knowledgeBaseId}"
          }
        }
      }
    ],
    "get-recommendations": [
      {
        "action": "wisdom:GetRecommendations",
        "resource_mappings": {
          "AssistantId": {
            "template": "${assistantId}"
          }
        }
      }
    ],
    "get-session": [
      {
        "action": "wisdom:GetSession",
        "resource_mappings": {
          "AssistantId": {
            "template": "${assistantId}"
          },
          "SessionId": {
            "template": "${sessionId}"
          }
        }
      }
    ],
    "list-assistant-associations": [
      {
        "action": "wisdom:ListAssistantAssociations",
        "resource_mappings": {
          "AssistantId": {
            "template": "${assistantId}"
          }
        }
      }
    ],
    "list-assistants": [
      {
        "action": "wisdom:ListAssistants",
        "resource_mappings": {}
      }
    ],
    "list-contents": [
      {
        "action": "wisdom:ListContents",
        "resource_mappings": {
          "KnowledgeBaseId": {
            "template": "${knowledgeBaseId}"
          }
        }
      }
    ],
    "list-knowledge-bases": [
      {
        "action": "wisdom:ListKnowledgeBases",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "wisdom:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "notify-recommendations-received": [
      {
        "action": "wisdom:NotifyRecommendationsReceived",
        "resource_mappings": {
          "AssistantId": {
            "template": "${assistantId}"
          }
        }
      }
    ],
    "query-assistant": [
      {
        "action": "wisdom:QueryAssistant",
        "resource_mappings": {
          "AssistantId": {
            "template": "${assistantId}"
          }
        }
      }
    ],
    "remove-knowledge-base-template-uri": [
      {
        "action": "wisdom:RemoveKnowledgeBaseTemplateUri",
        "resource_mappings": {
          "KnowledgeBaseId": {
            "template": "${knowledgeBaseId}"
          }
        }
      }
    ],
    "search-content": [
      {
        "action": "wisdom:SearchContent",
        "resource_mappings": {
          "KnowledgeBaseId": {
            "template": "${knowledgeBaseId}"
          }
        }
      }
    ],
    "search-sessions": [
      {
        "action": "wisdom:SearchSessions",
        "resource_mappings": {
          "AssistantId": {
            "template": "${assistantId}"
          }
        }
      }
    ],
    "start-content-upload": [
      {
        "action": "wisdom:StartContentUpload",
        "resource_mappings": {
          "KnowledgeBaseId": {
            "template": "${knowledgeBaseId}"
          }
        }
      }
    ],
    "tag-resource": [
      {
        "action": "wisdom:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "wisdom:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-content": [
      {
        "action": "wisdom:UpdateContent",
        "resource_mappings": {
          "KnowledgeBaseId": {
            "template": "${knowledgeBaseId}"
          },
          "ContentId": {
            "template": "${contentId}"
          }
        }
      }
    ],
    "update-knowledge-base-template-uri": [
      {
        "action": "wisdom:UpdateKnowledgeBaseTemplateUri",
        "resource_mappings": {
          "KnowledgeBaseId": {
            "template": "${knowledgeBaseId}"
          }
        }
      }
    ]
  },
  "workdocs": {
    "abort-document-version-upload": [
      {
        "action": "workdocs:AbortDocumentVersionUpload",
        "resource_mappings": {}
      }
    ],
    "activate-user": [
      {
        "action": "workdocs:ActivateUser",
        "resource_mappings": {}
      }
    ],
    "add-resource-permissions": [
      {
        "action": "workdocs:AddResourcePermissions",
        "resource_mappings": {}
      }
    ],
    "create-comment": [
      {
        "action": "workdocs:CreateComment",
        "resource_mappings": {}
      }
    ],
    "create-custom-metadata": [
      {
        "action": "workdocs:CreateCustomMetadata",
        "resource_mappings": {}
      }
    ],
    "create-folder": [
      {
        "action": "workdocs:CreateFolder",
        "resource_mappings": {}
      }
    ],
    "create-labels": [
      {
        "action": "workdocs:CreateLabels",
        "resource_mappings": {}
      }
    ],
    "create-notification-subscription": [
      {
        "action": "workdocs:CreateNotificationSubscription",
        "resource_mappings": {}
      }
    ],
    "create-user": [
      {
        "action": "workdocs:CreateUser",
        "resource_mappings": {}
      }
    ],
    "deactivate-user": [
      {
        "action": "workdocs:DeactivateUser",
        "resource_mappings": {}
      }
    ],
    "delete-comment": [
      {
        "action": "workdocs:DeleteComment",
        "resource_mappings": {}
      }
    ],
    "delete-custom-metadata": [
      {
        "action": "workdocs:DeleteCustomMetadata",
        "resource_mappings": {}
      }
    ],
    "delete-document": [
      {
        "action": "workdocs:DeleteDocument",
        "resource_mappings": {}
      }
    ],
    "delete-document-version": [
      {
        "action": "workdocs:DeleteDocumentVersion",
        "resource_mappings": {}
      }
    ],
    "delete-folder": [
      {
        "action": "workdocs:DeleteFolder",
        "resource_mappings": {}
      }
    ],
    "delete-folder-contents": [
      {
        "action": "workdocs:DeleteFolderContents",
        "resource_mappings": {}
      }
    ],
    "delete-labels": [
      {
        "action": "workdocs:DeleteLabels",
        "resource_mappings": {}
      }
    ],
    "delete-notification-subscription": [
      {
        "action": "workdocs:DeleteNotificationSubscription",
        "resource_mappings": {}
      }
    ],
    "delete-user": [
      {
        "action": "workdocs:DeleteUser",
        "resource_mappings": {}
      }
    ],
    "describe-activities": [
      {
        "action": "workdocs:DescribeActivities",
        "resource_mappings": {}
      }
    ],
    "describe-comments": [
      {
        "action": "workdocs:DescribeComments",
        "resource_mappings": {}
      }
    ],
    "describe-document-versions": [
      {
        "action": "workdocs:DescribeDocumentVersions",
        "resource_mappings": {}
      }
    ],
    "describe-folder-contents": [
      {
        "action": "workdocs:DescribeFolderContents",
        "resource_mappings": {}
      }
    ],
    "describe-groups": [
      {
        "action": "workdocs:DescribeGroups",
        "resource_mappings": {}
      }
    ],
    "describe-notification-subscriptions": [
      {
        "action": "workdocs:DescribeNotificationSubscriptions",
        "resource_mappings": {}
      }
    ],
    "describe-resource-permissions": [
      {
        "action": "workdocs:DescribeResourcePermissions",
        "resource_mappings": {}
      }
    ],
    "describe-root-folders": [
      {
        "action": "workdocs:DescribeRootFolders",
        "resource_mappings": {}
      }
    ],
    "describe-users": [
      {
        "action": "workdocs:DescribeUsers",
        "resource_mappings": {}
      }
    ],
    "get-current-user": [
      {
        "action": "workdocs:GetCurrentUser",
        "resource_mappings": {}
      }
    ],
    "get-document": [
      {
        "action": "workdocs:GetDocument",
        "resource_mappings": {}
      }
    ],
    "get-document-path": [
      {
        "action": "workdocs:GetDocumentPath",
        "resource_mappings": {}
      }
    ],
    "get-document-version": [
      {
        "action": "workdocs:GetDocumentVersion",
        "resource_mappings": {}
      }
    ],
    "get-folder": [
      {
        "action": "workdocs:GetFolder",
        "resource_mappings": {}
      }
    ],
    "get-folder-path": [
      {
        "action": "workdocs:GetFolderPath",
        "resource_mappings": {}
      }
    ],
    "get-resources": [
      {
        "action": "workdocs:GetResources",
        "resource_mappings": {}
      }
    ],
    "initiate-document-version-upload": [
      {
        "action": "workdocs:InitiateDocumentVersionUpload",
        "resource_mappings": {}
      }
    ],
    "remove-all-resource-permissions": [
      {
        "action": "workdocs:RemoveAllResourcePermissions",
        "resource_mappings": {}
      }
    ],
    "remove-resource-permission": [
      {
        "action": "workdocs:RemoveResourcePermission",
        "resource_mappings": {}
      }
    ],
    "restore-document-versions": [
      {
        "action": "workdocs:RestoreDocumentVersions",
        "resource_mappings": {}
      }
    ],
    "search-resources": [
      {
        "action": "workdocs:SearchResources",
        "resource_mappings": {}
      }
    ],
    "update-document": [
      {
        "action": "workdocs:UpdateDocument",
        "resource_mappings": {}
      }
    ],
    "update-document-version": [
      {
        "action": "workdocs:UpdateDocumentVersion",
        "resource_mappings": {}
      }
    ],
    "update-folder": [
      {
        "action": "workdocs:UpdateFolder",
        "resource_mappings": {}
      }
    ],
    "update-user": [
      {
        "action": "workdocs:UpdateUser",
        "resource_mappings": {}
      }
    ]
  },
  "worklink": {
    "associate-domain": [
      {
        "action": "worklink:AssociateDomain",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "${FleetArn}"
        }
      }
    ],
    "associate-website-authorization-provider": [
      {
        "action": "worklink:AssociateWebsiteAuthorizationProvider",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "${FleetArn}"
        }
      }
    ],
    "associate-website-certificate-authority": [
      {
        "action": "worklink:AssociateWebsiteCertificateAuthority",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "${FleetArn}"
        }
      }
    ],
    "create-fleet": [
      {
        "action": "worklink:CreateFleet",
        "resource_mappings": {}
      }
    ],
    "delete-fleet": [
      {
        "action": "worklink:DeleteFleet",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "${FleetArn}"
        }
      }
    ],
    "describe-audit-stream-configuration": [
      {
        "action": "worklink:DescribeAuditStreamConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "${FleetArn}"
        }
      }
    ],
    "describe-company-network-configuration": [
      {
        "action": "worklink:DescribeCompanyNetworkConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "${FleetArn}"
        }
      }
    ],
    "describe-device": [
      {
        "action": "worklink:DescribeDevice",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "${FleetArn}"
        }
      }
    ],
    "describe-device-policy-configuration": [
      {
        "action": "worklink:DescribeDevicePolicyConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "${FleetArn}"
        }
      }
    ],
    "describe-domain": [
      {
        "action": "worklink:DescribeDomain",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "${FleetArn}"
        }
      }
    ],
    "describe-fleet-metadata": [
      {
        "action": "worklink:DescribeFleetMetadata",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "${FleetArn}"
        }
      }
    ],
    "describe-identity-provider-configuration": [
      {
        "action": "worklink:DescribeIdentityProviderConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "${FleetArn}"
        }
      }
    ],
    "describe-website-certificate-authority": [
      {
        "action": "worklink:DescribeWebsiteCertificateAuthority",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "${FleetArn}"
        }
      }
    ],
    "disassociate-domain": [
      {
        "action": "worklink:DisassociateDomain",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "${FleetArn}"
        }
      }
    ],
    "disassociate-website-authorization-provider": [
      {
        "action": "worklink:DisassociateWebsiteAuthorizationProvider",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "${FleetArn}"
        }
      }
    ],
    "disassociate-website-certificate-authority": [
      {
        "action": "worklink:DisassociateWebsiteCertificateAuthority",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "${FleetArn}"
        }
      }
    ],
    "list-devices": [
      {
        "action": "worklink:ListDevices",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "${FleetArn}"
        }
      }
    ],
    "list-domains": [
      {
        "action": "worklink:ListDomains",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "${FleetArn}"
        }
      }
    ],
    "list-fleets": [
      {
        "action": "worklink:ListFleets",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "worklink:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "list-website-authorization-providers": [
      {
        "action": "worklink:ListWebsiteAuthorizationProviders",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "${FleetArn}"
        }
      }
    ],
    "list-website-certificate-authorities": [
      {
        "action": "worklink:ListWebsiteCertificateAuthorities",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "${FleetArn}"
        }
      }
    ],
    "restore-domain-access": [
      {
        "action": "worklink:RestoreDomainAccess",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "${FleetArn}"
        }
      }
    ],
    "revoke-domain-access": [
      {
        "action": "worklink:RevokeDomainAccess",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "${FleetArn}"
        }
      }
    ],
    "sign-out-user": [
      {
        "action": "worklink:SignOutUser",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "${FleetArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "worklink:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "worklink:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-audit-stream-configuration": [
      {
        "action": "worklink:UpdateAuditStreamConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "${FleetArn}"
        }
      }
    ],
    "update-company-network-configuration": [
      {
        "action": "worklink:UpdateCompanyNetworkConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "${FleetArn}"
        }
      }
    ],
    "update-device-policy-configuration": [
      {
        "action": "worklink:UpdateDevicePolicyConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "${FleetArn}"
        }
      }
    ],
    "update-domain-metadata": [
      {
        "action": "worklink:UpdateDomainMetadata",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "${FleetArn}"
        }
      }
    ],
    "update-fleet-metadata": [
      {
        "action": "worklink:UpdateFleetMetadata",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "${FleetArn}"
        }
      }
    ],
    "update-identity-provider-configuration": [
      {
        "action": "worklink:UpdateIdentityProviderConfiguration",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "fleet": "${FleetArn}"
        }
      }
    ]
  },
  "workmail": {
    "associate-delegate-to-resource": [
      {
        "action": "workmail:AssociateDelegateToResource",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "associate-member-to-group": [
      {
        "action": "workmail:AssociateMemberToGroup",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "assume-impersonation-role": [
      {
        "action": "workmail:AssumeImpersonationRole",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "cancel-mailbox-export-job": [
      {
        "action": "workmail:CancelMailboxExportJob",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "create-alias": [
      {
        "action": "workmail:CreateAlias",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "create-availability-configuration": [
      {
        "action": "workmail:CreateAvailabilityConfiguration",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "create-group": [
      {
        "action": "workmail:CreateGroup",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "create-impersonation-role": [
      {
        "action": "workmail:CreateImpersonationRole",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "create-mobile-device-access-rule": [
      {
        "action": "workmail:CreateMobileDeviceAccessRule",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "create-organization": [
      {
        "action": "workmail:CreateOrganization",
        "resource_mappings": {}
      }
    ],
    "create-resource": [
      {
        "action": "workmail:CreateResource",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "create-user": [
      {
        "action": "workmail:CreateUser",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "delete-access-control-rule": [
      {
        "action": "workmail:DeleteAccessControlRule",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "delete-alias": [
      {
        "action": "workmail:DeleteAlias",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "delete-availability-configuration": [
      {
        "action": "workmail:DeleteAvailabilityConfiguration",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "delete-email-monitoring-configuration": [
      {
        "action": "workmail:DeleteEmailMonitoringConfiguration",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "delete-group": [
      {
        "action": "workmail:DeleteGroup",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "delete-impersonation-role": [
      {
        "action": "workmail:DeleteImpersonationRole",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "delete-mailbox-permissions": [
      {
        "action": "workmail:DeleteMailboxPermissions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "delete-mobile-device-access-override": [
      {
        "action": "workmail:DeleteMobileDeviceAccessOverride",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "delete-mobile-device-access-rule": [
      {
        "action": "workmail:DeleteMobileDeviceAccessRule",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "delete-organization": [
      {
        "action": "workmail:DeleteOrganization",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "delete-resource": [
      {
        "action": "workmail:DeleteResource",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "delete-retention-policy": [
      {
        "action": "workmail:DeleteRetentionPolicy",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "delete-user": [
      {
        "action": "workmail:DeleteUser",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "deregister-from-work-mail": [
      {
        "action": "workmail:DeregisterFromWorkMail",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "deregister-mail-domain": [
      {
        "action": "workmail:DeregisterMailDomain",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "describe-email-monitoring-configuration": [
      {
        "action": "workmail:DescribeEmailMonitoringConfiguration",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "describe-entity": [
      {
        "note": "NotFound",
        "action": "WorkMail:DescribeEntity",
        "resource_mappings": {}
      }
    ],
    "describe-group": [
      {
        "action": "workmail:DescribeGroup",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "describe-inbound-dmarc-settings": [
      {
        "action": "workmail:DescribeInboundDmarcSettings",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "describe-mailbox-export-job": [
      {
        "action": "workmail:DescribeMailboxExportJob",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "describe-organization": [
      {
        "action": "workmail:DescribeOrganization",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "describe-resource": [
      {
        "action": "workmail:DescribeResource",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "describe-user": [
      {
        "action": "workmail:DescribeUser",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "disassociate-delegate-from-resource": [
      {
        "action": "workmail:DisassociateDelegateFromResource",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "disassociate-member-from-group": [
      {
        "action": "workmail:DisassociateMemberFromGroup",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "get-access-control-effect": [
      {
        "action": "workmail:GetAccessControlEffect",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "get-default-retention-policy": [
      {
        "action": "workmail:GetDefaultRetentionPolicy",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "get-impersonation-role": [
      {
        "action": "workmail:GetImpersonationRole",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "get-impersonation-role-effect": [
      {
        "action": "workmail:GetImpersonationRoleEffect",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "get-mail-domain": [
      {
        "action": "workmail:GetMailDomain",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "get-mailbox-details": [
      {
        "action": "workmail:GetMailboxDetails",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "get-mobile-device-access-effect": [
      {
        "action": "workmail:GetMobileDeviceAccessEffect",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "get-mobile-device-access-override": [
      {
        "action": "workmail:GetMobileDeviceAccessOverride",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "list-access-control-rules": [
      {
        "action": "workmail:ListAccessControlRules",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "list-aliases": [
      {
        "action": "workmail:ListAliases",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "list-availability-configurations": [
      {
        "action": "workmail:ListAvailabilityConfigurations",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "list-group-members": [
      {
        "action": "workmail:ListGroupMembers",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "list-groups": [
      {
        "action": "workmail:ListGroups",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "list-groups-for-entity": [
      {
        "note": "NotFound",
        "action": "WorkMail:ListGroupsForEntity",
        "resource_mappings": {}
      }
    ],
    "list-impersonation-roles": [
      {
        "action": "workmail:ListImpersonationRoles",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "list-mail-domains": [
      {
        "action": "workmail:ListMailDomains",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "list-mailbox-export-jobs": [
      {
        "action": "workmail:ListMailboxExportJobs",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "list-mailbox-permissions": [
      {
        "action": "workmail:ListMailboxPermissions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "list-mobile-device-access-overrides": [
      {
        "action": "workmail:ListMobileDeviceAccessOverrides",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "list-mobile-device-access-rules": [
      {
        "action": "workmail:ListMobileDeviceAccessRules",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "list-organizations": [
      {
        "action": "workmail:ListOrganizations",
        "resource_mappings": {}
      }
    ],
    "list-resource-delegates": [
      {
        "action": "workmail:ListResourceDelegates",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "list-resources": [
      {
        "action": "workmail:ListResources",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "workmail:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "organization": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "list-users": [
      {
        "action": "workmail:ListUsers",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "put-access-control-rule": [
      {
        "action": "workmail:PutAccessControlRule",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "put-email-monitoring-configuration": [
      {
        "action": "workmail:PutEmailMonitoringConfiguration",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "put-inbound-dmarc-settings": [
      {
        "action": "workmail:PutInboundDmarcSettings",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "put-mailbox-permissions": [
      {
        "action": "workmail:PutMailboxPermissions",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "put-mobile-device-access-override": [
      {
        "action": "workmail:PutMobileDeviceAccessOverride",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "put-retention-policy": [
      {
        "action": "workmail:PutRetentionPolicy",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "register-mail-domain": [
      {
        "action": "workmail:RegisterMailDomain",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "register-to-work-mail": [
      {
        "action": "workmail:RegisterToWorkMail",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "reset-password": [
      {
        "action": "workmail:ResetPassword",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "start-mailbox-export-job": [
      {
        "action": "workmail:StartMailboxExportJob",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${RoleArn}"
        }
      }
    ],
    "tag-resource": [
      {
        "action": "workmail:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "organization": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "test-availability-configuration": [
      {
        "action": "workmail:TestAvailabilityConfiguration",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "untag-resource": [
      {
        "action": "workmail:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "organization": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "update-availability-configuration": [
      {
        "action": "workmail:UpdateAvailabilityConfiguration",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "update-default-mail-domain": [
      {
        "action": "workmail:UpdateDefaultMailDomain",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "update-group": [
      {
        "note": "NotFound",
        "action": "WorkMail:UpdateGroup",
        "resource_mappings": {}
      }
    ],
    "update-impersonation-role": [
      {
        "action": "workmail:UpdateImpersonationRole",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "update-mailbox-quota": [
      {
        "action": "workmail:UpdateMailboxQuota",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "update-mobile-device-access-rule": [
      {
        "action": "workmail:UpdateMobileDeviceAccessRule",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "update-primary-email-address": [
      {
        "action": "workmail:UpdatePrimaryEmailAddress",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "update-resource": [
      {
        "action": "workmail:UpdateResource",
        "resource_mappings": {
          "ResourceId": {
            "template": "${OrganizationId}"
          }
        }
      }
    ],
    "update-user": [
      {
        "note": "NotFound",
        "action": "WorkMail:UpdateUser",
        "resource_mappings": {}
      }
    ]
  },
  "workmailmessageflow": {
    "get-raw-message-content": [
      {
        "action": "workmailmessageflow:GetRawMessageContent",
        "resource_mappings": {
          "OrganizationId": {
            "template": "*"
          },
          "Context": {
            "template": "*"
          },
          "MessageId": {
            "template": "${messageId}"
          }
        }
      }
    ],
    "put-raw-message-content": [
      {
        "action": "workmailmessageflow:PutRawMessageContent",
        "resource_mappings": {
          "OrganizationId": {
            "template": "*"
          },
          "Context": {
            "template": "*"
          },
          "MessageId": {
            "template": "${messageId}"
          }
        }
      }
    ]
  },
  "workspaces": {
    "associate-connection-alias": [
      {
        "action": "workspaces:AssociateConnectionAlias",
        "resource_mappings": {
          "ConnectionAliasId": {
            "template": "${AliasId}"
          },
          "DirectoryId": {
            "template": "${ResourceId}"
          }
        }
      }
    ],
    "associate-ip-groups": [
      {
        "action": "workspaces:AssociateIpGroups",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          },
          "GroupId": {
            "template": "${GroupIds}[]"
          }
        }
      }
    ],
    "associate-workspace-application": [
      {
        "note": "NotFound",
        "action": "WorkSpaces:AssociateWorkspaceApplication",
        "resource_mappings": {}
      }
    ],
    "authorize-ip-rules": [
      {
        "action": "workspaces:AuthorizeIpRules",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupId}"
          }
        }
      }
    ],
    "copy-workspace-image": [
      {
        "action": "workspaces:CopyWorkspaceImage",
        "resource_mappings": {
          "ImageId": {
            "template": "*"
          }
        }
      },
      {
        "action": "workspaces:DescribeWorkspaceImages",
        "resource_mappings": {}
      }
    ],
    "create-connect-client-add-in": [
      {
        "action": "workspaces:CreateConnectClientAddIn",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${ResourceId}"
          }
        }
      }
    ],
    "create-connection-alias": [
      {
        "action": "workspaces:CreateConnectionAlias",
        "resource_mappings": {}
      }
    ],
    "create-ip-group": [
      {
        "action": "workspaces:CreateIpGroup",
        "resource_mappings": {}
      }
    ],
    "create-standby-workspaces": [
      {
        "action": "workspaces:CreateStandbyWorkspaces",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${StandbyWorkspaces[].DirectoryId}"
          },
          "WorkspaceId": {
            "template": "*"
          }
        }
      }
    ],
    "create-tags": [
      {
        "action": "workspaces:CreateTags",
        "resource_mappings": {}
      }
    ],
    "create-updated-workspace-image": [
      {
        "action": "workspaces:CreateUpdatedWorkspaceImage",
        "resource_mappings": {
          "ImageId": {
            "template": "*"
          }
        }
      }
    ],
    "create-workspace-bundle": [
      {
        "action": "workspaces:CreateWorkspaceBundle",
        "resource_mappings": {
          "ImageId": {
            "template": "${ImageId}"
          }
        }
      },
      {
        "action": "workspaces:CreateTags",
        "resource_mappings": {}
      }
    ],
    "create-workspace-image": [
      {
        "action": "workspaces:CreateWorkspaceImage",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${WorkspaceId}"
          }
        }
      }
    ],
    "create-workspaces": [
      {
        "action": "workspaces:CreateWorkspaces",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${Workspaces[].DirectoryId}"
          },
          "BundleId": {
            "template": "${Workspaces[].BundleId}"
          }
        }
      }
    ],
    "delete-client-branding": [
      {
        "action": "workspaces:DeleteClientBranding",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${ResourceId}"
          }
        }
      }
    ],
    "delete-connect-client-add-in": [
      {
        "action": "workspaces:DeleteConnectClientAddIn",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${ResourceId}"
          }
        }
      }
    ],
    "delete-connection-alias": [
      {
        "action": "workspaces:DeleteConnectionAlias",
        "resource_mappings": {
          "ConnectionAliasId": {
            "template": "${AliasId}"
          }
        }
      }
    ],
    "delete-ip-group": [
      {
        "action": "workspaces:DeleteIpGroup",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupId}"
          }
        }
      }
    ],
    "delete-tags": [
      {
        "action": "workspaces:DeleteTags",
        "resource_mappings": {}
      }
    ],
    "delete-workspace-bundle": [
      {
        "action": "workspaces:DeleteWorkspaceBundle",
        "resource_mappings": {
          "BundleId": {
            "template": "${BundleId}"
          }
        }
      }
    ],
    "delete-workspace-image": [
      {
        "action": "workspaces:DeleteWorkspaceImage",
        "resource_mappings": {
          "ImageId": {
            "template": "${ImageId}"
          }
        }
      }
    ],
    "deploy-workspace-applications": [
      {
        "note": "NotFound",
        "action": "WorkSpaces:DeployWorkspaceApplications",
        "resource_mappings": {}
      }
    ],
    "deregister-workspace-directory": [
      {
        "action": "workspaces:DeregisterWorkspaceDirectory",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "describe-account": [
      {
        "action": "workspaces:DescribeAccount",
        "resource_mappings": {}
      }
    ],
    "describe-account-modifications": [
      {
        "action": "workspaces:DescribeAccountModifications",
        "resource_mappings": {}
      }
    ],
    "describe-application-associations": [
      {
        "note": "NotFound",
        "action": "WorkSpaces:DescribeApplicationAssociations",
        "resource_mappings": {}
      }
    ],
    "describe-applications": [
      {
        "note": "NotFound",
        "action": "WorkSpaces:DescribeApplications",
        "resource_mappings": {}
      }
    ],
    "describe-bundle-associations": [
      {
        "note": "NotFound",
        "action": "WorkSpaces:DescribeBundleAssociations",
        "resource_mappings": {}
      }
    ],
    "describe-client-branding": [
      {
        "action": "workspaces:DescribeClientBranding",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${ResourceId}"
          }
        }
      }
    ],
    "describe-client-properties": [
      {
        "action": "workspaces:DescribeClientProperties",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${ResourceIds[]}"
          }
        }
      }
    ],
    "describe-connect-client-add-ins": [
      {
        "action": "workspaces:DescribeConnectClientAddIns",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${ResourceId}"
          }
        }
      }
    ],
    "describe-connection-alias-permissions": [
      {
        "action": "workspaces:DescribeConnectionAliasPermissions",
        "resource_mappings": {
          "ConnectionAliasId": {
            "template": "${AliasId}"
          }
        }
      }
    ],
    "describe-connection-aliases": [
      {
        "action": "workspaces:DescribeConnectionAliases",
        "resource_mappings": {}
      }
    ],
    "describe-image-associations": [
      {
        "note": "NotFound",
        "action": "WorkSpaces:DescribeImageAssociations",
        "resource_mappings": {}
      }
    ],
    "describe-ip-groups": [
      {
        "action": "workspaces:DescribeIpGroups",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupIds[]}"
          }
        }
      }
    ],
    "describe-tags": [
      {
        "action": "workspaces:DescribeTags",
        "resource_mappings": {}
      }
    ],
    "describe-workspace-associations": [
      {
        "note": "NotFound",
        "action": "WorkSpaces:DescribeWorkspaceAssociations",
        "resource_mappings": {}
      }
    ],
    "describe-workspace-bundles": [
      {
        "action": "workspaces:DescribeWorkspaceBundles",
        "resource_mappings": {}
      }
    ],
    "describe-workspace-directories": [
      {
        "action": "workspaces:DescribeWorkspaceDirectories",
        "resource_mappings": {}
      }
    ],
    "describe-workspace-image-permissions": [
      {
        "action": "workspaces:DescribeWorkspaceImagePermissions",
        "resource_mappings": {
          "ImageId": {
            "template": "${ImageId}"
          }
        }
      }
    ],
    "describe-workspace-images": [
      {
        "action": "workspaces:DescribeWorkspaceImages",
        "resource_mappings": {}
      }
    ],
    "describe-workspace-snapshots": [
      {
        "action": "workspaces:DescribeWorkspaceSnapshots",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${WorkspaceId}"
          }
        }
      }
    ],
    "describe-workspaces": [
      {
        "action": "workspaces:DescribeWorkspaces",
        "resource_mappings": {}
      }
    ],
    "describe-workspaces-connection-status": [
      {
        "action": "workspaces:DescribeWorkspacesConnectionStatus",
        "resource_mappings": {}
      }
    ],
    "disassociate-connection-alias": [
      {
        "action": "workspaces:DisassociateConnectionAlias",
        "resource_mappings": {
          "ConnectionAliasId": {
            "template": "${AliasId}"
          }
        }
      }
    ],
    "disassociate-ip-groups": [
      {
        "action": "workspaces:DisassociateIpGroups",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          },
          "GroupId": {
            "template": "${GroupIds}[]"
          }
        }
      }
    ],
    "disassociate-workspace-application": [
      {
        "note": "NotFound",
        "action": "WorkSpaces:DisassociateWorkspaceApplication",
        "resource_mappings": {}
      }
    ],
    "import-client-branding": [
      {
        "action": "workspaces:ImportClientBranding",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${ResourceId}"
          }
        }
      }
    ],
    "import-workspace-image": [
      {
        "action": "workspaces:ImportWorkspaceImage",
        "resource_mappings": {}
      },
      {
        "action": "ec2:DescribeImages",
        "resource_mappings": {}
      },
      {
        "action": "ec2:ModifyImageAttribute",
        "resource_mappings": {
          "ImageId": {
            "template": "${Ec2ImageId}"
          }
        }
      }
    ],
    "list-available-management-cidr-ranges": [
      {
        "action": "workspaces:ListAvailableManagementCidrRanges",
        "resource_mappings": {}
      }
    ],
    "migrate-workspace": [
      {
        "action": "workspaces:MigrateWorkspace",
        "resource_mappings": {
          "BundleId": {
            "template": "${BundleId}"
          },
          "WorkspaceId": {
            "template": "${SourceWorkspaceId}"
          }
        }
      }
    ],
    "modify-account": [
      {
        "action": "workspaces:ModifyAccount",
        "resource_mappings": {}
      }
    ],
    "modify-certificate-based-auth-properties": [
      {
        "action": "workspaces:ModifyCertificateBasedAuthProperties",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${ResourceId}"
          }
        }
      }
    ],
    "modify-client-properties": [
      {
        "action": "workspaces:ModifyClientProperties",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${ResourceId}"
          }
        }
      }
    ],
    "modify-saml-properties": [
      {
        "action": "workspaces:ModifySamlProperties",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${ResourceId}"
          }
        }
      }
    ],
    "modify-selfservice-permissions": [
      {
        "action": "workspaces:ModifySelfservicePermissions",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${ResourceId}"
          }
        }
      }
    ],
    "modify-workspace-access-properties": [
      {
        "action": "workspaces:ModifyWorkspaceAccessProperties",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${ResourceId}"
          }
        }
      }
    ],
    "modify-workspace-creation-properties": [
      {
        "action": "workspaces:ModifyWorkspaceCreationProperties",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${ResourceId}"
          }
        }
      }
    ],
    "modify-workspace-properties": [
      {
        "action": "workspaces:ModifyWorkspaceProperties",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${WorkspaceId}"
          }
        }
      }
    ],
    "modify-workspace-state": [
      {
        "action": "workspaces:ModifyWorkspaceState",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${WorkspaceId}"
          }
        }
      }
    ],
    "reboot-workspaces": [
      {
        "action": "workspaces:RebootWorkspaces",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${RebootWorkspaceRequests[].WorkspaceId}"
          }
        }
      }
    ],
    "rebuild-workspaces": [
      {
        "action": "workspaces:RebuildWorkspaces",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${RebuildWorkspaceRequests[].WorkspaceId}"
          }
        }
      }
    ],
    "register-workspace-directory": [
      {
        "action": "workspaces:RegisterWorkspaceDirectory",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${DirectoryId}"
          }
        }
      }
    ],
    "restore-workspace": [
      {
        "action": "workspaces:RestoreWorkspace",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${WorkspaceId}"
          }
        }
      }
    ],
    "revoke-ip-rules": [
      {
        "action": "workspaces:RevokeIpRules",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupId}"
          }
        }
      }
    ],
    "start-workspaces": [
      {
        "action": "workspaces:StartWorkspaces",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${StartWorkspaceRequests[].WorkspaceId}"
          }
        }
      }
    ],
    "stop-workspaces": [
      {
        "action": "workspaces:StopWorkspaces",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${StopWorkspaceRequests[].WorkspaceId}"
          }
        }
      }
    ],
    "terminate-workspaces": [
      {
        "action": "workspaces:TerminateWorkspaces",
        "resource_mappings": {
          "WorkspaceId": {
            "template": "${TerminateWorkspaceRequests[].WorkspaceId}"
          }
        }
      }
    ],
    "update-connect-client-add-in": [
      {
        "action": "workspaces:UpdateConnectClientAddIn",
        "resource_mappings": {
          "DirectoryId": {
            "template": "${ResourceId}"
          }
        }
      }
    ],
    "update-connection-alias-permission": [
      {
        "action": "workspaces:UpdateConnectionAliasPermission",
        "resource_mappings": {
          "ConnectionAliasId": {
            "template": "${AliasId}"
          }
        }
      }
    ],
    "update-rules-of-ip-group": [
      {
        "action": "workspaces:UpdateRulesOfIpGroup",
        "resource_mappings": {
          "GroupId": {
            "template": "${GroupId}"
          }
        }
      }
    ],
    "update-workspace-bundle": [
      {
        "action": "workspaces:UpdateWorkspaceBundle",
        "resource_mappings": {
          "BundleId": {
            "template": "${BundleId}"
          },
          "ImageId": {
            "template": "${ImageId}"
          }
        }
      }
    ],
    "update-workspace-image-permission": [
      {
        "action": "workspaces:UpdateWorkspaceImagePermission",
        "resource_mappings": {
          "ImageId": {
            "template": "${ImageId}"
          }
        }
      }
    ]
  },
  "workspaces-web": {
    "associate-browser-settings": [
      {
        "action": "workspaces-web:AssociateBrowserSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "browserSettings": "${browserSettingsArn}",
          "portal": "${portalArn}"
        }
      }
    ],
    "associate-ip-access-settings": [
      {
        "action": "workspaces-web:AssociateIpAccessSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ipAccessSettings": "${ipAccessSettingsArn}",
          "portal": "${portalArn}"
        }
      }
    ],
    "associate-network-settings": [
      {
        "action": "workspaces-web:AssociateNetworkSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "networkSettings": "${networkSettingsArn}",
          "portal": "${portalArn}"
        }
      },
      {
        "action": "ec2:CreateNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateNetworkInterfacePermission",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:CreateTags",
        "resource_mappings": {
          "CapacityReservationId": {
            "template": "*"
          },
          "CapacityReservationFleetId": {
            "template": "*"
          },
          "ClientVpnEndpointId": {
            "template": "*"
          },
          "CustomerGatewayId": {
            "template": "*"
          },
          "DedicatedHostId": {
            "template": "*"
          },
          "DhcpOptionsId": {
            "template": "*"
          },
          "EgressOnlyInternetGatewayId": {
            "template": "*"
          },
          "ElasticGpuId": {
            "template": "*"
          },
          "AllocationId": {
            "template": "*"
          },
          "ExportImageTaskId": {
            "template": "*"
          },
          "ExportTaskId": {
            "template": "*"
          },
          "FleetId": {
            "template": "*"
          },
          "FpgaImageId": {
            "template": "*"
          },
          "HostReservationId": {
            "template": "*"
          },
          "ImageId": {
            "template": "*"
          },
          "ImportImageTaskId": {
            "template": "*"
          },
          "ImportSnapshotTaskId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "InstanceEventWindowId": {
            "template": "*"
          },
          "InternetGatewayId": {
            "template": "*"
          },
          "Ipv4PoolEc2Id": {
            "template": "*"
          },
          "Ipv6PoolEc2Id": {
            "template": "*"
          },
          "KeyPairName": {
            "template": "*"
          },
          "LaunchTemplateId": {
            "template": "*"
          },
          "LocalGatewayId": {
            "template": "*"
          },
          "LocalGatewayRoutetableId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "template": "*"
          },
          "LocalGatewayRouteTableVpcAssociationId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceId": {
            "template": "*"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "template": "*"
          },
          "NatGatewayId": {
            "template": "*"
          },
          "NaclId": {
            "template": "*"
          },
          "NetworkInterfaceId": {
            "template": "*"
          },
          "PlacementGroupName": {
            "template": "*"
          },
          "PrefixListId": {
            "template": "*"
          },
          "ReplaceRootVolumeTaskId": {
            "template": "*"
          },
          "ReservationId": {
            "template": "*"
          },
          "RouteTableId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          },
          "SecurityGroupRuleId": {
            "template": "*"
          },
          "SnapshotId": {
            "template": "*"
          },
          "SpotFleetRequestId": {
            "template": "*"
          },
          "SpotInstanceRequestId": {
            "template": "*"
          },
          "SubnetId": {
            "template": "*"
          },
          "TrafficMirrorFilterId": {
            "template": "*"
          },
          "TrafficMirrorSessionId": {
            "template": "*"
          },
          "TrafficMirrorTargetId": {
            "template": "*"
          },
          "TransitGatewayId": {
            "template": "*"
          },
          "TransitGatewayAttachmentId": {
            "template": "*"
          },
          "TransitGatewayConnectPeerId": {
            "template": "*"
          },
          "TransitGatewayMulticastDomainId": {
            "template": "*"
          },
          "TransitGatewayRouteTableId": {
            "template": "*"
          },
          "VolumeId": {
            "template": "*"
          },
          "VpcId": {
            "template": "*"
          },
          "VpcEndpointId": {
            "template": "*"
          },
          "VpcEndpointServiceId": {
            "template": "*"
          },
          "VpcFlowLogId": {
            "template": "*"
          },
          "VpcPeeringConnectionId": {
            "template": "*"
          },
          "VpnConnectionId": {
            "template": "*"
          },
          "VpnGatewayId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DeleteNetworkInterface",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:DeleteNetworkInterfacePermission",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          }
        }
      },
      {
        "action": "ec2:ModifyNetworkInterfaceAttribute",
        "resource_mappings": {
          "NetworkInterfaceId": {
            "template": "*"
          },
          "InstanceId": {
            "template": "*"
          },
          "SecurityGroupId": {
            "template": "*"
          }
        }
      }
    ],
    "associate-trust-store": [
      {
        "action": "workspaces-web:AssociateTrustStore",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "portal": "${portalArn}",
          "trustStore": "${trustStoreArn}"
        }
      }
    ],
    "associate-user-access-logging-settings": [
      {
        "action": "workspaces-web:AssociateUserAccessLoggingSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "portal": "${portalArn}",
          "userAccessLoggingSettings": "${userAccessLoggingSettingsArn}"
        }
      },
      {
        "action": "kinesis:PutRecord",
        "resource_mappings": {
          "StreamName": {
            "template": "*"
          }
        }
      },
      {
        "action": "kinesis:PutRecords",
        "resource_mappings": {
          "StreamName": {
            "template": "*"
          }
        }
      }
    ],
    "associate-user-settings": [
      {
        "action": "workspaces-web:AssociateUserSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "portal": "${portalArn}",
          "userSettings": "${userSettingsArn}"
        }
      }
    ],
    "create-browser-settings": [
      {
        "action": "workspaces-web:CreateBrowserSettings",
        "resource_mappings": {}
      },
      {
        "action": "kms:CreateGrant",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "key": "${customerManagedKey}"
        }
      },
      {
        "action": "kms:Decrypt",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "key": "${customerManagedKey}"
        }
      },
      {
        "action": "kms:DescribeKey",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "key": "${customerManagedKey}"
        }
      },
      {
        "action": "kms:GenerateDataKey",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "key": "${customerManagedKey}"
        }
      }
    ],
    "create-identity-provider": [
      {
        "action": "workspaces-web:CreateIdentityProvider",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "portal": "${portalArn}"
        }
      }
    ],
    "create-ip-access-settings": [
      {
        "action": "workspaces-web:CreateIpAccessSettings",
        "resource_mappings": {}
      }
    ],
    "create-network-settings": [
      {
        "action": "workspaces-web:CreateNetworkSettings",
        "resource_mappings": {}
      }
    ],
    "create-portal": [
      {
        "action": "workspaces-web:CreatePortal",
        "resource_mappings": {}
      },
      {
        "action": "iam:CreateServiceLinkedRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      },
      {
        "action": "kms:CreateGrant",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "key": "${customerManagedKey}"
        }
      },
      {
        "action": "kms:Decrypt",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "key": "${customerManagedKey}"
        }
      },
      {
        "action": "kms:DescribeKey",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "key": "${customerManagedKey}"
        }
      },
      {
        "action": "kms:GenerateDataKey",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "key": "${customerManagedKey}"
        }
      }
    ],
    "create-trust-store": [
      {
        "action": "workspaces-web:CreateTrustStore",
        "resource_mappings": {}
      }
    ],
    "create-user-access-logging-settings": [
      {
        "action": "workspaces-web:CreateUserAccessLoggingSettings",
        "resource_mappings": {}
      }
    ],
    "create-user-settings": [
      {
        "action": "workspaces-web:CreateUserSettings",
        "resource_mappings": {}
      }
    ],
    "delete-browser-settings": [
      {
        "action": "workspaces-web:DeleteBrowserSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "browserSettings": "${browserSettingsArn}"
        }
      }
    ],
    "delete-identity-provider": [
      {
        "action": "workspaces-web:DeleteIdentityProvider",
        "resource_mappings": {}
      }
    ],
    "delete-ip-access-settings": [
      {
        "action": "workspaces-web:DeleteIpAccessSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ipAccessSettings": "${ipAccessSettingsArn}"
        }
      }
    ],
    "delete-network-settings": [
      {
        "action": "workspaces-web:DeleteNetworkSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "networkSettings": "${networkSettingsArn}"
        }
      }
    ],
    "delete-portal": [
      {
        "action": "workspaces-web:DeletePortal",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "portal": "${portalArn}"
        }
      }
    ],
    "delete-trust-store": [
      {
        "action": "workspaces-web:DeleteTrustStore",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "trustStore": "${trustStoreArn}"
        }
      }
    ],
    "delete-user-access-logging-settings": [
      {
        "action": "workspaces-web:DeleteUserAccessLoggingSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "userAccessLoggingSettings": "${userAccessLoggingSettingsArn}"
        }
      }
    ],
    "delete-user-settings": [
      {
        "action": "workspaces-web:DeleteUserSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "userSettings": "${userSettingsArn}"
        }
      }
    ],
    "disassociate-browser-settings": [
      {
        "action": "workspaces-web:DisassociateBrowserSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "portal": "${portalArn}"
        }
      }
    ],
    "disassociate-ip-access-settings": [
      {
        "action": "workspaces-web:DisassociateIpAccessSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "portal": "${portalArn}"
        }
      }
    ],
    "disassociate-network-settings": [
      {
        "action": "workspaces-web:DisassociateNetworkSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "portal": "${portalArn}"
        }
      }
    ],
    "disassociate-trust-store": [
      {
        "action": "workspaces-web:DisassociateTrustStore",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "portal": "${portalArn}"
        }
      }
    ],
    "disassociate-user-access-logging-settings": [
      {
        "action": "workspaces-web:DisassociateUserAccessLoggingSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "portal": "${portalArn}"
        }
      }
    ],
    "disassociate-user-settings": [
      {
        "action": "workspaces-web:DisassociateUserSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "portal": "${portalArn}"
        }
      }
    ],
    "get-browser-settings": [
      {
        "action": "workspaces-web:GetBrowserSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "browserSettings": "${browserSettingsArn}"
        }
      }
    ],
    "get-identity-provider": [
      {
        "action": "workspaces-web:GetIdentityProvider",
        "resource_mappings": {}
      }
    ],
    "get-ip-access-settings": [
      {
        "action": "workspaces-web:GetIpAccessSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ipAccessSettings": "${ipAccessSettingsArn}"
        }
      }
    ],
    "get-network-settings": [
      {
        "action": "workspaces-web:GetNetworkSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "networkSettings": "${networkSettingsArn}"
        }
      }
    ],
    "get-portal": [
      {
        "action": "workspaces-web:GetPortal",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "portal": "${portalArn}"
        }
      }
    ],
    "get-portal-service-provider-metadata": [
      {
        "action": "workspaces-web:GetPortalServiceProviderMetadata",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "portal": "${portalArn}"
        }
      }
    ],
    "get-trust-store": [
      {
        "action": "workspaces-web:GetTrustStore",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "trustStore": "${trustStoreArn}"
        }
      }
    ],
    "get-trust-store-certificate": [
      {
        "action": "workspaces-web:GetTrustStoreCertificate",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "trustStore": "${trustStoreArn}"
        }
      }
    ],
    "get-user-access-logging-settings": [
      {
        "action": "workspaces-web:GetUserAccessLoggingSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "userAccessLoggingSettings": "${userAccessLoggingSettingsArn}"
        }
      }
    ],
    "get-user-settings": [
      {
        "action": "workspaces-web:GetUserSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "userSettings": "${userSettingsArn}"
        }
      }
    ],
    "list-browser-settings": [
      {
        "action": "workspaces-web:ListBrowserSettings",
        "resource_mappings": {}
      }
    ],
    "list-identity-providers": [
      {
        "action": "workspaces-web:ListIdentityProviders",
        "resource_mappings": {}
      }
    ],
    "list-ip-access-settings": [
      {
        "action": "workspaces-web:ListIpAccessSettings",
        "resource_mappings": {}
      }
    ],
    "list-network-settings": [
      {
        "action": "workspaces-web:ListNetworkSettings",
        "resource_mappings": {}
      }
    ],
    "list-portals": [
      {
        "action": "workspaces-web:ListPortals",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "workspaces-web:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "list-trust-store-certificates": [
      {
        "action": "workspaces-web:ListTrustStoreCertificates",
        "resource_mappings": {}
      }
    ],
    "list-trust-stores": [
      {
        "action": "workspaces-web:ListTrustStores",
        "resource_mappings": {}
      }
    ],
    "list-user-access-logging-settings": [
      {
        "action": "workspaces-web:ListUserAccessLoggingSettings",
        "resource_mappings": {}
      }
    ],
    "list-user-settings": [
      {
        "action": "workspaces-web:ListUserSettings",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "workspaces-web:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "workspaces-web:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-browser-settings": [
      {
        "action": "workspaces-web:UpdateBrowserSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "browserSettings": "${browserSettingsArn}"
        }
      }
    ],
    "update-identity-provider": [
      {
        "action": "workspaces-web:UpdateIdentityProvider",
        "resource_mappings": {}
      }
    ],
    "update-ip-access-settings": [
      {
        "action": "workspaces-web:UpdateIpAccessSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ipAccessSettings": "${ipAccessSettingsArn}"
        }
      }
    ],
    "update-network-settings": [
      {
        "action": "workspaces-web:UpdateNetworkSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "networkSettings": "${networkSettingsArn}"
        }
      }
    ],
    "update-portal": [
      {
        "action": "workspaces-web:UpdatePortal",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "portal": "${portalArn}"
        }
      }
    ],
    "update-trust-store": [
      {
        "action": "workspaces-web:UpdateTrustStore",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "trustStore": "${trustStoreArn}"
        }
      }
    ],
    "update-user-access-logging-settings": [
      {
        "action": "workspaces-web:UpdateUserAccessLoggingSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "userAccessLoggingSettings": "${userAccessLoggingSettingsArn}"
        }
      },
      {
        "action": "kinesis:PutRecord",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stream": "${kinesisStreamArn}"
        }
      },
      {
        "action": "kinesis:PutRecords",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "stream": "${kinesisStreamArn}"
        }
      }
    ],
    "update-user-settings": [
      {
        "action": "workspaces-web:UpdateUserSettings",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "userSettings": "${userSettingsArn}"
        }
      }
    ]
  },
  "xray": {
    "batch-get-traces": [
      {
        "action": "xray:BatchGetTraces",
        "resource_mappings": {}
      }
    ],
    "create-group": [
      {
        "action": "xray:CreateGroup",
        "resource_mappings": {
          "GroupName": {
            "template": "${GroupName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "create-sampling-rule": [
      {
        "action": "xray:CreateSamplingRule",
        "resource_mappings": {
          "SamplingRuleName": {
            "template": "${SamplingRule.RuleName}"
          }
        }
      }
    ],
    "delete-group": [
      {
        "action": "xray:DeleteGroup",
        "resource_mappings": {
          "GroupName": {
            "template": "${GroupName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "delete-resource-policy": [
      {
        "action": "xray:DeleteResourcePolicy",
        "resource_mappings": {}
      }
    ],
    "delete-sampling-rule": [
      {
        "action": "xray:DeleteSamplingRule",
        "resource_mappings": {
          "SamplingRuleName": {
            "template": "${RuleName}"
          }
        }
      }
    ],
    "get-encryption-config": [
      {
        "action": "xray:GetEncryptionConfig",
        "resource_mappings": {}
      }
    ],
    "get-group": [
      {
        "action": "xray:GetGroup",
        "resource_mappings": {
          "GroupName": {
            "template": "${GroupName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "get-groups": [
      {
        "action": "xray:GetGroups",
        "resource_mappings": {}
      }
    ],
    "get-insight": [
      {
        "action": "xray:GetInsight",
        "resource_mappings": {}
      }
    ],
    "get-insight-events": [
      {
        "action": "xray:GetInsightEvents",
        "resource_mappings": {}
      }
    ],
    "get-insight-impact-graph": [
      {
        "action": "xray:GetInsightImpactGraph",
        "resource_mappings": {}
      }
    ],
    "get-insight-summaries": [
      {
        "action": "xray:GetInsightSummaries",
        "resource_mappings": {}
      }
    ],
    "get-sampling-rules": [
      {
        "action": "xray:GetSamplingRules",
        "resource_mappings": {}
      }
    ],
    "get-sampling-statistic-summaries": [
      {
        "action": "xray:GetSamplingStatisticSummaries",
        "resource_mappings": {}
      }
    ],
    "get-sampling-targets": [
      {
        "action": "xray:GetSamplingTargets",
        "resource_mappings": {}
      }
    ],
    "get-service-graph": [
      {
        "action": "xray:GetServiceGraph",
        "resource_mappings": {}
      }
    ],
    "get-time-series-service-statistics": [
      {
        "action": "xray:GetTimeSeriesServiceStatistics",
        "resource_mappings": {}
      }
    ],
    "get-trace-graph": [
      {
        "action": "xray:GetTraceGraph",
        "resource_mappings": {}
      }
    ],
    "get-trace-summaries": [
      {
        "action": "xray:GetTraceSummaries",
        "resource_mappings": {}
      }
    ],
    "list-resource-policies": [
      {
        "action": "xray:ListResourcePolicies",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "xray:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "group": "%%iftemplatematch%${ResourceARN}%%",
          "sampling-rule": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "put-encryption-config": [
      {
        "action": "xray:PutEncryptionConfig",
        "resource_mappings": {}
      }
    ],
    "put-resource-policy": [
      {
        "action": "xray:PutResourcePolicy",
        "resource_mappings": {}
      }
    ],
    "put-telemetry-records": [
      {
        "action": "xray:PutTelemetryRecords",
        "resource_mappings": {}
      }
    ],
    "put-trace-segments": [
      {
        "action": "xray:PutTraceSegments",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "xray:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "group": "%%iftemplatematch%${ResourceARN}%%",
          "sampling-rule": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "xray:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "group": "%%iftemplatematch%${ResourceARN}%%",
          "sampling-rule": "%%iftemplatematch%${ResourceARN}%%"
        }
      }
    ],
    "update-group": [
      {
        "action": "xray:UpdateGroup",
        "resource_mappings": {
          "GroupName": {
            "template": "${GroupName}"
          },
          "Id": {
            "template": "*"
          }
        }
      }
    ],
    "update-sampling-rule": [
      {
        "action": "xray:UpdateSamplingRule",
        "resource_mappings": {
          "SamplingRuleName": {
            "template": "${SamplingRuleUpdate.RuleName}"
          }
        }
      }
    ]
  },
  "s3api": {
    "abort-multipart-upload": [
      {
        "action": "s3:AbortMultipartUpload",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          },
          "ObjectName": {
            "template": "${Key}"
          }
        }
      }
    ],
    "complete-multipart-upload": [
      {
        "action": "s3:PutObject",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          },
          "ObjectName": {
            "template": "${Key}"
          }
        }
      }
    ],
    "copy-object": [
      {
        "action": "s3:ListBucket",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      },
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          },
          "ObjectName": {
            "template": "${Key}"
          }
        }
      },
      {
        "action": "s3:GetObjectTagging",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          },
          "ObjectName": {
            "template": "${Key}"
          }
        },
        "conditions": {
          "lhs": "TaggingDirective",
          "op": "NotEquals",
          "rhs": "REPLACE"
        }
      },
      {
        "action": "s3:PutObject",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          },
          "ObjectName": {
            "template": "${Key}"
          }
        }
      },
      {
        "action": "s3:PutObjectTagging",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          },
          "ObjectName": {
            "template": "${Key}"
          }
        }
      },
      {
        "action": "s3:PutObjectAcl",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          },
          "ObjectName": {
            "template": "${Key}"
          }
        }
      }
    ],
    "create-bucket": [
      {
        "action": "s3:CreateBucket",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "create-multipart-upload": [
      {
        "action": "s3:PutObject",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          },
          "ObjectName": {
            "template": "${Key}"
          }
        }
      }
    ],
    "delete-bucket": [
      {
        "action": "s3:DeleteBucket",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "delete-bucket-analytics-configuration": [
      {
        "action": "s3:PutAnalyticsConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "delete-bucket-cors": [
      {
        "action": "s3:PutBucketCORS",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "delete-bucket-encryption": [
      {
        "action": "s3:PutEncryptionConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "delete-bucket-intelligent-tiering-configuration": [
      {
        "action": "s3:DeleteIntelligentTieringConfiguration",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:s3:::${Bucket}"
        }
      }
    ],
    "delete-bucket-inventory-configuration": [
      {
        "action": "s3:PutInventoryConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "delete-bucket-lifecycle": [
      {
        "action": "s3:PutLifecycleConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "delete-bucket-metrics-configuration": [
      {
        "action": "s3:PutMetricsConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "delete-bucket-ownership-controls": [
      {
        "action": "s3:DeleteBucketOwnershipControls",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "delete-bucket-policy": [
      {
        "action": "s3:DeleteBucketPolicy",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "delete-bucket-replication": [
      {
        "action": "s3:PutReplicationConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "resource_mappings": {
          "RoleNameWithPath": {
            "template": "*"
          }
        }
      }
    ],
    "delete-bucket-tagging": [
      {
        "action": "s3:PutBucketTagging",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "delete-bucket-website": [
      {
        "action": "s3:DeleteBucketWebsite",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "delete-object": [
      {
        "action": "s3:DeleteObject",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          },
          "ObjectName": {
            "template": "${Key}"
          }
        }
      }
    ],
    "delete-object-tagging": [
      {
        "action": "s3:DeleteObjectTagging",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          },
          "ObjectName": {
            "template": "${Key}"
          }
        }
      }
    ],
    "delete-objects": [
      {
        "action": "s3:DeleteObject",
        "resource_mappings": {},
        "conditions": {
          "lhs": "Delete.Objects[].VersionId",
          "op": "NotExists"
        }
      },
      {
        "action": "s3:DeleteObjectVersion",
        "resource_mappings": {},
        "conditions": {
          "lhs": "Delete.Objects[].VersionId",
          "op": "Exists"
        }
      }
    ],
    "delete-public-access-block": [
      {
        "action": "s3:PutBucketPublicAccessBlock",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "get-bucket-accelerate-configuration": [
      {
        "action": "s3:GetAccelerateConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "get-bucket-acl": [
      {
        "action": "s3:GetBucketAcl",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "get-bucket-analytics-configuration": [
      {
        "action": "s3:GetAnalyticsConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "get-bucket-cors": [
      {
        "action": "s3:GetBucketCORS",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "get-bucket-encryption": [
      {
        "action": "s3:GetEncryptionConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "get-bucket-intelligent-tiering-configuration": [
      {
        "action": "s3:GetIntelligentTieringConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "get-bucket-inventory-configuration": [
      {
        "action": "s3:GetInventoryConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "get-bucket-lifecycle": [
      {
        "action": "s3:GetLifecycleConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "get-bucket-lifecycle-configuration": [
      {
        "action": "s3:GetLifecycleConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "get-bucket-location": [
      {
        "action": "s3:GetBucketLocation",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "get-bucket-logging": [
      {
        "action": "s3:GetBucketLogging",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "get-bucket-metrics-configuration": [
      {
        "action": "s3:GetMetricsConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "get-bucket-notification": [
      {
        "action": "s3:GetBucketNotification",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "get-bucket-notification-configuration": [
      {
        "action": "s3:GetBucketNotification",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "get-bucket-ownership-controls": [
      {
        "action": "s3:GetBucketOwnershipControls",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "get-bucket-policy": [
      {
        "action": "s3:GetBucketPolicy",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "get-bucket-policy-status": [
      {
        "action": "s3:GetBucketPolicyStatus",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "get-bucket-replication": [
      {
        "action": "s3:GetReplicationConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "get-bucket-request-payment": [
      {
        "action": "s3:GetBucketRequestPayment",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "get-bucket-tagging": [
      {
        "action": "s3:GetBucketTagging",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "get-bucket-versioning": [
      {
        "action": "s3:GetBucketVersioning",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "get-bucket-website": [
      {
        "action": "s3:GetBucketWebsite",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "get-object": [
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          },
          "ObjectName": {
            "template": "${Key}"
          }
        }
      }
    ],
    "get-object-acl": [
      {
        "action": "s3:GetObjectAcl",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          },
          "ObjectName": {
            "template": "${Key}"
          }
        }
      }
    ],
    "get-object-attributes": [
      {
        "action": "s3:GetObjectAttributes",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          },
          "ObjectName": {
            "template": "${Key}"
          }
        }
      }
    ],
    "get-object-legal-hold": [
      {
        "action": "s3:GetObjectLegalHold",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          },
          "ObjectName": {
            "template": "${Key}"
          }
        }
      }
    ],
    "get-object-lock-configuration": [
      {
        "action": "s3:GetBucketObjectLockConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "get-object-retention": [
      {
        "action": "s3:GetObjectRetention",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          },
          "ObjectName": {
            "template": "${Key}"
          }
        }
      }
    ],
    "get-object-tagging": [
      {
        "action": "s3:GetObjectTagging",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          },
          "ObjectName": {
            "template": "${Key}"
          }
        }
      }
    ],
    "get-object-torrent": [
      {
        "action": "s3:GetObjectTorrent",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          },
          "ObjectName": {
            "template": "${Key}"
          }
        }
      }
    ],
    "get-public-access-block": [
      {
        "action": "s3:GetBucketPublicAccessBlock",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "head-bucket": [
      {
        "action": "s3:ListBucket",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}",
            "conditions": {
              "lhs": "Bucket",
              "op": "NotStartsWith",
              "rhs": "arn:"
            }
          }
        },
        "condition_mappings": {
          "s3:ResourceAccount": {
            "template": "${ExpectedBucketOwner}"
          },
          "s3:DataAccessPointArn": {
            "template": "${Bucket}",
            "conditions": {
              "lhs": "Bucket",
              "op": "Contains",
              "rhs": ":accesspoint/"
            }
          }
        }
      }
    ],
    "head-object": [
      {
        "action": "s3:GetObject",
        "conditions": {
          "lhs": "VersionId",
          "op": "NotExists"
        },
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}",
            "conditions": {
              "lhs": "Bucket",
              "op": "NotStartsWith",
              "rhs": "arn:"
            }
          },
          "ObjectName": {
            "template": "${Key}"
          }
        },
        "condition_mappings": {
          "s3:ResourceAccount": {
            "template": "${ExpectedBucketOwner}"
          },
          "s3:DataAccessPointArn": {
            "template": "${Bucket}",
            "conditions": {
              "lhs": "Bucket",
              "op": "Contains",
              "rhs": ":accesspoint/"
            }
          }
        }
      },
      {
        "action": "s3:GetObjectVersion",
        "conditions": {
          "lhs": "VersionId",
          "op": "Exists"
        },
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}",
            "conditions": {
              "lhs": "Bucket",
              "op": "NotStartsWith",
              "rhs": "arn:"
            }
          },
          "ObjectName": {
            "template": "${Key}"
          }
        },
        "condition_mappings": {
          "s3:versionid": {
            "template": "${VersionId}"
          },
          "s3:ResourceAccount": {
            "template": "${ExpectedBucketOwner}"
          },
          "s3:DataAccessPointArn": {
            "template": "${Bucket}",
            "conditions": {
              "lhs": "Bucket",
              "op": "Contains",
              "rhs": ":accesspoint/"
            }
          }
        }
      }
    ],
    "list-bucket-analytics-configurations": [
      {
        "action": "s3:GetAnalyticsConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "list-bucket-intelligent-tiering-configurations": [
      {
        "action": "s3:GetIntelligentTieringConfiguration",
        "undocumented": true,
        "arn_override": {
          "template": "arn:${Partition}:s3:::${Bucket}"
        }
      }
    ],
    "list-bucket-inventory-configurations": [
      {
        "action": "s3:GetInventoryConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "list-bucket-metrics-configurations": [
      {
        "action": "s3:GetMetricsConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "list-buckets": [
      {
        "action": "s3:ListAllMyBuckets",
        "resource_mappings": {}
      }
    ],
    "list-multipart-uploads": [
      {
        "action": "s3:ListBucketMultipartUploads",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "list-object-versions": [
      {
        "action": "s3:ListBucketVersions",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "list-objects": [
      {
        "action": "s3:ListBucket",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "list-objects-v2": [
      {
        "action": "s3:ListBucket",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "list-parts": [
      {
        "action": "s3:ListMultipartUploadParts",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          },
          "ObjectName": {
            "template": "${Key}"
          }
        }
      }
    ],
    "put-bucket-accelerate-configuration": [
      {
        "action": "s3:PutAccelerateConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "put-bucket-acl": [
      {
        "action": "s3:PutBucketAcl",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "put-bucket-analytics-configuration": [
      {
        "action": "s3:PutAnalyticsConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "put-bucket-cors": [
      {
        "action": "s3:PutBucketCORS",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "put-bucket-encryption": [
      {
        "action": "s3:PutEncryptionConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "put-bucket-intelligent-tiering-configuration": [
      {
        "action": "s3:PutIntelligentTieringConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "put-bucket-inventory-configuration": [
      {
        "action": "s3:PutInventoryConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "put-bucket-lifecycle": [
      {
        "action": "s3:PutLifecycleConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "put-bucket-lifecycle-configuration": [
      {
        "action": "s3:PutLifecycleConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "put-bucket-logging": [
      {
        "action": "s3:PutBucketLogging",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "put-bucket-metrics-configuration": [
      {
        "action": "s3:PutMetricsConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "put-bucket-notification": [
      {
        "action": "s3:PutBucketNotification",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${NotificationConfiguration.CloudFunctionConfiguration.InvocationRole}"
        }
      }
    ],
    "put-bucket-notification-configuration": [
      {
        "action": "s3:PutBucketNotification",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "put-bucket-ownership-controls": [
      {
        "action": "s3:PutBucketOwnershipControls",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "put-bucket-policy": [
      {
        "action": "s3:PutBucketPolicy",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "put-bucket-replication": [
      {
        "action": "s3:PutReplicationConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${Role}"
        }
      }
    ],
    "put-bucket-request-payment": [
      {
        "action": "s3:PutBucketRequestPayment",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "put-bucket-tagging": [
      {
        "action": "s3:PutBucketTagging",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "put-bucket-versioning": [
      {
        "action": "s3:PutBucketVersioning",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "put-bucket-website": [
      {
        "action": "s3:PutBucketWebsite",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "put-object": [
      {
        "action": "s3:PutObject",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          },
          "ObjectName": {
            "template": "${Key}"
          }
        }
      }
    ],
    "put-object-acl": [
      {
        "action": "s3:PutObjectAcl",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          },
          "ObjectName": {
            "template": "${Key}"
          }
        }
      }
    ],
    "put-object-legal-hold": [
      {
        "action": "s3:PutObjectLegalHold",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          },
          "ObjectName": {
            "template": "${Key}"
          }
        }
      }
    ],
    "put-object-lock-configuration": [
      {
        "action": "s3:PutBucketObjectLockConfiguration",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "put-object-retention": [
      {
        "action": "s3:PutObjectRetention",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          },
          "ObjectName": {
            "template": "${Key}"
          }
        }
      }
    ],
    "put-object-tagging": [
      {
        "action": "s3:PutObjectTagging",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          },
          "ObjectName": {
            "template": "${Key}"
          }
        }
      }
    ],
    "put-public-access-block": [
      {
        "action": "s3:PutBucketPublicAccessBlock",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          }
        }
      }
    ],
    "restore-object": [
      {
        "action": "s3:RestoreObject",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          },
          "ObjectName": {
            "template": "${Key}"
          }
        }
      }
    ],
    "select-object-content": [
      {
        "action": "s3:GetObject",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          },
          "ObjectName": {
            "template": "${Key}"
          }
        }
      }
    ],
    "upload-part": [
      {
        "action": "s3:PutObject",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          },
          "ObjectName": {
            "template": "${Key}"
          }
        }
      }
    ],
    "upload-part-copy": [
      {
        "action": "s3:PutObject",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}"
          },
          "ObjectName": {
            "template": "${Key}"
          }
        }
      }
    ],
    "write-get-object-response": [
      {
        "action": "s3-object-lambda:WriteGetObjectResponse",
        "resource_mappings": {
          "AccessPointName": {
            "template": "*"
          }
        }
      }
    ],
    "wait": [
      {
        "action": "s3:ListBucket",
        "resource_mappings": {
          "BucketName": {
            "template": "${Bucket}",
            "conditions": {
              "lhs": "Bucket",
              "op": "NotStartsWith",
              "rhs": "arn:"
            }
          }
        },
        "condition_mappings": {
          "s3:ResourceAccount": {
            "template": "${ExpectedBucketOwner}"
          },
          "s3:DataAccessPointArn": {
            "template": "${Bucket}",
            "conditions": {
              "lhs": "Bucket",
              "op": "Contains",
              "rhs": ":accesspoint/"
            }
          }
        }
      }
    ]
  },
  "deploy": {
    "add-tags-to-on-premises-instances": [
      {
        "action": "codedeploy:AddTagsToOnPremisesInstances",
        "resource_mappings": {
          "InstanceName": {
            "template": "${instanceNames[]}"
          }
        }
      }
    ],
    "batch-get-application-revisions": [
      {
        "action": "codedeploy:BatchGetApplicationRevisions",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${applicationName}"
          }
        }
      }
    ],
    "batch-get-applications": [
      {
        "action": "codedeploy:BatchGetApplications",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${applicationNames[]}"
          }
        }
      }
    ],
    "batch-get-deployment-groups": [
      {
        "action": "codedeploy:BatchGetDeploymentGroups",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${applicationName}"
          },
          "DeploymentGroupName": {
            "template": "${deploymentGroupNames[]}"
          }
        }
      }
    ],
    "batch-get-deployment-instances": [
      {
        "action": "codedeploy:BatchGetDeploymentInstances",
        "resource_mappings": {
          "ApplicationName": {
            "template": "*"
          },
          "DeploymentGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "batch-get-deployment-targets": [
      {
        "action": "codedeploy:BatchGetDeploymentTargets",
        "resource_mappings": {}
      }
    ],
    "batch-get-deployments": [
      {
        "action": "codedeploy:BatchGetDeployments",
        "resource_mappings": {
          "ApplicationName": {
            "template": "*"
          },
          "DeploymentGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "batch-get-on-premises-instances": [
      {
        "action": "codedeploy:BatchGetOnPremisesInstances",
        "resource_mappings": {
          "InstanceName": {
            "template": "${instanceNames[]}"
          }
        }
      }
    ],
    "continue-deployment": [
      {
        "action": "codedeploy:ContinueDeployment",
        "resource_mappings": {}
      }
    ],
    "create-application": [
      {
        "action": "codedeploy:CreateApplication",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${applicationName}"
          }
        }
      }
    ],
    "create-deployment": [
      {
        "action": "codedeploy:CreateDeployment",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${applicationName}"
          },
          "DeploymentGroupName": {
            "template": "${deploymentGroupName}"
          }
        }
      }
    ],
    "create-deployment-config": [
      {
        "action": "codedeploy:CreateDeploymentConfig",
        "resource_mappings": {
          "DeploymentConfigurationName": {
            "template": "${deploymentConfigName}"
          }
        }
      }
    ],
    "create-deployment-group": [
      {
        "action": "codedeploy:CreateDeploymentGroup",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${applicationName}"
          },
          "DeploymentGroupName": {
            "template": "${deploymentGroupName}"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${serviceRoleArn}"
        }
      }
    ],
    "delete-application": [
      {
        "action": "codedeploy:DeleteApplication",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${applicationName}"
          }
        }
      }
    ],
    "delete-deployment-config": [
      {
        "action": "codedeploy:DeleteDeploymentConfig",
        "resource_mappings": {
          "DeploymentConfigurationName": {
            "template": "${deploymentConfigName}"
          }
        }
      }
    ],
    "delete-deployment-group": [
      {
        "action": "codedeploy:DeleteDeploymentGroup",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${applicationName}"
          },
          "DeploymentGroupName": {
            "template": "${deploymentGroupName}"
          }
        }
      }
    ],
    "delete-git-hub-account-token": [
      {
        "action": "codedeploy:DeleteGitHubAccountToken",
        "resource_mappings": {}
      }
    ],
    "delete-resources-by-external-id": [
      {
        "action": "codedeploy:DeleteResourcesByExternalId",
        "resource_mappings": {}
      }
    ],
    "deregister-on-premises-instance": [
      {
        "action": "codedeploy:DeregisterOnPremisesInstance",
        "resource_mappings": {
          "InstanceName": {
            "template": "${instanceName}"
          }
        }
      }
    ],
    "get-application": [
      {
        "action": "codedeploy:GetApplication",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${applicationName}"
          }
        }
      }
    ],
    "get-application-revision": [
      {
        "action": "codedeploy:GetApplicationRevision",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${applicationName}"
          }
        }
      }
    ],
    "get-deployment": [
      {
        "action": "codedeploy:GetDeployment",
        "resource_mappings": {
          "ApplicationName": {
            "template": "*"
          },
          "DeploymentGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "get-deployment-config": [
      {
        "action": "codedeploy:GetDeploymentConfig",
        "resource_mappings": {
          "DeploymentConfigurationName": {
            "template": "${deploymentConfigName}"
          }
        }
      }
    ],
    "get-deployment-group": [
      {
        "action": "codedeploy:GetDeploymentGroup",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${applicationName}"
          },
          "DeploymentGroupName": {
            "template": "${deploymentGroupName}"
          }
        }
      }
    ],
    "get-deployment-instance": [
      {
        "action": "codedeploy:GetDeploymentInstance",
        "resource_mappings": {
          "ApplicationName": {
            "template": "*"
          },
          "DeploymentGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "get-deployment-target": [
      {
        "action": "codedeploy:GetDeploymentTarget",
        "resource_mappings": {}
      }
    ],
    "get-on-premises-instance": [
      {
        "action": "codedeploy:GetOnPremisesInstance",
        "resource_mappings": {
          "InstanceName": {
            "template": "${instanceName}"
          }
        }
      }
    ],
    "list-application-revisions": [
      {
        "action": "codedeploy:ListApplicationRevisions",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${applicationName}"
          }
        }
      }
    ],
    "list-applications": [
      {
        "action": "codedeploy:ListApplications",
        "resource_mappings": {}
      }
    ],
    "list-deployment-configs": [
      {
        "action": "codedeploy:ListDeploymentConfigs",
        "resource_mappings": {}
      }
    ],
    "list-deployment-groups": [
      {
        "action": "codedeploy:ListDeploymentGroups",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${applicationName}"
          }
        }
      }
    ],
    "list-deployment-instances": [
      {
        "action": "codedeploy:ListDeploymentInstances",
        "resource_mappings": {
          "ApplicationName": {
            "template": "*"
          },
          "DeploymentGroupName": {
            "template": "*"
          }
        }
      }
    ],
    "list-deployment-targets": [
      {
        "action": "codedeploy:ListDeploymentTargets",
        "resource_mappings": {}
      }
    ],
    "list-deployments": [
      {
        "action": "codedeploy:ListDeployments",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${applicationName}"
          },
          "DeploymentGroupName": {
            "template": "${deploymentGroupName}"
          }
        }
      }
    ],
    "list-git-hub-account-token-names": [
      {
        "action": "codedeploy:ListGitHubAccountTokenNames",
        "resource_mappings": {}
      }
    ],
    "list-on-premises-instances": [
      {
        "action": "codedeploy:ListOnPremisesInstances",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "codedeploy:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "%%iftemplatematch%${ResourceArn}%%",
          "deploymentgroup": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "put-lifecycle-event-hook-execution-status": [
      {
        "action": "codedeploy:PutLifecycleEventHookExecutionStatus",
        "resource_mappings": {}
      }
    ],
    "register-application-revision": [
      {
        "action": "codedeploy:RegisterApplicationRevision",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${applicationName}"
          }
        }
      }
    ],
    "register-on-premises-instance": [
      {
        "action": "codedeploy:RegisterOnPremisesInstance",
        "resource_mappings": {
          "InstanceName": {
            "template": "${instanceName}"
          }
        }
      }
    ],
    "remove-tags-from-on-premises-instances": [
      {
        "action": "codedeploy:RemoveTagsFromOnPremisesInstances",
        "resource_mappings": {
          "InstanceName": {
            "template": "${instanceNames[]}"
          }
        }
      }
    ],
    "skip-wait-time-for-instance-termination": [
      {
        "action": "codedeploy:SkipWaitTimeForInstanceTermination",
        "resource_mappings": {}
      }
    ],
    "stop-deployment": [
      {
        "action": "codedeploy:StopDeployment",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "codedeploy:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "%%iftemplatematch%${ResourceArn}%%",
          "deploymentgroup": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "codedeploy:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "application": "%%iftemplatematch%${ResourceArn}%%",
          "deploymentgroup": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "update-application": [
      {
        "action": "codedeploy:UpdateApplication",
        "resource_mappings": {
          "ApplicationName": {
            "template": "%%many%${applicationName}%${newApplicationName}%%"
          }
        }
      }
    ],
    "update-deployment-group": [
      {
        "action": "codedeploy:UpdateDeploymentGroup",
        "resource_mappings": {
          "ApplicationName": {
            "template": "${applicationName}"
          },
          "DeploymentGroupName": {
            "template": "%many:${currentDeploymentGroupName}:${newDeploymentGroupName}%"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${serviceRoleArn}"
        }
      }
    ],
    "wait": [
      {
        "action": "codedeploy:GetDeployment",
        "resource_mappings": {
          "ApplicationName": {
            "template": "*"
          },
          "DeploymentGroupName": {
            "template": "*"
          }
        }
      }
    ]
  },
  "configservice": {
    "batch-get-aggregate-resource-config": [
      {
        "action": "config:BatchGetAggregateResourceConfig",
        "resource_mappings": {
          "AggregatorId": {
            "template": "*"
          }
        }
      }
    ],
    "batch-get-resource-config": [
      {
        "action": "config:BatchGetResourceConfig",
        "resource_mappings": {}
      }
    ],
    "delete-aggregation-authorization": [
      {
        "action": "config:DeleteAggregationAuthorization",
        "resource_mappings": {
          "AggregatorAccount": {
            "template": "${AuthorizedAccountId}"
          },
          "AggregatorRegion": {
            "template": "${AuthorizedAwsRegion}"
          }
        }
      }
    ],
    "delete-config-rule": [
      {
        "action": "config:DeleteConfigRule",
        "resource_mappings": {
          "ConfigRuleId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-configuration-aggregator": [
      {
        "action": "config:DeleteConfigurationAggregator",
        "resource_mappings": {
          "AggregatorId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-configuration-recorder": [
      {
        "action": "config:DeleteConfigurationRecorder",
        "resource_mappings": {}
      }
    ],
    "delete-conformance-pack": [
      {
        "action": "config:DeleteConformancePack",
        "resource_mappings": {}
      }
    ],
    "delete-delivery-channel": [
      {
        "action": "config:DeleteDeliveryChannel",
        "resource_mappings": {}
      }
    ],
    "delete-evaluation-results": [
      {
        "action": "config:DeleteEvaluationResults",
        "resource_mappings": {
          "ConfigRuleId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-organization-config-rule": [
      {
        "action": "config:DeleteOrganizationConfigRule",
        "resource_mappings": {}
      }
    ],
    "delete-organization-conformance-pack": [
      {
        "action": "config:DeleteOrganizationConformancePack",
        "resource_mappings": {}
      }
    ],
    "delete-pending-aggregation-request": [
      {
        "action": "config:DeletePendingAggregationRequest",
        "resource_mappings": {}
      }
    ],
    "delete-remediation-configuration": [
      {
        "action": "config:DeleteRemediationConfiguration",
        "resource_mappings": {
          "RemediationConfigurationId": {
            "template": "*"
          }
        }
      }
    ],
    "delete-remediation-exceptions": [
      {
        "action": "config:DeleteRemediationExceptions",
        "resource_mappings": {}
      }
    ],
    "delete-resource-config": [
      {
        "action": "config:DeleteResourceConfig",
        "resource_mappings": {}
      }
    ],
    "delete-retention-configuration": [
      {
        "action": "config:DeleteRetentionConfiguration",
        "resource_mappings": {}
      }
    ],
    "delete-stored-query": [
      {
        "action": "config:DeleteStoredQuery",
        "resource_mappings": {
          "StoredQueryName": {
            "template": "${QueryName}"
          },
          "StoredQueryId": {
            "template": "*"
          }
        }
      }
    ],
    "deliver-config-snapshot": [
      {
        "action": "config:DeliverConfigSnapshot",
        "resource_mappings": {}
      }
    ],
    "describe-aggregate-compliance-by-config-rules": [
      {
        "action": "config:DescribeAggregateComplianceByConfigRules",
        "resource_mappings": {
          "AggregatorId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-aggregate-compliance-by-conformance-packs": [
      {
        "action": "config:DescribeAggregateComplianceByConformancePacks",
        "resource_mappings": {
          "AggregatorId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-aggregation-authorizations": [
      {
        "action": "config:DescribeAggregationAuthorizations",
        "resource_mappings": {}
      }
    ],
    "describe-compliance-by-config-rule": [
      {
        "action": "config:DescribeComplianceByConfigRule",
        "resource_mappings": {
          "ConfigRuleId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-compliance-by-resource": [
      {
        "action": "config:DescribeComplianceByResource",
        "resource_mappings": {}
      }
    ],
    "describe-config-rule-evaluation-status": [
      {
        "action": "config:DescribeConfigRuleEvaluationStatus",
        "resource_mappings": {
          "ConfigRuleId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-config-rules": [
      {
        "action": "config:DescribeConfigRules",
        "resource_mappings": {
          "ConfigRuleId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-configuration-aggregator-sources-status": [
      {
        "action": "config:DescribeConfigurationAggregatorSourcesStatus",
        "resource_mappings": {
          "AggregatorId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-configuration-aggregators": [
      {
        "action": "config:DescribeConfigurationAggregators",
        "resource_mappings": {}
      }
    ],
    "describe-configuration-recorder-status": [
      {
        "action": "config:DescribeConfigurationRecorderStatus",
        "resource_mappings": {}
      }
    ],
    "describe-configuration-recorders": [
      {
        "action": "config:DescribeConfigurationRecorders",
        "resource_mappings": {}
      }
    ],
    "describe-conformance-pack-compliance": [
      {
        "action": "config:DescribeConformancePackCompliance",
        "resource_mappings": {}
      }
    ],
    "describe-conformance-pack-status": [
      {
        "action": "config:DescribeConformancePackStatus",
        "resource_mappings": {}
      }
    ],
    "describe-conformance-packs": [
      {
        "action": "config:DescribeConformancePacks",
        "resource_mappings": {}
      }
    ],
    "describe-delivery-channel-status": [
      {
        "action": "config:DescribeDeliveryChannelStatus",
        "resource_mappings": {}
      }
    ],
    "describe-delivery-channels": [
      {
        "action": "config:DescribeDeliveryChannels",
        "resource_mappings": {}
      }
    ],
    "describe-organization-config-rule-statuses": [
      {
        "action": "config:DescribeOrganizationConfigRuleStatuses",
        "resource_mappings": {}
      }
    ],
    "describe-organization-config-rules": [
      {
        "action": "config:DescribeOrganizationConfigRules",
        "resource_mappings": {}
      }
    ],
    "describe-organization-conformance-pack-statuses": [
      {
        "action": "config:DescribeOrganizationConformancePackStatuses",
        "resource_mappings": {}
      }
    ],
    "describe-organization-conformance-packs": [
      {
        "action": "config:DescribeOrganizationConformancePacks",
        "resource_mappings": {}
      }
    ],
    "describe-pending-aggregation-requests": [
      {
        "action": "config:DescribePendingAggregationRequests",
        "resource_mappings": {}
      }
    ],
    "describe-remediation-configurations": [
      {
        "action": "config:DescribeRemediationConfigurations",
        "resource_mappings": {
          "RemediationConfigurationId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-remediation-exceptions": [
      {
        "action": "config:DescribeRemediationExceptions",
        "resource_mappings": {}
      }
    ],
    "describe-remediation-execution-status": [
      {
        "action": "config:DescribeRemediationExecutionStatus",
        "resource_mappings": {
          "RemediationConfigurationId": {
            "template": "*"
          }
        }
      }
    ],
    "describe-retention-configurations": [
      {
        "action": "config:DescribeRetentionConfigurations",
        "resource_mappings": {}
      }
    ],
    "get-aggregate-compliance-details-by-config-rule": [
      {
        "action": "config:GetAggregateComplianceDetailsByConfigRule",
        "resource_mappings": {
          "AggregatorId": {
            "template": "*"
          }
        }
      }
    ],
    "get-aggregate-config-rule-compliance-summary": [
      {
        "action": "config:GetAggregateConfigRuleComplianceSummary",
        "resource_mappings": {
          "AggregatorId": {
            "template": "*"
          }
        }
      }
    ],
    "get-aggregate-conformance-pack-compliance-summary": [
      {
        "action": "config:GetAggregateConformancePackComplianceSummary",
        "resource_mappings": {
          "AggregatorId": {
            "template": "*"
          }
        }
      }
    ],
    "get-aggregate-discovered-resource-counts": [
      {
        "action": "config:GetAggregateDiscoveredResourceCounts",
        "resource_mappings": {
          "AggregatorId": {
            "template": "*"
          }
        }
      }
    ],
    "get-aggregate-resource-config": [
      {
        "action": "config:GetAggregateResourceConfig",
        "resource_mappings": {
          "AggregatorId": {
            "template": "*"
          }
        }
      }
    ],
    "get-compliance-details-by-config-rule": [
      {
        "action": "config:GetComplianceDetailsByConfigRule",
        "resource_mappings": {
          "ConfigRuleId": {
            "template": "*"
          }
        }
      }
    ],
    "get-compliance-details-by-resource": [
      {
        "action": "config:GetComplianceDetailsByResource",
        "resource_mappings": {}
      }
    ],
    "get-compliance-summary-by-config-rule": [
      {
        "action": "config:GetComplianceSummaryByConfigRule",
        "resource_mappings": {}
      }
    ],
    "get-compliance-summary-by-resource-type": [
      {
        "action": "config:GetComplianceSummaryByResourceType",
        "resource_mappings": {}
      }
    ],
    "get-conformance-pack-compliance-details": [
      {
        "action": "config:GetConformancePackComplianceDetails",
        "resource_mappings": {}
      }
    ],
    "get-conformance-pack-compliance-summary": [
      {
        "action": "config:GetConformancePackComplianceSummary",
        "resource_mappings": {}
      }
    ],
    "get-custom-rule-policy": [
      {
        "action": "config:GetCustomRulePolicy",
        "resource_mappings": {
          "ConfigRuleId": {
            "template": "*"
          }
        }
      }
    ],
    "get-discovered-resource-counts": [
      {
        "action": "config:GetDiscoveredResourceCounts",
        "resource_mappings": {}
      }
    ],
    "get-organization-config-rule-detailed-status": [
      {
        "action": "config:GetOrganizationConfigRuleDetailedStatus",
        "resource_mappings": {}
      }
    ],
    "get-organization-conformance-pack-detailed-status": [
      {
        "action": "config:GetOrganizationConformancePackDetailedStatus",
        "resource_mappings": {}
      }
    ],
    "get-organization-custom-rule-policy": [
      {
        "action": "config:GetOrganizationCustomRulePolicy",
        "resource_mappings": {
          "OrganizationConfigRuleId": {
            "template": "*"
          }
        }
      }
    ],
    "get-resource-config-history": [
      {
        "action": "config:GetResourceConfigHistory",
        "resource_mappings": {}
      }
    ],
    "get-resource-evaluation-summary": [
      {
        "action": "config:GetResourceEvaluationSummary",
        "resource_mappings": {}
      }
    ],
    "get-stored-query": [
      {
        "action": "config:GetStoredQuery",
        "resource_mappings": {
          "StoredQueryName": {
            "template": "${QueryName}"
          },
          "StoredQueryId": {
            "template": "*"
          }
        }
      }
    ],
    "list-aggregate-discovered-resources": [
      {
        "action": "config:ListAggregateDiscoveredResources",
        "resource_mappings": {
          "AggregatorId": {
            "template": "*"
          }
        }
      }
    ],
    "list-conformance-pack-compliance-scores": [
      {
        "action": "config:ListConformancePackComplianceScores",
        "resource_mappings": {}
      }
    ],
    "list-discovered-resources": [
      {
        "action": "config:ListDiscoveredResources",
        "resource_mappings": {}
      }
    ],
    "list-resource-evaluations": [
      {
        "action": "config:ListResourceEvaluations",
        "resource_mappings": {}
      }
    ],
    "list-stored-queries": [
      {
        "action": "config:ListStoredQueries",
        "resource_mappings": {
          "StoredQueryName": {
            "template": "*"
          },
          "StoredQueryId": {
            "template": "*"
          }
        }
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "config:ListTagsForResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "AggregationAuthorization": "%%iftemplatematch%${ResourceArn}%%",
          "ConfigRule": "%%iftemplatematch%${ResourceArn}%%",
          "ConfigurationAggregator": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "put-aggregation-authorization": [
      {
        "action": "config:PutAggregationAuthorization",
        "resource_mappings": {
          "AggregatorAccount": {
            "template": "${AuthorizedAccountId}"
          },
          "AggregatorRegion": {
            "template": "${AuthorizedAwsRegion}"
          }
        }
      }
    ],
    "put-config-rule": [
      {
        "action": "config:PutConfigRule",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "ConfigRule": "${ConfigRule.ConfigRuleArn}"
        }
      }
    ],
    "put-configuration-aggregator": [
      {
        "action": "config:PutConfigurationAggregator",
        "resource_mappings": {
          "AggregatorId": {
            "template": "*"
          }
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${OrganizationAggregationSource.RoleArn}"
        }
      }
    ],
    "put-configuration-recorder": [
      {
        "action": "config:PutConfigurationRecorder",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${ConfigurationRecorder.roleARN}"
        }
      }
    ],
    "put-conformance-pack": [
      {
        "action": "config:PutConformancePack",
        "resource_mappings": {}
      }
    ],
    "put-delivery-channel": [
      {
        "action": "config:PutDeliveryChannel",
        "resource_mappings": {}
      }
    ],
    "put-evaluations": [
      {
        "action": "config:PutEvaluations",
        "resource_mappings": {}
      }
    ],
    "put-external-evaluation": [
      {
        "action": "config:PutExternalEvaluation",
        "resource_mappings": {}
      }
    ],
    "put-organization-config-rule": [
      {
        "action": "config:PutOrganizationConfigRule",
        "resource_mappings": {}
      }
    ],
    "put-organization-conformance-pack": [
      {
        "action": "config:PutOrganizationConformancePack",
        "resource_mappings": {}
      }
    ],
    "put-remediation-configurations": [
      {
        "action": "config:PutRemediationConfigurations",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "RemediationConfiguration": "${RemediationConfigurations[].Arn}"
        }
      }
    ],
    "put-remediation-exceptions": [
      {
        "action": "config:PutRemediationExceptions",
        "resource_mappings": {}
      }
    ],
    "put-resource-config": [
      {
        "action": "config:PutResourceConfig",
        "resource_mappings": {}
      }
    ],
    "put-retention-configuration": [
      {
        "action": "config:PutRetentionConfiguration",
        "resource_mappings": {}
      }
    ],
    "put-stored-query": [
      {
        "action": "config:PutStoredQuery",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "StoredQuery": "${StoredQuery.QueryArn}"
        }
      }
    ],
    "select-aggregate-resource-config": [
      {
        "action": "config:SelectAggregateResourceConfig",
        "resource_mappings": {}
      }
    ],
    "select-resource-config": [
      {
        "action": "config:SelectResourceConfig",
        "resource_mappings": {}
      }
    ],
    "start-config-rules-evaluation": [
      {
        "action": "config:StartConfigRulesEvaluation",
        "resource_mappings": {
          "ConfigRuleId": {
            "template": "*"
          }
        }
      }
    ],
    "start-configuration-recorder": [
      {
        "action": "config:StartConfigurationRecorder",
        "resource_mappings": {}
      }
    ],
    "start-remediation-execution": [
      {
        "action": "config:StartRemediationExecution",
        "resource_mappings": {
          "RemediationConfigurationId": {
            "template": "*"
          }
        }
      }
    ],
    "start-resource-evaluation": [
      {
        "action": "config:StartResourceEvaluation",
        "resource_mappings": {}
      },
      {
        "action": "cloudformation:DescribeType",
        "resource_mappings": {}
      }
    ],
    "stop-configuration-recorder": [
      {
        "action": "config:StopConfigurationRecorder",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "config:TagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "AggregationAuthorization": "%%iftemplatematch%${ResourceArn}%%",
          "ConfigRule": "%%iftemplatematch%${ResourceArn}%%",
          "ConfigurationAggregator": "%%iftemplatematch%${ResourceArn}%%",
          "ConformancePack": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ],
    "untag-resource": [
      {
        "action": "config:UntagResource",
        "resource_mappings": {},
        "resourcearn_mappings": {
          "AggregationAuthorization": "%%iftemplatematch%${ResourceArn}%%",
          "ConfigRule": "%%iftemplatematch%${ResourceArn}%%",
          "ConfigurationAggregator": "%%iftemplatematch%${ResourceArn}%%",
          "ConformancePack": "%%iftemplatematch%${ResourceArn}%%"
        }
      }
    ]
  },
  "opsworks-cm": {
    "associate-node": [
      {
        "action": "opsworks-cm:AssociateNode",
        "resource_mappings": {}
      }
    ],
    "create-backup": [
      {
        "action": "opsworks-cm:CreateBackup",
        "resource_mappings": {}
      }
    ],
    "create-server": [
      {
        "action": "opsworks-cm:CreateServer",
        "resource_mappings": {}
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "${ServiceRoleArn}"
        }
      },
      {
        "action": "iam:PassRole",
        "arn_override": {
          "template": "%%iftruthy%${InstanceProfileArn}%*%%%"
        }
      }
    ],
    "delete-backup": [
      {
        "action": "opsworks-cm:DeleteBackup",
        "resource_mappings": {}
      }
    ],
    "delete-server": [
      {
        "action": "opsworks-cm:DeleteServer",
        "resource_mappings": {}
      }
    ],
    "describe-account-attributes": [
      {
        "action": "opsworks-cm:DescribeAccountAttributes",
        "resource_mappings": {}
      }
    ],
    "describe-backups": [
      {
        "action": "opsworks-cm:DescribeBackups",
        "resource_mappings": {}
      }
    ],
    "describe-events": [
      {
        "action": "opsworks-cm:DescribeEvents",
        "resource_mappings": {}
      }
    ],
    "describe-node-association-status": [
      {
        "action": "opsworks-cm:DescribeNodeAssociationStatus",
        "resource_mappings": {}
      }
    ],
    "describe-servers": [
      {
        "action": "opsworks-cm:DescribeServers",
        "resource_mappings": {}
      }
    ],
    "disassociate-node": [
      {
        "action": "opsworks-cm:DisassociateNode",
        "resource_mappings": {}
      }
    ],
    "export-server-engine-attribute": [
      {
        "action": "opsworks-cm:ExportServerEngineAttribute",
        "resource_mappings": {}
      }
    ],
    "list-tags-for-resource": [
      {
        "action": "opsworks-cm:ListTagsForResource",
        "resource_mappings": {}
      }
    ],
    "restore-server": [
      {
        "action": "opsworks-cm:RestoreServer",
        "resource_mappings": {}
      }
    ],
    "start-maintenance": [
      {
        "action": "opsworks-cm:StartMaintenance",
        "resource_mappings": {}
      }
    ],
    "tag-resource": [
      {
        "action": "opsworks-cm:TagResource",
        "resource_mappings": {}
      }
    ],
    "untag-resource": [
      {
        "action": "opsworks-cm:UntagResource",
        "resource_mappings": {}
      }
    ],
    "update-server": [
      {
        "action": "opsworks-cm:UpdateServer",
        "resource_mappings": {}
      }
    ],
    "update-server-engine-attributes": [
      {
        "action": "opsworks-cm:UpdateServerEngineAttributes",
        "resource_mappings": {}
      }
    ],
    "wait": [
      {
        "action": "opsworks-cm:DescribeNodeAssociationStatus",
        "resource_mappings": {}
      }
    ]
  },
  "runtime.sagemaker": {
    "invoke-endpoint": [
      {
        "action": "sagemaker:InvokeEndpoint",
        "resource_mappings": {
          "EndpointName": {
            "template": "${EndpointName}"
          }
        }
      }
    ],
    "invoke-endpoint-async": [
      {
        "action": "sagemaker:InvokeEndpointAsync",
        "resource_mappings": {
          "EndpointName": {
            "template": "${EndpointName}"
          }
        }
      }
    ]
  }
}